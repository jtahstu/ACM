{
"RECORDS":[
{
"pid":1,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint a,b;\r\n\tscanf(\"%d%d\",&a,&b);\r\n\tprintf(\"%d\\n\",a+b);\r\n\treturn 0;\r\n}"
},
{
"pid":2,
"code":"\n#include <iostream>  \r\n#include <cstring>  \r\nusing namespace std;  \r\n\r\n#define MAXSIZE 10005  \r\nint main(void)  \r\n{  \r\n    int k;  \r\n    cin >> k;  \r\n    while(k--)  \r\n    {  \r\n        char str[MAXSIZE];  \r\n        cin >> str;  \r\n        char stack[MAXSIZE];  \r\n        int len = strlen(str);  \r\n        int j = 0;  \r\n        bool tag = true;  \r\n        for(int i = 0; i < len; i++)  \r\n        {  \r\n            switch(str[i])  \r\n            {  \r\n            case '(' :  \r\n            case '[' :   \r\n                stack[j++] = str[i];  \r\n                break;  \r\n            case ')' :  \r\n                if( stack[j - 1] == '(' )  \r\n                {  \r\n                    tag = true;  \r\n                    j--;  \r\n                }  \r\n                else   \r\n                    tag = false;  \r\n                break;  \r\n            case ']' :  \r\n                if( stack[j - 1] == '[' )  \r\n                {  \r\n                    tag = true;  \r\n                    j--;  \r\n                }  \r\n                else   \r\n                    tag = false;  \r\n                break;  \r\n            default : cout << \"Error!\" << endl;  \r\n            }  \r\n            if(tag == false)    \r\n                break;  \r\n        }  \r\n        if( tag == true && j == 0 )  \r\n            cout << \"Yes\" << endl;  \r\n        else  \r\n            cout << \"No\" << endl;  \r\n    }       \r\n    return 0;  \r\n}"
},
{
"pid":3,
"code":"\n#include <stdio.h>\r\n#include <math.h>\r\n#include <iostream>\r\n#include <algorithm>\r\nconst int m = 100005;\r\nconst double INF = 1e-8;\r\nstruct Point\r\n{\r\n    double x,y;\r\n}p[m];\r\n\r\nint main()\r\n{\r\n    int n,t,i,j;\r\n    double temp,x,y;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        double ans=0;\r\n        x=0; y=0;\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        scanf(\"%lf%lf\",&p[i].x,&p[i].y);\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            temp=(p[i%n].x*p[i-1].y-p[i%n].y*p[i-1].x)\/2.0;\r\n            ans+=temp;\r\n            x+=temp*(p[i%n].x+p[i-1].x)\/3.0;\r\n            y+=temp*(p[i%n].y+p[i-1].y)\/3.0;\r\n        }\r\n        if(fabs(ans-0)<INF)\r\n        {\r\n            printf(\"0.000 0.000\\n\");\r\n        }\r\n        else\r\n        {\r\n            printf(\"%.3lf %.3lf\\n\",fabs(ans),(x+y)\/ans);\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":4,
"code":"\n#include<stdio.h>  \r\n#include<stdlib.h>  \r\n\r\nvoid swap(char &c1,char &c2)  \r\n{  \r\n    char tmp=c1;  \r\n    c1=c2;  \r\n    c2=tmp;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int n;\r\n    char str[3],tmp;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        scanf(\"%s\",&str);  \r\n\r\n        if(str[0]>str[1])swap(str[0],str[1]);  \r\n        if(str[0]>str[2])swap(str[0],str[2]);  \r\n        if(str[1]>str[2])swap(str[1],str[2]);  \r\n\r\n        printf(\"%c %c %c\\n\",str[0],str[1],str[2]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":5,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\nusing namespace std;\r\nchar p[1000], s[1000];\r\nint next[1000];\r\nvoid getnext() {\r\n  int i = 0, j = -1, len = strlen(p);\r\n  next[0] = -1;\r\n  while (i < len - 1) {\r\n    if (j == -1 || p[j] == p[i]) {\r\n      j++; i++; next[i] = j;\r\n    }\r\n    else j = next[j];\r\n  }\r\n}\r\nint kmp() {\r\n  int i = -1, j = -1, lenp = strlen(p), lens = strlen(s);\r\n  getnext();\r\n  int num = 0;\r\n  while (i < lens) {\r\n    if (j == -1 || s[i] == p[j]) {++i; ++j;}\r\n    else j = next[j];\r\n    if (j == lenp) {i-=j; j = -1; num++;}\r\n  }\r\n  return num;\r\n}\r\nint main(void) {\r\n  int n;\r\n  while (~scanf(\"%d\", &n)) \r\n  while (n--){\r\n    scanf(\"%s%s\", p, s);\r\n    printf(\"%d\\n\", kmp());\r\n  }\r\n\r\n  return 0;\r\n}"
},
{
"pid":6,
"code":"\n#include<cstdio>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\n#include<cmath>  \r\n#define N 610  \r\nusing namespace std;  \r\ndouble cir[N];  \r\nbool Cmp(double a,double b)  \r\n{  \r\n    return a>b; \r\n}  \r\nint main()  \r\n{  \r\n    int n,m,i;  \r\n    double total;  \r\n    cin>>m;  \r\n    while(m--)  \r\n    {  \r\n        cin>>n;  \r\n        for(i=0;i<n;i++)  \r\n            cin>>cir[i];  \r\n        total = 0;  \r\n        sort(cir,cir+n,Cmp);  \r\n        i = 0;  \r\n        while(total<20)  \r\n        {  \r\n            total += sqrt(cir[i]*cir[i] - 1)*2;  \r\n            i++;  \r\n        }  \r\n        cout<<i<<endl;   \r\n\r\n    }  \r\n}"
},
{
"pid":7,
"code":"\n#include<iostream>\r\n#include<algorithm>\r\n#include<numeric>\r\nusing namespace std;\r\nconst int MAX=30;\r\nint xx[MAX],yy[MAX];\r\nint main()\r\n{\r\n    int n;\r\n    cin>>n;\r\n    while(n--)\r\n    {\r\n        int num;\r\n        cin>>num;\r\n        for(int i=0;i!=num;i++)\r\n            cin>>xx[i]>>yy[i];\r\n        sort(xx,xx+num);\r\n        sort(yy,yy+num);\r\n        int sum=0;\r\n        for(int i=0;i<num\/2;i++)\r\n            sum+=xx[num-1-i]-xx[i]+yy[num-1-i]-yy[i];\r\n        cout<<sum<<endl;\r\n    }\r\n}"
},
{
"pid":8,
"code":"\n#include<iostream>  \r\n#include<set>  \r\n#include<iterator>  \r\nusing namespace std;  \r\nstruct Rect  \r\n{  \r\n    int num,length,width;  \r\n\r\n};  \r\nbool operator<(const Rect& r1,const Rect& r2)  \r\n{  \r\n    return r1.num<r2.num || r1.num==r2.num && r1.length<r2.length ||r1.num==r2.num&&r1.length==r2.length &&r1.width<r2.width;  \r\n}  \r\nistream& operator>>(istream& in,Rect& r)  \r\n{  \r\n    in>>r.num;  \r\n    int a,b;  \r\n    cin>>a>>b;  \r\n    r.length=max(a,b);  \r\n    r.width=min(a,b);  \r\n    return in;  \r\n}  \r\nostream& operator<<(ostream& out,const Rect& r)  \r\n{  \r\n    return out<<r.num<<\" \"<<r.length<<\" \"<<r.width;  \r\n}  \r\nint main()  \r\n{  \r\n    int num;  \r\n    cin>>num;  \r\n    while(num--)  \r\n    {  \r\n        set<Rect> rs;  \r\n        Rect r;  \r\n        int n;  \r\n        cin>>n;     \r\n        while(n--)  \r\n        {  \r\n            cin>>r;  \r\n            rs.insert(r);  \r\n        }  \r\n        copy(rs.begin(),rs.end(),ostream_iterator<Rect>(cout,\"\\n\"));  \r\n\r\n    }   \r\n}"
},
{
"pid":9,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <cstring>\r\nusing namespace std;\r\nconst int MAXN=30003;\r\ninline int L(int r){return r<<1;}\r\ninline int R(int r){return ((r<<1)+1);}\r\ninline int MID(int l,int r) {return (l+r)>>1;}\r\ntypedef struct\r\n{\r\n    int left,right;\r\n    int value;\r\n}LINE;\r\nLINE tree[MAXN*4];\r\ntypedef struct NODE\r\n{\r\n    int value,zy;\r\n    bool operator < (const NODE& r) const\r\n    {\r\n        return value<r.value;\r\n    }\r\n}NODE;\r\nNODE node[MAXN];\r\nint post[MAXN][2];\r\nbool flag[MAXN];\r\nint sum;\r\nvoid Create(int l,int r,int root) \r\n{\r\n    tree[root].left=l;\r\n    tree[root].right=r;\r\n    tree[root].value=0;\r\n    if(l==r) return;\r\n    int mid=MID(l,r);\r\n    Create(l,mid,L(root));\r\n    Create(mid+1,r,R(root));\r\n}\r\nvoid Update(int l,int r,int v,int root) \r\n{\r\n    if(l<=tree[root].left&&tree[root].right<=r)\r\n    {\r\n        tree[root].value=v;\r\n        return;\r\n    }\r\n    if(tree[root].left==tree[root].right) return;\r\n    if(tree[root].value==v)return;\r\n    if(tree[root].value>0)\r\n    {\r\n        tree[L(root)].value=tree[root].value;\r\n        tree[R(root)].value=tree[root].value;\r\n        tree[root].value=0;\r\n    }\r\n    int mid=MID(tree[root].left,tree[root].right);\r\n    if(l>mid) Update(l,r,v,R(root));\r\n    else if(r<=mid) Update(l,r,v,L(root));\r\n    else\r\n    {\r\n        Update(l,mid,v,L(root));\r\n        Update(mid+1,r,v,R(root));\r\n    }\r\n}\r\nvoid solve(int r) \r\n{\r\n    if(tree[r].value)\r\n    {\r\n        if(!flag[tree[r].value])\r\n        {\r\n            sum++;\r\n            flag[tree[r].value]=1;\r\n        }\r\n        return;\r\n    }\r\n    solve(L(r));\r\n    solve(R(r));\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d%d\",&post[i][0],&post[i][1]);\r\n            node[L(i)].zy=-i-1;\r\n            node[R(i)].zy=i+1;\r\n            node[L(i)].value=post[i][0];\r\n            node[R(i)].value=post[i][1];\r\n        }\r\n        sort(node,node+n*2);\r\n        int count=1,temp=node[0].value;\r\n        for(int i=0;i<2*n;i++)\r\n        {\r\n            if(node[i].value!=temp)\r\n            {\r\n                count++;\r\n                temp=node[i].value;\r\n                if(i!=0)         \r\n                if(node[i-1].zy>0)\r\n                if((node[i-1].value+1)!=node[i].value)\r\n                count++;\r\n            }\r\n\r\n            if(node[i].zy<0) post[-node[i].zy-1][0]=count;\r\n            else post[node[i].zy-1][1]=count;\r\n        }\r\n\r\n        memset(flag,0,sizeof(flag));\r\n        Create(1,count,1);\r\n        for(int i=0;i<n;i++)\r\n            Update(post[i][0],post[i][1],i+1,1);\r\n        sum=0;\r\n        solve(1);\r\n        printf(\"%d\\n\",sum);\r\n\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":10,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint a[101][101],visit[101][101];  \r\nint dx[4]={0,0,1,-1};  \r\nint dy[4]={1,-1,0,0};  \r\nint s,t,max,r,c;  \r\nint bfs(int x,int y)  \r\n{  \r\n    if(visit[x][y]>1)\r\n    {  \r\n        return visit[x][y]; \r\n    }  \r\n    for(int k=0;k<4;k++)  \r\n    {  \r\n        s=x+dx[k];  \r\n        t=y+dy[k];  \r\n        if(s>=0 && s<r && t>=0 && t<c && a[x][y]<a[s][t])\r\n        {  \r\n            max=bfs(s,t);\r\n            if(visit[x][y]<max+1)  \r\n            {  \r\n                visit[x][y]=max+1;  \r\n            }  \r\n        }  \r\n    }  \r\n    return visit[x][y];\r\n}  \r\nint main()  \r\n{  \r\n    int ncases,i,j,ans;  \r\n    scanf(\"%d\",&ncases);  \r\n    while(ncases--)  \r\n    {  \r\n        ans=-1;  \r\n        scanf(\"%d %d\",&r,&c);  \r\n        for(i=0;i<=r-1;i++)  \r\n        {  \r\n            for(j=0;j<=c-1;j++)  \r\n            {  \r\n                scanf(\"%d\",&a[i][j]);  \r\n                visit[i][j]=1;  \r\n            }  \r\n        }  \r\n        for(i=0;i<=r-1;i++)  \r\n        {  \r\n            for(j=0;j<=c-1;j++)  \r\n            {  \r\n                bfs(i,j);  \r\n                if(visit[i][j]>ans)  \r\n                {  \r\n                    ans=visit[i][j];  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":11,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int n;  \r\n    cin>>n;  \r\n    while(n--)  \r\n    {  \r\n        int a,i;  \r\n        cin>>a;  \r\n        for(i=1;i<=a;++i)  \r\n            if(i%2)  \r\n                cout<<i<<\" \";  \r\n        cout<<endl;  \r\n        for(i=1;i<=a;++i)  \r\n            if(i%2==0)  \r\n                cout<<i<<\" \";  \r\n        cout<<endl<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":12,
"code":"\n#include <iostream>  \r\n#include <stdio.h>  \r\n#include <algorithm>  \r\n#include <math.h>  \r\nusing namespace std;  \r\nstruct sb  \r\n{  \r\n    double from,to;  \r\n}a[10005];  \r\nbool cmp(sb t1,sb t2)  \r\n{  \r\n    if(t1.from<t2.from)  \r\n        return true;  \r\n    if(t1.from==t2.from&&t1.to>t2.to)  \r\n        return true;  \r\n    return false;  \r\n}  \r\nint main()  \r\n{  \r\n    int t,n,i;  \r\n    double d,h,r,w,x;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        int count=0,flag=0,sum=0;  \r\n        double begin=0,end=0;  \r\n        cin>>n>>w>>h;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            cin>>x>>r;  \r\n            d=sqrt(r*r-((h\/2)*(h\/2)));  \r\n            if(r>=(h\/2))  \r\n            {  \r\n                if(x-d>w||x+d<0)  \r\n                    continue;  \r\n                a[count].from=x-d;  \r\n                a[count].to=x+d;  \r\n                count++;  \r\n            }  \r\n        }  \r\n        if(count==0)  \r\n        {  \r\n            cout<<0<<endl;  \r\n            continue;  \r\n        }  \r\n        std::sort(a,a+count,cmp);  \r\n        if(a[0].from>0)  \r\n        {  \r\n            cout<<0<<endl;  \r\n            continue;  \r\n        }  \r\n        double max=0;  \r\n        int num;  \r\n        for(i=0;i<count;i++)  \r\n        {  \r\n            if(a[i].from<=end)  \r\n            {  \r\n                for(int num=i;num<count;num++)  \r\n                {  \r\n                    if(a[num].to>max&&a[num].to>end&&a[num].from<=end)  \r\n                    {  \r\n                        max=a[num].to;  \r\n                        i=num;  \r\n                    }  \r\n                }  \r\n                end=max;  \r\n                sum++;  \r\n            }  \r\n            if(end>w)  \r\n                break;  \r\n        }  \r\n        if(end<w||begin==end)  \r\n        {  \r\n            cout<<0<<endl;  \r\n            continue;  \r\n        }  \r\n        cout<<sum<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":13,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int i,a[20],n,t;  \r\n    a[1]=1;a[2]=1;  \r\n    for(i=3;i<=20;i++)a[i]=a[i-2]+a[i-1];\r\n\r\n    cin>>n;  \r\n    while(n--)  \r\n    {  \r\n        cin>>t;  \r\n        cout<<a[t]<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":14,
"code":"\n#include <cstring>  \r\n#include <cstdio>   \r\n#include <algorithm>  \r\nusing namespace std;  \r\nstruct node  \r\n{  \r\n    int s;  \r\n    int e;  \r\n}a[10010];  \r\nbool cmp(node p,node q){  \r\n    return p.e<q.e;  \r\n}  \r\nint main()  \r\n{  \r\n    int m;  \r\n    scanf(\"%d\",&m);  \r\n    while(m--){  \r\n        int n,num=0;  \r\n        scanf(\"%d\",&n);  \r\n        for(int i=0;i<n;i++)  \r\n            scanf(\"%d%d\",&a[i].s,&a[i].e);  \r\n        sort(a,a+n,cmp);  \r\n        if(n==0){  \r\n            printf(\"0\\n\");  \r\n            continue;  \r\n        }  \r\n        int flag=0;  \r\n        num=1;  \r\n        for(int i=1;i<n;i++){  \r\n            if(a[i].s>a[flag].e){  \r\n                num++;  \r\n                flag=i;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",num);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":15,
"code":"\n#include<iostream>\r\n#include<cstring>\r\n#define N 105\r\nusing namespace std;\r\n\r\nint d[N][N];\r\nchar a[N];\r\n\r\nint min(int x,int y)\r\n{\r\n    return x<y?x:y;\r\n}\r\n\r\nint main()\r\n{\r\n    int test;\r\n    cin>>test;\r\n    while(test--)\r\n    {\r\n        cin>>a+1;\r\n        int i,j,k,p,n;\r\n        n=strlen(a+1);\r\n        for(i=1;i<=n;i++) d[i][i-1]=0;\r\n        for(i=1;i<=n;i++) d[i][i]=1;\r\n        for(p=1;p<=n-1;p++)\r\n        {\r\n            for(i=1;i<=n-p;i++)\r\n            {\r\n                j=i+p;\r\n                d[i][j]=1000;\r\n                if((a[i]=='('&&a[j]==')')||(a[i]=='['&&a[j]==']'))\r\n                    d[i][j]=min(d[i][j],d[i+1][j-1]);\r\n                for(k=i;k<j;k++)\r\n                {\r\n                    d[i][j]=min(d[i][j],d[i][k]+d[k+1][j]);\r\n                }\r\n            }\r\n        }\r\n        cout<<d[1][n]<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":16,
"code":"\n#include<stdio.h>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\n#include<string.h>  \r\nusing namespace std;  \r\nstruct rec  \r\n{int a,b;}re[1001];  \r\nbool cmp(rec x,rec y)\r\n{  \r\n    if(x.a<y.a)return true;  \r\n    if(x.a==y.a&&x.b<y.b)return true;  \r\n    else return false;  \r\n}  \r\nint max(int x,int y)\r\n{  \r\n    if(x>y)return x;  \r\n    else return y;  \r\n}  \r\nint min(int x,int y)  \r\n{  \r\n    if(x<y)return x;  \r\n    else return y;  \r\n}  \r\nint main()  \r\n{  \r\n    int i,j,k,l,t,n,m,count[1001];  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {   memset(re,0,sizeof(re));  \r\n        memset(count,0,sizeof(count));  \r\n        scanf(\"%d\",&n);  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&k,&l);  \r\n            re[i].a=max(k,l);  \r\n            re[i].b=min(k,l);  \r\n            count[i]=1;  \r\n        }  \r\n        sort(re,re+n,cmp);  \r\n        for(i=n-2;i>=0;i--)\r\n            {for(j=i+1;j<=n-1;j++)  \r\n            if(re[i].a<re[j].a&&re[i].b<re[j].b)  \r\n                count[i]=max(count[i],count[j]+1);  \r\n            }  \r\n        int max=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            if(count[i]>max)max=count[i];  \r\n        }  \r\n        printf(\"%d\\n\",max);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":17,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    char str[10001];\r\n    int s,len,i,j,dp[10001],max;\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        max=0;\r\n        scanf(\"%s\",str);\r\n        len=strlen(str);\r\n        for(i=0;i<=len-1;i++)\r\n        {\r\n            dp[i]=1;\r\n        }\r\n        for(i=len-2;i>=0;i--)    \r\n        {\r\n            for(j=i+1;j<=len-1;j++)\r\n            {\r\n                if(str[i]<str[j]&&dp[i]<dp[j]+1) \r\n                {\r\n                    dp[i]=dp[j]+1;\r\n                }\r\n            }\r\n        }\r\n        for(i=0;i<=len-1;i++)\r\n        {\r\n            if(dp[i]>max)\r\n            {\r\n                max=dp[i];\r\n            }\r\n        }\r\n        printf(\"%d\\n\",max);\r\n    }\r\n}"
},
{
"pid":18,
"code":"\n#include<iostream>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint dp[101][101];  \r\nint main()  \r\n{  int n;  \r\n    cin>>n;  \r\n    int maxn=0;  \r\n    for(int i=1;i<=n;++i)  \r\n        for(int j=1;j<=i;++j)  \r\n            {cin>>dp[i][j];  \r\n               dp[i][j]+=max(dp[i-1][j-1],dp[i-1][j]);  \r\n             }  \r\n    cout<<*max_element(dp[n],dp[n]+n)<<endl;  \r\n    return 0;  \r\n}"
},
{
"pid":19,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<string.h>  \r\nusing namespace std;  \r\nint n,a[22],v[22];  \r\nvoid print()  \r\n{  \r\n    for(int i=1;i<=a[0];++i)  \r\n        cout<<a[i];  \r\n    cout<<endl;  \r\n}  \r\nvoid work(int k,int m)  \r\n{  \r\n    if(m==0)  \r\n        print();  \r\n    for(int i=1;i<=n;++i)  \r\n    {  \r\n        if(v[i])  \r\n            continue;  \r\n        a[k]=i;  \r\n        v[i]=1;  \r\n        work(k+1,m-1);  \r\n        v[i]=0;  \r\n    }  \r\n}  \r\nint main()  \r\n{     \r\n    int t;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        cin>>n>>a[0];  \r\n        memset(v,0,sizeof(v));  \r\n        work(1,a[0]);  \r\n    }  \r\n}"
},
{
"pid":20,
"code":"\n#include<iostream>  \r\n#include<vector>  \r\n#include<queue>  \r\n#include<cstdio>  \r\n#include<string.h>  \r\nusing namespace std;  \r\nqueue<int> q;  \r\nint flag[100008];  \r\nvector<int> v[100008];  \r\nint main()  \r\n{  \r\n    int t,i,a,b,s,n,length;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        cin>>n>>s;  \r\n        for(i=1;i<=n;++i)  \r\n            v[i].clear();  \r\n        for(i=1;i<n;++i)  \r\n        {  \r\n            cin>>a>>b;  \r\n            v[a].push_back(b);  \r\n            v[b].push_back(a);  \r\n        }  \r\n        q.push(s);  \r\n        flag[s]=-1;  \r\n        while(!q.empty())  \r\n        {  \r\n            s=q.front();  \r\n            q.pop();  \r\n            length=v[s].size();  \r\n            for(i=0;i<length;++i)  \r\n                if(!flag[v[s][i]])  \r\n                {  \r\n                    q.push(v[s][i]);  \r\n                    flag[v[s][i]]=s;  \r\n                }  \r\n        }  \r\n        for(i=1;i<n;++i)  \r\n            cout<<flag[i]<<\" \";  \r\n        cout<<flag[n]<<endl;  \r\n        memset(flag,0,sizeof(flag));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":21,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\n#include <iterator>  \r\n#include <string>  \r\n#include <stack>  \r\n#include <queue>  \r\nusing namespace std;  \r\nconst int M = 100;  \r\nbool vis[M][M][M];        \r\nstruct Cup  \r\n{  \r\n    int v[3];              \r\n    int step;            \r\n}s,e;       \r\nbool del(Cup &now, int start, int end )      \r\n{  \r\n    int sum = now.v[start] + now.v[end] ;  \r\n    if(now.v[start] != 0 && now.v[end] != s.v[end])  \r\n    {  \r\n        now.v[end] = (now.v[start] >= (s.v[end] - now.v[end])) ? s.v[end] : now.v[end] + now.v[start];  \r\n        now.v[start] = sum - now.v[end] ;  \r\n        if(vis[now.v[0]][now.v[1]][now.v[2]] == false)     \r\n        {  \r\n            vis[now.v[0]][now.v[1]][now.v[2]] = true;  \r\n            return true;  \r\n        }  \r\n    }  \r\n    return false;  \r\n}  \r\nint bfs()  \r\n{  \r\n    queue<Cup>q;  \r\n    struct Cup tmp = {s.v[0], 0, 0};  \r\n    tmp.step = 0;  \r\n    q.push(tmp);  \r\n    vis[s.v[0]][0][0] = true;  \r\n    while(!q.empty())  \r\n    {  \r\n        Cup tmp = q.front(),now;  \r\n        q.pop();  \r\n        now = tmp;  \r\n        if(now.v[0] == e.v[0] && now.v[1] == e.v[1] && now.v[2] == e.v[2])  \r\n            return now.step ;  \r\n        for(int i = 0; i < 3; i++)        \r\n        {  \r\n            for(int j = 0; j < 3; j++)  \r\n            {  \r\n                now = tmp;  \r\n                if( i != j && del(now,i,j))  \r\n                {  \r\n                    now.step = tmp.step + 1;  \r\n                    q.push(now);  \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n    return -1;  \r\n     ;  \r\n}  \r\nint main()  \r\n{  \r\n    int T;  \r\n    cin >> T;  \r\n    while(T --)  \r\n    {  \r\n        memset(vis, false, sizeof(vis));  \r\n\r\n        cin >> s.v[0] >> s.v[1] >> s.v[2];  \r\n        cin >> e.v[0] >> e.v[1] >> e.v[2];  \r\n        cout << bfs() << endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":22,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#define N 1005  \r\nusing namespace std;  \r\nvoid isPrime(int n);  \r\nbool prime[N];  \r\nint main()  \r\n{  \r\n    int n,tmp,sum,i,t;  \r\n    isPrime(1001);  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        cin>>n;  \r\n        sum = 0;  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            cin>>tmp;  \r\n            if (!prime[tmp])  \r\n                sum+=tmp;  \r\n        }  \r\n        cout<<sum<<endl;  \r\n    }  \r\n    return 0;  \r\n}  \r\nvoid isPrime(int n)  \r\n{  \r\n    int i,j;  \r\n    memset(prime,0,sizeof(prime));  \r\n    prime[1] = true;  \r\n    for (i=2;i<=n;i++)  \r\n    {  \r\n        for (j=i*i;j<=n;j+=i)  \r\n        {  \r\n            prime[j] = true;  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":23,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n, m, T;\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d%d\", &n, &m);\r\n        if(n % (m + 1))\r\n            printf(\"Win\\n\");\r\n        else\r\n            printf(\"Lose\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":24,
"code":"\n#include<cstdio>  \r\n#include<iostream>  \r\n#include<cstring>  \r\n#define N 1000000  \r\nusing namespace std;  \r\n\r\nbool isPrime(int n) \r\n{  \r\n    if (n<2)return false;  \r\n    int i;  \r\n    for(i=2;i*i<=n;i++)  \r\n        if (n%i==0)return false;  \r\n    return true;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int len,len2,t,m,i;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d\",&m);  \r\n        len = 0;   \r\n        while(true)  \r\n        {  \r\n            if (m-len>1 && isPrime(m-len))   \r\n            {  \r\n                printf(\"%d %d\\n\",m-len,len);  \r\n                break;  \r\n            }  \r\n            else if(isPrime(m+len))  \r\n            {  \r\n                printf(\"%d %d\\n\",m+len,len);  \r\n                break;  \r\n            }  \r\n            len++;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":25,
"code":"\n#include<stdio.h>  \r\n#include<stdlib.h>  \r\n#include<string.h>  \r\nint main(){  \r\n    char a[10],b[10];  \r\n    int n=0;  \r\n    while(scanf(\"%s%s\",a,b)!=EOF){  \r\n        printf(\"Case %d: \",++n);  \r\n        if(a[1]=='b'){  \r\n            if(a[0]=='A')  \r\n                printf(\"G# \");  \r\n            else  \r\n                printf(\"%c# \",a[0]-1);  \r\n            puts(b);  \r\n        }  \r\n        else if(a[1]=='#'){  \r\n            if(a[0]=='G')  \r\n                printf(\"Ab \");  \r\n            else  \r\n                printf(\"%cb \",a[0]+1);  \r\n            puts(b);  \r\n        }  \r\n        else  \r\n            printf(\"UNIQUE\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":26,
"code":"\n#include <iostream>  \r\n#include <math.h>  \r\nusing namespace std;  \r\nbool vis[1000010];  \r\nint main()  \r\n{  \r\n    int n=1000010;  \r\n    int m =sqrt(n+0.5);  \r\n    int c=0;  \r\n    for(int i =2;i<=m;i++)  \r\n        if(!vis[i])  \r\n        {  \r\n            for (int j = i*i;j<=n;j+=i)   \r\n                vis[j]=1;   \r\n        }  \r\n    cin>>n;  \r\n    while(n--)  \r\n    {  \r\n        int count=0,m;  \r\n        cin>>m;  \r\n        for(int i=3;i<m-1;i++)  \r\n        {  \r\n            if(!vis[i] && !vis[i+2]) count++;  \r\n        }  \r\n        if(m>3)  \r\n            cout<<count+1<<endl;  \r\n        else if(m==3) cout<<\"1\"<<endl;  \r\n        else cout<<\"0\"<<endl;  \r\n    }  \r\n\r\n        return 0;  \r\n}"
},
{
"pid":27,
"code":"\n#include<stdio.h>  \r\n#include<string.h>   \r\nint s,t,a[101][101];  \r\nint dx[4]={0,0,1,-1};\r\nint dy[4]={1,-1,0,0};  \r\nvoid bfs(int x,int y)  \r\n{  \r\n    a[x][y]=0;   \r\n    for(int k=0;k<4;k++)  \r\n    {  \r\n        s=x+dx[k];  \r\n        t=y+dy[k];  \r\n        if(a[s][t]==1)  \r\n        {  \r\n            bfs(s,t);  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int ncases,n,m,i,j,count;  \r\n    scanf(\"%d\",&ncases);  \r\n    while(ncases--)  \r\n    {  \r\n        count=0;  \r\n        scanf(\"%d %d\",&n,&m);  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            for(j=1;j<=m;j++)   \r\n            {  \r\n                scanf(\"%d\",&a[i][j]);  \r\n            }  \r\n        }  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            for(j=1;j<=m;j++)  \r\n            {  \r\n                if(a[i][j]==1)  \r\n                {  \r\n                    bfs(i,j);  \r\n                    count++;  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",count);            \r\n    }     \r\n    return 0;  \r\n}"
},
{
"pid":28,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#define N 20000  \r\nint fac[N];  \r\n\r\nint main()  \r\n{  \r\n    int s,m,flag=0;  \r\n    scanf(\"%d\",&m);  \r\n\r\n    memset(fac,0,sizeof(fac));  \r\n    int i,j;  \r\n    fac[0] = 1;  \r\n    for(i=2;i<=m;i++)  \r\n    {  \r\n        flag = 0;  \r\n        for(j=0;j<N;j++)  \r\n        {  \r\n            s = fac[j]*i + flag;  \r\n            fac[j] = s%10;  \r\n            flag = s\/10;  \r\n        }  \r\n    }  \r\n    for(j = N-1;j>=0;j--)  \r\n        if (fac[j])break;\r\n    for(;j>=0;j--)printf(\"%d\",fac[j]);  \r\n    printf(\"\\n\");  \r\n    return 0;  \r\n}"
},
{
"pid":29,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nint map[4][4];  \r\nint pam[4][4];  \r\nint main()  \r\n{  \r\n    int t,i,j;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        for(i=0;i<3;++i)  \r\n            for(j=0;j<3;++j)  \r\n            {  \r\n                cin>>map[i][j];  \r\n                pam[j][i]=map[i][j];  \r\n            }  \r\n        for(i=0;i<3;++i)  \r\n        {  \r\n            for(j=0;j<3;++j)  \r\n                cout<<pam[i][j]<<\" \";  \r\n            cout<<endl;  \r\n        }  \r\n        cout<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":30,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int N = 30;  \r\nint f[N], d[N], ans[N], tmp[N], time[N];  \r\nint ff[N];  \r\nint main()  \r\n{  \r\n    int n, h, i, j, t, cas = 0;  \r\n    while(~scanf(\"%d\",&n) && n)  \r\n    {  \r\n        scanf(\"%d\",&h); h *= 60;  \r\n        for(i = 0; i < n; i++)  \r\n            scanf(\"%d\",&f[i]);  \r\n        for(i = 0; i < n; i++)  \r\n            scanf(\"%d\",&d[i]);  \r\n        time[0] = 0;  \r\n        for(i = 1; i < n; i++)  \r\n        {  \r\n            scanf(\"%d\",&t);  \r\n            time[i] = time[i-1] + t*5;  \r\n        }  \r\n        memset(ans, 0, sizeof(ans));   \r\n        int maxsum = -1;  \r\n        for(i = 0; i < n; i++)  \r\n        {  \r\n            int sum = 0, left_time = h - time[i];  \r\n            for(j = 0; j <= i; j++)  \r\n                ff[j] = f[j]; \r\n            memset(tmp, 0, sizeof(tmp));  \r\n            while(left_time > 0)  \r\n            {  \r\n                int mmax = 0, id = 0;  \r\n                for(j = 0; j <= i; j++)  \r\n                {  \r\n                    if(ff[j] > mmax)  \r\n                    {  \r\n                        mmax = ff[j];  \r\n                        id = j;  \r\n                    }  \r\n                }  \r\n                if(mmax == 0) break;  \r\n                sum += mmax;  \r\n                tmp[id] += 5;  \r\n                ff[id] -= d[id];  \r\n                left_time -= 5;  \r\n            }  \r\n            if(left_time > 0)  \r\n                tmp[0] += left_time;  \r\n            if(sum > maxsum)  \r\n            {  \r\n                maxsum = sum;  \r\n                for(j = 0; j <= i; j++)  \r\n                    ans[j] = tmp[j];  \r\n            }  \r\n        }  \r\n        if(cas > 0)  \r\n            printf(\"\\n\");  \r\n        printf(\"%d\",ans[0]);  \r\n        for(i = 1; i < n; i++)  \r\n            printf(\", %d\",ans[i]);  \r\n        printf(\"\\n\");  \r\n        printf(\"Number of fish expected: %d\\n\",maxsum);  \r\n        cas++;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":31,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    int str[5],i,j,t;  \r\n    for(i=0;i<5;i++)  \r\n        scanf(\"%d\",&str[i]);  \r\n    for(i=0;i<5;i++)  \r\n        for(j=0;j<5-i;j++)  \r\n        {  \r\n            if(str[j]>str[j+1])  \r\n            {  \r\n                t=str[j];  \r\n                str[j]=str[j+1];  \r\n                str[j+1]=t;  \r\n            }  \r\n        }  \r\n    printf(\"%d %d\\n\",str[0],str[4]);  \r\n    return 0;  \r\n}"
},
{
"pid":32,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <string.h>  \r\nusing namespace std;  \r\nint num[11],n,r;  \r\nvoid dfs(int x,int y){  \r\n    if(y==0){  \r\n        for(int i=r;i>=1;--i){  \r\n          printf(\"%d\",num[i]);  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    else{  \r\n        for(int i=x;i>=y;--i){  \r\n          num[y]=i;  \r\n          dfs(i-1,y-1);  \r\n        }  \r\n    }  \r\n}  \r\nint main(){  \r\n  while(~scanf(\"%d%d\",&n,&r)){  \r\n    dfs(n,r);  \r\n  }  \r\n  return 0;  \r\n}"
},
{
"pid":33,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#define N 105  \r\nusing namespace std;  \r\nint Mat[N][N];  \r\nvoid Output(int n);  \r\nint main()  \r\n{  \r\n    int n;  \r\n    cin>>n;  \r\n    Output(n);  \r\n    return 0;  \r\n}  \r\nvoid Output(int n)  \r\n{  \r\n    int i,j,cnt=1;  \r\n    memset(Mat,0,sizeof(Mat));  \r\n    i =  1; j = n; \r\n    while(cnt<=n*n) \r\n    {  \r\n        while(j > 0 && i <=n && !Mat[i][j])Mat[i++][j] = cnt++;  \r\n        i--;j--;       \r\n        while(j > 0 && !Mat[i][j]) Mat[i][j--] = cnt++;  \r\n        j++;i--;  \r\n        while(i > 0 && !Mat[i][j]) Mat[i--][j] = cnt++;  \r\n        i++;j++;  \r\n        while(j <=n && !Mat[i][j]) Mat[i][j++] = cnt++;  \r\n        j--;i++;  \r\n    }  \r\n    for (i=1;i<=n;i++)  \r\n    {  \r\n        for(j=1;j<=n;j++)  \r\n        {  \r\n            if (j!=1)    \r\n                cout<<' '<<Mat[i][j];  \r\n            else   \r\n                cout<<Mat[i][j];  \r\n        }  \r\n        cout<<endl;  \r\n    }  \r\n}"
},
{
"pid":34,
"code":"\n#include<cstdio>  \r\n#include<algorithm>  \r\n#include<cstring>  \r\n#include<iostream>  \r\n#include<cmath>  \r\nusing namespace std;  \r\n\r\nint main()  \r\n{  \r\n    int a, b, c;  \r\n    while(scanf(\"%d %d %d\", &a, &b, &c) != EOF)  \r\n    {  \r\n        int ans = (70 * a + 21 * b + 15 * c ) % 105;  \r\n        if(ans < 10 || ans > 100)  \r\n            printf(\"No answer\\n\");  \r\n        else  \r\n            printf(\"%d\\n\", ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":35,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<string>\r\n#include<cstring>\r\n#include<stack>\r\nusing namespace std;\r\nchar ch[7][7]=\r\n{\r\n    {'>','>','<','<','<','>','>'},\r\n    {'>','>','<','<','<','>','>'},\r\n    {'>','>','>','>','<','>','>'},\r\n    {'>','>','>','>','<','>','>'},\r\n    {'<','<','<','<','<','=',' '},\r\n    {' ',' ',' ',' ',' ',' ',' '},\r\n    {'<','<','<','<','<',' ','='},\r\n};\r\nint sign(char ch)\r\n{\r\n    switch(ch)\r\n    {\r\n        case '+' : return 0;\r\n        case '-'  : return 1;\r\n        case '*'  : return 2;\r\n        case '\/'  : return 3;\r\n        case '('  : return 4;\r\n        case ')'  : return 5;\r\n        case '=' : return 6;\r\n    }\r\n}\r\nchar pri(char a, char b)\r\n{\r\n    return ch[sign(a)][sign(b)];\r\n}\r\ndouble calc(double a, char oper, double b)\r\n{\r\n    switch(oper)\r\n    {\r\n        case '+' : return a + b;\r\n        case '-' : return a - b;\r\n        case '*' : return a * b;\r\n        case '\/' : return a \/ b;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int i,j,k,T;\r\n    cin>>T;\r\n    while(T--)\r\n    {\r\n        string str;\r\n        str.clear();\r\n        stack <double > num;\r\n        stack <char> oper;\r\n        cin>>str;\r\n        oper.push('=');\r\n        int d = 0;\r\n        double temp;\r\n        for(i=0;i<str.length();i++)\r\n        {             \r\n            if(isdigit(str[i])||str[i]=='.')\r\n            {\r\n                sscanf(&str[i],\"%lf%n\",&temp,&d);\r\n                num.push(temp);\r\n                i=i+d-1;\r\n            }\r\n            else if(!isdigit(str[i])&&str[i]!='.')\r\n            {\r\n                double a, b;\r\n                char ope;\r\n                switch(pri(oper.top(),str[i]))\r\n                {\r\n                    case '<' : oper.push(str[i]); break;\r\n                    case '=' : oper.pop(); break;\r\n                    case '>' : \r\n                        ope = oper.top(); oper.pop();\r\n                        b = num.top(); num.pop();\r\n                        a = num.top(); num.pop();\r\n                        num.push(calc(a, ope, b));\r\n                        i--;break;\r\n                    default : break;\r\n                }\r\n            }\r\n        }\r\n        printf(\"%.2lf\\n\", num.top());\r\n        while(!num.empty())\r\n          num.pop();\r\n        while(!oper.empty())\r\n          oper.pop();\r\n\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":36,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint dp[1200][1200];  \r\nint max(int a,int b)  \r\n{  \r\n    return a>b?a:b;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    memset(dp,0,sizeof(dp));  \r\n    char a[1200],b[1200];  \r\n    int N,i,j,la,lb,count;  \r\n    scanf(\"%d\",&N);  \r\n    while(N--)  \r\n    {  \r\n        scanf(\"%s\",&a);la=strlen(a);  \r\n        scanf(\"%s\",&b);lb=strlen(b);  \r\n        for(i=1;i<=la;i++)  \r\n        {  \r\n            for(j=1;j<=lb;j++)  \r\n            {  \r\n                if(a[i-1]==b[j-1])  \r\n                { dp[i][j]=dp[i-1][j-1]+1; }  \r\n                else if(dp[i-1][j]>=dp[i][j-1])  \r\n                { dp[i][j]=dp[i-1][j]; }  \r\n                else  \r\n                dp[i][j]=dp[i][j-1];  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",dp[la][lb]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":37,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint f[1001][1001];  \r\nint main()  \r\n{  \r\n    char str1[1001],str2[1001];  \r\n    int ncases,i,j,k,len;  \r\n    scanf(\"%d\",&ncases);  \r\n    while(ncases--)  \r\n    {  \r\n        memset(str1,0,sizeof(str1));  \r\n        memset(str2,0,sizeof(str2));  \r\n        scanf(\"%s\",str1);  \r\n        len=strlen(str1);  \r\n        for(k=0,i=len-1;i>=0;i--)\r\n        {  \r\n            str2[k++]=str1[i];  \r\n        }  \r\n        for(i=0;i<=len;i++)  \r\n        {  \r\n            f[i][0]=f[0][i]=0;  \r\n        }  \r\n        for(i=1;i<=len;i++)  \r\n        {  \r\n            for(j=1;j<=len;j++)  \r\n            {  \r\n                if(str1[i-1]==str2[j-1])\r\n                {  \r\n                    f[i][j]=f[i-1][j-1]+1;  \r\n                }  \r\n                else  \r\n                {  \r\n                    f[i][j]=f[i-1][j]>f[i][j-1]?f[i-1][j]:f[i][j-1];    \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",len-f[len][len]); \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":38,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int a,b,n,n1,m,k,i,j,min;  \r\n    scanf(\"%d\",&k);  \r\n    while(k--)  \r\n    {  \r\n        int ok[505][505],ac[505]={0},yi[505];  \r\n        int c1,c2,c3;  \r\n        int sum=0;  \r\n        memset(ok,9999,sizeof(ok));  \r\n        memset(yi,9999,sizeof(yi));  \r\n        memset(ac,0,sizeof(ac));  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        while(m--)  \r\n        {  \r\n            scanf(\"%d%d%d\",&c1,&c2,&c3);  \r\n            ok[c1][c2]=c3;  \r\n            ok[c2][c1]=c3;  \r\n        }  \r\n        n1=n-1;  \r\n        a=1;  \r\n        ac[1]=1;  \r\n        while(n1--)  \r\n        {  \r\n            min=100000;  \r\n            for(b=1;b<=n;b++)  \r\n            {  \r\n                if(a!=b)  \r\n                {  \r\n                    if(ok[a][b]<yi[b]&&ac[b]==0)  \r\n                        yi[b]=ok[a][b];  \r\n                }  \r\n            }  \r\n            for(i=2;i<=n;i++)  \r\n                if(min>yi[i]&&ac[i]==0)  \r\n                {min=yi[i];j=i;}  \r\n            ac[j]=1;  \r\n            a=j;  \r\n            sum+=yi[j];  \r\n        }  \r\n        min=99999;  \r\n        for(a=1;a<=n;a++)  \r\n        {  \r\n            scanf(\"%d\",&b);  \r\n            if(min>b)  \r\n                min=b;  \r\n        }  \r\n        printf(\"%d\\n\",sum+min);  \r\n\r\n    }  \r\n}"
},
{
"pid":39,
"code":"\n#include <iostream>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tcin>>n;\r\n\twhile(n)\r\n\t{\r\n\t\tint a, b, c;\r\n\t\ta = n \/ 100;\r\n\t\tb = n \/ 10 % 10;\r\n\t\tc = n % 10;\r\n\t\tif (n == a*a*a + b*b*b + c*c*c)\r\n\t\t\tcout<<\"Yes\"<<endl;\r\n\t\telse\r\n\t\t\tcout<<\"No\"<<endl;\r\n\t\tcin>>n;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":40,
"code":"\n#include<iostream>  \r\n\r\nusing namespace std;  \r\n\r\nint main()  \r\n{  \r\n    int gcd(int a,int b);\r\n    int a,b,t,p;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        cin>>a>>b;  \r\n        p = gcd(a,b);  \r\n        cout<<p<<' '<<a*b\/p<<endl;  \r\n    }  \r\n    return 0;  \r\n}  \r\nint gcd(int a,int b)  \r\n{  \r\n    if (a<b) \r\n    {  \r\n        a = a^b;  \r\n        b = a^b;  \r\n        a = a^b;  \r\n    }  \r\n    while(b!=0)  \r\n    {  \r\n        a = a%b;  \r\n        a = a^b;  \r\n        b = a^b;  \r\n        a = a^b;  \r\n    }  \r\n    return a;  \r\n}"
},
{
"pid":41,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    int a,b,c,t;  \r\n    scanf(\"%d %d %d\",&a,&b,&c);  \r\n    if(a>b)  \r\n    {  \r\n        t=a;  \r\n        a=b;  \r\n        b=t;  \r\n    }  \r\n    if(b>c)  \r\n    {  \r\n        t=b;  \r\n        b=c;  \r\n        c=t;  \r\n    }  \r\n    if(a>b)  \r\n    {  \r\n        t=a;  \r\n        a=b;  \r\n        b=t;  \r\n    }  \r\n    printf(\"%d %d %d\\n\",a,b,c);  \r\n    return 0;  \r\n}"
},
{
"pid":42,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint p[1005],visit[1005],G[1005][1005];\r\nint point,line;\r\n\r\nvoid DFS(int i)\r\n{\r\n    int v=i;\r\n    visit[i]=1;\r\n    for(v=0;v<point;++v)\r\n    {\r\n        if(v!=i&&G[i][v]&&!visit[v])\r\n            DFS(v);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int n,i,x,y,count,flag;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        count=0;\r\n        flag=1;\r\n        scanf(\"%d%d\",&point,&line);\r\n        memset(p,0,sizeof(p));\r\n        memset(visit,0,sizeof(visit));\r\n        memset(G,0,sizeof(G));   \r\n        for(i=0;i<line;++i)\r\n        {\r\n            scanf(\"%d%d\",&x,&y);\r\n            G[x-1][y-1]=G[y-1][x-1]=1;\r\n            ++p[x-1];\r\n            ++p[y-1];\r\n        }\r\n        DFS(0);\r\n        for(i=0;i<point;++i)\r\n        {\r\n            G[i][i]=1;\r\n            if(visit[i]==0)\r\n                flag=0;\r\n            if(p[i]&1)\r\n                ++count;\r\n        }\r\n        if(flag)\r\n        {\r\n            if(count==2||count==0)\r\n                printf(\"Yes\\n\");\r\n            else\r\n                printf(\"No\\n\");\r\n        }\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":43,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nconst double e = 1e-6; \r\ndouble num[7],v;\r\nint n;\r\nbool dfs(int t)\r\n{\r\n    if(t==n)\r\n    {\r\n        if(fabs(v-num[n])<e)\r\n            return true;\r\n        return false;\r\n    }\r\ndouble left,right;\r\n    for(int i=t;i<n;++i)\r\n        for(int j=i+1;j<=n;++j)\r\n        {\r\n            left=num[i];\r\n            right=num[j];\r\n            num[i]=num[t];\r\n            num[j]=left+right;    if(dfs(t+1)) return true;\r\n            num[j]=left-right;    if(dfs(t+1)) return true;\r\n            num[j]=left*right;  if(dfs(t+1)) return true;\r\n            num[j]=right-left;  if(dfs(t+1)) return true;\r\n            if(left) \r\n                num[j]=right\/left; if(dfs(t+1)) return true;\r\n            if(right)\r\n                num[j]=left\/right; if(dfs(t+1)) return  true;\r\n            num[i]=left;\r\n            num[j]=right;\r\n        }\r\n    return false;\r\n}\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d%lf\",&n,&v);\r\n        for(int i=1;i<=n;++i)\r\n            scanf(\"%lf\",&num[i]);\r\n        if(dfs(1))\r\n            printf(\"Yes\\n\");\r\n        else\r\n            printf(\"No\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":44,
"code":"\n#include<stdio.h>\r\nint a[1000001];\r\nint main()\r\n{\r\n    int i,n,sum,num;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        sum=-100;\r\n        scanf(\"%d\",&num);\r\n        for(i=1;i<=num;i++)\r\n        {  \r\n           scanf(\"%d\",&a[i]);\r\n           if(a[i-1]>0)\r\n           a[i]+=a[i-1];\r\n           if(a[i]>sum) sum=a[i];\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\n        return 0;\r\n}"
},
{
"pid":45,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\nusing namespace std;  \r\n#define base 100000  \r\n#define maxx 100  \r\n\r\nvoid multiply(int a[],int max,int b)  \r\n{  \r\n    int i,array=0;  \r\n    for(i=max-1;i>=0;i--)  \r\n    {  \r\n        array+=b*a[i];  \r\n        a[i]=array%base;  \r\n        array\/=base;  \r\n    }  \r\n}  \r\nvoid add(int a[],int max,int b)  \r\n{  \r\n    int i,ad=0;  \r\n    for(i=max-1;i>=0;i--)  \r\n    {  \r\n        a[i]+=b;  \r\n        if(a[i]>=base)  \r\n        {  \r\n            a[i]%=base;  \r\n            a[i-1]+=1;  \r\n        }  \r\n        else break;  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    int a[101][maxx];  \r\n    memset(a[1],0,maxx*sizeof(int));  \r\n    for(i=2,a[1][maxx-1]=1;i<101;i++)  \r\n    {  \r\n        memcpy(a[i],a[i-1],maxx*sizeof(int));  \r\n        multiply(a[i],maxx,4);  \r\n        add(a[i],maxx,1);  \r\n    }  \r\n    int cases;  \r\n    scanf(\"%d\",&cases);  \r\n    while(cases--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        for(i=0;i<maxx&&a[n][i]==0;i++);  \r\n        printf(\"%d\",a[n][i++]);  \r\n        for(;i<maxx;i++)  \r\n        {  \r\n            printf(\"%05d\",a[n][i]);  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":46,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int m,n,s;\r\n    scanf(\"%d\",&m);\r\n    while(m--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        s=0;\r\n        while(n!=1)\r\n        {\r\n            s++;\r\n            if(n&1)  s++;\r\n            n\/=2;\r\n        }\r\n        printf(\"%d\\n\",s);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":47,
"code":"\n#include<cstdio>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\nint mintime(int n,int *a)  \r\n{  \r\n    sort(a,a+n);  \r\n    int res=0;  \r\n    --n;  \r\n    while(n>2)  \r\n    {  \r\n        res+=min(a[0]+a[1]*2+a[n],a[0]*2+a[n]+a[n-1]);  \r\n        n-=2;  \r\n    }  \r\n    if(n==0)  \r\n        res+=a[0];  \r\n    else if(n==1)  \r\n        res+=a[1];  \r\n    else  \r\n        res+=a[0]+a[1]+a[2];  \r\n    return res;  \r\n}  \r\nint main()  \r\n{  \r\n    int i,n,t,a[1001];  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        for(i=0;i<n;++i)  \r\n            scanf(\"%d\",&a[i]);  \r\n        printf(\"%d\\n\",mintime(n,a));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":48,
"code":"\n#include<iostream>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int i,*a,n;  \r\n    cin>>n;  \r\n    a=new int[n];  \r\n    for(i=0;i<n;++i)  \r\n        cin>>a[i];  \r\n    sort(a,a+n);  \r\n    int cnt=0;  \r\n    for(i=0;i<n;++i)  \r\n        if(i+1<n && a[i]==a[i+1])  \r\n            cnt++;  \r\n    cout<<n-cnt<<endl;  \r\n    for(i=0;i<n;++i)  \r\n    {  \r\n        int j=i;  \r\n        while(i+1<n && a[i]==a[i+1])  \r\n            i++;  \r\n        cout<<a[j]<<\" \";  \r\n    }  \r\n    cout<<endl;     \r\n    delete [] a;  \r\n    return 0;  \r\n}"
},
{
"pid":49,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n int N,n,m,i,j;\r\n int dp[30000],p[25],d[25];\r\n scanf(\"%d\",&N);\r\n while(N--)\r\n {\r\n  memset(dp,0,sizeof(dp));\r\n  scanf(\"%d%d\",&n,&m);\r\n  for(i=0;i<m;++i)\r\n  {\r\n   scanf(\"%d%d\",&p[i],&d[i]);\r\n  }\r\n  for(i=0;i<m;++i)\r\n   for(j=n;j>=p[i];--j)\r\n   {\r\n    if(dp[j]<dp[j-p[i]]+d[i]*p[i])\r\n     dp[j]=dp[j-p[i]]+d[i]*p[i];\r\n   }\r\n  printf(\"%d\\n\",dp[n]);\r\n }\r\n return 0;\r\n}"
},
{
"pid":50,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int n,i,count,max;\r\n    int a[10];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        for(i=0;i<10;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            getchar();\r\n        }\r\n        scanf(\"%d\",&max);\r\n        count=0;\r\n        for(i=0;i<10;i++)\r\n        {\r\n            if(a[i]<=max+30)\r\n                count++;\r\n        }\r\n        printf(\"%d\\n\",count);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":51,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmp(const void *a,const void *b)\r\n{\r\n\treturn *(int *)a-*(int *)b;\r\n}\r\nint main()\r\n{\r\n\tint s;\r\n \tscanf(\"%d\",&s);\r\n \twhile(s--)\r\n \t{\r\n  \t\tint n,m,i,j,t1,t2,sum,a[100][2];\r\n  \t\tscanf(\"%d%d\",&n,&m);\r\n  \t\tfor(i=0;i<m;i++)\r\n   \t\t\tfor(j=0;j<2;j++)\r\n    \t\t\tscanf(\"%d\",&a[i][j]);\r\n   \t\tqsort(a,m,sizeof(a[0]),cmp);\r\n   \t\tsum=0;\r\n   \t\tt1=a[0][0];\r\n   \t\tt2=a[0][1];\r\n   \t\tfor(i=0;i<m;i++)\r\n   \t\t{\r\n    \t\tif(a[i][0]>t2)\r\n    \t\t{\r\n     \t\t\tsum+=(t2-t1+1);\r\n     \t\t\tt1=a[i][0];\r\n     \t\t\tt2=a[i][1];\r\n    \t\t}\r\n    \t\telse if(a[i][1]>t2)\r\n     \t\t\tt2=a[i][1];\r\n    \t\tif(i==m-1)\r\n     \t\tsum+=t2-t1+1;\r\n   \t\t}\r\n   \t\tprintf(\"%d\\n\",n+1-sum);\r\n \t}\r\n \treturn 0;\r\n}"
},
{
"pid":52,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    int a[6] = {0,10,100,1000,10000,100000};  \r\n    int num,n,k;  \r\n    long long y,record;  \r\n    scanf(\"%d\",&num);  \r\n    while(num--)  \r\n    {  \r\n        int count = 0,i;  \r\n        scanf(\"%d %d\",&n,&k);  \r\n        record = n % a[k];  \r\n        y = record;  \r\n        for(i=2;i<=a[k];i++) \r\n        {  \r\n            count++;  \r\n            y = y*n % a[k];\r\n            if(record == y) \r\n              break;  \r\n        }  \r\n        if(i-1 == a[k])  \r\n         printf(\"-1\\n\");  \r\n         else    \r\n        printf(\"%d\\n\",count);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":53,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,a,b,max,k,count;\r\n    int str[7];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        for(i=0;i<7;i++)\r\n        {\r\n            scanf(\"%d %d\",&a,&b);\r\n            str[i]=a+b;\r\n        }\r\n        max=-1;count=0;\r\n        for(i=0;i<7;i++)\r\n        {\r\n            if(str[i]<=8)\r\n                count++;\r\n        }\r\n        if(count==7)\r\n            printf(\"%d\\n\",0);\r\n        else\r\n        {\r\n            for(i=0;i<7;i++)\r\n            {\r\n                if(str[i]>max&&str[i]>8)\r\n                {\r\n                    max=str[i];\r\n                    k=i;\r\n                }\r\n            }\r\n            printf(\"%d\\n\",k+1);\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":54,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int i , j , k , count;  \r\n    double sum , num;  \r\n    scanf(\"%d\" , &i);  \r\n\r\n    while(i--)  \r\n    {  \r\n        for(j = 0 , count = 0 , sum = 0; j < 12 ; j++)  \r\n        {  \r\n            scanf(\"%lf\" , &num);  \r\n            sum += 300 - num;  \r\n            if(sum \/ 100 >= 1.0)  \r\n            {  \r\n                count += sum \/ 100;  \r\n                sum = (int )sum % 100;  \r\n            }  \r\n            if(sum < 0)  \r\n            {  \r\n                for(k = j + 1 ; k < 12 ; k++)  \r\n                    scanf(\"%lf\" , &num);  \r\n                break;  \r\n            }  \r\n\r\n        }  \r\n        if(j == 12)  \r\n        {  \r\n            printf(\"%d\\n\" , int ((count* 100 * 1.2 + sum) + 0.5));  \r\n        }  \r\n        else  \r\n            printf(\"-%d\\n\" , j + 1);      \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":55,
"code":"\n#include <iostream>\r\n#include <queue>\r\n#include <vector>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int i,j,k,T;\r\n    cin>>T;\r\n    while(T--)\r\n    {\r\n        priority_queue <long long ,vector <long long > ,greater <long long > > q;\r\n        int num;\r\n        cin>>num;\r\n        for(i=1; i<=num; i++)\r\n        {\r\n            long long temp;\r\n            cin>>temp;\r\n            q.push(temp);\r\n        }\r\n        long long sum = 0;\r\n        while(q.size()>1)\r\n        {\r\n            long long a = q.top();\r\n            q.pop();\r\n            long long b = q.top();\r\n            q.pop();\r\n            sum += a+b;\r\n            q.push(a+b);\r\n        }\r\n        q.pop();\r\n        cout<<sum<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":56,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int i,j,k,m,n,s;\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        scanf(\"%d%d\",&n,&m);\r\n        for(i=m,j=0;i<=n;i++)\r\n        for(k=i;!(k%m);j++)\r\n        k=k\/m;\r\n        printf(\"%d\\n\",j);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":57,
"code":"\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n,i,j,sum,s1,s2,s;\r\n    int a[4];\r\n    cin>>n;\r\n    while(n--)\r\n    {\r\n       cin>>s;\r\n       sum=1;\r\n       while(s!=6174)\r\n       {\r\n          for(i=0;i<4;i++)\r\n          {\r\n            a[i]=s%10;\r\n            s=s\/10;\r\n          }\r\n          sort(a,a+4); \r\n          s2=a[3]*1000+a[2]*100+a[1]*10+a[0];\r\n          s1=a[0]*1000+a[1]*100+a[2]*10+a[3];\r\n          s=s2-s1;\r\n          sum++;\r\n       }\r\n       cout<<sum<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":58,
"code":"\n#include<cstdio>\r\n#include<queue>\r\nusing namespace std;\r\n\r\nstruct point\r\n{\r\n    int x,y,step;\r\n};\r\nint dir[4][2]={-1,0,0,1,1,0,0,-1};\r\n\r\nint BFS(point s,point t,int map[9][9])\r\n{\r\n    queue<point> q;\r\n    int i;\r\n    point tmp;\r\n    q.push(s);\r\n    while(1)\r\n    {\r\n        if(s.x==t.x&&s.y==t.y)\r\n            return s.step;\r\n        for(i=0;i<4;++i)\r\n        {\r\n            tmp.x=s.x+dir[i][0];\r\n            tmp.y=s.y+dir[i][1];\r\n            if(map[tmp.x][tmp.y]==0)\r\n            {\r\n                tmp.step=s.step+1;\r\n                map[tmp.x][tmp.y]=1;\r\n                q.push(tmp);\r\n            }\r\n        }\r\n        s=q.front();\r\n        q.pop();\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    point s,t;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        int map[9][9]={1,1,1,1,1,1,1,1,1,\r\n                       1,0,0,1,0,0,1,0,1,\r\n                       1,0,0,1,1,0,0,0,1,\r\n                       1,0,1,0,1,1,0,1,1,\r\n                       1,0,0,0,0,1,0,0,1,\r\n                       1,1,0,1,0,1,0,0,1,\r\n                       1,1,0,1,0,1,0,0,1,\r\n                       1,1,0,1,0,0,0,0,1,\r\n                       1,1,1,1,1,1,1,1,1,};\r\n        scanf(\"%d%d%d%d\",&s.x,&s.y,&t.x,&t.y);\r\n        s.step=0;\r\n        map[s.x][s.y]=1;\r\n        printf(\"%d\\n\",BFS(s,t,map));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":59,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <time.h>  \r\nusing namespace std;  \r\n#define M 50005  \r\nint en[M],res;  \r\nint need[M][3];  \r\nint searchSame[M];   \r\nvoid judge(int n)  \r\n{  \r\n    en[1]=1;  \r\n    for (int i=2;i<=n;i++)  \r\n    {  \r\n        if(need[ need[en[i-1]][1] ][0]==0)  \r\n        {  \r\n            en[i]=need[en[i-1]][1];  \r\n            need[en[i-1]][0]=1;  \r\n        }else if(need[ need[en[i-1]][2] ][0]==0)  \r\n        {  \r\n            en[i]=need[en[i-1]][2];  \r\n            need[en[i-1]][0]=1;  \r\n        }  \r\n        else {res=-1; return;}  \r\n    }  \r\n    if( (need[en[n]][1]==en[1] || need[en[n]][1]==en[n-1])  \r\n        && (need[en[n]][2]==en[1] || need[en[n]][2]==en[n-1]) )  \r\n        return;  \r\n    else res=-1;  \r\n}  \r\nint calculation(int n)  \r\n{  \r\n    int eqmax=0;  \r\n    int temp;  \r\n    memset(searchSame,0,sizeof(searchSame));  \r\n    temp=0;  \r\n    for (int i=1;i<=n;i++)  \r\n    {  \r\n        temp=(n+en[i]-i)%n;   \r\n        searchSame[temp]++;  \r\n    }  \r\n    for (int i=0;i<=n;i++)  \r\n        if(eqmax<searchSame[i]) eqmax=searchSame[i];  \r\n    memset(searchSame,0,sizeof(searchSame));  \r\n    for (int i=1;i<=n;i++)  \r\n    {  \r\n        temp=(n+en[n-i+1]-i)%n;   \r\n        searchSame[temp]++;  \r\n    }  \r\n    for (int i=0;i<=n;i++)  \r\n        if(eqmax<searchSame[i]) eqmax=searchSame[i];  \r\n    return n-eqmax;  \r\n}  \r\nint main()  \r\n{    \r\n    int N,n;  \r\n    scanf(\"%d\",&N);  \r\n    while(N--)  \r\n    {  \r\n        memset(need,0,sizeof(need));  \r\n        memset(en,0,sizeof(en));  \r\n        res=0;  \r\n        scanf(\"%d\",&n);  \r\n        for (int i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&need[i][1],&need[i][2]);  \r\n        }  \r\n        judge(n);  \r\n        if(res!=-1)  \r\n            printf(\"%d\\n\",calculation(n));  \r\n        else printf(\"-1\\n\");  \r\n    }  \r\n}"
},
{
"pid":60,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nstruct \r\n{\r\n    char name[22];\r\n    int qimo;\r\n    int banyi;\r\n    char bangan;\r\n    char xibu;\r\n    int lunwen;\r\n    int jiangjin;\r\n}data[110];\r\nint main()\r\n{\r\n    int n,x;\r\n    int i,tsum,t,k;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n\r\n        scanf(\"%d\",&x);\r\n        for(i=0;i<x;i++)\r\n            data[i].jiangjin=0;\r\n        for(i=0;i<x;i++)\r\n            scanf(\"%s %d%d %c %c %d\",data[i].name,&data[i].qimo,&data[i].banyi,&data[i].bangan,&data[i].xibu,&data[i].lunwen);\r\n        for(i=0;i<x;i++)\r\n        {\r\n            if(data[i].qimo>80&&data[i].lunwen>=1)\r\n                data[i].jiangjin+=8000;\r\n            if(data[i].qimo>85&&data[i].banyi>80)\r\n                data[i].jiangjin+=4000;\r\n            if(data[i].qimo>90)\r\n                data[i].jiangjin+=2000;\r\n            if(data[i].qimo>85&&data[i].xibu=='Y')\r\n                data[i].jiangjin+=1000;\r\n            if(data[i].banyi>80&&data[i].bangan=='Y')\r\n                data[i].jiangjin+=850;\r\n        }\r\n        t=-1;\r\n        tsum=0;\r\n        for(i=0;i<x;i++)\r\n        {\r\n            tsum+=data[i].jiangjin;\r\n            if(t<data[i].jiangjin)\r\n            {\r\n                t=data[i].jiangjin;\r\n                k=i;\r\n            }\r\n        }\r\n        printf(\"%s\\n%d\\n%d\\n\",data[k].name,data[k].jiangjin,tsum);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":61,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n\r\nint a[201][101][101];\r\nint map[101][101];\r\n\r\nint max(int n1,int n2,int n3,int n4)\r\n{\r\n   int s,d;\r\n   s = n1>n2?n1:n2;\r\n   d = n3>n4?n3:n4;\r\n   s = s>d?s:d;\r\n   return s;\r\n}\r\n\r\nint slove(int m,int n)\r\n{\r\n  int x1,y1,x2,y2,k;\r\n  for(k=2;k<=m+n;++k)\r\n   for(x1=1;x1<=m;++x1)\r\n    for(x2=1;x2<=m;++x2)\r\n     {\r\n       y1=k-x1;\r\n       y2=k-x2;\r\n       if(y1<0 || y2<0 || y1>n || y2>n)continue;\r\n       if(y1==y2)continue;\r\n       a[k][x1][x2]=max(a[k-1][x1][x2],a[k-1][x1-1][x2],\r\n                        a[k-1][x1][x2-1],a[k-1][x1-1][x2-1])\r\n                        +map[x1][y1]+map[x2][y2];\r\n     }\r\n   return a[m+n-1][m][m-1];\r\n}\r\n\r\nint main()\r\n{\r\n  int t,m,n,i,j;\r\n  scanf(\"%d\",&t);\r\n  while(t--)\r\n  {\r\n    memset(a,0,sizeof(a));\r\n    scanf(\"%d%d\",&m,&n);\r\n    for(i=1;i<=m;++i)\r\n     for(j=1;j<=n;++j)\r\n      scanf(\"%d\",&map[i][j]);\r\n    printf(\"%d\\n\",slove(m,n));\r\n  }\r\n  return 0;\r\n}"
},
{
"pid":62,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint a[27];\r\nbool is_prim(int x)\r\n{\r\n    int i;\r\n    for(i=2;i*i<=x;i++)\r\n        if(!(x%i))\r\n            return false;\r\n    return true;\r\n}\r\nint main()\r\n{\r\n    int i,j,T;int len,max,min;\r\n    char str[100];\r\n    scanf(\"%d%*c\",&T);\r\n    while(T--)\r\n    {\r\n        max=0;min=100;\r\n        memset(a,0,sizeof(a));\r\n        scanf(\"%s\",str);\r\n        len=strlen(str);\r\n        for(i=0;i<len;i++)\r\n               ++a[str[i]-'a'+1];\r\n        for(i=1;i<=26;i++)\r\n            if(a[i])\r\n            {  \r\n                if(max<a[i])\r\n                    max=a[i];\r\n                if(min>a[i])\r\n                    min=a[i];\r\n            }\r\n        if(is_prim(max-min)&&(max-min)&&(max-min)!=1)\r\n            printf(\"Lucky Word\\n%d\\n\",max-min);\r\n        else\r\n            printf(\"No Answer\\n%d\\n\",0);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":63,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int d,i,k;\r\n    while(~scanf(\"%d%d\",&d,&i)&&(d||i))\r\n    {   \r\n        k=1;\r\n        while(--d)\r\n        {\r\n            if(i&1)\r\n            {k*=2;  i=(i+1)\/2;}\r\n            else\r\n            {k=2*k+1;  i\/=2;}\r\n        }\r\n        printf(\"%d\\n\",k);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":64,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n   int n,a,b,p,q;  \r\n   cin>>n;  \r\n   while(n--)  \r\n   {  \r\n      cin>>a>>b;  \r\n      q=(b-2*a)\/2;  \r\n      p=a-q;  \r\n      if(p<0 ||q<0 || b%2)   \r\n          cout<<\"No answer\"<<endl;  \r\n      else   \r\n          cout<<p<<\" \"<<q<<endl;  \r\n   }  \r\n}"
},
{
"pid":65,
"code":"\n#include<stdio.h>  \r\n\r\nint main () {  \r\n    int jiecheng ( int n ) ; \r\n    int n ;  \r\n    jiecheng ( n ) ;  \r\n    return 0 ;  \r\n}  \r\n\r\nint jiecheng ( int n ) {  \r\n    int a ;  \r\n    int jianji ( int p ) ;  \r\n    scanf ( \"%d\" , & a ) ;  \r\n    while ( a -- ) {  \r\n        if ( a > 20 || a < 0 ) return -1 ;  \r\n        scanf ( \"%d\" , & n ) ;  \r\n        if ( n > 20 || n <= 0 ) return -1 ;  \r\n        int sum = 0 , num = 1 ;  \r\n        for ( int i = 1 ; i <= n ; i ++ ) {  \r\n            if ( jianji ( i ) == 1 ) {  \r\n                num *= i ;  \r\n            }\r\n            sum += num ;  \r\n        }  \r\n        printf ( \"%d\\n\" , sum ) ;  \r\n    }  \r\n    return 0 ;  \r\n}  \r\n\r\nint jianji ( int p ) {  \r\n    if ( p % 2 == 0 )  return -1 ;  \r\n    else return 1 ;  \r\n}"
},
{
"pid":66,
"code":"\n#include<stdio.h>  \r\nint main(){  \r\n    int t,n,i,j;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--){  \r\n        scanf(\"%d\",&n);  \r\n        for(i=n*(n+1);i>=2*n;i--)  \r\n            for(j=n+1;j<=2*n;j++){  \r\n                if((double)(i*j)\/(i+j)==n)  \r\n                    printf(\"1\/%d=1\/%d+1\/%d\\n\",n,i,j);  \r\n            }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":67,
"code":"\n#include<cstdio>  \r\n#include<cmath>  \r\nstruct Point  \r\n{  \r\n    double x,y;  \r\n};  \r\nstruct Point p[3];  \r\nint main()  \r\n{  \r\n    int i;  \r\n    while(1)  \r\n    {  \r\n        for(i=0;i<3;i++)  \r\n            scanf(\"%lf%lf\",&p[i].x,&p[i].y);  \r\n        if (!(p[0].x||p[0].y) &&!(p[1].x||p[1].y)&&!(p[2].x||p[2].y))  \r\n            break;  \r\n        double x = p[0].x-p[1].x;    \r\n        double y = p[0].y - p[1].y;  \r\n        double x2 = p[2].x - p[1].x;     \r\n        double y2 = p[2].y - p[1].y;  \r\n\r\n        printf(\"%.1f\\n\",fabs((x*y2 - y*x2)\/2)); \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":68,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int x1,x2,x3,y1,y2,y3;  \r\n    while(cin>>x1>>y1>>x2>>y2>>x3>>y3&&(x1||x2||x3||y1||y2||y3))  \r\n    {  \r\n        int i=(x2-x1)*(y3-y1)-(x3-x1)*(y2-y1);  \r\n        if(i<0) cout<<\"1\"<<endl;  \r\n        else cout<<\"0\"<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":69,
"code":"\n#include<iostream>  \r\n#include<math.h>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int t,n;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        cin>>n;  \r\n        int ans = (int)(log10(4.0*acos(0.0)* n)\/2+1.0*n*log10(1.0*n\/exp(1.0)))+1; \r\n        cout<<ans<<endl;  \r\n    }  \r\n    return 0;  \r\n }"
},
{
"pid":70,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int t;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        int n,m;  \r\n        cin>>n>>m;  \r\n        int cnt=0;  \r\n        if(n%m)  \r\n            n-=n%m;  \r\n        for(int i=n;i>=2;)  \r\n        {  \r\n            int x=i;  \r\n            while(x%m==0)  \r\n            {  \r\n                cnt++;  \r\n                x=x\/m;  \r\n            }  \r\n            i-=m;  \r\n        }  \r\n        cout<<cnt<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":71,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n int n,w,m,i,a[300],t;  \r\n scanf(\"%d\",&n);  \r\n while(n--)  \r\n {  \r\n  scanf(\"%d%d\",&w,&m);  \r\n     int k=0,j=0;  \r\n  for(i=0;i<m;i++)  \r\n     scanf(\"%d\",&a[i]);  \r\n  for(i=0;i<m;i++)  \r\n   for(j=i+1;j<m;j++)  \r\n    if(a[i]>a[j])  \r\n    {  \r\n     t=a[i];  \r\n     a[i]=a[j];  \r\n     a[j]=t;  \r\n    }    \r\n  for(i=0,j=m-1;i<=j;)  \r\n  {  \r\n     if(a[i]+a[j]<=w)  \r\n     {  \r\n      i++;  \r\n      j--;  \r\n      k++;  \r\n     }      \r\n     else if(i==j)  \r\n      k++;    \r\n     else   \r\n     {  \r\n       j--;  \r\n       k++;  \r\n     }    \r\n  }  \r\n    printf(\"%d\\n\",k);  \r\n }  \r\n return 0;  \r\n}"
},
{
"pid":72,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    double a,sum;  \r\n    int i = 12;  \r\n\r\n    sum = 0;  \r\n\r\n    while(i--)  \r\n    {  \r\n        scanf(\"%lf\",&a);  \r\n        sum = sum + a;  \r\n    }  \r\n    printf(\"%.2lf\\n\",sum\/12.0);  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":73,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#define maxn 1000+10\r\nchar stra[maxn],strb[maxn];\r\nint main()\r\n{\r\n    int i,n,lena,lenb,ok;\r\n    while(1)\r\n    {\r\n        scanf(\"%s\",stra);\r\n        scanf(\"%s\",strb);\r\n        lena=strlen(stra);\r\n        lenb=strlen(strb);\r\n        if(lena==1&&lenb==1&&stra[0]=='0'&&strb[0]=='0')\r\n            break;\r\n        if(stra[0]=='-'&&strb[0]!='-')\r\n            printf(\"a<b\\n\");\r\n        if(stra[0]!='-'&&strb[0]=='-')\r\n            printf(\"a>b\\n\");\r\n        if(stra[0]!='-'&&strb[0]!='-')\r\n        {\r\n            if(lena<lenb)\r\n            {printf(\"a<b\\n\");}\r\n            else if(lena>lenb)\r\n            {printf(\"a>b\\n\");}\r\n            else\r\n            {\r\n                ok=0;\r\n                for(i=0;i<lena;i++)\r\n                {\r\n                    if(stra[i]>strb[i])\r\n                    {printf(\"a>b\\n\");break;}\r\n\r\n                    else if(stra[i]<strb[i])\r\n                    {printf(\"a<b\\n\");break;}\r\n                    ok++;\r\n\r\n                }\r\n                if(ok==lena)\r\n                    printf(\"a==b\\n\");\r\n            }\r\n        }\r\n        if(stra[0]=='-'&&strb[0]=='-')\r\n        {\r\n            if(lena<lenb)\r\n            printf(\"a>b\\n\"); \r\n            else if(lena>lenb)\r\n            printf(\"a<b\\n\"); \r\n            else\r\n            {\r\n                ok=1;\r\n                for(i=1;i<lena;i++)\r\n                {\r\n\r\n                    if(stra[i]>strb[i])\r\n                    {printf(\"a<b\\n\");break;}\r\n\r\n                    else if(stra[i]<strb[i])\r\n                    {printf(\"a>b\\n\");break;}\r\n\r\n                    ok++;\r\n                }\r\n                if(ok==lena)\r\n                        printf(\"a==b\\n\");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":74,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int cnt,a,b,flag;  \r\n    while(scanf(\"%d%d\",&a,&b)!=EOF &&(a||b))  \r\n    {  \r\n        flag = cnt = 0;\r\n        if ((a%10)+(b%10) >= 10) \r\n            cnt++,flag=1;  \r\n        if ((a\/10)%10 + (b\/10)%10 +flag >= 10)   \r\n            cnt++;  \r\n        else flag=0;  \r\n\r\n        if ((a\/100)%10 + (b\/100)%10 +flag >= 10)\r\n            cnt++;  \r\n        printf(\"%d\\n\",cnt);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":75,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nbool leapyear(int a)  \r\n{  \r\n    if( (a%4==0 && a%100 )|| a%400 == 0    ) return true;  \r\n    else   \r\n        return false;  \r\n}  \r\nint main()  \r\n{  \r\n    int a[3]={0};  \r\n    int n;  \r\n    cin>>n;  \r\n    int day[12]={31,0,31,30,31,30,31,31,30,31,30,31};   \r\n    while(n--)  \r\n    {  \r\n        int dayNum = 0;  \r\n        for(int i=0;i<3;i++)  \r\n        {  \r\n            cin>>a[i];  \r\n        }  \r\n        if(leapyear(a[0]))   \r\n            day[1]=29; \r\n        else   \r\n            day[1]=28;   \r\n        for(int i=0; i+1 <a[1];i++)  \r\n        {  \r\n            dayNum += day[i];  \r\n        }  \r\n        cout<<dayNum+a[2]<<endl;   \r\n    }  \r\n}"
},
{
"pid":76,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\nusing namespace std;\r\nint a[41]={0,0,1,2};\r\nint main()\r\n{\r\n    int T;\r\n    for(int i=4;i<41;i++) a[i]=a[i-1]+a[i-2];\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        printf(\"%d\\n\",a[n]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":77,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint dp[10008];  \r\nint main()  \r\n{  \r\n    int i,j,n,k;  \r\n    cin>>n>>k;  \r\n    for(i=2;i<=k;++i)  \r\n        for(j=2;j<=n;++j)  \r\n            if(j%i==0)  \r\n            {  \r\n                if(dp[j]==0)  \r\n                    dp[j]=1;  \r\n                else  \r\n                    dp[j]=0;  \r\n            }  \r\n    for(i=1;i<=n;++i)  \r\n        if(!dp[i])  \r\n            cout<<i<<\" \";  \r\n    cout<<endl;  \r\n    return 0;  \r\n}"
},
{
"pid":78,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nconst int INF=110;  \r\nstruct Convex  \r\n{  \r\n    int x,y;  \r\n}Hull[INF],Res[INF];  \r\nbool cmp(Convex a,Convex b)  \r\n{  \r\n    return (a.x<b.x)||(a.x==b.x && a.y<b.y);  \r\n}  \r\nbool Judge(Convex a,Convex b,Convex c)  \r\n{  \r\n    return (c.x-a.x)*(c.y-b.y)>(c.y-a.y)*(c.x-b.x);  \r\n}  \r\nint ConvexHull(int len)  \r\n{  \r\n    sort(Hull,Hull+len,cmp);  \r\n    int m(0);  \r\n    for(int i=0;i<len;i++)  \r\n    {  \r\n        while(m>1 && Judge(Res[m-2],Res[m-1],Hull[i]))  \r\n            m--;  \r\n        Res[m++]=Hull[i];  \r\n    }  \r\n    int temp=m;  \r\n    for(int i=len-2;i>=0;i--)  \r\n    {  \r\n        while(m>temp && Judge(Res[m-2],Res[m-1],Hull[i]))  \r\n            m--;  \r\n        Res[m++]=Hull[i];  \r\n    }  \r\n    if(len>1) m--;  \r\n    return m;  \r\n}  \r\nvoid Print(int len)  \r\n{  \r\n    sort(Res,Res+len,cmp);  \r\n    for(int i=0;i<len;i++)  \r\n        printf(\"%d %d\\n\",Res[i].x,Res[i].y);  \r\n}  \r\nint main()  \r\n{  \r\n    int ncase;  \r\n    scanf(\"%d\",&ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        int m;  \r\n        scanf(\"%d\",&m);  \r\n        for(int i=0;i<m;i++)  \r\n            scanf(\"%d%d\",&Hull[i].x,&Hull[i].y);  \r\n        int temp=ConvexHull(m);  \r\n        Print(temp);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":79,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int n,m,i,j,max;\r\n    int a[20],dp[20];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        for(i=0;i<=m-1;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            dp[i]=1;  \r\n        }\r\n        for(i=m-2;i>=0;i--)\r\n        {\r\n            for(j=i+1;j<=m-1;j++)\r\n            {\r\n                if((a[j]<a[i])&&(dp[i]<dp[j]+1))  \r\n                {\r\n                    dp[i]=dp[j]+1;  \r\n                }\r\n            }\r\n        }\r\n        max=dp[0];\r\n        for(i=0;i<=m-1;i++)\r\n        {\r\n          if(max<dp[i])\r\n          max=dp[i];\r\n        }\r\n        printf(\"%d\\n\",max);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":80,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#define NN 9\r\n#define L 6561\r\nint ans[L]={1,1,1,1,1,2,1,2,1,1,1,2,1,1,3,2,3,3,1,2,1,2,3,3,1,3,1,1,1,2,1,1,2,2,3,3,1,1,3,1,1,3,3,4,6,2,3,3,3,4,5,3,6,4,1,2,1,2,3,3,1,2,1,2,3,3,3,4,6,3,5,4,1,3,1,3,6,4,1,3,1,1,1,2,1,1,3,2,3,3,1,1,3,1,1,4,3,3,6,2,3,3,3,4,6,3,6,4,1,1,3,1,1,3,3,4,6,1,1,3,1,1,4,3,4,6,3,4,6,4,5,9,6,10,10,2,3,3,3,4,6,3,5,4,3,4,6,4,5,10,6,8,10,3,6,4,6,10,10,4,9,5,1,2,1,2,3,3,1,3,1,2,3,3,3,4,6,3,6,4,1,3,1,3,6,3,1,4,1,2,3,3,3,4,5,3,6,4,3,4,6,4,5,9,6,10,10,3,6,4,6,10,8,4,10,5,1,3,1,3,6,4,1,3,1,3,6,4,6,10,10,4,9,5,1,3,1,3,6,4,1,4,1,1,1,2,1,1,3,2,3,3,1,1,3,1,1,4,3,4,6,2,3,3,2,3,5,3,6,4,1,1,3,1,1,3,3,4,6,1,1,4,1,1,4,4,5,10,3,4,6,3,4,6,6,10,10,2,3,3,3,4,6,3,5,4,3,4,6,4,5,10,6,9,10,3,6,4,5,9,9,4,9,5,1,1,3,1,1,4,3,3,6,1,1,4,1,1,5,4,4,10,3,3,6,3,4,9,6,6,10,1,1,3,1,1,4,3,4,6,1,1,4,1,1,5,4,5,10,3,4,6,4,5,9,6,10,10,3,4,6,4,5,10,6,8,10,4,5,10,5,6,15,10,13,20,6,9,10,9,14,19,10,15,15,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,5,9,8,4,10,5,3,4,6,4,5,9,6,10,10,4,5,10,5,6,14,10,15,20,6,10,10,9,14,14,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,19,15,4,9,5,8,15,13,5,14,6,1,2,1,2,3,3,1,3,1,2,3,3,3,4,6,2,5,3,1,3,1,3,6,4,1,4,1,2,3,3,3,4,5,3,6,4,3,4,6,4,5,9,5,9,9,3,6,4,6,10,9,4,10,5,1,3,1,3,6,4,1,3,1,3,6,4,6,10,10,3,6,4,1,4,1,4,10,5,1,4,1,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,5,8,9,3,6,4,6,10,10,4,10,5,3,4,6,4,5,9,6,10,10,4,5,9,5,6,14,8,13,15,6,10,10,10,15,19,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,9,14,14,4,10,5,10,20,15,5,14,6,1,3,1,3,6,3,1,4,1,3,6,3,6,10,6,3,9,4,1,4,1,4,10,4,1,5,1,3,6,4,6,10,8,4,10,5,6,10,9,10,15,15,9,19,14,4,10,5,10,20,13,5,15,6,1,3,1,3,6,4,1,4,1,3,6,4,6,10,10,4,9,5,1,4,1,4,10,5,1,5,1,1,1,2,1,1,3,2,3,3,1,1,3,1,1,4,3,4,6,2,3,3,3,4,6,3,6,4,1,1,3,1,1,3,3,4,6,1,1,4,1,1,4,4,5,10,3,4,6,4,5,9,6,10,10,2,3,3,3,4,6,3,5,4,3,4,6,4,5,10,6,9,10,3,6,4,6,10,10,4,9,5,1,1,3,1,1,3,3,4,6,1,1,3,1,1,4,3,4,6,3,4,6,4,5,9,6,10,10,1,1,4,1,1,4,4,5,10,1,1,4,1,1,4,4,5,10,4,5,10,5,6,13,10,15,20,3,3,6,3,4,6,6,8,10,3,4,6,4,5,10,6,9,10,6,9,10,9,14,16,10,17,15,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,6,10,9,4,10,5,3,4,6,4,5,9,6,10,10,4,5,10,5,6,13,10,15,20,6,10,10,10,15,17,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,18,15,4,9,5,9,16,14,5,13,6,1,1,3,1,1,4,3,4,6,1,1,4,1,1,5,4,5,10,3,4,6,3,4,9,6,10,10,1,1,4,1,1,4,4,5,10,1,1,5,1,1,5,5,6,15,4,5,10,4,5,10,10,15,20,3,4,6,4,5,10,6,9,10,4,5,10,5,6,15,10,14,20,6,10,10,9,14,19,10,19,15,1,1,3,1,1,4,3,4,6,1,1,4,1,1,5,4,5,10,3,4,6,4,5,9,6,10,10,1,1,4,1,1,4,4,5,10,1,1,5,1,1,5,5,6,15,4,5,10,5,6,14,10,15,20,3,4,6,4,5,10,6,9,10,4,5,10,5,6,15,10,14,20,6,10,10,9,14,19,10,19,15,3,4,6,4,5,10,6,10,10,4,5,10,5,6,15,10,15,20,6,10,10,9,14,18,10,20,15,4,5,10,5,6,13,10,15,20,5,6,15,6,7,19,15,21,35,10,15,20,14,20,27,20,35,35,6,10,10,10,15,20,10,18,15,10,15,20,15,21,35,20,33,35,10,19,15,18,30,33,15,33,21,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,5,9,9,3,6,4,6,10,10,4,10,5,3,4,6,4,5,9,6,10,10,4,5,10,5,6,14,9,14,19,6,10,10,10,15,19,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,9,16,14,4,10,5,10,20,15,5,14,6,3,4,6,4,5,9,6,10,10,4,5,9,5,6,14,8,13,15,6,10,10,10,15,19,10,20,15,4,5,10,5,6,13,10,15,20,5,6,14,6,7,18,13,19,29,10,15,20,15,21,32,20,35,35,6,9,10,9,14,16,10,17,15,9,14,16,14,20,30,15,25,24,10,19,15,19,34,31,15,31,21,3,6,4,6,10,9,4,10,5,6,10,9,10,15,16,9,19,14,4,10,5,10,20,14,5,15,6,6,10,10,10,15,17,10,20,15,10,15,19,15,21,29,19,34,34,10,20,15,20,35,32,15,35,21,4,9,5,9,16,14,5,13,6,9,16,14,16,25,30,14,28,20,5,14,6,14,30,20,6,19,7,1,2,1,2,3,3,1,3,1,2,3,3,3,4,6,3,6,4,1,3,1,3,6,4,1,4,1,2,3,3,3,4,5,3,6,4,3,4,6,4,5,9,6,10,10,3,6,4,6,10,9,4,10,5,1,3,1,3,6,4,1,3,1,3,6,4,6,10,10,4,9,5,1,4,1,4,10,5,1,4,1,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,9,10,3,6,4,6,10,10,4,10,5,3,4,6,4,5,9,6,10,10,4,5,9,5,6,13,9,14,16,6,10,10,10,15,18,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,17,15,4,10,5,10,20,15,5,13,6,1,3,1,3,6,4,1,3,1,3,6,4,6,10,10,4,9,5,1,3,1,3,6,4,1,4,1,3,6,3,6,10,8,3,6,4,6,10,9,10,15,17,9,16,14,3,6,4,6,10,9,4,10,5,1,4,1,4,10,5,1,4,1,4,10,5,10,20,15,5,13,6,1,4,1,4,10,5,1,4,1,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,5,9,9,4,10,5,3,4,6,4,5,9,6,10,10,4,5,10,5,6,14,10,15,20,6,10,10,9,14,16,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,19,15,4,10,5,9,19,14,5,14,6,3,4,6,4,5,10,6,9,10,4,5,10,5,6,15,10,14,20,6,9,10,9,14,19,10,16,15,4,5,9,5,6,13,9,14,16,5,6,14,6,7,19,14,20,30,9,14,16,14,20,28,16,30,25,6,10,10,10,15,20,10,17,15,10,15,20,15,21,35,20,32,35,10,19,15,19,34,34,15,29,21,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,19,15,4,9,5,8,15,13,5,14,6,6,10,9,10,15,17,9,16,14,10,15,19,15,21,31,19,31,34,9,16,14,15,24,25,14,30,20,4,10,5,10,20,15,5,13,6,10,20,15,20,35,35,15,32,21,5,14,6,13,29,19,6,18,7,1,3,1,3,6,4,1,4,1,3,6,4,6,10,10,3,9,4,1,4,1,4,10,5,1,5,1,3,6,4,6,10,9,4,10,5,6,10,10,10,15,19,9,19,14,4,10,5,10,20,14,5,15,6,1,4,1,4,10,5,1,4,1,4,10,5,10,20,15,4,10,5,1,5,1,5,15,6,1,5,1,3,6,4,6,10,10,4,10,5,6,10,10,10,15,20,9,18,14,4,10,5,10,20,15,5,15,6,6,10,10,10,15,18,10,20,15,10,15,19,15,21,33,18,33,30,10,20,15,20,35,33,15,35,21,4,10,5,10,20,15,5,13,6,10,20,15,20,35,35,14,27,20,5,15,6,15,35,21,6,19,7,1,3,1,3,6,4,1,4,1,3,6,4,6,10,10,4,9,5,1,4,1,4,10,5,1,5,1,3,6,4,6,10,9,4,10,5,6,10,10,10,15,19,9,19,14,4,10,5,10,20,14,5,15,6,1,4,1,4,10,5,1,4,1,4,10,5,10,20,15,5,14,6,1,5,1,5,15,6,1,5,1,1,1,2,1,1,3,2,3,3,1,1,3,1,1,4,3,4,6,2,3,3,3,4,6,3,6,4,1,1,3,1,1,3,3,4,6,1,1,4,1,1,4,4,5,10,3,4,6,4,5,9,6,10,10,2,3,3,3,4,6,3,5,4,3,4,6,4,5,10,6,9,10,3,6,4,6,10,10,4,9,5,1,1,3,1,1,3,3,4,6,1,1,3,1,1,4,3,4,6,3,4,6,4,5,9,6,10,10,1,1,4,1,1,4,4,5,10,1,1,4,1,1,4,4,5,10,4,5,10,5,6,13,10,15,20,3,3,6,3,4,6,6,8,10,3,4,6,4,5,10,6,9,10,6,9,10,9,14,16,10,17,15,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,6,10,9,4,10,5,3,4,6,4,5,9,6,10,10,4,5,10,5,6,13,10,15,20,6,10,10,10,15,17,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,18,15,4,9,5,9,16,14,5,13,6,1,1,2,1,1,3,2,3,3,1,1,3,1,1,4,3,4,6,2,3,3,3,4,6,3,6,4,1,1,3,1,1,3,3,4,6,1,1,4,1,1,4,4,5,10,3,4,6,4,5,9,6,10,10,2,3,3,3,4,6,3,5,4,3,4,6,4,5,10,6,9,10,3,6,4,6,10,10,4,9,5,1,1,3,1,1,4,3,4,6,1,1,4,1,1,5,4,4,10,3,4,6,4,5,9,6,10,10,1,1,4,1,1,4,4,5,10,1,1,4,1,1,5,4,5,10,4,5,10,5,6,13,10,15,20,3,4,6,4,5,10,6,8,10,4,5,10,5,6,15,10,13,20,6,9,10,9,14,19,10,18,15,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,6,10,9,4,10,5,3,4,6,4,5,9,6,10,10,4,5,10,5,6,14,10,15,20,6,10,10,10,15,17,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,19,15,4,9,5,9,16,14,5,14,6,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,5,9,9,3,6,4,6,10,10,4,10,5,3,4,6,4,5,8,6,10,10,4,5,10,5,6,13,9,14,19,6,10,10,10,15,18,10,20,15,3,6,4,6,10,10,4,8,5,6,10,10,10,15,20,9,15,14,4,10,5,10,20,15,5,13,6,3,4,6,4,5,9,6,10,10,4,5,9,5,6,14,8,12,15,6,10,10,10,15,19,10,20,15,4,5,10,5,6,13,10,15,20,5,6,13,6,7,18,12,18,25,10,15,20,15,21,32,20,35,35,6,9,10,9,14,16,10,17,15,9,14,16,14,20,30,15,23,24,10,19,15,19,34,31,15,31,21,3,6,4,6,10,9,4,10,5,6,10,9,10,15,16,9,19,14,4,10,5,10,20,13,5,15,6,6,10,10,10,15,17,10,20,15,10,15,19,15,21,28,19,34,34,10,20,15,20,35,30,15,35,21,4,9,5,9,16,14,5,13,6,9,16,14,16,25,30,14,27,20,5,13,6,13,26,19,6,18,7,1,1,3,1,1,4,3,4,6,1,1,4,1,1,5,4,5,10,3,4,6,4,5,10,6,10,10,1,1,4,1,1,4,4,5,10,1,1,5,1,1,5,5,6,15,4,5,10,5,6,14,10,15,20,3,4,6,4,5,10,6,9,10,4,5,10,5,6,15,10,14,20,6,10,10,10,15,20,10,19,15,1,1,4,1,1,4,4,5,10,1,1,4,1,1,5,4,5,10,4,5,10,5,6,14,10,15,20,1,1,5,1,1,5,5,6,15,1,1,5,1,1,5,5,6,15,5,6,15,6,7,19,15,21,35,4,4,10,4,5,10,10,13,20,4,5,10,5,6,15,10,14,20,10,14,20,14,20,30,20,32,35,3,4,6,4,5,10,6,10,10,4,5,10,5,6,15,10,15,20,6,10,10,10,15,19,10,20,15,4,5,10,5,6,14,10,15,20,5,6,15,6,7,19,15,21,35,10,15,20,15,21,31,20,35,35,6,10,10,10,15,20,10,19,15,10,15,20,15,21,35,20,33,35,10,19,15,19,31,34,15,32,21,1,1,3,1,1,4,3,4,6,1,1,4,1,1,5,4,5,10,3,4,6,4,5,10,6,10,10,1,1,4,1,1,4,4,5,10,1,1,5,1,1,5,5,6,15,4,5,10,5,6,14,10,15,20,3,4,6,4,5,10,6,9,10,4,5,10,5,6,15,10,14,20,6,10,10,10,15,20,10,19,15,1,1,4,1,1,4,4,5,10,1,1,4,1,1,5,4,5,10,4,5,10,5,6,14,10,15,20,1,1,5,1,1,5,5,6,15,1,1,5,1,1,5,5,6,15,5,6,15,6,7,19,15,21,35,4,4,10,4,5,10,10,13,20,4,5,10,5,6,15,10,14,20,10,14,20,14,20,30,20,32,35,3,4,6,4,5,10,6,10,10,4,5,10,5,6,15,10,15,20,6,10,10,10,15,19,10,20,15,4,5,10,5,6,14,10,15,20,5,6,15,6,7,19,15,21,35,10,15,20,15,21,31,20,35,35,6,10,10,10,15,20,10,19,15,10,15,20,15,21,35,20,33,35,10,19,15,19,31,34,15,33,21,3,4,6,4,5,10,6,10,10,4,5,10,5,6,15,9,14,19,6,10,10,10,15,20,10,20,15,4,5,10,5,6,13,10,15,20,5,6,15,6,7,19,14,20,34,10,15,20,15,21,33,20,35,35,6,10,10,10,15,20,10,18,15,10,15,20,15,21,35,19,30,34,10,20,15,20,35,35,15,33,21,4,5,10,5,6,13,10,15,20,5,6,13,6,7,19,12,18,25,10,15,20,15,21,33,20,35,35,5,6,15,6,7,18,15,21,35,6,7,19,7,8,23,18,25,44,15,21,35,21,28,51,35,56,70,10,13,20,13,19,26,20,30,35,13,19,26,19,26,45,25,39,44,20,33,35,33,54,61,35,63,56,6,10,10,10,15,19,10,20,15,10,15,19,15,21,31,19,34,34,10,20,15,20,35,33,15,35,21,10,15,20,15,21,31,20,35,35,15,21,34,21,28,48,34,55,69,20,35,35,35,56,63,35,70,56,10,19,15,19,31,34,15,32,21,19,31,34,31,46,65,34,61,55,15,33,21,33,61,54,21,51,28,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,6,10,10,4,10,5,2,3,5,3,4,6,5,9,9,3,4,9,4,5,10,9,14,19,5,9,9,9,14,16,9,19,14,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,19,15,4,10,5,10,20,15,5,14,6,3,3,6,3,4,6,6,9,10,3,4,6,4,5,10,6,10,10,6,9,10,9,14,16,10,19,15,3,4,9,4,5,9,9,14,19,4,5,9,5,6,14,9,14,19,9,14,19,14,20,28,19,34,34,6,6,10,6,10,10,10,15,15,6,10,10,10,15,20,10,19,15,10,16,15,16,30,25,15,29,21,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,19,15,4,9,5,9,16,14,5,14,6,5,9,8,9,14,14,8,15,13,9,14,18,14,20,27,18,30,33,8,15,13,15,24,25,13,29,19,4,10,5,10,20,15,5,14,6,10,20,15,20,35,35,15,33,21,5,14,6,14,30,20,6,18,7,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,6,10,10,4,10,5,3,4,6,4,5,9,6,10,10,4,5,10,5,6,14,10,15,20,6,10,10,9,14,16,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,19,15,4,10,5,10,20,15,5,14,6,3,4,6,4,5,10,6,9,10,4,5,10,5,6,15,10,14,20,6,9,10,9,14,19,10,19,15,4,5,9,5,6,13,9,14,19,5,6,14,6,7,19,14,20,30,9,14,19,14,20,28,19,34,34,6,10,10,10,15,20,10,18,15,10,15,20,15,21,35,20,32,35,10,19,15,19,34,34,15,29,21,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,19,15,4,9,5,9,16,14,5,14,6,6,10,9,10,15,17,9,16,14,10,15,19,15,21,31,19,31,34,9,16,14,15,24,25,14,30,20,4,10,5,10,20,15,5,14,6,10,20,15,20,35,35,15,33,21,5,14,6,14,30,20,6,18,7,3,6,4,6,10,10,4,10,5,6,10,10,10,15,20,9,19,14,4,10,5,10,20,15,5,15,6,5,9,9,9,14,15,9,19,14,9,14,19,14,20,29,18,33,33,9,19,14,19,34,30,14,34,20,4,10,5,10,20,15,5,13,6,10,20,15,20,35,35,14,29,20,5,15,6,15,35,21,6,19,7,6,9,10,9,14,16,10,19,15,9,14,16,14,20,30,15,28,24,10,19,15,19,34,31,15,34,21,9,14,19,14,20,27,19,34,34,14,20,28,20,27,47,27,47,49,19,34,34,34,55,61,34,69,55,10,16,15,16,30,25,15,28,21,16,30,25,30,50,55,24,46,35,15,31,21,31,65,46,21,48,28,4,9,5,9,16,14,5,13,6,9,16,14,16,25,30,14,28,20,5,13,6,13,26,19,6,19,7,8,15,12,15,24,23,12,25,18,15,24,28,24,35,46,27,49,47,12,25,18,25,44,39,18,44,25,5,14,6,14,30,20,6,18,7,14,30,20,30,55,50,20,47,27,6,19,7,19,45,26,7,23,8,1,2,1,2,3,3,1,3,1,2,3,3,3,4,6,3,6,4,1,3,1,3,6,4,1,4,1,2,3,3,3,4,5,3,6,4,3,4,6,4,5,9,6,10,10,3,6,4,6,10,9,4,10,5,1,3,1,3,6,4,1,3,1,3,6,4,6,10,10,4,9,5,1,4,1,4,10,5,1,4,1,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,9,10,3,6,4,6,10,10,4,10,5,3,4,6,4,5,9,6,10,10,4,5,9,5,6,13,9,14,16,6,10,10,10,15,18,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,17,15,4,10,5,10,20,15,5,13,6,1,3,1,3,6,4,1,3,1,3,6,4,6,10,10,4,9,5,1,3,1,3,6,4,1,4,1,3,6,3,6,10,8,3,6,4,6,10,9,10,15,17,9,16,14,3,6,4,6,10,9,4,10,5,1,4,1,4,10,5,1,4,1,4,10,5,10,20,15,5,13,6,1,4,1,4,10,5,1,4,1,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,5,9,9,4,10,5,3,4,6,4,5,8,6,10,10,4,5,10,5,6,13,10,15,20,6,10,10,9,14,15,10,20,15,3,6,4,6,10,10,4,8,5,6,10,10,10,15,20,10,18,15,4,10,5,9,19,14,5,13,6,3,4,6,4,5,10,6,9,10,4,5,10,5,6,15,10,13,20,6,9,10,9,14,19,10,16,15,4,5,9,5,6,13,9,14,16,5,6,13,6,7,18,13,19,26,9,14,16,14,20,27,16,30,25,6,10,10,10,15,20,10,17,15,10,15,20,15,21,35,20,30,35,10,19,15,19,34,34,15,28,21,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,19,15,4,9,5,8,15,12,5,14,6,6,10,9,10,15,17,9,16,14,10,15,19,15,21,31,19,31,34,9,16,14,15,24,23,14,30,20,4,10,5,10,20,15,5,13,6,10,20,15,20,35,35,15,32,21,5,13,6,12,25,18,6,18,7,1,2,1,2,3,3,1,3,1,2,3,3,3,4,6,3,6,4,1,3,1,3,6,4,1,4,1,2,3,3,3,4,5,3,6,4,3,4,6,4,5,9,6,10,10,3,6,4,6,10,9,4,10,5,1,3,1,3,6,4,1,3,1,3,6,4,6,10,10,4,9,5,1,4,1,4,10,5,1,4,1,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,9,10,3,6,4,6,10,10,4,10,5,3,4,6,4,5,9,6,10,10,4,5,9,5,6,14,9,14,16,6,10,10,10,15,19,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,10,17,15,4,10,5,10,20,15,5,14,6,1,3,1,3,6,4,1,4,1,3,6,4,6,10,10,4,9,5,1,4,1,4,10,4,1,5,1,3,6,4,6,10,8,4,10,5,6,10,9,10,15,18,9,19,14,4,10,5,10,20,13,5,15,6,1,4,1,4,10,5,1,4,1,4,10,5,10,20,15,5,13,6,1,4,1,4,10,5,1,5,1,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,6,10,10,4,10,5,3,4,6,4,5,9,6,10,10,4,5,10,5,6,14,10,15,20,6,10,10,10,15,19,10,20,15,2,5,3,5,9,9,3,6,4,5,9,9,9,14,19,9,16,14,3,9,4,9,19,14,4,10,5,3,4,6,4,5,9,6,10,10,4,5,9,5,6,14,9,14,16,6,10,10,10,15,19,10,20,15,4,5,10,5,6,14,10,15,20,5,6,14,6,7,18,14,20,30,10,15,20,15,21,33,20,35,35,5,8,9,8,13,15,9,14,14,8,13,15,13,19,29,15,25,24,9,18,14,18,33,30,14,27,20,3,6,3,6,10,9,3,6,4,6,10,9,10,15,19,9,16,14,3,6,4,6,10,10,4,10,5,6,10,6,10,15,15,6,10,10,10,15,16,15,21,29,16,25,30,6,10,10,10,15,19,10,20,15,3,9,4,9,19,14,4,9,5,9,19,14,19,34,34,14,28,20,4,9,5,9,19,14,5,14,6,3,4,6,4,5,10,6,10,10,4,5,10,5,6,15,10,15,20,6,10,10,9,14,19,10,20,15,4,5,10,5,6,13,10,15,20,5,6,15,6,7,19,15,21,35,10,15,20,14,20,29,20,35,35,5,9,9,9,14,19,9,15,14,9,14,19,14,20,34,19,30,34,9,19,14,18,33,33,14,29,20,4,5,9,5,6,13,9,14,16,5,6,13,6,7,19,13,19,26,9,14,16,14,20,28,16,30,25,5,6,14,6,7,18,14,20,30,6,7,19,7,8,23,19,26,45,14,20,30,20,27,47,30,50,55,8,12,15,12,18,25,15,23,24,12,18,25,18,25,44,25,39,44,15,28,24,27,47,49,24,46,35,6,10,9,10,15,19,9,16,14,10,15,19,15,21,34,19,31,34,9,16,14,15,24,28,14,30,20,10,15,16,15,21,28,16,25,30,15,21,31,21,28,48,31,46,65,16,25,30,24,35,46,30,55,50,9,19,14,19,34,34,14,27,20,19,34,34,34,55,69,34,61,55,14,28,20,27,49,47,20,47,27,2,3,3,3,4,6,3,6,4,3,4,6,4,5,10,6,10,10,3,6,4,6,10,10,4,10,5,3,4,6,4,5,9,6,10,10,4,5,10,5,6,14,10,15,20,6,10,10,10,15,19,10,20,15,3,6,4,6,10,10,4,9,5,6,10,10,10,15,20,9,16,14,4,10,5,10,20,15,5,14,6,3,4,6,4,5,9,6,10,10,4,5,9,5,6,14,9,14,16,6,10,10,10,15,19,10,20,15,4,5,10,5,6,14,10,15,20,5,6,14,6,7,18,14,20,30,10,15,20,15,21,33,20,35,35,6,9,10,9,14,16,10,17,15,9,14,16,14,20,30,15,25,24,10,19,15,19,34,31,15,31,21,3,6,4,6,10,9,4,10,5,6,10,9,10,15,19,9,19,14,4,10,5,10,20,14,5,15,6,6,10,10,10,15,18,10,20,15,10,15,19,15,21,29,19,34,34,10,20,15,20,35,32,15,35,21,4,9,5,9,19,14,5,13,6,9,19,14,19,34,34,14,28,20,5,14,6,14,30,20,6,19,7,1,3,1,3,6,4,1,4,1,3,6,4,6,10,10,4,10,5,1,4,1,4,10,5,1,5,1,3,6,4,6,10,9,4,10,5,6,10,10,10,15,19,10,20,15,4,10,5,10,20,14,5,15,6,1,4,1,4,10,5,1,4,1,4,10,5,10,20,15,5,14,6,1,5,1,5,15,6,1,5,1,3,6,4,6,10,10,4,10,5,6,10,10,10,15,20,10,19,15,4,10,5,10,20,15,5,15,6,6,10,10,10,15,19,10,20,15,10,15,19,15,21,32,19,34,31,10,20,15,20,35,33,15,35,21,4,10,5,10,20,15,5,14,6,10,20,15,20,35,35,15,31,21,5,15,6,15,35,21,6,19,7,1,4,1,4,10,5,1,4,1,4,10,5,10,20,15,5,14,6,1,4,1,4,10,5,1,5,1,4,10,4,10,20,13,4,10,5,10,20,14,20,35,32,14,30,20,4,10,5,10,20,14,5,15,6,1,5,1,5,15,6,1,5,1,5,15,6,15,35,21,6,19,7,1,5,1,5,15,6,1,5,1,3,6,4,6,10,10,4,10,5,6,10,10,10,15,20,10,20,15,4,10,5,9,19,14,5,15,6,6,10,10,10,15,18,10,20,15,10,15,20,15,21,33,20,35,35,10,20,15,19,34,30,15,35,21,4,10,5,10,20,15,5,13,6,10,20,15,20,35,35,15,33,21,5,15,6,14,34,20,6,19,7,6,10,10,10,15,20,10,19,15,10,15,20,15,21,35,20,33,35,10,19,15,19,34,34,15,31,21,10,15,19,15,21,32,19,34,31,15,21,33,21,28,51,33,54,61,19,34,31,34,55,61,31,65,46,10,20,15,20,35,35,15,31,21,20,35,35,35,56,70,35,63,56,15,34,21,34,69,55,21,48,28,4,10,5,10,20,15,5,13,6,10,20,15,20,35,35,15,33,21,5,13,6,12,25,18,6,19,7,10,20,13,20,35,30,13,26,19,20,35,33,35,56,63,33,61,54,13,26,19,25,44,39,19,45,26,5,15,6,15,35,21,6,18,7,15,35,21,35,70,56,21,51,28,6,19,7,18,44,25,7,23,8,1,3,1,3,6,4,1,4,1,3,6,4,6,10,10,4,10,5,1,4,1,4,10,5,1,5,1,3,6,4,6,10,9,4,10,5,6,10,10,10,15,19,10,20,15,4,10,5,10,20,14,5,15,6,1,4,1,4,10,5,1,4,1,4,10,5,10,20,15,5,14,6,1,5,1,5,15,6,1,5,1,3,6,4,6,10,10,4,10,5,6,10,10,10,15,20,10,19,15,4,10,5,10,20,15,5,15,6,6,10,10,10,15,19,10,20,15,10,15,19,15,21,33,19,34,31,10,20,15,20,35,33,15,35,21,4,10,5,10,20,15,5,14,6,10,20,15,20,35,35,15,31,21,5,15,6,15,35,21,6,19,7,1,4,1,4,10,5,1,4,1,4,10,5,10,20,15,5,14,6,1,4,1,4,10,5,1,5,1,4,10,4,10,20,13,4,10,5,10,20,14,20,35,32,14,30,20,4,10,5,10,20,14,5,15,6,1,5,1,5,15,6,1,5,1,5,15,6,15,35,21,6,19,7,1,5,1,5,15,6,1,5,1};\r\nint main(){\r\n\tchar str[10];char ch;int k,layout;int ic=1;\r\n\twhile (~scanf(\"%3s\",str)){\r\n\t\tscanf(\"%3s%3s\",str+3,str+6);\r\n\t\tlayout=0;\r\n\t\tfor (k=1;k<NN;k++){\r\n\t\t\tlayout*=3;\r\n\t\t\tif (str[k]=='B') layout+=1;\r\n\t\t\tif (str[k]=='G') layout+=2;\r\n\t\t}\r\n\t\tprintf(\"Case %d: %d\\n\",ic++,ans[layout]);\r\n\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":81,
"code":"\n#include<iostream>  \r\n#include <string.h>  \r\nusing namespace std;  \r\nchar map[101][11]; \r\nint surface[101]; \r\nint state[61];\r\nint stanum[61]; \r\nint f[101][61][61]; \r\nint main()  \r\n{  \r\n    int xx;  \r\n    cin>>xx;  \r\n    while(xx--)  \r\n    {  \r\n    memset(map,0,sizeof(map));  \r\n    memset(surface,0,sizeof(surface));  \r\n    memset(state,0,sizeof(state));  \r\n    memset(stanum,0,sizeof(stanum));  \r\n    memset(f,0,sizeof(f));  \r\n    int row,col;  \r\n    cin>>row>>col;  \r\n    for (int i=0;i<row;i++)  \r\n            cin>>map[i];   \r\n    for (int i=0;i<row;i++)  \r\n        for (int j=0;j<col;j++)  \r\n        {  \r\n            if(map[i][j] == 'H') surface[i] +=1<<j;  \r\n        }   \r\n    int snum=0;  \r\n    for(int i=0;i< 1<<col;i++)  \r\n    {  \r\n        int temp=i;  \r\n        if( (i<<1)&i || (i<<2)&i ) continue;  \r\n        stanum[snum] = temp%2;  \r\n        while (  temp = (temp>>1) ) stanum[snum] += temp%2;  \r\n        state[snum++]=i;  \r\n    }  \r\n    for (int i=0;i<snum;i++)  \r\n    {   \r\n        if(state[i] & surface[0]) continue;  \r\n        f[0][i][0]=stanum[i];  \r\n    }    \r\n    for (int i=0;i<snum;i++)  \r\n    {  \r\n        if(state[i] & surface[1]) continue;  \r\n        for (int k=0;k<snum;k++)  \r\n        {  \r\n            if(state[k] & surface[0]) continue;  \r\n            if(state[i] & state[k]) continue;  \r\n            f[1][i][k] = f[1][i][k] > (f[0][k][0]+stanum[i]) ? f[1][i][k] : (f[0][k][0]+stanum[i]) ;   \r\n        }  \r\n    }   \r\n    for (int i=2;i<row;i++)  \r\n        for (int j=0;j<snum;j++)  \r\n        {  \r\n            if(surface[i] & state[j]) continue;  \r\n            for(int k=0;k<snum;k++)  \r\n            {  \r\n                if(surface[i-1] & state[k]) continue;  \r\n                if(state[j] & state[k]) continue;  \r\n                for (int l=0;l<snum;l++)  \r\n                {  \r\n                    if(state[l] & surface[i-2]) continue;  \r\n                    if(state[j] & state[l] || state[k] & state[l]) continue;  \r\n                    f[i][j][k] = f[i][j][k] > (f[i-1][k][l]+stanum[j]) ?   \r\n                        f[i][j][k] : (f[i-1][k][l]+stanum[j]) ;  \r\n                }  \r\n            }  \r\n        }  \r\n    if(row ==0 ) cout<<\"0\"<<endl;  \r\n    else  \r\n    {  \r\n        int max=0;  \r\n        for (int i=0;i<snum;i++)  \r\n            for (int j=0;j<snum;j++)  \r\n            {  \r\n                if(max<f[row-1][i][j]) max=f[row-1][i][j];  \r\n            }  \r\n            cout<<max<<endl;  \r\n    }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":82,
"code":"\n#include <iostream>\r\n#include <cstring>\r\n\r\nusing namespace std;\r\n\r\nstruct node\r\n{\r\n    int x;\r\n    int y;\r\n    int num;\r\n}q[5];\r\nchar map[25][25];\r\nint maxkeyOfDoor[5];    \r\nint findkeyOfDoor[5];   \r\nbool flag;\r\n\r\nvoid DFS(int i, int j);\r\nvoid check();\r\n\r\nvoid DFS(int i, int j)\r\n{\r\n    if(map[i][j] != 'X')\r\n    {\r\n        switch (map[i][j])\r\n        {\r\n            case 'a':\r\n            case 'b':\r\n            case 'c':\r\n            case 'd':\r\n            case 'e':\r\n                ++findkeyOfDoor[map[i][j]-'a'];\r\n                break;\r\n            case 'A':\r\n            case 'B':\r\n            case 'C':\r\n            case 'D':\r\n            case 'E':\r\n                q[map[i][j] - 'A'].x = i;\r\n                q[map[i][j] - 'A'].y = j;\r\n                ++q[map[i][j] - 'A'].num;\r\n                return;\r\n            case 'G':\r\n                flag = true;\r\n                return;\r\n        }\r\n        map[i][j] = 'X';  \r\n        DFS(i-1, j);\r\n        DFS(i+1, j);\r\n        DFS(i, j-1);\r\n        DFS(i, j+1);\r\n        check();\r\n    }\r\n}\r\n\r\nvoid check()\r\n{\r\n    for(int i = 0; i < 5; ++i)\r\n    {\r\n        if(q[i].num)\r\n        {\r\n            if(findkeyOfDoor[i] == maxkeyOfDoor[i])  \r\n            {\r\n                map[q[i].x][q[i].y] = 'X';\r\n                DFS(q[i].x-1, q[i].y);\r\n                DFS(q[i].x+1, q[i].y);\r\n                DFS(q[i].x, q[i].y-1);\r\n                DFS(q[i].x, q[i].y+1);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int tx, ty, m, n;\r\n    while(cin >> m >> n && (m || n))\r\n    {\r\n        flag = false;\r\n        memset(maxkeyOfDoor, 0, sizeof(maxkeyOfDoor));\r\n        memset(findkeyOfDoor, 0, sizeof(findkeyOfDoor));\r\n        memset(q, 0, sizeof(q));\r\n        memset(map, 'X', sizeof(map));  \r\n\r\n        for(int i = 1; i <= m; ++i)\r\n        {\r\n            for(int j = 1; j <= n; ++j)\r\n            {\r\n                cin >> map[i][j];\r\n                if(map[i][j] == 'S')\r\n                {\r\n                    tx = i;\r\n                    ty = j;\r\n                }\r\n                else if(map[i][j] >= 'a' && map[i][j] <= 'e')\r\n                    ++maxkeyOfDoor[map[i][j] - 'a'];\r\n            }\r\n        }\r\n        DFS(tx, ty);\r\n        if(flag)\r\n            cout << \"YES\" << endl;\r\n        else\r\n            cout << \"NO\" << endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":83,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\n#define INF 0x7fffffff  \r\n#define N 40  \r\n\r\nstruct Point{  \r\n    double x;  \r\n    double y;  \r\n};  \r\n\r\nstruct Line{  \r\n    Point p1;  \r\n    Point p2;  \r\n};  \r\n\r\nint num;  \r\ndouble jx = 1e-6;  \r\nLine l[N];  \r\n\r\ndouble det(double x1, double y1, double x2, double y2)             \r\n{  \r\n    return x1 * y2 - x2 * y1;  \r\n}  \r\n\r\ndouble get_dir(Point a, Point b, Point c)           \r\n{  \r\n    return det((b.x - a.x), (b.y - a.y), (c.x - a.x), (c.y - a.y));  \r\n}  \r\n\r\nbool Cross(Line* a, Line* b)                        \r\n{  \r\n    double q1 = get_dir(a ->p1, a ->p2, b ->p1);  \r\n    double q2 = get_dir(a ->p1, a ->p2, b ->p2);  \r\n    double q3 = get_dir(b ->p1, b ->p2, a ->p1);  \r\n    double q4 = get_dir(b ->p1, b ->p2, a ->p2);  \r\n    if(q1 * q2 < 0 && q3 * q4 < 0)                    \r\n        return 1;  \r\n    else  \r\n        return 0;  \r\n}  \r\n\r\nint GetCross(Line* a, int x, int y)  \r\n{  \r\n    int ct = 0;  \r\n    a ->p2.x = x;  \r\n    a ->p2.y = y;  \r\n    for(int k = 0; k < num; k ++){                 \r\n        if(Cross(a, &l[k]))                     \r\n            ct ++;  \r\n    }  \r\n\r\n    return ct;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    Line a;  \r\n    int loop, i;  \r\n    scanf(\"%d\", &loop);  \r\n    while(loop --){  \r\n        scanf(\"%d\", &num);  \r\n        for(i = 0; i < num; i ++)  \r\n            scanf(\"%lf%lf%lf%lf\", &l[i].p1.x, &l[i].p1.y, &l[i].p2.x, &l[i].p2.y);  \r\n        scanf(\"%lf%lf\", &a.p1.x, &a.p1.y);  \r\n\r\n        int ans = INF, ct;  \r\n        for(i = 1; i < 100; i ++){                 \r\n            ct = GetCross(&a, 0, i);  \r\n            if(ans > ct)                         \r\n                ans = ct;  \r\n\r\n            ct = GetCross(&a, 100, i);  \r\n            if(ans > ct)  \r\n                ans = ct;  \r\n\r\n            ct = GetCross(&a, i, 0);  \r\n            if(ans > ct)  \r\n                ans = ct;  \r\n\r\n            ct = GetCross(&a, i, 100);  \r\n            if(ans > ct)  \r\n                ans = ct;  \r\n        }  \r\n        printf(\"%d\\n\", ans + 1);  \r\n    }  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":84,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int t,n,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {   \r\n        i=0;\r\n        scanf(\"%d\",&n);\r\n        while(n)\r\n        {\r\n            n\/=5; \r\n            i+=n; \r\n        }\r\n        printf(\"%d\\n\",i);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":85,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\nmain()  \r\n{  \r\n    int n,m,x,y;  \r\n    scanf(\"%d\\n\",&m);  \r\n    while(m--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        x=(int)(sqrt(2*n)-0.5);  \r\n        y=n-x*(x+1)\/2;  \r\n        if(x%2==0)  \r\n            printf(\"%d\/%d\\n\",x+2-y,y);  \r\n\r\n        else  \r\n            printf(\"%d\/%d\\n\",y,x+2-y);  \r\n    }  \r\n}"
},
{
"pid":86,
"code":"\n#include<stdio.h>  \r\n#include <algorithm>  \r\nint yi[1000005];  \r\nvoid g(int k,int m)  \r\n{  \r\n    int high=m-1,flag=0;  \r\n    int low=0,mid;  \r\n    while(low<=high)\r\n    {  \r\n        mid=(low+high)\/2;  \r\n        if(yi[mid]<k)  \r\n        {  \r\n            low=mid+1;  \r\n\r\n        }  \r\n        else if(yi[mid]>k)  \r\n        {  \r\n            high=mid-1;  \r\n        }  \r\n        else  \r\n        {  \r\n            flag=1;  \r\n            printf(\"YES\\n\");  \r\n            break;  \r\n        }  \r\n\r\n    }  \r\n    if(flag==0)  \r\n        printf(\"NO\\n\");  \r\n\r\n}  \r\n\r\nint main()  \r\n{  \r\n    int a,b,c,n,m,k;  \r\n    scanf(\"%d%d\",&m,&n);  \r\n    for(a=0;a<m;a++)  \r\n        scanf(\"%d\",&yi[a]);  \r\n    std::sort(yi,yi+m); \r\n    while(n--)  \r\n    {  \r\n        scanf(\"%d\",&k);  \r\n        g(k,m);  \r\n    }  \r\n\r\n}"
},
{
"pid":87,
"code":"\n#include<iostream> \r\n#include<cstdio> \r\n#include<cstring> \r\n#include<cmath> \r\n#include<queue> \r\n#include<algorithm> \r\n\r\nusing namespace std; \r\n\r\nconst int N=15; \r\nconst double M=100000000.0; \r\ndouble ans[N][10][10][10][10]; \r\ndouble K; \r\nint sum[10][10][10][10]; \r\nint a[10][10]; \r\nint n; \r\nint dpsum(int x1,int y1,int x2,int y2)\r\n{ \r\n    if(sum[x1][y1][x2][y2]!=-1) \r\n    return sum[x1][y1][x2][y2]; \r\n    if(x1==x2&&y1==y2) \r\n    { \r\n        sum[x1][y1][x2][y2]=a[x1][y1]; \r\n    }else\r\n    if(x1<x2) \r\n    { \r\n        sum[x1][y1][x2][y2]=dpsum(x1,y1,x1,y2)+dpsum(x1+1,y1,x2,y2); \r\n    }else\r\n    if(y1<y2) \r\n    { \r\n        sum[x1][y1][x2][y2]=dpsum(x1,y1,x2,y1)+dpsum(x1,y1+1,x2,y2); \r\n    } \r\n    return sum[x1][y1][x2][y2]; \r\n} \r\n double FFmin(double x,double y) \r\n{ \r\n    return (x<y)?x:y; \r\n} \r\ndouble dpans(int k,int x1,int y1,int x2,int y2) \r\n{ \r\n    if(ans[k][x1][y1][x2][y2]>=0.0) \r\n    { \r\n        return ans[k][x1][y1][x2][y2]; \r\n    } \r\n    if(k==0) \r\n    { \r\n        ans[k][x1][y1][x2][y2]=((sum[x1][y1][x2][y2]-K)*\r\n\t\t\t\t\t\t\t\t(sum[x1][y1][x2][y2]-K)); \r\n        return ans[k][x1][y1][x2][y2]; \r\n    } \r\n    ans[k][x1][y1][x2][y2]=M; \r\n    for(int x=x1;x<x2;++x) \r\n    { \r\n       ans[k][x1][y1][x2][y2]=FFmin(ans[k][x1][y1][x2][y2], \r\n                                  (dpans(k-1,x1,y1,x,y2))+\r\n\t\t(sum[x+1][y1][x2][y2]-K)*(sum[x+1][y1][x2][y2]-K)); \r\n       ans[k][x1][y1][x2][y2]=FFmin(ans[k][x1][y1][x2][y2], \r\n                                  (dpans(k-1,x+1,y1,x2,y2))+\r\n\t\t\t(sum[x1][y1][x][y2]-K)*(sum[x1][y1][x][y2]-K)); \r\n    } \r\n    for(int y=y1;y<y2;++y) \r\n    { \r\n       ans[k][x1][y1][x2][y2]=FFmin(ans[k][x1][y1][x2][y2], \r\n        (dpans(k-1,x1,y1,x2,y))+(sum[x1][y+1][x2][y2]-K)*\r\n\t\t\t\t\t\t\t\t  (sum[x1][y+1][x2][y2]-K)); \r\n       ans[k][x1][y1][x2][y2]=FFmin(ans[k][x1][y1][x2][y2], \r\n        (dpans(k-1,x1,y+1,x2,y2))+(sum[x1][y1][x2][y]-K)*\r\n\t\t\t\t\t\t\t\t  (sum[x1][y1][x2][y]-K)); \r\n    } \r\n    return ans[k][x1][y1][x2][y2]; \r\n} \r\nvoid begin(int n) \r\n{ \r\n    for(int i=0;i<n;++i) \r\n    for(int l1=1;l1<=8;++l1) \r\n    for(int l2=1;l2<=8;++l2) \r\n    for(int l3=1;l3<=8;++l3) \r\n    for(int l4=1;l4<=8;++l4) \r\n    { \r\n        ans[i][l1][l2][l3][l4]=-1.0; \r\n    } \r\n    for(int l1=1;l1<=8;++l1) \r\n    for(int l2=1;l2<=8;++l2) \r\n    for(int l3=1;l3<=8;++l3) \r\n    for(int l4=1;l4<=8;++l4) \r\n    { \r\n       dpsum(l1,l2,l3,l4); \r\n    } \r\n} \r\nint main() \r\n{ \r\n   while(scanf(\"%d\",&n)!=EOF) \r\n   { \r\n       for(int i=1;i<=8;++i) \r\n       { \r\n           for(int j=1;j<=8;++j) \r\n           { \r\n               scanf(\"%d\",&a[i][j]); \r\n           } \r\n       } \r\n       memset(sum,-1,sizeof(sum)); \r\n       begin(n); \r\n       K=1.0*sum[1][1][8][8]\/n; \r\n       printf(\"%.3f\\n\",sqrt(1.0*dpans(n-1,1,1,8,8)\/n)); \r\n   } \r\n   return 0; \r\n}"
},
{
"pid":88,
"code":"\n#include<stdio.h>\r\nint num[100006];\r\nint main()\r\n{\r\n    int N,m,i;\r\n    num[1]=1;  \r\n    for(i=2;i<100006;i++)\r\n       num[i]=(2*num[i-1]+1)%1000000;\r\n    scanf(\"%d\",&N);\r\n    while(N--)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        if(m>100005)\r\n        {\r\n            if(m%100000<6)\r\n               m=100000+m%10;\r\n            else\r\n               m%=100000;\r\n        }\r\n        printf(\"%d\\n\",num[m]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":89,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint step[33],num[33];\r\nvoid find()\r\n{\r\n\tstep[0]=1;\r\n\tfor(int i=1;i<=33;i++)\r\n\t\tstep[i]=step[i-1]*2;\r\n}\r\nint main()\r\n{\r\n\tfind();\r\n\tint t,n,m;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint t=3,i,sum=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&num[i]);\r\n\t\tfor(i=n-1;i>=0;i--)\r\n\t\t{\r\n\t\t\tif(num[i]!=t)\r\n\t\t\t{\r\n\t\t\t\tsum+=step[i];\r\n\t\t\t\tt=6-num[i]-t;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",sum);\r\n\t}\r\n}"
},
{
"pid":90,
"code":"\n#include <cstdio>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fun(int n, int m)  \r\n{\r\n    if(n == 1 || m == 1)\r\n        return 1;\r\n    if(n < m)\r\n        return fun(n, n);\r\n    if(n > m)     \r\n        return fun(n-m, m) + fun(n, m-1);\r\n    if(n == m)\r\n        return 1 + fun(n, m-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int T, n;\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        printf(\"%d\\n\", fun(n,n));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":91,
"code":"\n#include <iostream>  \r\n#include <cstring>  \r\nusing namespace std;  \r\n\r\nint main()  \r\n{  \r\n    int m;  \r\n    cin>>m;  \r\n    int f[11];  \r\n    memset(f,0,sizeof(f));  \r\n    f[1]=1;  \r\n    for(int i=2;i<11;i++)  \r\n        f[i]=f[i-1]*i;  \r\n    while(m--){  \r\n        int n;  \r\n        cin>>n;  \r\n        int i;  \r\n        int aim=n;  \r\n        int flag=10;  \r\n\r\n        for(i=flag;i>0;i--){  \r\n\r\n                if(aim>=f[i]){  \r\n                    flag=i-1;     \r\n                    aim-=f[i];            \r\n                }  \r\n        }  \r\n        if(aim==0) cout<<\"Yes\"<<endl;  \r\n        else if(aim!=0) cout<<\"No\"<<endl;  \r\n\t}  \r\n    return 0;  \r\n}"
},
{
"pid":92,
"code":"\n#include <iostream>\r\n#include <queue>\r\n\r\nusing namespace std;\r\n\r\nstruct point\r\n{\r\n    int x;\r\n    int y;\r\n};\r\n\r\nint w, h;\r\nint map[970][1450];\r\nint dir[4][2] = {-1, 0, 0, 1, 1, 0, 0, -1};\r\n\r\nvoid BFS(int a, int b)\r\n{\r\n    queue <point> q;\r\n    point t1, t2;\r\n    t1.x = a;\r\n    t1.y = b;\r\n    q.push(t1);\r\n    while(!q.empty())\r\n    {\r\n        t1= q.front();\r\n        q.pop();\r\n        for(int i = 0; i < 4; ++i)\r\n        {\r\n            t2.x = t1.x + dir[i][0];\r\n            t2.y = t1.y + dir[i][1];\r\n            if(t2.x < 0 || t2.x > h+1 || t2.y < 0 || t2.y > w+1 || map[t2.x][t2.y] == 0)\r\n                continue;\r\n            map[t2.x][t2.y] = 0;\r\n            q.push(t2);\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    cin >> T;\r\n    while(T--)\r\n    {\r\n        cin >> w >> h;\r\n        for(int i = 0; i <= h; ++i)\r\n            map[i][0] = map[i][w + 1] = 1;\r\n        for(int j = 0; j <= w; ++j)\r\n            map[0][j] = map[h + 1][j] = 1;\r\n\r\n        for(int i = 1; i <= h; ++i)\r\n            for(int j = 1; j <= w; ++j)\r\n                cin >> map[i][j];\r\n        BFS(0, 0);\r\n        for(int i = 1; i <= h; ++i)\r\n            for(int j = 1; j <= w; ++j)\r\n            {\r\n                if(j == w)\r\n                    cout << map[i][j] << endl;\r\n                else\r\n                    cout << map[i][j] << ' ';\r\n            }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":93,
"code":"\n#include<stdio.h>\r\nint main()\r\n{    \r\n    int n,p,q,i,j,flag;\r\n    int a[4][65];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        flag=1;\r\n        scanf(\"%d%d\",&p,&q);\r\n        for(i=1;i<=p;++i)\r\n            a[1][i]=p-i+1;\r\n        a[1][0]=p;\r\n        a[2][0]=0;\r\n        a[3][0]=0;\r\n        while(q--)\r\n        {\r\n            scanf(\"%d%d\",&i,&j);\r\n            if(a[i][a[i][0]]&&(a[j][a[j][0]]==0||a[i][a[i][0]]<a[j][a[j][0]]))\r\n            {\r\n                a[j][0]++;\r\n                a[j][a[j][0]]=a[i][a[i][0]];\r\n                a[i][0]--;\r\n            }\r\n            else\r\n            {\r\n                flag=0;\r\n                break;\r\n            }\r\n        }\r\n        if(flag)\r\n            printf(\"legal\\n\");\r\n        else\r\n            printf(\"illegal\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":94,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nmain()  \r\n{  \r\n    int m,n,s,r,c;          \r\n    cin>>s;  \r\n    while(s--){  \r\n        cin>>m>>n;  \r\n        r=m;c=0;  \r\n        while(r>=n){             \r\n            c+=r\/n;r=r\/n+r%n;    \r\n        }cout<<m+c<<endl;  \r\n    }  \r\n}"
},
{
"pid":95,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#define N 100010\r\nusing namespace std;\r\n\r\nint a[N];\r\n\r\nint main()\r\n{\r\n    int test;\r\n    scanf(\"%d\",&test);\r\n    while(test--)\r\n    {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        int i,t;\r\n        for(i=0;i<N;i++) a[i]=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&t);\r\n            a[t]++;\r\n        }\r\n        int p,ans=0;\r\n        for(i=0;i<N;i++)\r\n        {\r\n            if(a[i]>ans)\r\n            {\r\n                p=i;\r\n                ans=a[i];\r\n            }\r\n        }\r\n        printf(\"%d %d\\n\",p,ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":96,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int t;  \r\n    int i,tmp,n,first,flag;  \r\n    char num[20];  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        flag = first = 1;  \r\n        i = 0;  \r\n        scanf(\"%ld\",&n);  \r\n        while(n!=0)  \r\n        {  \r\n            tmp = n%10;  \r\n            num[i++] = tmp+'0';  \r\n            n = n\/10;  \r\n        }  \r\n        num[i-1] = '\\0';\r\n        for (i-=2;i>=0;)  \r\n        {  \r\n            if (first && num[i]=='0')i--; \r\n            else  \r\n            {  \r\n                first = 0;       \r\n                putchar(num[i]);  \r\n                i--;  \r\n                flag = 0;  \r\n            }  \r\n        }  \r\n        if (flag) printf(\"0\");\r\n        putchar('\\n');  \r\n    }  \r\n    return 0 ;  \r\n}"
},
{
"pid":97,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    double x,y,z,t,m;  \r\n    int n;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        scanf(\"%lf%lf%lf%lf\",&m,&x,&y,&z);  \r\n        printf(\"%.2f\\n\",m*x*z\/(y-x));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":98,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int n,a;  \r\n    cin>>n;  \r\n    while(n--)  \r\n    {  \r\n        cin>>a;  \r\n        switch(a\/10)  \r\n        {  \r\n        case 10:  \r\n        case 9 :cout<<\"A\"<<endl;break;  \r\n        case 8 :cout<<\"B\"<<endl;break;  \r\n        case 7 :cout<<\"C\"<<endl;break;  \r\n        case 6 :cout<<\"D\"<<endl;break;  \r\n        default:cout<<\"E\"<<endl;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":99,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nstruct node\r\n{\r\n    char s[31];\r\n    int first,last;\r\n};\r\n\r\nnode a[1001];\r\nint degree_in[1001],degree_out[1001],m,order[1001];\r\nbool used[1001];\r\n\r\nint f()\r\n{\r\n    int x1,x2,ans=0,i;\r\n    x1=x2=0;\r\n    for(i=0;i<26;++i)\r\n    {\r\n        if(abs(degree_in[i]-degree_out[i])>=2)\r\n            return -1;\r\n        else if(degree_in[i]-degree_out[i]==1)\r\n            x1++;\r\n        else if(degree_in[i]-degree_out[i]==-1)\r\n        {\r\n            x2++;\r\n            ans=i;\r\n        }\r\n    }\r\n        if(x1>1||x2>1) \r\n            return -1;\r\n        else if(x1==0)\r\n        {\r\n            for(i=0;i<26;++i)\r\n                if(degree_out[i])\r\n                    return i;\r\n        }\r\n        else\r\n            return ans;\r\n\r\n}\r\nbool cmp(node a,node b)\r\n{\r\n    return strcmp(a.s,b.s)<0;\r\n}\r\n\r\nbool dfs(int st,int cnt)\r\n{\r\n    int i;\r\n    if(cnt==m)\r\n        return 1;\r\n    for(i=0;i<m;++i)\r\n    {\r\n        if(a[i].first<st||used[i])\r\n            continue;\r\n        else if(a[i].first>st)\r\n            return false;\r\n        used[i]=true;\r\n        order[cnt]=i;\r\n        if(dfs(a[i].last,cnt+1))\r\n            return 1;\r\n        used[i]=false;\r\n    }\r\n    return false;\r\n}\r\n\r\nint main()\r\n{\r\n    int N,len,i,start;\r\n    scanf(\"%d\",&N);\r\n    while(N--)\r\n    {\r\n        memset(used,false,sizeof(used));\r\n        memset(degree_out,0,sizeof(degree_out));\r\n        memset(degree_in,0,sizeof(degree_in));\r\n        scanf(\"%d\",&m);\r\n        for(i=0;i<m;++i)\r\n        {\r\n            scanf(\"%s\",a[i].s);\r\n            len = strlen(a[i].s);\r\n            a[i].first =a[i].s[0]-'a';\r\n            a[i].last =a[i].s[len-1]-'a';\r\n            degree_out[a[i].s[0]-'a']++;\r\n            degree_in[a[i].s[len-1]-'a']++;\r\n        }\r\n        start=f();\r\n        if(start ==-1)\r\n        {\r\n            printf(\"***\\n\");\r\n            continue;\r\n        }\r\n        sort(a,a+m,cmp);\r\n        if(!dfs(start,0))\r\n        {\r\n            printf(\"***\\n\");\r\n            continue;\r\n        }\r\n       printf(\"%s\",a[order[0]].s);\r\n      for(i=1;i<m;i++)\r\n         printf(\".%s\",a[order[i]].s);\r\n      printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":100,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int T,n,s;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        s=0;  \r\n        while(n)  \r\n        {  \r\n            n=n&(n-1);  \r\n            s++;  \r\n        }  \r\n        printf(\"%d\\n\",s);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":101,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\nint main()  \r\n{  \r\n    int n;  \r\n    float x1,x2,y1,y2;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        while(n--)  \r\n        {  \r\n            scanf(\"%f%f%f%f\",&x1,&y1,&x2,&y2);  \r\n            printf(\"%.2lf\\n\",sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)));  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":102,
"code":"\n#include<cstdio>  \r\nlong long PowMod(long long a,long long p,long long m)  \r\n{  \r\n    long long result = 1;  \r\n    while(p>0)  \r\n    {  \r\n\r\n        if (p%2)  \r\n            result = (result*a)%m;  \r\n        a = (a*a)%m;  \r\n        p>>=1;  \r\n    }  \r\n    return result;  \r\n}  \r\nint main()  \r\n{  \r\n    long long t,a,b,c;  \r\n    scanf(\"%lld\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%lld%lld%lld\",&a,&b,&c);  \r\n        printf(\"%lld\\n\",PowMod(a,b,c));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":103,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint a[1010],b[1010];  \r\nchar s1[1010],s2[1010];  \r\nvoid changenum(char *s,int *a)  \r\n{  \r\n    int start,end,i,t;  \r\n    start=0;end=strlen(s)-1;  \r\n    for(i=0;i<strlen(s);i++)  \r\n    {  \r\n        a[i]=s[i]-'0';  \r\n    }  \r\n    while(start<end)  \r\n    {  \r\n        t=a[start];  \r\n        a[start]=a[end];  \r\n        a[end]=t;  \r\n        start++;  \r\n        end--;  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int T,j,i;  \r\n    scanf(\"%d\",&T);  \r\n    for(j=1;j<=T;j++)  \r\n    {  \r\n        memset(a,0,sizeof(a));  \r\n        memset(b,0,sizeof(b));  \r\n        scanf(\"%s%s\",s1,s2);  \r\n        changenum(s1,a);  \r\n        changenum(s2,b);  \r\n        for(i=0;i<1010;i++)  \r\n        {  \r\n            a[i]=a[i]+b[i];  \r\n            if(a[i]>9)  \r\n            {  \r\n                a[i]=a[i]%10;  \r\n                a[i+1]++;  \r\n            }  \r\n        }  \r\n        for(i=1009;i>=0;i--) \r\n        {  \r\n            if(a[i])  \r\n            break;  \r\n        }  \r\n         printf(\"Case %d:\\n%s + %s = \" , j, s1, s2);  \r\n        if(i<0)  \r\n        printf(\"0\\n\");  \r\n        else  \r\n        for(;i>=0;i--)  \r\n        printf(\"%d\",a[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":104,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<climits>  \r\n#include<cstring>  \r\nusing namespace std;  \r\n\r\nconst int N = 110;  \r\nint row, col;  \r\nint matrix[N][N];  \r\nint temp[N][N];      \r\n\r\nvoid DP(void)  \r\n{  \r\n    int thissum, maxsum;  \r\n    maxsum = INT_MIN;  \r\n\r\n    for(int i = 1; i <= row; ++i)         \r\n        for(int j = 1; j <= col; ++j)  \r\n            temp[i][j] = temp[i - 1][j] + matrix[i][j];  \r\n\r\n    for(int i = 1; i <= row; ++i)  \r\n        for(int j = i; j <= row; ++j)      \r\n        {  \r\n            thissum = 0;  \r\n            for(int k = 1; k <= col; ++k)  \r\n            {  \r\n                if(thissum > 0)  \r\n                    thissum += temp[j][k] - temp[i - 1][k];  \r\n                else  \r\n                    thissum = temp[j][k] - temp[i - 1][k];  \r\n\r\n                maxsum = max(maxsum, thissum);  \r\n            }  \r\n        }  \r\n    printf(\"%d\\n\", maxsum);  \r\n}  \r\n\r\nint main(void)  \r\n{  \r\n    int ncase;  \r\n    scanf(\"%d\", &ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        memset(temp, 0, sizeof(temp));  \r\n        scanf(\"%d %d\", &row, &col);  \r\n\r\n        for(int i = 1; i <= row; ++i)  \r\n            for(int j = 1; j <= col; ++j)  \r\n                scanf(\"%d\", &matrix[i][j]);  \r\n\r\n        DP();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":105,
"code":"\n#include<iostream>  \r\n#include<string.h>  \r\nusing namespace std;  \r\nchar a[1000008];  \r\nint main()  \r\n{  \r\n    int t;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        int sum=0;  \r\n        string s;  \r\n        cin>>s;  \r\n        for(int i=0;i<s.size();++i)  \r\n            sum+=s[i]-'0';  \r\n        cout<<sum%9<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":106,
"code":"\n#include <iostream>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nstruct pack  \r\n{  \r\n    int v;  \r\n    int w;  \r\n};  \r\nbool cmp(pack m,pack n)  \r\n{  \r\n    return m.v>n.v;  \r\n}  \r\nint main()  \r\n{  \r\n    pack *p;  \r\n    int i,n,s,m,sum;  \r\n    cin>>n;  \r\n    while(n--)  \r\n    {  \r\n         cin>>s>>m;  \r\n         sum=0;  \r\n         p=new pack[s];  \r\n         for(i=0;i<s;i++)  \r\n         {  \r\n             cin>>p[i].v>>p[i].w;  \r\n         }  \r\n         sort(p,p+s,cmp);  \r\n         for(i=0;i<s;i++)  \r\n         {  \r\n             if(m-p[i].w>0)  \r\n             {  \r\n                 sum+=p[i].v*p[i].w;  \r\n                 m-=p[i].w;  \r\n             }  \r\n             else{sum+=m*p[i].v;break;}  \r\n             }  \r\n             cout<<sum<<endl;  \r\n             delete[] p;  \r\n     }  \r\n\treturn 0;  \r\n}"
},
{
"pid":107,
"code":"\n#include<iostream>  \r\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\nint main()  \r\n{  \r\n    int len[4];  \r\n    int d=1;  \r\n    while(cin>>len[0]>>len[1]>>len[2]>>len[3])  \r\n    {  \r\n        sort(len,len+4);  \r\n        printf(\"Case %d: %d\\n\",d++,len[2]+len[3]);  \r\n    }  \r\n}"
},
{
"pid":108,
"code":"\n#include<cstdio>  \r\nint a[1000008];  \r\nint main()  \r\n{  \r\n    int i,n,t;  \r\n    scanf(\"%d%d\",&t,&n);  \r\n    a[0]=0;  \r\n    for(i=1;i<=t;++i)  \r\n        scanf(\"%d\",&a[i]);  \r\n    for(i=2;i<=t;++i)  \r\n        a[i]+=a[i-1];  \r\n    while(n--)  \r\n    {  \r\n        int x,y;  \r\n        scanf(\"%d%d\",&x,&y);  \r\n        printf(\"%d\\n\",a[y]-a[x-1]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":109,
"code":"\n#include<iostream>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint a[1008],b[1008];  \r\nint main()  \r\n{  \r\n    int i,t,n;   \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        cin>>n;  \r\n        a[0]=0;  \r\n        for(i=1;i<=n;++i)  \r\n        {  \r\n            cin>>a[i];  \r\n            a[i]+=a[i-1];  \r\n        }  \r\n        for(i=1;i<=n;++i)  \r\n        {  \r\n            cin>>b[i];  \r\n            b[i]+=b[i-1];  \r\n        }  \r\n        sort(a+1,a+n+1);  \r\n        sort(b+1,b+n+1);  \r\n        int flag=1;  \r\n        for(i=1;i<=n;++i)  \r\n            if(a[i]!=b[i])  \r\n            {  \r\n                flag=0;  \r\n                break;  \r\n            }  \r\n        if(flag)  \r\n            cout<<\"Yes\"<<endl;  \r\n        else  \r\n            cout<<\"No\"<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":110,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 505;\r\nint fight[N][N];\r\nbool meet[N][N];\r\n\r\nvoid init(int n)\r\n{\r\n    for(int i = 0; i < n; ++i)\r\n        for(int j = 0; j < n; ++j)\r\n            scanf(\"%d\", &fight[i][j]);\r\n    memset(meet, false, sizeof(meet));\r\n    for(int i = 0; i < n; ++i)    \r\n        meet[i][(i+1)%n] = true;\r\n}\r\n\r\nint solve(int n)\r\n{\r\n    for(int i = 1; i < n; ++i) \r\n    {\r\n        for(int start = 0; start < n; ++start)\r\n        {\r\n            int end = (start + i + 1) % n;\r\n            if(meet[start][end])\r\n                continue;\r\n            for(int t = (start + 1) % n; t != end; ++t, t%=n)   \r\n            {                                         \r\n                if(meet[start][t] && meet[t][end] && (fight[start][t] || fight[end][t]))\r\n                {\r\n                    meet[start][end] = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    int cnt = 0;\r\n    for(int i = 0; i < n; ++i)\r\n    {\r\n        if(meet[i][i])\r\n            ++cnt;\r\n    }\r\n    return cnt;\r\n}\r\nint main()\r\n{\r\n    int T, n;\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        init(n);\r\n        printf(\"%d\\n\", solve(n));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":111,
"code":"\n#include<stdio.h>\r\nint gcd(int a,int b) {\r\n    if(b==0)\r\n        return a;\r\n    else\r\n        return gcd(b,a%b);\r\n}\r\nint main() {\r\n    int a,b,c,d;\r\n    char s;\r\n    while(scanf(\"%d\/%d%c%d\/%d\",&a,&b,&s,&c,&d)!=EOF) {\r\n        int m,n=b*d;\r\n        a*=n\/b;\r\n        c*=n\/d;\r\n        if(s=='+')\r\n            m=a+c;\r\n        else {\r\n            if(a<c) {\r\n                printf(\"-\");\r\n                m=c-a;\r\n            } else\r\n                m=a-c;\r\n        }\r\n        if(!m)\r\n            printf(\"0\\n\");\r\n        else if(m%n==0) {\r\n            printf(\"%d\\n\",m\/n);\r\n        } else {\r\n            int t=gcd(m,n);\r\n            m\/=t;\r\n            n\/=t;\r\n            printf(\"%d\/%d\\n\",m,n);\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":112,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nlong long erfenmi(long long x,long long n)  \r\n{  \r\n    long long t=1;  \r\n    while(n)  \r\n    {  \r\n        if(n & 1)  \r\n            t=t*x;  \r\n        x=x*x;  \r\n        n>>=1;  \r\n    }  \r\n    return t;  \r\n}  \r\nint main()  \r\n{  \r\n    long long x,n;  \r\n    while(!cin.eof() && cin>>x>>n)  \r\n        cout<<erfenmi(x,n)<<endl;  \r\n    return 0;  \r\n}"
},
{
"pid":113,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\nusing namespace std;  \r\nchar str[1005];  \r\nint main()  \r\n{  \r\n    while(cin.getline(str,1000))  \r\n    {  \r\n        int i;  \r\n        int len = strlen(str);  \r\n        for(i=2;i<len;i++)  \r\n        {  \r\n            if(str[i-2]=='y' &&str[i-1]=='o' &&str[i]=='u')  \r\n                str[i-2] = 'w',str[i-1] = 'e',str[i] = '\\0';  \r\n        }  \r\n        for(i=0;i<len;i++)  \r\n            if (str[i]!='\\0')  \r\n                putchar(str[i]);  \r\n        putchar('\\n');  \r\n    }  \r\n}"
},
{
"pid":114,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n#define N 110  \r\nint a[N];  \r\nint b[N];  \r\nint c[N];  \r\nint sum[N];  \r\nvoid init(int x,int a[])  \r\n{  \r\n    int i=0;  \r\n    while(x)  \r\n    {  \r\n        a[i++]=x%10;  \r\n        x\/=10;  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int aa,bb,cc;  \r\n    while(scanf(\"%d%d%d\",&aa,&bb,&cc)!=EOF)  \r\n    {  \r\n        int i,j,t;  \r\n        memset(a,0,sizeof(a));  \r\n        memset(b,0,sizeof(b));  \r\n        memset(c,0,sizeof(c));  \r\n        init(aa,a);  \r\n        init(bb,b);  \r\n        init(cc,c);  \r\n        for(i=3;i<=99;i++)  \r\n        {  \r\n            memset(sum,0,sizeof(sum));  \r\n            for(j=0;j<N;j++)  \r\n            {  \r\n                sum[j]+=(a[j]+b[j]+c[j]);  \r\n                if(sum[j]>9)  \r\n                {  \r\n                    t=sum[j];  \r\n                    sum[j]=t%10;  \r\n                    sum[j+1]=t\/10;  \r\n                }  \r\n            }  \r\n            for(j=0;j<N;j++)  \r\n            {  \r\n                a[j]=b[j];  \r\n                b[j]=c[j];  \r\n                c[j]=sum[j];  \r\n            }  \r\n        }  \r\n        for(j=N-1;j>0&&sum[j]==0;j--);   \r\n        for(;j>=0;j--)  \r\n            printf(\"%d\",sum[j]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":115,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint budui[105],ok[1005][1005];  \r\nint ac[1005],yi[1005];  \r\nint main()  \r\n{  \r\n    int a,b,c,i,j,N,M;  \r\n    int m,P,Q,K,k,min;  \r\n    scanf(\"%d\",&K);  \r\n    while(K--)  \r\n    {  \r\n        memset(ok,999999,sizeof(ok));\r\n        memset(ac,0,sizeof(ac));  \r\n        memset(yi,999999,sizeof(yi));  \r\n        scanf(\"%d%d%d%d\",&N,&M,&P,&Q);  \r\n            for(a=1;a<=N;a++)  \r\n            scanf(\"%d\",&budui[a]);  \r\n        for(a=1;a<=P;a++)  \r\n        {  \r\n            scanf(\"%d%d%d\",&i,&j,&k);  \r\n            ok[i][j]=k;  \r\n            ok[j][i]=k;  \r\n        }  \r\n        yi[Q]=0;  \r\n        ac[Q]=1;  \r\n        m=M-1;  \r\n        b=Q;  \r\n        while(m--) \r\n        {  \r\n            for(a=1;a<=M;a++)  \r\n            {  \r\n                if(ac[a]==0)  \r\n                {  \r\n                    if(yi[a]>yi[b]+ok[a][b])  \r\n                        yi[a]=yi[b]+ok[a][b];  \r\n                }  \r\n\r\n            }  \r\n            int min1=9999,loop;  \r\n            for(c=1;c<=M;c++)  \r\n            {  \r\n                if(min1>yi[c]&&ac[c]==0)  \r\n                {min1=yi[c];loop=c;}  \r\n            }  \r\n            ac[loop]=1;  \r\n            b=loop;  \r\n        }  \r\n         min=9999;  \r\n        for(a=1;a<=N;a++) \r\n        {  \r\n            if(min>yi[budui[a]])  \r\n                min=yi[budui[a]];  \r\n        }  \r\n        printf(\"%d\\n\",min);  \r\n    }  \r\n}"
},
{
"pid":116,
"code":"\n#include<string.h>  \r\n#include<stdio.h>  \r\nint m,n,c[1000005];  \r\nint xb(int x)\r\n{  \r\n    return x&(x^(x-1));  \r\n}  \r\nint sum(int x)\r\n{  \r\n    int sum=0;  \r\n    while(x>0)  \r\n    {  \r\n        sum+=c[x];  \r\n        x-=xb(x);  \r\n    }  \r\n    return sum;  \r\n}  \r\nvoid gb(int x,int y)\r\n{  \r\n    for(int i=x;i<=m;i+=xb(i))  \r\n        c[i]+=y;  \r\n}  \r\nint main()  \r\n{  \r\n    scanf(\"%d%d\",&m,&n);  \r\n    int f,i,j,k;  \r\n    for(i=1;i<=m;i++)  \r\n    {  \r\n        scanf(\"%d\",&f);  \r\n        gb(i,f);  \r\n    }  \r\n    char s[8];  \r\n    for(i=1;i<=n;i++)  \r\n    {  \r\n        scanf(\"%s\",s);  \r\n        scanf(\"%d%d\",&k,&j);  \r\n         if(strcmp(s,\"QUERY\")==0)  \r\n                   printf(\"%d\\n\",sum(j)-sum(k-1));  \r\n         else if(strcmp(s,\"ADD\")==0)  \r\n             gb(k,j);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":117,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#define N 1000010\r\nusing namespace std;\r\nlong long ans;\r\nint a[N];\r\n\r\nvoid merge(int s1,int e1,int s2,int e2)\r\n{\r\n    int p1,p2,p;\r\n    int* temp = new int[e2-s1+5];\r\n    p=0;p1=s1;p2=s2;\r\n    while(p1<=e1&&p2<=e2)\r\n    {\r\n        if(a[p1]<=a[p2])\r\n        {\r\n            temp[p++]=a[p1++];\r\n            continue;\r\n        }\r\n        else \r\n        {\r\n            temp[p++]=a[p2++];\r\n            ans+=e1-p1+1; \r\n            continue;\r\n        }\r\n    }\r\n    while(p1<=e1) temp[p++]=a[p1++];\r\n    while(p2<=e2) temp[p++]=a[p2++];\r\n    int i;\r\n    for(i=s1;i<=e2;i++) a[i]=temp[i-s1];\r\n    delete temp;\r\n}\r\n\r\nvoid merge_sort(int s,int e)\r\n{\r\n    int m;\r\n    if(s<e)\r\n    {\r\n        m=(s+e)\/2;\r\n        merge_sort(s,m);\r\n        merge_sort(m+1,e);\r\n        merge(s,m,m+1,e);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int test;\r\n    scanf(\"%d\",&test);\r\n    while(test--)\r\n    {\r\n        int n,i;\r\n        ans=0;\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n            scanf(\"%d\",&a[i]);\r\n        merge_sort(0,n-1);\r\n        printf(\"%lld\\n\",ans);\r\n    }\r\n}"
},
{
"pid":118,
"code":"\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<vector>\r\n#include<cstdio>\r\nusing namespace std;\r\n#define M 501\r\nint ch1[M][M];  \r\nint ch2[M][M];   \r\nvector<int> s;   \r\nint v[M];       \r\nint sum=0;\r\nvoid prim(int m,int n)\r\n{\r\n    s.clear();s.push_back(m);v[m]=1;\r\n    while(s.size()!=n)\r\n    {\r\n        int k=200000,x,y;\r\n        for(int i=0;i<s.size();i++)\r\n        {\r\n            int r=s[i];\r\n            for(int j=1;j<=n;j++)\r\n            {\r\n                if(!v[j]&&ch1[r][j]!=-1)\r\n                {\r\n                    if(k>ch1[r][j])\r\n                    {\r\n                        k=ch1[r][j];\r\n                        x=r;\r\n                        y=j;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        for(int i=0;i<s.size();i++)\r\n        {\r\n            if(ch2[s[i]][x]<ch1[x][y])\r\n            {\r\n                ch2[y][s[i]]=ch2[s[i]][y]=ch1[x][y];\r\n            }\r\n            else\r\n            {\r\n                ch2[y][s[i]]=ch2[s[i]][y]=ch2[s[i]][x];\r\n            }\r\n        }\r\n        s.push_back(y);\r\n        sum+=k;\r\n        v[y]=1;\r\n        ch1[x][y]=-1;\r\n        ch1[y][x]=-1;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int N;scanf(\"%d\",&N);\r\n    while(N--)\r\n    {\r\n        int m,n;scanf(\"%d%d\",&m,&n);\r\n        memset(ch1,-1,sizeof(ch1));memset(ch2,-1,sizeof(ch2));memset(v,0,sizeof(v));\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            int x,y,z;scanf(\"%d%d%d\",&x,&y,&z);\r\n            ch1[x][y]=z;ch1[y][x]=z;\r\n            ch2[x][y]=z;ch2[y][x]=z;\r\n        }\r\n        prim(1,m);\r\n        int flat=0;\r\n        for(int i=1;i<=m;i++)\r\n        {\r\n            for(int j=1;j<=m;j++)\r\n            {\r\n                if(ch1[i][j]!=-1)\r\n                {\r\n                    int k=sum-ch2[i][j]+ch1[i][j];\r\n                    if(k==sum)\r\n                    {\r\n                        flat=1;\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            if(flat)\r\n                break;\r\n        }\r\n        if(flat)cout<<\"Yes\"<<endl;\r\n        else cout<<\"No\"<<endl;\r\n    }\r\n}"
},
{
"pid":119,
"code":"\n#include<cstdio>  \r\n#include<algorithm>  \r\n#include<cmath>  \r\nusing namespace std;  \r\n\r\nconst int N = 100010;  \r\nint maxsum[N][20], minsum[N][20];  \r\n\r\nvoid RMQ(int num) \r\n{  \r\n    for(int j = 1; j < 20; ++j)  \r\n        for(int i = 1; i <= num; ++i)  \r\n            if(i + (1 << j) - 1 <= num)  \r\n            {  \r\n                maxsum[i][j] = max(maxsum[i][j - 1], maxsum[i + (1 << (j - 1))][j - 1]);  \r\n                minsum[i][j] = min(minsum[i][j - 1], minsum[i + (1 << (j - 1))][j - 1]);  \r\n            }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int num, query;  \r\n    int src, des;  \r\n    scanf(\"%d %d\", &num, &query);  \r\n        for(int i = 1; i <= num; ++i) \r\n        {  \r\n            scanf(\"%d\", &maxsum[i][0]);  \r\n            minsum[i][0] = maxsum[i][0];  \r\n        }  \r\n        RMQ(num);  \r\n        while(query--) \r\n        {  \r\n            scanf(\"%d %d\", &src, &des);  \r\n            int k = (int)(log(des - src + 1.0) \/ log(2.0));  \r\n            int maxres = max(maxsum[src][k], maxsum[des - (1 << k) + 1][k]);  \r\n            int minres = min(minsum[src][k], minsum[des - (1 << k) + 1][k]);  \r\n            printf(\"%d\\n\", maxres - minres);  \r\n        }  \r\n    return 0;  \r\n}"
},
{
"pid":120,
"code":"\n#include<stdio.h>\r\n#include<stack>\r\n#include<string.h>\r\nusing namespace std;\r\n#define M 100100\r\n#define N 5000\r\nstack<int>s;\r\n\r\nint n,m,t; \r\nint con,belong[N];\r\nint head[N],next[M],to[M]; \r\nint dfn[N]; \r\nint low[N]; \r\nbool flag[N]; \r\nint min(int a,int b)\r\n{\r\n    return a<b?a:b;\r\n}\r\n\r\nvoid add(int u,int v)\r\n{\r\n    to[m]=v;\r\n    next[m]=head[u];\r\n    head[u]=m++;\r\n}\r\n\r\nvoid tarjan(int u)\r\n{\r\n    int v,p;\r\n    t++;\r\n    dfn[u]=low[u]=t;\r\n    s.push(u);\r\n    flag[u]=true;\r\n    for(p=head[u];p>0;p=next[p])\r\n    {\r\n        v=to[p];\r\n        if(dfn[v]==0)\r\n        {\r\n            tarjan(v); \r\n            low[u]=min(low[u],dfn[v]);\r\n        }\r\n        else if(flag[v]) \r\n            low[u]=min(low[u],dfn[v]);\r\n    }\r\n    if(dfn[u]==low[u]) \r\n    {\r\n        int tmp=-1;\r\n        con++;  \r\n        while(tmp!=u)  \r\n        {\r\n            tmp=s.top();\r\n            s.pop();\r\n            belong[tmp]=con;\r\n            flag[tmp]=false;\r\n        }\r\n    }\r\n}\r\n\r\nvoid solve()  \r\n{\r\n    for(int i=1;i<=n;++i)\r\n        if(dfn[i]==0)\r\n            tarjan(i);\r\n}\r\n\r\nvoid contract() \r\n{\r\n    int innum=0,outnum=0,i,j;\r\n    bool in[N],out[N];\r\n    memset(in,0,sizeof(in));\r\n    memset(out,0,sizeof(out));\r\n    for(i=1;i<=n;i++)\r\n        for(j=head[i];j>0;j=next[j])\r\n            if(belong[i]!=belong[to[j]]) \r\n            {\r\n                out[belong[i]]=1;\r\n                in[belong[to[j]]]=1;\r\n            }\r\n    for(i=1;i<=con;++i)\r\n    {\r\n        if(in[i]==0)\r\n            innum++;\r\n        if(out[i]==0)\r\n            outnum++;\r\n    }\r\n    if(con==1)\r\n        printf(\"0\\n\");\r\n    else\r\n        printf(\"%d\\n\",innum>outnum?innum:outnum);\r\n}\r\n\r\nint main()\r\n{\r\n    int T,a;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        while(!s.empty())\r\n            s.pop();\r\n        memset(head,0,sizeof(head));\r\n        memset(next,0,sizeof(next));\r\n        memset(to,0,sizeof(to));\r\n        memset(dfn,0,sizeof(dfn));\r\n        m=1;\r\n        t=0;\r\n        con=0;\r\n        scanf(\"%d\",&n);\r\n        for(int i=1;i<=n;++i)\r\n        {\r\n            while(scanf(\"%d\",&a),a)\r\n               add(i,a);\r\n        }\r\n        solve();\r\n        contract();\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":121,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int T,i,j,t,sum;\r\n    char s1[11],s2[11];\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%s %s\",s1,s2);\r\n        for(sum=i=0;s1[i]!='\\0';i++)\r\n        {\r\n            for(t=j=0;s2[j]!='\\0';j++)\r\n            t+=s2[j]-'0';\r\n            sum+=(s1[i]-'0')*t;\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":122,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint shu[310];\r\nint main()\r\n{\r\n    int n,i,j,k,x;\r\n    long long t;\r\n    for(i=0;i<310;i++)\r\n    shu[i]=i*(i+1)\/2;\r\n    scanf(\"%d\",&n);\r\n   for(k=1;k<=n;k++)\r\n   {\r\n      scanf(\"%d\",&x);\r\n      t=0;\r\n      for(i=1;i<=x;i++)\r\n      t+=shu[i+1]*i;\r\n      printf(\"%d %d %lld\\n\",k,x,t);\r\n   }\r\n   return 0;\r\n}"
},
{
"pid":123,
"code":"\n#include<stdio.h>\r\n\r\nconst int N = 1000002;\r\n\r\nstruct TREE\r\n{\r\n\tint Left;\r\n\tint Right;\r\n\tint num;\r\n};\r\nTREE tree[N<<2];\r\n\r\nvoid Build(int root, int l, int r)\r\n{\r\n\ttree[root].Left = l;\r\n\ttree[root].Right = r;\r\n\ttree[root].num = 0;\r\n\tif(l < r)\r\n\t{\r\n\t\tint m = (l + r)>>1;\r\n\t\tBuild(root<<1, l, m);\r\n\t\tBuild(root<<1|1, m + 1, r);\r\n\t}\r\n}\r\n\r\nvoid Insert(int root, int b, int e, int v)\r\n{\r\n\tif(b <= tree[root].Left && tree[root].Right <= e)\r\n\t{\r\n\t\ttree[root].num += v;\r\n\t\treturn;\r\n\t}\r\n\tint m = (tree[root].Left + tree[root].Right)>>1;\r\n\tif(e <= m)\r\n\t\tInsert(root<<1, b, e, v);\r\n\telse if(b > m)\r\n\t\tInsert(root<<1|1, b, e, v);\r\n\telse\r\n\t{\r\n\t\tInsert(root<<1, b, m, v);\r\n\t\tInsert(root<<1|1, m + 1, e, v);\r\n\t}\r\n}\r\n\r\nint Query(int root, int x)\r\n{\r\n\tif(tree[root].Left == tree[root].Right)\r\n\t\treturn tree[root].num;\r\n\tint m = (tree[root].Left + tree[root].Right)>>1;\r\n\tint sum = tree[root].num;\r\n\tif(x <= m)\r\n\t\tsum += Query(root<<1, x);\r\n\telse\r\n\t\tsum += Query(root<<1|1, x);\r\n\treturn sum;\r\n}\r\n\r\nint main()\r\n{\r\n\tint n,m;\r\n\tint b,e,v;\r\n\tchar str[10];\r\n\tint i;\r\n\twhile(scanf(\"%d %d\", &n, &m) != EOF)\r\n\t{\r\n\t\tBuild(1, 1, m);\r\n\t\tfor(i = 0; i < n; ++i)\r\n\t\t{\r\n\t\t\tscanf(\"%s\", str);\r\n\t\t\tif(str[0] == 'A')\r\n\t\t\t{\r\n\t\t\t\tscanf(\"%d %d %d\", &b, &e, &v);\r\n\t\t\t\tInsert(1, b, e, v);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tscanf(\"%d\", &b);\r\n\t\t\t\tprintf(\"%d\\n\", Query(1, b));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":124,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n\r\nint cmp(const void *a, const void *b){  \r\n    return *(int *)a - *(int *)b;  \r\n}  \r\n\r\nint main(){  \r\n    int t, n;  \r\n    scanf(\"%d\", &t);  \r\n    while(t-- && scanf(\"%d\", &n)){  \r\n        int *a = (int *)malloc(sizeof(int) * n);  \r\n        int i = 0;  \r\n        while(i < n)  \r\n            scanf(\"%d\", &a[i++]);  \r\n        qsort(a, n, sizeof(int), cmp);  \r\n        printf(\"%d\\n\", a[n \/ 2]);  \r\n        free(a);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":125,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nchar str[15];\r\nint main()\r\n{\r\n    int n,m,x,j,sum,k,t;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n       scanf(\"%d\",&x);\r\n       j=0;sum=0;\r\n       getchar();\r\n       while(x--)\r\n       {  gets(str);\r\n          if(str[0]=='I')j++;\r\n          else if(str[0]=='O')j--;\r\n          else \r\n          {for(k=5,t=0;str[k]!='\\0';k++)\r\n           t=t*10+str[k]-'0';\r\n           sum+=t\/pow(20,j)*60; }\r\n       }\r\n       printf(\"%d\\n\",sum);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":126,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#include<iostream>\r\nusing namespace std;\r\n#define ll long long\r\nstruct data\r\n{\r\n    int t,l,c;  \r\n}B[3545];       \r\nint n,r;   \r\n#include<map>\r\n#include<queue>\r\n#include<set>\r\nmap<ll,bool > vis;\r\nll s;\r\ninline bool check(ll s,int x) \r\n{\r\n    int tx=(s&(7ll<<(x*3)))>>(x*3);\r\n    for(int i=0;i<n;i++)\r\n    {\r\n        if(i==x) continue;\r\n        int ti=(s&(7ll<<(i*3)))>>(i*3);\r\n        if(B[x].t==B[i].t) {\r\n            if(B[x].c!=B[i].c) continue;\r\n            if(tx+B[x].l<=ti||ti+B[i].l<=tx) continue;\r\n            return 0;\r\n        } else {\r\n            if(tx+B[x].l>B[i].c&&B[i].c>=tx&&\r\n               ti<=B[x].c&&B[x].c<B[i].l+ti) {\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n    return 1;\r\n}\r\ninline bool done(ll s)\r\n{\r\n    for(int i=0;i<n;i++) {\r\n        if(B[i].t==1) continue;\r\n        int tt= ((s&(7ll<<(3*r)))>>(r*3));\r\n        if(B[i].c<tt+B[r].l) continue;\r\n        int l=((s&(7ll<<(3*i)))>>(i*3)) , r=l+B[i].l;\r\n        if(r<=2||l>2) continue;\r\n        return 0;\r\n    }\r\n    return 1;\r\n}\r\ninline void cover(ll& s,int x,int p)\r\n{\r\n    s&=~(7ll<<(x*3));\r\n    s|=(ll)p<<(x*3);\r\n}\r\n#define pii  pair<ll,int>\r\n#define  mp  make_pair\r\nint bfs(ll s)\r\n{\r\n    if(done(s)) return 1;\r\n    queue< pii  > q;\r\n    q.push(mp(s,0));\r\n    vis.clear();\r\n    vis[s]=1;\r\n    while(!q.empty()) {\r\n        pii tt=q.front(); q.pop();\r\n        ll u=tt.first;\r\n        int d=tt.second+1;\r\n        for(int i=0;i<n;i++) {\r\n            int p=(u&(7ll<<(i*3)))>>(i*3);\r\n            for(int j=1;j<=p;j++) {\r\n                ll v=u;\r\n                cover(v,i,p-j);\r\n                if(!check(v,i)) break;\r\n                if(done(v)) return d+1;\r\n                if(vis[v]) continue;\r\n                vis[v]=1;\r\n                q.push(mp(v,d));\r\n            }\r\n            for(int j=1;p+j+B[i].l<=6;j++) {\r\n                ll v=u;\r\n                cover(v,i,p+j);\r\n                if(!check(v,i)) break;\r\n                if(done(v)) return d+1;\r\n                if(vis[v]) continue;\r\n                vis[v]=1;\r\n                q.push(mp(v,d));\r\n            }\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nint main()\r\n{\r\n    while(cin>>n&&n)\r\n    {\r\n       ll s=0;\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            int t,lx,ly,rx,ry;\r\n            cin>>t>>lx>>ly>>rx>>ry;\r\n            if(lx==rx) {\r\n                B[i].t=0;\r\n                B[i].l=ry-ly+1;\r\n                B[i].c=lx;\r\n                s|=((ll)ly<<(3*i));\r\n            }\r\n            else {\r\n                B[i].t=1;\r\n                B[i].l=rx-lx+1;\r\n                B[i].c=ly;\r\n                s|=((ll)lx<<(3*i));\r\n            }\r\n        }\r\n        cin>>r;\r\n        cout<<bfs(s)<<endl;\r\n    }\r\n}"
},
{
"pid":127,
"code":"\n#include<stdio.h>\r\nint fun(int n)\r\n{\r\nint t=n,i;\r\nfor(i=1;i<n-2;i++)\r\n{\r\n\tt*=n;\r\n\tt%=10003;\r\n}\r\nreturn t;\r\n}\r\nint main()\r\n{\r\n\tint ncase,n;\r\n\tscanf(\"%d\",&ncase);\r\n\twhile(ncase--)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tif(n==2)printf(\"1\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"%d\\n\",fun(n));\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":128,
"code":"\n#include<iostream>\r\n#include<cstring>\r\n#include<stdlib.h>\r\n#include<cstdio>\r\n#define N 510\r\nusing namespace std;\r\n\r\nchar a[N];\r\n\r\ndouble exp()\r\n{\r\n    char ch[10];\r\n    sscanf(a,\"%s\",ch);\r\n    int len=strlen(ch);\r\n    strcpy(a,a+len+1);\r\n    switch(ch[0])\r\n    {\r\n    case '+':return exp()+exp();\r\n    case '-':return exp()-exp();\r\n    case '*':return exp()*exp();\r\n    case '\/':return exp()\/exp();\r\n    default :return atof(ch);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    double ans;\r\n    while(gets(a))\r\n    {\r\n        ans=exp();\r\n        printf(\"%0.2lf\\n\",ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":129,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n#include <vector>  \r\n\r\n#define N 10010  \r\n\r\nusing namespace std;  \r\n\r\nstruct Node{  \r\n    vector<int>father;  \r\n    vector<int>son;  \r\n};  \r\n\r\nint fa[N];  \r\nint ct;  \r\n\r\nint getfather(int i)  \r\n{  \r\n    if(fa[i] == i) return i;  \r\n    else return  fa[i] = getfather(fa[i]);  \r\n}  \r\n\r\nvoid merge(int a, int b)  \r\n{  \r\n    a = getfather(a);  \r\n    b = getfather(b);  \r\n    if(a == b) return;  \r\n    else{  \r\n        fa[b] = a;  \r\n        ct --;  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int z = 0;  \r\n    while(1){  \r\n        ct = 0;  \r\n        z ++;  \r\n        Node *Nlist[N] = {};  \r\n        int m, n;  \r\n        scanf(\"%d%d\", &m, &n);  \r\n        if(m == -1 && n == -1) break;  \r\n        int list[N];  \r\n        int li = 0;  \r\n        int ok;  \r\n        for(int i = 0; i < N; i ++) fa[i] = i;  \r\n        if(!(m == 0 && n == 0)){  \r\n            while(1){  \r\n                ct ++;  \r\n                ok = 0;  \r\n                merge(m, n);  \r\n                for(int i = 0; i < li; i ++){  \r\n                    if(list[i] == m){  \r\n                        ok = 1;  \r\n                        break;  \r\n                    }  \r\n                }  \r\n                if(!ok) list[li++] = m;  \r\n                ok = 0;  \r\n                for(int i = 0; i < li; i ++){  \r\n                    if(list[i] == n){  \r\n                        ok = 1;  \r\n                        break;  \r\n                    }  \r\n                }  \r\n\r\n                if(!ok) list[li++] = n;  \r\n                if(Nlist[m] == NULL) Nlist[m] = (Node *)calloc(1, sizeof(Node));  \r\n                Nlist[m]->son.push_back(n);  \r\n                if(Nlist[n] == NULL) Nlist[n] = (Node *)calloc(1, sizeof(Node));  \r\n                Nlist[n]->father.push_back(m);         \r\n\r\n                scanf(\"%d%d\", &m, &n);  \r\n                if(m == 0 && n == 0) break;  \r\n            }  \r\n            ok = 0;  \r\n            int head = 0;  \r\n            if(ct != 0) ok = 1;  \r\n            if(!ok) for(int i = 0; i < li; i ++){  \r\n                Node * nw = Nlist[list[i]];  \r\n                if(nw ->father.size() == 0){  \r\n                    head ++;  \r\n                    if(head > 1){  \r\n                        ok = 1;  \r\n                        break;  \r\n                    }  \r\n                    continue;  \r\n                }  \r\n                if(nw ->father.size() > 1){  \r\n                    ok = 1;  \r\n                    break;  \r\n                }  \r\n                int father = nw ->father.at(0);  \r\n                for(int t = 0; t < (int)nw ->son.size(); t++){  \r\n                    if(father == nw ->son.at(t)){  \r\n                        ok = 1;  \r\n                        break;  \r\n                    }  \r\n                }  \r\n                if(ok) break;  \r\n            }  \r\n            if(head == 0) ok = 1;  \r\n        }  \r\n        else ok = 0;  \r\n        if(!ok) printf(\"Case %d is a tree.\\n\", z);  \r\n        else printf(\"Case %d is not a tree.\\n\", z);  \r\n\r\n        for(int i = 0; i < li; i ++){  \r\n            free(Nlist[i]);  \r\n        }  \r\n    }  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":130,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nstruct snow  \r\n{  \r\n    int a[6];  \r\n    struct snow *next;  \r\n};  \r\nsnow *s[100005];  \r\nbool fun(int b[],int sum)  \r\n{  \r\n    snow *p;p=s[sum]->next;  \r\n    while(p)  \r\n    {  \r\n        for(int i=0;i<6;i++)  \r\n        {  \r\n            if(b[i]==p->a[0])  \r\n            {  \r\n                int j;  \r\n                for(j=1;j<6;j++)  \r\n                {  \r\n                    if(b[(i+j)%6]!=p->a[j])break;  \r\n                }  \r\n                if(j==6)return true;  \r\n                for(j=1;j<6;j++)  \r\n                {  \r\n                    if(b[((i-j)%6+6)%6]!=p->a[j])break;  \r\n                }  \r\n                if(j==6)return true;  \r\n            }  \r\n        }  \r\n        p=p->next;  \r\n    }  \r\n    p=new snow;  \r\n    for(int i=0;i<6;i++)  \r\n    {  \r\n        p->a[i]=b[i];  \r\n    }  \r\n    p->next=s[sum]->next;  \r\n    s[sum]->next=p;  \r\n    return false;  \r\n}  \r\nint main()  \r\n{  \r\n    int n;cin>>n;  \r\n    while(n--)  \r\n    {  \r\n        int m;cin>>m;  \r\n        for(int i=0;i<100000;i++)  \r\n        {  \r\n            s[i]=new snow;s[i]->next=NULL;  \r\n        }  \r\n        int flat=1;  \r\n        for(int i=0;i<m;i++)  \r\n        {  \r\n            int b[6];int sum=0;  \r\n            for(int j=0;j<6;j++)  \r\n            {  \r\n                scanf(\"%d\",&b[j]);sum+=b[j];  \r\n            }  \r\n            sum%=100000;  \r\n            if(flat)  \r\n            {  \r\n                if(fun(b,sum)) flat=0;  \r\n            }  \r\n        }  \r\n        if(!flat)printf(\"Twin snowflakes found.\\n\");  \r\n        else printf(\"No two snowflakes are alike.\\n\");  \r\n    }  \r\n}"
},
{
"pid":131,
"code":"\n#include <iostream>\r\n#include<algorithm>\r\n#include<cstdio>\r\n#include<cstring>\r\nusing namespace std;\r\nlong long  turn(long long x,long long y)\r\n{\r\n    while(y!=0)\r\n    {\r\n       int r=x%y;\r\n       x=y;\r\n       y=r;\r\n    }\r\n    return x;\r\n}\r\nlong long ten(int x)\r\n{\r\n    long long sum=1;\r\n    while(x)\r\n    {\r\n        sum*=10;\r\n        x--;\r\n    }\r\n    return sum;\r\n}\r\nint main()\r\n{\r\n    int n,x,y;\r\n    long long a,b,c,a1,b1,c1,w;\r\n    long long u,d,u1,d1;\r\n    char char1[21],char2[21],char3[21],char4[21],char5[21],char6[21];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%s %s %s %s %s %s\",char1,char2,char3,char4,char5,char6);\r\n        x=strlen(char2);\r\n        y=strlen(char3);\r\n        if(char2[0]=='$'&&char3[0]!='$')\r\n        {\r\n            c=atoll(char3);\r\n            u=c;\r\n            d=(ten(y)-1);\r\n            w=turn(u,d);\r\n            u\/=w;d\/=w;\r\n        }\r\n        else if(char2[0]!='$'&&char3[0]!='$')\r\n        {\r\n            b=atoll(char2); c=atoll(char3);\r\n            u=(b*(ten(y)-1)+c);\r\n            d=ten(x)*(ten(y)-1);\r\n            w=turn(u,d);\r\n            u\/=w;d\/=w;\r\n        }\r\n        else if(char2[0]!='$'&&char3[0]=='$')\r\n        {\r\n            u=atoll(char2);\r\n            d=ten(x);\r\n        }\r\n        else\r\n        {\r\n            u=0;d=1;\r\n        }\r\n\r\n        x=strlen(char5);\r\n        y=strlen(char6);\r\n        if(char5[0]=='$'&&char6[0]!='$')\r\n        {\r\n            c1=atoll(char6);u1=c1;\r\n            d1=(ten(y)-1);\r\n            w=turn(u1,d1);\r\n            u1\/=w;d1\/=w;\r\n        }\r\n        else if(char5[0]!='$'&&char6[0]!='$')\r\n        {\r\n            b1=atoll(char5);c1=atoll(char6);\r\n            u1=(b1*(ten(y)-1)+c1);\r\n            d1=ten(x)*(ten(y)-1);\r\n            w=turn(u1,d1);\r\n            u1\/=w;d1\/=w;\r\n        }\r\n        else if(char5[0]!='$'&&char6[0]=='$')\r\n        {\r\n            u1=atoll(char5);\r\n            d1=ten(x);\r\n        }\r\n        else\r\n        {\r\n            u1=0;d1=1;\r\n        }\r\n\r\n        if(char1[0]=='$') a=0;\r\n        else a=atoll(char1);\r\n\r\n        if(char4[0]=='$') a1=0;\r\n        else a1=atoll(char4);\r\n\r\n        u=u*d1+u1*d;\r\n        d*=d1;\r\n        w=turn(u,d);\r\n        u\/=w;d\/=w;\r\n\r\n        u=(a+a1)*d+u;\r\n        w=turn(u,d);\r\n        u\/=w;d\/=w;\r\n\r\n        if(d!=1)\r\n        printf(\"%lld\/%lld\\n\",u,d);\r\n        else\r\n        printf(\"%lld\\n\",u);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":132,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<ctype.h>   \r\n#define MAX 5010\r\n\r\nint main()\r\n{\r\n    int t,i,j,st,len,end,k,max;\r\n    int pos[MAX];\r\n    char s[MAX],s1[MAX];\r\n\r\n    scanf(\"%d\",&t);\r\n    getchar();\r\n    while(t--)\r\n    {\r\n        gets(s);\r\n        len=strlen(s);\r\n        k=st=max=end=0;        \r\n        for(i=0;i<len;++i)          \r\n        {\r\n            if(isalpha(s[i]))       \r\n            {\r\n                pos[k]=i;           \r\n                if(s[i]<97)       \r\n                    s1[k++]=s[i]+32;\r\n                else\r\n                    s1[k++]=s[i];\r\n            }\r\n        }\r\n        for(i=0;i<k;++i)\r\n        {    \r\n            for(j=0;j<=i&&i+j<k;++j)        \r\n            {\r\n                if(s1[i-j]!=s1[i+j])\r\n                    break;\r\n                if(j*2+1>max)\r\n                {\r\n                    max=2*j+1;\r\n                    st=pos[i-j];\r\n                    end=pos[i+j];\r\n                }\r\n            }\r\n            for(j=0;j<=i&&i+j+1<k;++j)    \r\n            {\r\n                if(s1[i-j]!=s1[i+j+1])\r\n                    break;\r\n                if(j*2+2>max)\r\n                {\r\n                    max=2*j+2;         \r\n                    st=pos[i-j];\r\n                    end=pos[i+j+1];\r\n                }\r\n            }\r\n        }\r\n        for(i=st;i<=end;++i)\r\n            printf(\"%c\",s[i]);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":133,
"code":"\n#include<queue>  \r\n#include<cstdio>  \r\n#include<cmath>  \r\n#include<iostream>  \r\nusing namespace std;  \r\nconst int M=1000001;  \r\nint inf=1<<28;  \r\n\r\nstruct node{  \r\n    node *next;  \r\n    int num;  \r\n    int x;  \r\n    node(){  \r\n        next=NULL;  \r\n    }  \r\n    node(int a){  \r\n        x=a;  \r\n        num=1;  \r\n        next=NULL;  \r\n    }  \r\n};  \r\nnode no[M];  \r\nvoid del(node * h){  \r\n    if (h==NULL) return;  \r\n    del(h->next);  \r\n    delete h;  \r\n}  \r\nint t;  \r\nint hash_size;  \r\nbool hash1(int x){  \r\n    t=x%M;  \r\n    node *p=no[t].next;  \r\n    while(p){  \r\n        if (p->x ==x){  \r\n            p->num++;  \r\n            return 1;  \r\n        }  \r\n        else p=p->next;  \r\n    }  \r\n    p=new node(x);  \r\n    p->next=no[t].next;  \r\n    no[t].next=p;  \r\n    hash_size++;  \r\n    return 0;  \r\n}  \r\n\r\nbool hash2(int x){  \r\n    node *p=no[x%M].next;  \r\n    while(p){  \r\n        if (p->x==x){  \r\n            if (p->num>=2){  \r\n                p->num--;  \r\n                return 1;  \r\n            }  \r\n            else return 0;   \r\n        }  \r\n        else p=p->next;  \r\n    }  \r\n    return 0;  \r\n}  \r\n\r\nint main(){  \r\n    int T,n,ans;  \r\n    int x;  \r\n    bool f;  \r\n    scanf(\"%d\",&T);  \r\n    getchar();  \r\n    while(T--){  \r\n        for (int i=0;i<M;i++) {  \r\n            del(no[i].next);  \r\n            no[i].next=NULL;\r\n        }  \r\n        scanf(\"%d\",&n);  \r\n        queue<int> q;  \r\n        ans=inf;  \r\n        hash_size=0;  \r\n        for (int i=0;i<n;i++){  \r\n            scanf(\"%d\",&x);  \r\n\r\n            if (q.empty()) {  \r\n                q.push(x);  \r\n                no[x%M].next=new node(x);  \r\n                ans=1;    \r\n                hash_size++;  \r\n            }  \r\n            else {  \r\n                f=hash1(x);  \r\n                if (f){  \r\n                    q.push(x);  \r\n                    t=q.front();  \r\n                    while(hash2(t)){  \r\n                        q.pop();  \r\n                        t=q.front();  \r\n                    }  \r\n                    ans= min(ans,(int)q.size());\r\n                }  \r\n                else {  \r\n                    q.push(x);  \r\n                    ans=q.size();\r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n}"
},
{
"pid":135,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int n,a,b,sum,x;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n       scanf(\"%d\",&x);\r\n       sum=0;\r\n       while(x--)\r\n       {\r\n          scanf(\"%d%d\",&a,&b);\r\n          sum^=a%(b+1);\r\n       }\r\n       printf(\"%s\\n\",sum?\"Win\":\"Lose\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":136,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cmath>  \r\n#include<cstring>  \r\n#include<string.h>  \r\n#include<stdlib.h>  \r\n#include<algorithm>  \r\n#include<map>  \r\nusing namespace std;  \r\nconst int p = 19373;  \r\nconst int a = 2* 50*50*50*50;  \r\ntypedef struct Node  \r\n{  \r\n    int value,num;  \r\n    struct Node * next;  \r\n}node;  \r\nnode * res[p];\r\nint main()  \r\n{  \r\n    int T,x1,x2,x3,x4,x5,a1,a2,a3,a4,a5;  \r\n    int i ,j,k;  \r\n    for(i = 0; i < p; i++)  \r\n    res[i] = new node; \r\n    while(cin>>T)  \r\n    {  \r\n        while(T--)  \r\n        {  \r\n            int t ,x;  \r\n            for(i = 0; i< p; i++) \r\n            {  \r\n                res[i]->next = NULL;  \r\n                res[i]->num = 0;  \r\n            }  \r\n            cin>>a1>>a2>>a3>>a4>>a5;  \r\n            for(i = -50;i <= 50 ; i++)\r\n            {  \r\n                if(i == 0)continue; \r\n                for(j = -50; j <= 50; j++)  \r\n                {  \r\n                    if(j == 0) continue;  \r\n                    x = a1*i*i*i + a2*j*j*j;  \r\n                    int sum = x >= 0?x:-x;\r\n                    sum %= p;  \r\n                    node* p1;\r\n                    node* p2 = new node;  \r\n                    p1 = res[sum]->next;  \r\n                    int flag = 0;  \r\n                    while(p1)\r\n                    {  \r\n                        if(p1->value == x)  \r\n                        {  \r\n                            flag = 1;  \r\n                            p1->num++;  \r\n                            delete p2;  \r\n                            break;  \r\n                        }  \r\n                        p1 = p1->next;  \r\n                    }  \r\n                    if(!flag)\r\n                    {  \r\n                        p2->value = x;  \r\n                        p2->num= 1;  \r\n                        p2->next = res[sum]->next;  \r\n                        res[sum]->next = p2;  \r\n                    }  \r\n                }  \r\n            }  \r\n            long long ans =0;  \r\n            for(i = -50; i <= 50; i++)  \r\n            {  \r\n                if(i == 0) continue;  \r\n                for(j = -50; j <= 50; j++)  \r\n                {  \r\n                    if(j == 0) continue;  \r\n                    for(k = -50; k <= 50; k++)  \r\n                    {  \r\n                        if(k == 0) continue;  \r\n                        x = a3*i*i*i + a4*j*j*j + a5*k*k*k;  \r\n                        int sum = x >0? x:-x;  \r\n                        if(sum > a) continue;\r\n                        sum %= p;  \r\n\r\n                        node* p1 = res[sum]->next;  \r\n                        while(p1)  \r\n                        {  \r\n                            if(p1->value == -x)  \r\n                            {  \r\n                                ans += p1->num;  \r\n                                break;  \r\n                            }  \r\n                            else  \r\n                            p1 = p1->next;  \r\n                        }  \r\n\r\n                    }  \r\n                }  \r\n            }  \r\n            cout<<ans<<endl;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":137,
"code":"\n#include<stdio.h>  \r\n#define N 105  \r\nint main()  \r\n{  \r\n    int n,a,i;  \r\n    int num[N];  \r\n    while(~scanf(\"%d\",&n)&&n)  \r\n    {  \r\n        for(i=0;i<N;i++)  \r\n            num[i]=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&a);  \r\n            num[a]++;  \r\n        }  \r\n        for(i=1;i<N;i++)  \r\n        {  \r\n            if(num[i]%2!=0)  \r\n            {  \r\n                printf(\"Win\\n\");  \r\n                break;  \r\n            }  \r\n        }  \r\n        if(i>=N)  \r\n            printf(\"Lose\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":138,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<string>  \r\n#include<time.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\n#define N 1000010  \r\n#define CLR(arr, what) memset(arr, what, sizeof(arr))  \r\n\r\nconst int fib = 111123;  \r\nint Key[N], Head[N], Next[N];  \r\nint top;  \r\n\r\nvoid add(int n)  \r\n{  \r\n    int temp;  \r\n    temp = n % fib;  \r\n    Key[top] = n;  \r\n    Next[top] = Head[temp];  \r\n    Head[temp] = top;  \r\n    top++;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int ncase;  \r\n    char str[8];  \r\n    int num, number;  \r\n    bool flag;  \r\n    CLR(Key, 0);  \r\n    CLR(Head, -1);  \r\n    top = 0;  \r\n    flag = false;  \r\n    scanf(\"%d\", &ncase);  \r\n    while(ncase--)  \r\n    {     \r\n        scanf(\"%s\", str);  \r\n        if(str[0] == 'A')  \r\n        {  \r\n            scanf(\"%d\", &num);  \r\n            for(int i = 0; i < num; ++i)  \r\n            {  \r\n                scanf(\"%d\", &number);  \r\n                add(number);  \r\n            }  \r\n        }  \r\n        else  \r\n        {  \r\n            scanf(\"%d\", &num);  \r\n            for(int i = 0; i < num; ++i)  \r\n            {  \r\n                scanf(\"%d\", &number);  \r\n                int temp = number % fib;  \r\n                for(int j = Head[temp]; j != -1; j = Next[j])  \r\n                    if(Key[j] == number)  \r\n                    {  \r\n                        flag = true;  \r\n                        break;  \r\n                    }  \r\n                    printf(flag == true ? \"YES\\n\" : \"NO\\n\");  \r\n                    flag = false;  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":139,
"code":"\n#include <iostream>\r\n#include <cstring>\r\n\r\nusing namespace std;\r\n\r\nconst int MAX = 12;\r\nint fac[MAX + 1];\r\n\r\nvoid cal()      \r\n{\r\n    fac[0] = 1;\r\n    for(int i = 1; i <= MAX-1; ++i)\r\n        fac[i] = fac[i-1] * i;\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    char s[MAX + 1];\r\n    cal();\r\n    cin >> T;\r\n    while(T--)\r\n    {\r\n        cin >> s;\r\n        int len = strlen(s);\r\n        long long ans = 0;\r\n        for(int i = 0; i < len-1; ++i)\r\n        {\r\n            int count = 0;\r\n            for(int j = i + 1; j <= len-1; ++j)\r\n                if(s[i] > s[j])\r\n                    ++count;\r\n            ans += count * fac[len - i - 1];\r\n        }\r\n        cout << ans + 1 << endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":140,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint a[100010],b[100010];  \r\nint main()  \r\n{  \r\n    int n,d=1,i,j,m;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        for(i=0;i<n;i++)  \r\n            scanf(\"%d\",&a[i]);  \r\n            memset(b,0,sizeof(b));  \r\n            for(m=i=0;i<n;i++)  \r\n            {  \r\n                if(a[i]&&!b[i])  \r\n                {  \r\n                    m++;  \r\n                    b[i]=1;  \r\n                    for(j=i+1;j<n&&!b[j];j++)  \r\n                        if(a[i]>a[j]) break;  \r\n                    else if(a[i]==a[j]) b[j]=1;  \r\n                }  \r\n            }  \r\n        printf(\"Case %d: %d\\n\",d++,m);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":142,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nstruct point\r\n{\r\n\tdouble x, y;\r\n};\r\ndouble det(double x1, double y1, double x2, double y2) \r\n{\r\n\treturn x1 * y2 - x2 * y1;\r\n}\r\ndouble cross(point a, point b, point p)  \r\n{\r\n\treturn det(b.x - a.x, b.y - a.y, p.x - a.x, p.y - a.y);\r\n}\r\ndouble check(point a1, point a2, point b1, point b2) \r\n{\r\n\treturn cross(a1, a2, b1) * cross(a1, a2, b2);\r\n}\r\ndouble getarea(point a, point b, point c)\r\n{\r\n\tdouble ab = sqrt((a.x - b.x) * (a.x - b.x) + (a.y - b.y) * (a.y - b.y));\r\n\tdouble ac = sqrt((a.x - c.x) * (a.x - c.x) + (a.y - c.y) * (a.y - c.y));\r\n\tdouble bc = sqrt((c.x - b.x) * (c.x - b.x) + (c.y - b.y) * (c.y - b.y));\r\n\tdouble q = (ab + ac + bc) \/ 2;\r\n\treturn sqrt(q * (q - ab) * (q - ac) * (q - bc));\r\n}\r\ndouble calculate(point a1, point a2, point b1, point b2)\r\n{\r\n\tdouble s1 = getarea(a1, a2, b1);\r\n\tdouble s2 = getarea(a1, a2, b2);\r\n\treturn (s1 * b2.x + s2 * b1.x) \/ (s1 + s2);\r\n}\r\nint main()\r\n{\r\n\tint n;\r\n\twhile(scanf(\"%d\", &n), n != 0)\r\n\t{\r\n\t\tint i;\r\n\t\tpoint pip[25][2];\r\n\t\tfor(i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tscanf(\"%lf %lf\", &pip[i][0].x, &pip[i][0].y);\r\n\t\t\tpip[i][1].x = pip[i][0].x;\r\n\t\t\tpip[i][1].y = pip[i][0].y - 1;\r\n\t\t}\r\n\t\tint j;\r\n\t\tdouble max_x = -0x7fffffff;\r\n\t\tbool flag = false;\r\n\t\tpoint a, b;\r\n\t\tfor(i = 0; i < n && flag == false; i++)\r\n\t\t{\r\n\t\t\tint index1, index2;\r\n\t\t\tint temp = 0;\r\n\t\t\tfor(temp = 0; temp < 2; temp ++)\r\n\t\t\t{\r\n\t\t\t\ta = pip[i][temp];\r\n\t\t\t\tfor(index1 = i + 1 ; index1 < n && flag == false; index1 ++)\r\n\t\t\t\t{\r\n\t\t\t\t\tfor(index2 = 0; index2 < 2 && flag == false; index2 ++)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\tb = pip[index1][index2];\r\n\t\t\t\t\t\tif( check(a, b, pip[0][0], pip[0][1]) - 0 < 1e-6 )\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tfor(j = 1; j < n; j++)\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tif( check(a, b, pip[j][0], pip[j][1]) - 0 > 1e-6)\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\tdouble x;\r\n\t\t\t\t\t\t\t\t\tif(cross(a, b, pip[j][0]) > 0)\r\n\t\t\t\t\t\t\t\t\t\tx = calculate(a, b, pip[j - 1][1], pip[j][1]);\r\n\t\t\t\t\t\t\t\t\telse\r\n\t\t\t\t\t\t\t\t\t\tx = calculate(a, b, pip[j - 1][0], pip[j][0]);\r\n\t\t\t\t\t\t\t\t\tif(x > max_x)\r\n\t\t\t\t\t\t\t\t\t\tmax_x = x;\r\n\t\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(j == n)\r\n\t\t\t\t\t\t\t\tflag = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag == true)\r\n\t\t\tprintf(\"Through all the pipe.\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"%.2lf\\n\", max_x);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":143,
"code":"\n#include <cstdio>\r\n#include <string>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint fac[13];   \r\nint num[13];  \r\n\r\nvoid cal_fac()\r\n{\r\n    fac[0] = 1;\r\n    for(int i = 1; i < 13; ++i)\r\n        fac[i] = fac[i-1] * i;\r\n}\r\n\r\nvoid init()   \r\n{\r\n    for(int i = 0; i < 13; ++i)\r\n        num[i] = i;\r\n}\r\n\r\nvoid solve(int cnt)\r\n{\r\n    for(int i = 0; i < 12; ++i)\r\n    {\r\n        int t = cnt \/ fac[11 - i];\r\n        printf(\"%c\", num[t] + 'a');\r\n        for(int j = t; j < 11; ++j)\r\n            num[j] = num[j+1];\r\n        cnt %= fac[11 - i];\r\n    }\r\n    printf(\"\\n\");\r\n}\r\n\r\nint main()\r\n{\r\n    int n, cnt;\r\n    cal_fac();\r\n    scanf(\"%d\", &n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%d\", &cnt);\r\n        init();\r\n        solve(cnt-1);  \r\n    }\r\n    return 0;\r\n}"
},
{
"pid":144,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    long int a,b,n,a1,b1,t,m,r;\r\n    scanf(\"%ld\",&m);\r\n    while(m--)\r\n    {\r\n        scanf(\"%ld%ld%ld\",&a,&b,&n);\r\n        a1=a;b1=b;\r\n        if(a1<b1)\r\n        {t=a1;a1=b1;b1=t;}\r\n        while(b1)\r\n        {\r\n            r=a1%b1;\r\n            a1=b1;\r\n            b1=r;\r\n        }\r\n        if(n%a1==0)  printf(\"Yes\\n\");\r\n        else printf(\"No\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":145,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\n#include<math.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int t,n;\r\n    int pd(int n,int m);\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        int i;\r\n        scanf(\"%d\",&n);\r\n        for(i=n\/2;i>0;i--)\r\n        {\r\n            if(pd(n,i)==1)\r\n            {\r\n                printf(\"%d\\n\",i);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}\r\nint pd(int n,int m)\r\n{\r\n    while(m!=0)\r\n    {\r\n        int r=n%m;\r\n        n=m;\r\n        m=r;\r\n    }\r\n    return n;\r\n}"
},
{
"pid":146,
"code":"\n#include <stdio.h>  \r\n#include <string.h>    \r\n#include <math.h>  \r\n#define FIB_NUM 62  \r\n\r\nlong long fib[FIB_NUM];    \r\nint num[10050];    \r\nbool res[520];    \r\n\r\nvoid Build_Fib()                                        \r\n{  \r\n    fib[0] = 0;  \r\n    fib[1] = 1;  \r\n    for(int i = 2; i < FIB_NUM; i ++){  \r\n        fib[i] = fib[i - 1] + fib[i - 2];  \r\n    }  \r\n}  \r\n\r\nint main()    \r\n{    \r\n    int loop, ct;  \r\n    Build_Fib();  \r\n    scanf(\"%d\", &loop);  \r\n    while(loop --){  \r\n        bool flag;  \r\n        long long sum = 0, sum_back;                    \r\n        int i, end_pos = 0;    \r\n        memset(num, 0, sizeof(num));    \r\n        memset(res, 0, sizeof(res));    \r\n\r\n        flag = 0;  \r\n        scanf(\"%d\", &ct);  \r\n        i = 2 * log( (double)ct ) \/ log(3.0) + 5;         \r\n        while(ct){                                       \r\n            scanf(\"%d\", &num[i]);   \r\n            if(!flag && !num[i]){                       \r\n                continue;  \r\n            }  \r\n\r\n            flag = 1;  \r\n            ct -= num[i];    \r\n            i ++;    \r\n        }   \r\n        end_pos = i - 1;                                 \r\n\r\n        i = 1;  \r\n        while(++ i <= end_pos){                            \r\n            sum += num[i] * fib[i];     \r\n        }  \r\n        sum_back = sum;  \r\n\r\n        i = FIB_NUM - 1;    \r\n        while(sum > 0){                                     \r\n            if(sum >= fib[i]){    \r\n                res[i] = 1;    \r\n                sum -= fib[i];    \r\n            }    \r\n            i --;    \r\n        }    \r\n\r\n        i = 1;    \r\n        flag = 0;  \r\n        sum = sum_back;  \r\n        while(sum) {                                 \r\n            if(res[i]){  \r\n                flag = 1;  \r\n                sum -= fib[i];  \r\n            }    \r\n            if(flag)                                \r\n                printf(\"%d \", res[i]);    \r\n            i ++;    \r\n        }    \r\n        printf(\"\\n\");  \r\n    }    \r\n\r\n    return 0;    \r\n}"
},
{
"pid":147,
"code":"\n#include <algorithm>\r\n#include <iostream>\r\n#include <numeric>\r\n#include <vector>\r\n#include <string.h>\r\n#include <utility>\r\nusing namespace std;\r\n\r\ntypedef long long lld;\r\npair<lld,lld> Eculid(lld a,lld b, lld left);\r\nlld x,y,a,b,L;\r\nvoid Handle();\r\nlld gcd(lld x, lld y);\r\nint main(){\r\n\tint icase;\r\n\tcin>>icase;\r\n\twhile(icase--){\r\n\t\tHandle();\r\n\t}\r\n}\r\n\r\nvoid Handle(){\r\n\tcin>>x>>y>>a>>b>>L;\r\n\tint t= gcd(a-b,L);\r\n\tif((y-x)%t!= 0){\r\n\t\tcout<<\"Impossible\"<<endl;\r\n\t\treturn;\r\n\t}\r\n\tpair<lld,lld> result= Eculid(a-b,L,y-x);\r\n\tx= result.first%(L\/t);\r\n\tif(x< 0 && L\/t< 0){\r\n\t\tx-=L\/t;\r\n\t}else if(x< 0 && L\/t > 0){\r\n\t\tx+=L\/t;\r\n\t}\r\n\tcout<<x<<endl;\r\n}\r\n\r\npair<lld,lld> Eculid(lld a,lld b, lld left){\r\n\tif(!b){\r\n\t\treturn make_pair<lld,lld>(left\/a,0);\r\n\t}else{\r\n\t\tpair<lld,lld> base= Eculid(b,a%b,left);\r\n\t\treturn make_pair<lld,lld>(-base.second,-(base.first+a\/b*base.second));\r\n\t}\r\n}\r\n\r\nlld gcd(lld x, lld y){\r\n\tlld t;\r\n\twhile(y){\r\n\t\tt= x;\r\n\t\tx= y;\r\n\t\ty= t%y;\r\n\t}\r\n\treturn x;\r\n}"
},
{
"pid":148,
"code":"\n#include <stdio.h>\r\n\r\n#define N 20000\r\nint a[N]={0,1};\r\n\r\nint init()\r\n{\r\n     int i,j,k;\r\n    for(i=2;i<N;i++)\r\n    {\r\n        a[i]=(a[i-1]+a[i-2])%10000;\r\n        if(a[i]==0)\r\n        {\r\n            a[i+1]=(a[i]+a[i-1])%10000;\r\n            if(a[i+1]==1)\r\n                break;\r\n        }\r\n    }\r\n    return i;\r\n}\r\n\r\nint main()\r\n{\r\n     int i,j,k;\r\n     int n;\r\n    int period = init();\r\n    while(scanf(\"%d\",&n),n!=-1)\r\n    {\r\n          n%=period;\r\n        printf(\"%d\\n\",a[n]);\r\n    }\r\n    return  0;\r\n}"
},
{
"pid":149,
"code":"\n#include<stdio.h>\r\n#include<iostream>\r\n#include<string.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nconst int MAXN=100010;\r\nint tree[20][MAXN];\r\nint sorted[MAXN];\r\nint toleft[20][MAXN];\r\n\r\nvoid build(int l,int r,int dep)\r\n{\r\n    if(l==r)return;\r\n    int mid=(l+r)>>1;\r\n    int same=mid-l+1;\r\n    for(int i=l;i<=r;i++)\r\n      if(tree[dep][i]<sorted[mid])\r\n        same--;\r\n    int lpos=l;\r\n    int rpos=mid+1;\r\n    for(int i=l;i<=r;i++)\r\n    {\r\n        if(tree[dep][i]<sorted[mid])\r\n        {\r\n            tree[dep+1][lpos++]=tree[dep][i];\r\n\r\n        }\r\n        else if(tree[dep][i]==sorted[mid]&&same>0)\r\n        {\r\n            tree[dep+1][lpos++]=tree[dep][i];\r\n            same--;\r\n        }\r\n        else\r\n           tree[dep+1][rpos++]=tree[dep][i];\r\n        toleft[dep][i]=toleft[dep][l-1]+lpos-l;\r\n    }\r\n    build(l,mid,dep+1);\r\n    build(mid+1,r,dep+1);\r\n}\r\n\r\nint query(int L,int R,int l,int r,int dep,int k)\r\n{\r\n    if(l==r)return tree[dep][l];\r\n    int mid=(L+R)>>1;\r\n    int cnt=toleft[dep][r]-toleft[dep][l-1];\r\n    if(cnt>=k)\r\n    {\r\n        int newl=L+toleft[dep][l-1]-toleft[dep][L-1];\r\n        int newr=newl+cnt-1;\r\n        return query(L,mid,newl,newr,dep+1,k);\r\n    }\r\n    else\r\n    {\r\n        int newr=r+toleft[dep][R]-toleft[dep][r];\r\n        int newl=newr-(r-l-cnt);\r\n        return query(mid+1,R,newl,newr,dep+1,k-cnt);\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int iCase=0;\r\n    int n,m;\r\n    int A,B;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        iCase++;\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&tree[0][i]);\r\n            sorted[i]=tree[0][i];\r\n        }\r\n        sort(sorted+1,sorted+n+1);\r\n        build(1,n,0);\r\n        scanf(\"%d\",&m);\r\n        printf(\"Case %d:\\n\",iCase);\r\n        while(m--)\r\n        {\r\n            scanf(\"%d%d\",&A,&B);\r\n            int k=(B-A)\/2+1;\r\n            printf(\"%d\\n\",query(1,n,A,B,0,k));\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":150,
"code":"\n#include<iostream>\r\n#include<cstring>\r\n#include<stack>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int num,i,j,k,flag[20];\r\n    stack <char> s;\r\n    char s1[10],s2[10];\r\n    while(cin>>num)\r\n    {\r\n        memset(flag,-1,sizeof(flag));\r\n        cin>>s1>>s2;\r\n        j=k=0;\r\n        for(i=0;i<num;++i)\r\n        {\r\n            s.push(s1[i]);\r\n            flag[k++]=1;\r\n            while(!s.empty()&&s.top()==s2[j])\r\n            {\r\n                flag[k++]=0;\r\n                s.pop();\r\n                ++j;\r\n            }  \r\n        }\r\n        if(j==num)\r\n        {\r\n            cout<<\"Yes.\\n\";\r\n            for(i=0;i<k;++i)\r\n            {\r\n                if(flag[i])\r\n                    cout<<\"in\\n\";\r\n                else\r\n                    cout<<\"out\\n\";\r\n            }\r\n            cout<<\"FINISH\\n\";\r\n        }\r\n        else\r\n            cout<<\"No.\\nFINISH\\n\";\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":151,
"code":"\n#include<cstdio>\r\nusing namespace std;\r\nint main()\r\n{\r\n\tint a,b,c,d,i=0;\r\n\twhile(~scanf(\"%d%d%d%d\",&a,&b,&c,&d) && ~a)\r\n\tprintf(\"%d\\n\",(a*5544+b*14421+c*1288-d+21251)%21252+1);\r\n}"
},
{
"pid":152,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\n\r\nusing namespace std;  \r\nconst int MAXN = 110;  \r\n\r\nstruct BigInt  \r\n{  \r\n    short s[MAXN*2];  \r\n    int l;  \r\n}c[MAXN];  \r\n\r\nBigInt operator *(BigInt a, int b)  \r\n{  \r\n    int i;  \r\n    for(i = 0; i < a.l; ++i)  \r\n        a.s[i] *= b;  \r\n    for(i = 0; i < a.l; ++i)  \r\n    {  \r\n        a.s[i+1] += a.s[i]\/10;  \r\n        a.s[i] %= 10;  \r\n    }  \r\n    while(a.s[a.l] != 0)  \r\n    {  \r\n        a.s[a.l+1] = a.s[a.l]\/10;  \r\n        a.s[a.l] %= 10;  \r\n        a.l++;  \r\n    }  \r\n    return a;  \r\n}  \r\n\r\nBigInt operator \/(BigInt a, int b)  \r\n{  \r\n    int i;  \r\n    for(i = a.l-1; i > 0; --i)  \r\n    {  \r\n        a.s[i-1] += a.s[i]%b * 10;  \r\n        a.s[i] \/= b;  \r\n    }  \r\n    a.s[0] \/= b;  \r\n    while(a.s[a.l-1] == 0)  \r\n        a.l--;  \r\n    return a;  \r\n}  \r\n\r\nvoid Print(BigInt a)  \r\n{  \r\n    int i;  \r\n    for(i = a.l-1; i >= 0; --i)  \r\n        printf(\"%d\", a.s[i]);  \r\n    printf(\"\\n\");  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int i, n;  \r\n    c[0].l = 1, c[0].s[0] = 1;  \r\n    for(i = 1; i < MAXN; ++i)  \r\n        c[i] = c[i-1] * (4*i - 2)\/(i+1);  \r\n    while(~scanf(\"%d\", &n))  \r\n    {  \r\n        Print(c[n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":153,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n\r\nint comp ( const void *a, const void *b )  \r\n{  \r\n    return * ( int * ) a - * ( int * ) b;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int a[100],b[100];  \r\n    int i,m,n;  \r\n    scanf(\"%d\",&m);  \r\n    while (m--)  \r\n    {  \r\n        int flag = 0;  \r\n        scanf(\"%d\",&n);  \r\n        for (i=0; i<n; i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n        }  \r\n        for (i=0; i<n; i++)  \r\n        {  \r\n            scanf(\"%d\",&b[i]);  \r\n        }  \r\n        qsort(a,n,sizeof(int),comp);  \r\n        qsort(b,n,sizeof(int),comp);  \r\n        for (i=0; i<n; i++)  \r\n        {  \r\n            if (a[i] > b[i])  \r\n            {  \r\n                flag++;  \r\n            }  \r\n            else if (a[i] < b[i])  \r\n            {  \r\n                flag--;  \r\n            }  \r\n            else  \r\n            {  \r\n            }  \r\n        }  \r\n        if (flag > 0)  \r\n        {  \r\n            printf(\"X\\n\");  \r\n        }  \r\n        else if (flag == 0)  \r\n        {  \r\n            printf(\"none\\n\");  \r\n        }  \r\n        else  \r\n        {  \r\n            printf(\"Y\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":154,
"code":"\n#include <stdio.h>\r\nint main()\r\n{\r\n\tint n, m, a[16], i, j, k, t;\r\n \tscanf(\"%d\", &n);\r\n \twhile(n--)\r\n \t{\r\n  \t\tscanf(\"%d\", &m);\r\n  \t  \tfor (i=0;i<m;i++)\r\n   \t\t\tscanf(\"%d\", &a[i]);\r\n  \t\tfor (j=0;j<i-1;j++)\r\n   \t\t\tfor(k=0;k<i-j-1;k++)\r\n   \t\t\t{\r\n    \t\t\tif (a[k] > a[k+1])\r\n    \t\t\t{\r\n     \t\t\t\tt = a[k];\r\n     \t\t\t\ta[k] = a[k + 1];\r\n     \t\t\t\ta[k+1] = t;\r\n    \t\t\t}\r\n   \t\t\t}                                    \r\n\t  \tprintf (\"%d\\n\", a[m \/ 2]);        \r\n \t}\r\n}"
},
{
"pid":155,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\n#include<string.h>  \r\nint ok[205],ok1[205],ok2[205],ok5[205];  \r\nchar ch[205];  \r\nint n;  \r\nvoid f()  \r\n{  \r\n    int a,b,i,j,m,loop=0,x,y;  \r\n    memset(ok,0,sizeof(ok));  \r\n    memset(ok1,0,sizeof(ok1));  \r\n    memset(ok2,0,sizeof(ok2));  \r\n    memset(ok5,0,sizeof(ok5));  \r\n    m=strlen(ch);  \r\n    b=0;  \r\n    for(a=m-1;a>=0;a--)  \r\n    {  \r\n\r\n        if(ch[a]!='.')  \r\n        {  \r\n\r\n            ok1[b]=ch[a]-'0';  \r\n            ok[b++]=ch[a]-'0';  \r\n        }  \r\n        else  \r\n        {  \r\n            loop=m-a-1;  \r\n        }  \r\n    }  \r\n    for(i=2;i<=n;i++)  \r\n    {  \r\n        for(a=0;a<m;a++)  \r\n        {  \r\n            int sum=0;  \r\n            for(b=0;b<=200;b++)  \r\n            {  \r\n                j=sum+ok[a]*ok1[b];  \r\n                sum=j\/10;  \r\n                ok5[b]=j%10;  \r\n            }  \r\n            sum=0;  \r\n            for(x=a,y=0;x<=200,y<200;x++)  \r\n            {  \r\n                j=ok2[x]+ok5[y++]+sum;  \r\n                ok2[x]=j%10;  \r\n                sum=j\/10;  \r\n\r\n            }  \r\n        }  \r\n        for(a=0;a<=200;a++)  \r\n            ok1[a]=ok2[a];  \r\n        memset(ok2,0,sizeof(ok2));  \r\n    }  \r\n    if(loop==0)  \r\n    {  \r\n        for(a=200;;a--)  \r\n            if(ok1[a]!=0)  \r\n                break;  \r\n        for(b=a;b>=0;b--)  \r\n            printf(\"%d\",ok1[b]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    else  \r\n    {  \r\n           loop=loop*n;  \r\n\r\n           for(a=200;;a--)  \r\n              if(ok1[a]!=0)  \r\n                    break;  \r\n           for(x=0;;x++)  \r\n           {  \r\n               if(ok1[x]!=0)  \r\n                   break;  \r\n           }  \r\n           if(a>=loop)  \r\n           {  \r\n              for(b=a;b>=loop;b--)  \r\n                     printf(\"%d\",ok1[b]);  \r\n              printf(\".\");  \r\n              for(b=loop-1;b>=x;b--)  \r\n                  printf(\"%d\",ok1[b]);  \r\n           }  \r\n           else  \r\n           {  \r\n               printf(\".\");  \r\n               for(b=loop-1;b>=x;b--)  \r\n                   printf(\"%d\",ok1[b]);  \r\n           }  \r\n            printf(\"\\n\");  \r\n\r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int a,b;  \r\n    while(scanf(\"%s %d\",ch,&n)!=EOF)  \r\n    {  \r\n        if(n==0)  \r\n            printf(\"1\\n\");  \r\n        else if(ch[0]=='0'&&strlen(ch)==1)  \r\n            printf(\"0\\n\");  \r\n        else  \r\n        {  \r\n            f();  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":156,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    double s,sum;  \r\n    int i,t;  \r\n    while(scanf(\"%lf\",&s),s)  \r\n    {  \r\n        for(i=2,sum=0;;i++)  \r\n        {  \r\n            sum+=1.0\/i;  \r\n            if(sum>=s)  \r\n            {  \r\n                t=i;  \r\n                break;  \r\n            }  \r\n        }  \r\n        printf(\"%d card(s)\\n\",t-1);  \r\n    }  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":157,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<map>  \r\n#include<iostream>  \r\n#include<string>  \r\nusing namespace std ;  \r\nstring str ;  \r\nchar s[100] ;  \r\nint check(char ch) \r\n{  \r\n    switch(ch)  \r\n    {  \r\n        case 'A'  :  \r\n        case 'B'  :  \r\n        case 'C'  : return '2' ;  \r\n        case 'D'  :  \r\n        case 'E'  :  \r\n        case 'F'  : return '3' ;  \r\n        case 'G'  :  \r\n        case 'H'  :  \r\n        case 'I'  : return '4' ;  \r\n        case 'J'  :  \r\n        case 'K'  :  \r\n        case 'L'  : return '5' ;  \r\n        case 'M'  :  \r\n        case 'N'  :  \r\n        case 'O'  : return '6' ;  \r\n        case 'P'  :  \r\n        case 'R'  :  \r\n        case 'S'  : return '7' ;  \r\n        case 'T'  :  \r\n        case 'U'  :  \r\n        case 'V'  : return '8' ;  \r\n        case 'W'  :  \r\n        case 'X'  :  \r\n        case 'Y'  : return '9' ;  \r\n        default   : return '-' ;  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int T,h,t,i ;  \r\n    char ch ;  \r\n    map<string,int>m ;  \r\n    map<string,int>::iterator start ;  \r\n    scanf(\"%d\",&T) ;  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%s\",s) ;  \r\n        h=strlen(s) ;  \r\n        t=0 ;  \r\n        str=\"\" ;  \r\n        int flag=1 ;  \r\n        for(i=0 ;i<h ;i++)  \r\n        {  \r\n            if(s[i]>='A'&&str[i]<='Y'&&str[i]!='Q')  \r\n            {  \r\n                ch=check(s[i]) ;  \r\n                if(ch!='-')  \r\n                {  \r\n                    str+=ch ;  \r\n                    t++ ;  \r\n                }  \r\n            }  \r\n            else if(s[i]>='0'&&s[i]<='9')  \r\n            {  \r\n                str+=s[i] ;  \r\n                t++ ;  \r\n            }  \r\n            if(t==3&&flag)  \r\n            {  \r\n                str+='-' ;  \r\n                flag=0 ;  \r\n            }  \r\n        }  \r\n         m[str]++ ;  \r\n    }  \r\n    int f=0 ;  \r\n    for(start=m.begin() ;start!=m.end() ;start++)  \r\n        {  \r\n            if(start->second>1)  \r\n            {  \r\n                cout<<start->first<<\" \"<<start->second<<endl ;  \r\n                f=1 ;  \r\n            }  \r\n        }  \r\n    if(!f)    printf(\"No duplicates.\\n\") ;  \r\n    m.clear() ;  \r\n    return 0 ;  \r\n}"
},
{
"pid":158,
"code":"\n#include<iostream>  \r\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\nint ac(int n)  \r\n{  \r\n    if(n==1||n==0)  \r\n        return 1;  \r\n    return n*ac(n-1);  \r\n}  \r\nint main()  \r\n{  \r\n    int a,b;  \r\n    while(cin>>a>>b)  \r\n    {  \r\n        int t=a\/b;  \r\n        int n=a;  \r\n        int sum=1;  \r\n        int cnt;  \r\n        while(t--)  \r\n        {  \r\n            cnt=(ac(n)\/(ac(b)*ac(n-b)));  \r\n            sum*=cnt;  \r\n            n-=b;  \r\n        }  \r\n       cout<<sum%2013<<endl;  \r\n    }  \r\n}"
},
{
"pid":159,
"code":"\n#include<stdio.h>  \r\n\r\n#define PI 3.1415926  \r\nint main()  \r\n{  \r\n  int n;  \r\n  double r, d, x, y;  \r\n  scanf(\"%d\",&n);  \r\n  for(int i=1;i<=n;i++){  \r\n     int j=1;  \r\n     scanf(\"%lf %lf\",&x,&y);  \r\n     while(1)  \r\n     {  \r\n       r = (j*100)\/PI;   \r\n       d =  x*x+y*y;  \r\n       if(d<r)   \r\n       {  \r\n           break;  \r\n       }  \r\n       else j++;       \r\n     }  \r\n     printf(\"Property %d: This property will begin eroding in year %d.\\n\",i,j);  \r\n  }  \r\n  printf(\"END OF OUTPUT.\\n\");  \r\n  return 0;  \r\n}"
},
{
"pid":160,
"code":"\n#include<iostream>  \r\n#include<string>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nstruct DNA  \r\n{  \r\n    string dna;  \r\n    int count;  \r\n} d[101];  \r\nint cmp(DNA a,DNA b)  \r\n{  \r\n return a.count<b.count;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,m,i,j,k;  \r\n    char c;  \r\n    cin>>n>>m;  \r\n    for(i=0;i<m;i++)  \r\n    {  \r\n      cin>>d[i].dna;  \r\n      d[i].count = 0;  \r\n      for(j=0;j<n;j++)  \r\n          for(k=j+1;k<n;k++)  \r\n          {  \r\n           if(d[i].dna[j]>d[i].dna[k])  \r\n               d[i].count++;  \r\n          }  \r\n    }  \r\n    stable_sort(d,d+m,cmp);  \r\n    for(i=0;i<m;i++)  \r\n        cout<<d[i].dna<<endl;  \r\n \treturn 0;  \r\n}"
},
{
"pid":161,
"code":"\n#include <cstdio>  \r\n#include <cmath>  \r\nusing namespace std;  \r\nint main()  \r\n{\r\n    double a = (1.0 + sqrt(5.0)) \/ 2.0;  \r\n    double b = (3.0 + sqrt(5.0)) \/ 2.0;  \r\n    int big, small, n, temp1, temp2;  \r\n    while(scanf(\"%d%d\",&big,&small)!=EOF){  \r\n        if(big < small)  \r\n        {big=big^small;small=big^small;big=big^small;}  \r\n        n = ceil(big \/ b);  \r\n        temp1 = a * n;  \r\n        temp2 = b * n;  \r\n        if(small == temp1 && big == temp2)  \r\n            puts(\"0\");  \r\n        else puts(\"1\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":162,
"code":"\n#include<iostream>  \r\n#include<string.h>  \r\nusing namespace std;  \r\nchar list[10002][16];  \r\nint numa,numl,mark[10002];  \r\nbool is_correct(char a[])  \r\n{  \r\n    for(int i=1;i<=numl;i++)  \r\n    if(strcmp(list[i],a)==0) return true;  \r\n    return false;  \r\n}  \r\nbool dele_one(char a[],char list[])  \r\n{  \r\n    for(int x=0;x<strlen(a);x++)  \r\n    {  \r\n        char b[20];  \r\n        int top=0;  \r\n        for(int y=0;y<strlen(a);y++)  \r\n        if(y!=x)  \r\n        b[top++]=a[y];  \r\n        if(x==0) b[top]='\\0'; \r\n        if(strcmp(b,list)==0) return true;  \r\n    }  \r\n    return false;  \r\n}  \r\nbool replce(char a[],char list[])  \r\n{  \r\n    int iSum=0;  \r\n    for(int x=0;x<strlen(a);x++)  \r\n    if(a[x]==list[x]) iSum++;  \r\n    if(iSum==strlen(a)-1) return true;  \r\n    else return false;  \r\n}  \r\nbool insert(char a[],char list[])  \r\n{  \r\n    for(int x=0;x<strlen(list);x++)  \r\n    {  \r\n        char b[20];  \r\n        int top=0;  \r\n        b[x]=list[x];  \r\n        for(int y=0;y<strlen(a);y++)  \r\n        {  \r\n            if(top==x) top++;  \r\n            b[top++]=a[y];  \r\n        }  \r\n        if(x==0) b[top]='\\0';\r\n        if(strcmp(b,list)==0) return true;  \r\n    }  \r\n    return false;  \r\n}  \r\nbool judge(char a[])  \r\n{  \r\n    for(int i=1;i<=numl;i++)  \r\n    {  \r\n        int lena=strlen(a),lenl=strlen(list[i]);  \r\n        if(lena-1==lenl)  \r\n        {  \r\n            if(dele_one(a,list[i]))  \r\n            mark[i]=1;  \r\n        }  \r\n        else if(lena==lenl)  \r\n        {  \r\n            if(replce(a,list[i]))  \r\n            {mark[i]=1;}  \r\n        }  \r\n        else if(lena+1==lenl)  \r\n        {  \r\n            if(insert(a,list[i]))  \r\n            mark[i]=1;  \r\n        }  \r\n    }  \r\n    int marks=0;  \r\n    for(int k=1;k<=numl;k++)  \r\n    if(mark[k]==1) marks=1;  \r\n    if(marks) return true;  \r\n    return false;  \r\n}  \r\nint main()  \r\n{  \r\n    int i;  \r\n    for(i=1;;i++)  \r\n    {  \r\n        cin>>list[i];  \r\n        if(strcmp(list[i],\"#\")==0)  \r\n        break;  \r\n    }  \r\n    numl=i-1;  \r\n    char a[52][16];  \r\n    for(i=1;;i++)  \r\n    {  \r\n        cin>>a[i];  \r\n        if(strcmp(a[i],\"#\")==0)  \r\n        break;  \r\n    }  \r\n    numa=i-1;  \r\n    for(i=1;i<=numa;i++)  \r\n    {  \r\n        if(is_correct(a[i])) cout<<a[i]<<\" is correct\"<<endl;  \r\n        else  \r\n        {  \r\n            memset(mark,0,sizeof(mark));  \r\n            cout<<a[i]<<\":\";  \r\n            if(judge(a[i]))  \r\n            {  \r\n                for(int y=1;y<=numl;y++)  \r\n                if(mark[y]) cout<<\" \"<<list[y];  \r\n            }cout<<endl;  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":163,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#include<iostream> \r\nusing namespace std;\r\nstruct node{\r\n    node *next[10];\r\n    int end;\r\n    node(){  \r\n        memset(next,NULL,sizeof(next));\r\n        end=0;  \r\n    }\r\n};\r\nnode *root;\r\nbool insert(char *s)\r\n{\r\n    int i,k,flag;\r\n    node *p=root;\r\n    for(flag=i=0;s[i];++i){\r\n        k=s[i]-'0';\r\n        if(p->next[k]==NULL){\r\n            p->next[k]=new node();\r\n            flag=1;   \r\n        } \r\n        p=p->next[k];\r\n        if(p->end) return 0; \r\n    }\r\n    p->end=1;  \r\n    if(!flag) return 0;\r\n    return 1;\r\n}\r\nint del(node *p)  \r\n{  \r\n    if(p==NULL) return 0;\r\n    for(int i=0;i<10;i++)\r\n        if(p->next[i]) del(p->next[i]);\r\n    delete p;\r\n    return 0;\r\n} \r\nint main()\r\n{\r\n    int n,T;\r\n    char s[11];\r\n    scanf(\"%d\",&T);\r\n    while(T--){\r\n        bool flag=1;\r\n        root=new node();\r\n        scanf(\"%d\",&n);\r\n        while(n--){\r\n            scanf(\"%s\",s);\r\n            if(flag) flag=insert(s);\r\n        }\r\n        del(root);\r\n        if(flag) puts(\"YES\");\r\n        else puts(\"NO\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":164,
"code":"\n#include<iostream>\r\n#include<cstring>\r\n#include<string>\r\n#include<cstdio>\r\nusing namespace std;\r\n\r\nstring add(string a,string b)\r\n{\r\n    int i,j,k,flag;\r\n    string c;\r\n    c=\"\";\r\n    i=a.size()-1;j=b.size()-1;\r\n    k=0;flag=0;\r\n    while(i>=0&&j>=0)\r\n    {\r\n        c+=(a[i]+b[j]-'0'+flag);\r\n        flag=0;\r\n        if(c[k]>'9')\r\n        {\r\n            flag=1;\r\n            c[k]=c[k]-10;\r\n        }\r\n        i--;j--;k++;\r\n    }\r\n    while(i>=0)\r\n    {\r\n        c+=(a[i]+flag);\r\n        flag=0;\r\n        if(c[k]>'9')\r\n        {\r\n            flag=1;\r\n            c[k]=c[k]-10;\r\n        }\r\n        i--;k++;\r\n    }\r\n    while(j>=0)\r\n    {\r\n        c+=b[j]+flag;\r\n        flag=0;\r\n        if(c[k]>'9')\r\n        {\r\n            flag=1;\r\n            c[k]=c[k]-10;\r\n        }\r\n        j--;k++;\r\n    }\r\n    char t;\r\n    if(flag)\r\n    {\r\n        c+=(flag+'0');k++;\r\n    }\r\n    for(i=0,j=k-1;i<j;i++,j--)\r\n    {\r\n            t=c[i];c[i]=c[j];c[j]=t;\r\n    }\r\n    return c;\r\n}\r\n\r\nstring mult(string a,string b)\r\n{\r\n    int flag=0,i,j,k,p,q,t,max;\r\n    char ch;\r\n    string c,ans;\r\n    p=a.size()-1;q=b.size()-1;\r\n    ans=\"0\";\r\n    for(i=p;i>=0;i--)\r\n    {\r\n        flag=0;c=\"\";\r\n        for(j=i;j<p;j++) c+='0';\r\n        for(j=q;j>=0;j--)\r\n        {\r\n            t=(b[j]-'0')*(a[i]-'0')+flag;\r\n            flag=t\/10;\r\n            c+=(t%10+'0');\r\n        }\r\n        if(flag) c+=(flag+'0');\r\n        for(j=0,k=c.size()-1;j<k;j++,k--)\r\n        {\r\n            ch=c[j];c[j]=c[k];c[k]=ch;\r\n        }\r\n        ans=add(ans,c);\r\n    }\r\n    return ans;\r\n}\r\n\r\nint main()\r\n{\r\n    int i,j,n;\r\n    string a,ans[101];\r\n    ans[0]=\"1\";ans[1]=\"1\";ans[2]=\"2\";ans[3]=\"5\";\r\n    for(i=4;i<101;i++)ans[i]=\"0\";\r\n    for(i=4;i<101;i++)\r\n    {\r\n        for(j=0;j<i;j++)\r\n        {\r\n            a=mult(ans[j],ans[i-j-1]);\r\n            ans[i]=add(ans[i],a);\r\n        }\r\n    }\r\n    while(cin>>n&&n!=-1)\r\n    {\r\n        cout<<ans[n]<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":165,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nstruct byq  \r\n{  \r\n    char str[101];  \r\n}w[10001];  \r\nint main()  \r\n{  \r\n    int s,n,i,k,count;  \r\n    char ch,a[10001];  \r\n    scanf(\"%d\",&s);  \r\n    while(s--)  \r\n    {  \r\n        memset(w,0,sizeof(w));  \r\n        count=0;k=0;  \r\n        scanf(\"%d\",&n);  \r\n        for(i=0;i<=n-1;i++)  \r\n        {  \r\n            scanf(\"%s\",w[i].str);  \r\n        }  \r\n        while(scanf(\"%c\",&ch)&&ch!='@')  \r\n        {  \r\n            if((ch>='a'&&ch<='z')||(ch>='0'&&ch<='9')||ch=='_')  \r\n            {  \r\n                a[k++]=ch;  \r\n            }  \r\n            else  \r\n            {  \r\n                for(i=0;i<n;i++)  \r\n                {  \r\n                    if(strcmp(a,w[i].str)==0)  \r\n                    {  \r\n                        count++;  \r\n                    }  \r\n                }  \r\n                memset(a,0,sizeof(a));  \r\n                k=0;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",count);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":166,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int maxn = 30;  \r\nconst int N = 6;  \r\nint dp[N][maxn];  \r\nint digit[N], pos = 0;  \r\nchar s[N];  \r\nint DP(int d, int num, int f)  \r\n{  \r\n    if(d == -1)  \r\n        return 1;  \r\n    if(!f && dp[d][num])  \r\n        return dp[d][num];  \r\n    int ans = 0, Max = f? digit[d] : 26;  \r\n    for(int i = num? num+1:num; i <= Max; i++)  \r\n        ans += DP(d-1, i, f&&(Max==i));  \r\n    if(!f)  \r\n        dp[d][num] = ans;  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    while(~scanf(\"%s\", s))  \r\n    {  \r\n        int flag = 0;  \r\n        pos = strlen(s);  \r\n        pos--;  \r\n        digit[0] = s[pos] - 'a' + 1;  \r\n        for(int i = pos-1, j = 1; i >= 0; i--, j++)  \r\n        {  \r\n            if(s[i] >= s[i+1])  \r\n                flag = 1;  \r\n            digit[j] = s[i] - 'a' + 1;  \r\n        }  \r\n        if(flag)  \r\n            puts(\"0\");  \r\n        else  \r\n        {  \r\n            int ans = DP(pos, 0, 1);  \r\n            printf(\"%d\\n\", ans-1);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":167,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int N = 1005;  \r\nconst int M = 20;  \r\nint cow[N];  \r\nint dig[M];  \r\nint n, m, k, ans;  \r\nvoid inin()  \r\n{  \r\n    for(int i = 0; i <= 15; i++)  \r\n        dig[i] = 1<<i;  \r\n}  \r\nvoid dfs(int i, int num, int sum)  \r\n{  \r\n    if(m-i+1 < k-num)\r\n        return ;  \r\n    if(num == k)  \r\n    {  \r\n        int tt = 0;  \r\n        for(int j = 0; j < n; j++)  \r\n            if(cow[j] == (cow[j]&sum))  \r\n                tt++;  \r\n        ans = max(ans, tt);  \r\n        return ;  \r\n    }  \r\n    dfs(i+1, num, sum);  \r\n    dfs(i+1, num+1, sum|=dig[i]);  \r\n}  \r\nint main()  \r\n{  \r\n    int T, x, t;  \r\n    inin();  \r\n    scanf(\"%d\", &T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d%d\", &n, &m, &k);  \r\n        memset(cow, 0, sizeof(cow));  \r\n        for(int i = 0; i < n; i++)  \r\n        {  \r\n            scanf(\"%d\", &t);  \r\n            while(t--)  \r\n            {  \r\n                scanf(\"%d\", &x);  \r\n                cow[i] |= dig[x];  \r\n            }  \r\n        }  \r\n        ans = 0;  \r\n        dfs(1, 0, 0);  \r\n        printf(\"%d\\n\", ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":168,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int str[200];\r\n    int n,i,a,b,c,m,max;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        memset(str,0,sizeof(str));\r\n        scanf(\"%d\",&m);\r\n        while(m--)\r\n        {\r\n            scanf(\"%d %d %d\",&a,&b,&c);\r\n            for(i=b;i<b+c;i++)\r\n            {\r\n                str[i]=str[i]+a;\r\n            }\r\n            max=str[0];\r\n            for(i=0;i<200;i++)\r\n                if(str[i]>max)\r\n                    max=str[i];\r\n        }\r\n        printf(\"%d\\n\",max);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":169,
"code":"\n#include<stdio.h>\r\nint a[1020]= {1,1};\r\nint main() {\r\n    for(int i=2; i<1020; i++) {\r\n        if(!a[i]) {\r\n            for(int j=i+i; j<1020; j+=i) {\r\n                a[j]=1;\r\n            }\r\n        }\r\n    }\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--) {\r\n        int m;\r\n        scanf(\"%d\",&m);\r\n        int t1=m,sum1=0;\r\n        while(a[t1]) {\r\n            sum1++;\r\n            t1--;\r\n        }\r\n        int t2=m,sum2=0;\r\n        while(a[t2]) {\r\n            sum2++;\r\n            t2++;\r\n        }\r\n        if(sum1<sum2)\r\n            printf(\"%d\\n\",t1);\r\n        else\r\n            printf(\"%d\\n\",t2);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":170,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint dre[10010];  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        memset(dre,0,sizeof(dre));  \r\n        int x,y;  \r\n        for(int i=1;i<n;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&x,&y);  \r\n            {  \r\n                dre[x]++,dre[y]++;  \r\n            }  \r\n        }  \r\n        int sum=0;  \r\n        for(int i=1;i<=n;i++)  \r\n        {  \r\n            if(dre[i]==1)  \r\n            sum++;  \r\n        }  \r\n        printf(\"%d\\n\",(sum+1)\/2);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":171,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<string.h>\r\nint i,j,N,M;\r\nint map[25][25],d[25][25];\r\nint dp(int N,int M)\r\n{\r\n    memset(d,0,sizeof(d));\r\n    for(i=0;i<N;i++) \r\n    for(j=0;j<M;j++)\r\n    if(d[i+1][j]>d[i][j+1])  \r\n        d[i+1][j+1]=d[i+1][j]+map[i+1][j+1];  \r\n    else\r\n        d[i+1][j+1]=d[i][j+1]+map[i+1][j+1];\r\n    return d[N][M] ;\r\n}\r\nint main()\r\n{\r\n    scanf(\"%d%d\",&N,&M);\r\n    for(i=1;i<=N;i++)\r\n    for(j=1;j<=M;j++)\r\n    scanf(\"%d\",&map[i][j]);\r\n    printf(\"%d\\n\",dp(N,M));\r\n    return 0;\r\n}"
},
{
"pid":172,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\n#include<math.h>\r\nusing namespace std;\r\nbool map[101][101];\r\nint main()\r\n{\r\n    void black(int x,int y,int l);\r\n    void white(int x,int y,int l);\r\n    int test(int x,int y,int l);\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    memset(map,0,sizeof(map));\r\n    while(n--)\r\n    {\r\n        char ch[10];\r\n        int x,y,l,i,j;\r\n        scanf(\"%s%d%d%d\",ch,&x,&y,&l);\r\n        if(strcmp(ch,\"BLACK\")==0)\r\n            black(x,y,l);\r\n        else if(strcmp(ch,\"WHITE\")==0)\r\n            white(x,y,l);\r\n        else\r\n            printf(\"%d\\n\",test(x,y,l));\r\n    }\r\n    return 0;\r\n}\r\nvoid black(int x,int y,int l)\r\n{\r\n    int i,j;\r\n    for(i=x;i<x+l;i++)\r\n        for(j=y;j<y+l;j++)\r\n        {\r\n            if(i>0&&i<101&&j>0&&j<101&&map[i][j]==0)\r\n            map[i][j]=1;\r\n        }\r\n}\r\nvoid white(int x,int y,int l)\r\n{\r\n    int i,j;\r\n    for(i=x;i<x+l;i++)\r\n        for(j=y;j<y+l;j++)\r\n        {\r\n            if(i>0&&i<101&&j>0&&j<101&&map[i][j]==1)\r\n            map[i][j]=0;\r\n        }\r\n\r\n}\r\nint test(int x,int y,int l)\r\n{\r\n    int i,j,sum=0;\r\n    for(i=x;i<x+l;i++)\r\n        for(j=y;j<y+l;j++)\r\n        {\r\n            if(i>0&&i<101&&j>0&&j<101&&map[i][j]==1)\r\n            sum++;\r\n        }\r\n    return sum;\r\n}"
},
{
"pid":173,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint n,i,sum;\r\n\tchar a[305];\r\n\twhile(gets(a)&&a[0]!='#')\r\n\t{\r\n\t\tsum=0;\r\n\t\tn=strlen(a);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t\tif(a[i]>='A'&&a[i]<='Z')\r\n\t\t\t\tsum+=(i+1)*(a[i]-64);\r\n\t\tprintf(\"%d\\n\",sum);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":174,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n\r\nusing namespace std;\r\n\r\nconst int MAXN = 100005;\r\nint a[MAXN], f[MAXN], e[MAXN], me[MAXN];\r\n\r\nint main()\r\n{\r\n    int t, n, i, ans;\r\n\r\n    while(1)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        if(n == 0)\r\n            return 0;\r\n        for(i = 0; i < n; i++)\r\n            scanf(\"%d\", &a[i]);\r\n\r\n        memset(me, 0, sizeof(me));\r\n        memset(f, 0, sizeof(f));\r\n        memset(e, 0, sizeof(e));  \r\n\r\n        f[0] = a[0];\r\n        e[n-1] = a[n-1];\r\n        me[n-1] = a[n-1];\r\n\r\n        for(i = 1; i < n; i++)  \r\n        {\r\n            if(f[i-1] > 0)\r\n            {\r\n                f[i] = f[i-1]+a[i];\r\n            }\r\n            else\r\n            {\r\n                f[i] = a[i];\r\n            }\r\n        }\r\n        for(i = n-2; i > -1; i--) \r\n        {\r\n            if(e[i+1] > 0)\r\n            {\r\n                e[i] = e[i+1]+a[i];\r\n            }\r\n            else\r\n            {\r\n                e[i] = a[i];\r\n            }\r\n            me[i] = max(me[i+1], e[i]);  \r\n        }\r\n\r\n        ans = f[0]+me[1];  \r\n        for(i = 0; i < n-1; i++)\r\n        {\r\n            ans = max(ans, f[i] + me[i+1]);\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n}"
},
{
"pid":176,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int a,b,n,m,k;  \r\n    int ok[105][105]={0};  \r\n    ok[1][1]=1;  \r\n    for(a=2;a<=100;a++)  \r\n    {  \r\n        for(b=1;b<=a;b++)  \r\n            ok[a][b]=ok[a-b][b]+ok[a-1][b-1];  \r\n    }  \r\n    scanf(\"%d\",&k);  \r\n    while(k--)  \r\n    {  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        printf(\"%d\\n\",ok[n][m]);  \r\n    }  \r\n}"
},
{
"pid":178,
"code":"\n#include <math.h>  \r\n#include <queue>  \r\n#include <deque>  \r\n#include <vector>  \r\n#include <stack>  \r\n#include <stdio.h>  \r\n#include <ctype.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\n#include <iostream>  \r\n#include <algorithm>  \r\n\r\nusing namespace std;  \r\n#define Max(a,b) a>b?a:b  \r\n#define Min(a,b) a>b?b:a  \r\n#define mem(a,b) memset(a,b,sizeof(a))  \r\nint dir[4][2]= {{1,0},{-1,0},{0,1},{0,-1}};  \r\nconst double eps = 1e-6;  \r\nconst double Pi = acos(-1.0);  \r\nstatic const int inf= ~0U>>2;  \r\nstatic const int maxn =110;  \r\nint in[100],out[100],Map[200];  \r\nint T,i,j,n;  \r\ndouble  lagrange(double x,int n)             \r\n{  \r\n    double xy[5][5];  \r\n    for(int i=0; i<n; i++)                  \r\n    {  \r\n        xy[i][0]=i+1;  \r\n        cin>>xy[i][1];  \r\n    }  \r\n    double lag=0.0;  \r\n    for(int i=0; i<n; i++)  \r\n    {  \r\n        double ji=1.0;  \r\n        for(int j=0; j<n; j++)  \r\n        {  \r\n            if(i!=j)  \r\n                ji=ji*((x-xy[j][0])\/(xy[i][0]-xy[j][0])); \r\n        }  \r\n        lag=lag +ji* xy[i][1];                      \r\n\r\n    }  \r\n    return lag;  \r\n}  \r\nint  main()  \r\n{  \r\n    cin>>T;  \r\n    while(T--)  \r\n    {  \r\n        cin>>n;  \r\n        cout<<lagrange(n+1,n)<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":179,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <iostream>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\n#define Max(a,b) {a>b?a:b}  \r\nint Time[110],dp[110];  \r\nint main()  \r\n{  \r\n    int n,m,i,j,a,b;  \r\n    while(cin>>n && n!=0)  \r\n    {  \r\n        for(i=0; i<n; i++)  \r\n            cin>>Time[i];  \r\n        cin>>a>>b;  \r\n        sort(Time,Time+n);  \r\n        for(j=0,i=n-1; i>=0; i=i-a,j++)  \r\n            dp[j]=Time[i]+b*(j+1);  \r\n        sort(dp,dp+j);  \r\n        cout<<dp[j-1]<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":180,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stdlib.h>  \r\nchar a[1005];  \r\nint b[1005];  \r\nint cmp(const void *a,const void *b)  \r\n{  \r\n    return *(int *)a-*(int *)b;  \r\n}  \r\nint main()  \r\n{  \r\n    int T;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        int i,j=0,L,m=0;  \r\n        scanf(\"%s\",a);  \r\n        L=strlen(a);  \r\n        for(i=0;i<L;i++)  \r\n        {  \r\n            if(a[i]>='0'&&a[i]<='9')  \r\n            b[j++]=a[i]-'0';  \r\n            if(a[i]>='a'&&a[i]<='z'||a[i]>='A'&&a[i]<='Z')  \r\n            m++;  \r\n        }  \r\n        qsort(b,j,sizeof(b[0]),cmp);  \r\n        printf(\"%d \",m);  \r\n        for(i=L-1;i>=0;i--)  \r\n        if(a[i]>='a'&&a[i]<='z'||a[i]>='A'&&a[i]<='Z')     \r\n        printf(\"%c\",a[i]);  \r\n        printf(\"\\n\");  \r\n        if(j==0)   printf(\"0\\n\");  \r\n        else  \r\n        {  \r\n            printf(\"%d \",j);  \r\n            for(i=j-1;i>=0;i--)  \r\n            printf(\"%d\",b[i]);  \r\n            printf(\"\\n\");  \r\n        }  \r\n    }   \r\n    return 0;  \r\n}"
},
{
"pid":181,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tlong long int r,i,j,s;\r\n\tint m,n;\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--)\r\n\t{\r\n\t\ts=1;\r\n\t\tscanf(\"%d\",&m);\r\n\t\tfor(i=2;i<=m;i++)\r\n\t\t{\r\n\t\t\tr=1;\r\n\t\t\tfor(j=1;j<=i;j++)\r\n\t\t\tr=r*j;\r\n\t\t\tif(i%2!=0)\r\n\t\t\tr=-r;\r\n\t\t\ts=s+r;\r\n\t\t}\r\n\t\tprintf(\"%lld\\n\",s);\r\n\t}\r\n\treturn 1;\r\n}"
},
{
"pid":183,
"code":"\n#include <iostream>  \r\n#include <stdio.h>  \r\n#include <algorithm>  \r\n#include <string.h>  \r\n#include <math.h>  \r\n#include <queue>  \r\n#include <stdlib.h>  \r\nusing namespace std;  \r\n#define MAXV 1005  \r\n#define INF -100000000  \r\nint cas,flag;  \r\nint start[MAXV],end[MAXV],spend[MAXV];  \r\nint a[MAXV], b[MAXV];  \r\nint cnt[MAXV];  \r\nint dist[MAXV];       \r\nbool visit[MAXV];  \r\nint E,V;  \r\nqueue<int>buff;  \r\nstruct edge{  \r\n       int val;  \r\n       int make;  \r\n       int to;         \r\n};  \r\nvector<edge> e[MAXV];  \r\n\r\nbool spfa( int st )  \r\n{  \r\n     for( int i=0 ; i<V ; i++ ){  \r\n          visit[i] = false;  \r\n          cnt[i] = 0;  \r\n          dist[i] = INF;  \r\n          if( i==st )  \r\n              dist[i] = 0;  \r\n     }  \r\n     visit[st] = true;  \r\n     cnt[st] = 1;  \r\n     buff.push( st );  \r\n     int tmp,big;  \r\n     while( !buff.empty() ){  \r\n            tmp = buff.front();  \r\n            for( int i=0 ; i<e[tmp].size() ; i++ ){  \r\n                 edge *t = &e[tmp][i];  \r\n                 if( (dist[tmp] + t->make - t->val) > (dist[t->to]) ){  \r\n                     dist[t->to] = dist[tmp] + t->make - t->val;         \r\n                     if( !visit[t->to] ){  \r\n                         cnt[t->to]++;  \r\n                         if( cnt[t->to] > V )  \r\n                             return 0;  \r\n                         visit[t->to] = true;  \r\n                         buff.push( t->to );  \r\n                     }  \r\n                 }  \r\n            }   \r\n            visit[tmp] = false;  \r\n            buff.pop();  \r\n     }  \r\n     return 1;  \r\n}  \r\n\r\nint main( )  \r\n{  \r\n    scanf(\"%d\",&cas);  \r\n    while( cas-- ){  \r\n           scanf(\"%d%d\",&V,&E);  \r\n           flag = 0;  \r\n           for( int i=0 ; i<E ; i++ ){  \r\n                scanf(\"%d%d%d%d%d\",&start[i],&end[i],&spend[i],&a[i],&b[i]);  \r\n                edge tmp1;  \r\n                tmp1.val = spend[i];  \r\n                tmp1.to = end[i];  \r\n                tmp1.make = a[i];  \r\n                e[start[i]].push_back( tmp1 );     \r\n                edge tmp2;  \r\n                tmp2.val = spend[i];  \r\n                tmp2.to = start[i];  \r\n                tmp2.make = b[i];  \r\n                e[ end[i] ].push_back( tmp2 );     \r\n                if( a[i]+b[i]>2*spend[i] ){      \r\n                    flag = 1;      \r\n                }  \r\n           }  \r\n           long long ans = 0;  \r\n           if( flag )  \r\n               printf(\"$$$\\n\");  \r\n           else {  \r\n                if( !spfa(0) )  \r\n                     printf(\"$$$\\n\");  \r\n                else{  \r\n                     ans = dist[V-1];  \r\n                     printf(\"%lld\\n\",ans);  \r\n                }      \r\n           }  \r\n           for( int i=0 ; i<V ; i++ )  \r\n                e[i].clear();  \r\n    }          \r\n    return 0;  \r\n}"
},
{
"pid":184,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<iostream>\r\nusing namespace std;\r\n\r\nconst int maxM = 410;\r\nchar str[maxM][40], Key[maxM][40];\r\nint stack[maxM], Hey[maxM], Kvar[maxM];\r\nint num = 0;\r\n\r\nint GetNum(char *var)\r\n{\r\n\tfor(int i = 0;i < num; ++ i)\r\n\t\tif(strcmp(var, Key[i]) == 0)\r\n\t\t\treturn i;\r\n\tstrcpy(Key[num], var);\r\n\treturn num ++;\r\n}\r\nvoid GetChar(char *var,char *S)\r\n{\r\n\tint i, len = strlen(S);\r\n\tfor(i = 0;i < len; ++ i)\r\n\t{\r\n\t\tif(S[i] == ')' || S[i] == '=')break;\r\n\t\tvar[i] = S[i];\r\n\t}\r\n\tvar[i] = '\\0';\r\n}\r\n\r\nint main()\r\n{\r\n\tfor(int i = 0;scanf(\"%s\", str[i]) && str[i][0] != '$'; ++ i);\r\n\tint H = 0, top = 0, flag = 0;\r\n\tchar var[30];\r\n\twhile(true)\r\n\t{\r\n\t\tint len = strlen(str[H]), A, B;\r\n\t\tif(str[H][0] == '$')break;\r\n\t\tif(strcmp(str[H], \"End\") == 0 && flag)\r\n\t\t\tflag --;\r\n\t\tif(flag){\r\n\t\t\tif(str[H][len - 1] == ')')\r\n\t\t\t\tflag ++;\r\n\t\t\tH++;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(str[H][len - 1] == '+'){\r\n\t\t\tsscanf(str[H], \"%[a-zA-Z0-9_]\", var);\r\n\t\t\tA = GetNum(var);\r\n\t\t\tKvar[A] ++;\r\n\t\t}\r\n\t\telse if(str[H][len - 1] == '0' && str[H][len - 2] == '=')\r\n\t\t{\r\n\t\t\tsscanf(str[H], \"%[a-zA-Z0-9_]\", var);\r\n\t\t\tA = GetNum(var);\r\n\t\t\tKvar[A] = 0;\r\n\t\t}\r\n\t\telse if(strcmp(str[H], \"show\") == 0)\r\n\t\t{\r\n\t\t\tA = GetNum(str[++H]);\r\n\t\t\tprintf(\"%d\\n\", Kvar[A]);\r\n\t\t}\r\n\t\telse if(str[H][len - 1] == ')')\r\n\t\t{\r\n\t\t\tGetChar(var, str[H] + 5);\r\n\t\t\tA = GetNum(var);\r\n\t\t\tif(Kvar[A] == 0)\r\n\t\t\t{\r\n\t\t\t\tflag = 1;\r\n\t\t\t\tH++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tstack[top] = H;\r\n\t\t\tHey[top ++] = Kvar[A];\r\n\t\t}\r\n\t\telse if(strcmp(str[H], \"End\") == 0)\r\n\t\t{\r\n\t\t\tif(-- Hey[top - 1] <= 0)\r\n\t\t\t\ttop --;\r\n\t\t\telse\r\n\t\t\t\tH = stack[top - 1];\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tGetChar(var, str[H]);\r\n\t\t\tA = GetNum(var);\r\n\t\t\tint i = 0;\r\n\t\t\tfor(;str[H][i] != '='; ++ i);\r\n\t\t\ti ++;\r\n\t\t\tGetChar(var, str[H] + i);\r\n\t\t\tB = GetNum(var);\r\n\t\t\tKvar[A] = Kvar[B];\r\n\t\t}\r\n\t\tH ++;\r\n\t}\r\n}"
},
{
"pid":187,
"code":"\n#include<stdio.h>\r\nint a[2000001];\r\nint main()\r\n{\r\n    int i,j,n;\r\n    for(i=2;i<=2000000;i++)\r\n    {\r\n        if(!a[i])  \r\n        for(j=i+i;j<=2000000;j+=i)  \r\n        a[j]=1;  \r\n    }\r\n    while(scanf(\"%d\",&n),n)\r\n    {\r\n        printf(\"2\");\r\n        for(i=3;i<=n;i++)\r\n        if(!a[i])\r\n        printf(\" %d\",i);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":188,
"code":"\n#include<iostream>\r\n#include<cstring>\r\n\r\nusing namespace std;\r\n\r\nstruct node\r\n{\r\n   int a,b;\r\n   double r;\r\n}E[10000];\r\ndouble d[2001];\r\nchar a[32][100];\r\ndouble dmin=0.0000001;\r\n\r\nint main()\r\n{\r\n    int n,m,i,flag,evu,ct=0,t1,t2,j;\r\n    double rab;\r\n    char cha[30],chb[30];\r\n    while(cin>>n&&n)\r\n    {\r\n      ++ct;\r\n      memset(E,0,sizeof(E));\r\n       for(i=0;i<n;++i)\r\n       {\r\n         cin>>a[i];\r\n       }\r\n       cin>>m;\r\n\r\n       for(i=0;i<m;++i)\r\n       {\r\n          cin>>cha>>rab>>chb;\r\n          for(j=0;j<n;++j)\r\n           {\r\n             if(strcmp(cha,a[j])==0)t1=j;\r\n             if(strcmp(chb,a[j])==0)t2=j;\r\n           }\r\n          E[i].a=t1;\r\n          E[i].b=t2;\r\n          E[i].r=(rab > E[i].r ? rab : E[i].r);\r\n       }\r\n       evu=0;\r\n\r\n       for(int j=0;j<m;++j)\r\n       {\r\n         memset(d,0,sizeof(d));\r\n         int temp=E[j].a;\r\n         d[temp]=1;\r\n\r\n         while(d[temp]<=1+dmin)\r\n         {\r\n            flag=0;\r\n\r\n           for(i=0;i<m;++i)\r\n           if(d[E[i].b]+dmin<d[E[i].a]*E[i].r)\r\n           {\r\n              d[E[i].b]=d[E[i].a]*E[i].r;\r\n              flag=1;\r\n           }\r\n\r\n           if(!flag)\r\n           {\r\n             break;\r\n           }\r\n         }\r\n\r\n         if(flag)\r\n         {\r\n           evu=1;\r\n           break;\r\n         } \r\n       }\r\n\r\n       if(evu)cout<<\"Case \"<<ct<<\": Yes\"<<endl<<endl;\r\n       else cout<<\"Case \"<<ct<<\": No\"<<endl<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":189,
"code":"\n描述\r\n\r\n    在一座山上有n个山洞（每个洞从0~n-1分别编号），这山上有一只兔子躲在山洞里，有一只狼，从编号为0的山洞开始入洞，每隔m-1个洞，再次入洞抓兔子，现在问，兔子能否避免这场灾难？\r\n\r\n    例如：m=2 and n=6, 狼将要进入的山洞号为：0,2,4,0;\r\n\r\n输入\r\n    有多组测试数据，不超过1000组;\r\n    每组有两个整数m,n(0<m,n<=1000);\r\n    注意：程序以文件结束符“EOF”结束输入。\r\n输出\r\n    兔子能避免这场灾难输出YES，否则输出NO;\r\n样例输入\r\n\r\n    1 2\r\n    2 2\r\n\r\n样例输出\r\n\r\n    NO\r\n    YES\r\n\r\n来源\r\n    hdu"
},
{
"pid":190,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#include<iostream>\r\nusing namespace std;\r\nconst int maxn=(1<<20)+2;\r\nbool ispri[maxn];\r\nint n,pri[maxn],cnt,ans;\r\nlong long fact[21];\r\nvoid Init()\r\n{\r\n    cnt=0;\r\n    ispri[1]=1;\r\n    for(int i=2;i<maxn;i++)\r\n\tif(!ispri[i])\r\n\t{\r\n\t    pri[cnt++]=i;\r\n\t    for(int j=2;i*j<maxn;j++)\r\n\t\tispri[i*j]=1;\r\n\t}\r\n    fact[0]=1;\r\n    for(int i=1;i<=20;i++)\r\n\tfact[i]=fact[i-1]*i;\r\n}\r\nint main()\r\n{\r\n    Init();\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n\tans=0;\r\n\tint m=n,index=0;\r\n\tlong long divs=1;\r\n\twhile(m>1)\r\n\t{\r\n\t    if(m%pri[index]==0)\r\n\t    {\r\n\t\tint dcnt=0;\r\n\t\twhile(m%pri[index]==0)\r\n\t\t{\r\n\t\t    m\/=pri[index];\r\n\t\t    dcnt++;\r\n\t\t}\r\n\t\tdivs=divs*fact[dcnt];\r\n\t\tans+=dcnt;\r\n\t    }\r\n\t    index++;\r\n\t    if(!ispri[m])\r\n\t    {\r\n\t\tans++;\r\n\t\tbreak;\r\n\t    }\r\n\t}\r\n\tlong long s=fact[ans];\r\n\ts\/=divs;\r\n\tprintf(\"%d %I64d\\n\",ans,s);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":191,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,m,rest,now;  \r\n    int sign[15]={0};  \r\n    while(~scanf(\"%d\",&n),n)  \r\n    {   \r\n        if(sign[n]==0)  \r\n        {    m=0;  \r\n             while(1)  \r\n             {  m++;  \r\n                now=0;  \r\n                rest=2*n ;  \r\n                while(1)  \r\n                {  \r\n                    now=(now+m-1)%rest+1 ;  \r\n                    if(now>n)  \r\n                    {rest--;now--;}  \r\n                    else break;  \r\n                }  \r\n                if(rest == n)  \r\n                {  \r\n                    sign[n] = m;  \r\n                    break;  \r\n                }  \r\n            }  \r\n        }  \r\n      printf(\"%d\\n\",sign[n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":192,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<string>  \r\n#include<map>  \r\n#include<vector>  \r\n#include<stdlib.h>  \r\nusing namespace std;  \r\nmap<string,int>tel;  \r\nvector<int>result[10011];  \r\nint main()  \r\n{  \r\n    int cases,n,i,j,m,k;  \r\n    char tep[12],message[1011],year[5],month[3],day[3],hour[3],min[3],second[3],telphone[12],total;  \r\n    while(scanf(\"%d\",&cases)!=EOF)  \r\n    {  \r\n     int count=0;  \r\n     while(cases--)  \r\n     {  \r\n       tel.clear();  \r\n       for(i=0;i<10001;i++)  \r\n       {  \r\n           result[i].clear();  \r\n       }  \r\n       scanf(\"%d\",&n);  \r\n       for(i=0;i<n;i++)  \r\n       {  \r\n           scanf(\"%s\",tep);  \r\n           tel[tep]=i+1;  \r\n       }  \r\n       scanf(\"%d\",&m);  \r\n       getchar();  \r\n       total=0;  \r\n       for(j=0;j<m;j++)  \r\n       {  \r\n           gets(message);  \r\n           int x=strlen(message);  \r\n           if(x<21) continue;  \r\n\r\n           year[0]=message[0];year[1]=message[1];  \r\n           year[2]=message[2];year[3]=message[3];  \r\n           year[4]='\\0';  \r\n\r\n           month[0]=message[5];month[1]=message[6];  \r\n           month[2]='\\0';  \r\n\r\n           day[0]=message[8];day[1]=message[9];  \r\n           day[2]='\\0';  \r\n\r\n           hour[0]=message[11];hour[1]=message[12];  \r\n           hour[2]='\\0';  \r\n\r\n           min[0]=message[14];min[1]=message[15];  \r\n           min[2]='\\0';  \r\n\r\n           second[0]=message[17];second[1]=message[18];  \r\n           second[2]='\\0';  \r\n\r\n           int yy,mm,dd,hh,mt,ss;  \r\n           yy=atoi(year);mm=atoi(month);dd=atoi(day);  \r\n           hh=atoi(hour);mt=atoi(min);ss=atoi(second);  \r\n\r\n           for(k=20;;k++)  \r\n           {  \r\n               if(message[k]>='0'&&message[k]<='9')  \r\n               telphone[k-20]=message[k];  \r\n               else break;  \r\n           }  \r\n           telphone[k-20]='\\0';  \r\n\r\n           if((x-k)==1||(x-k)==0) continue;   \r\n          if(tel[telphone]==0) continue;  \r\n           if(hh>=24||mt>=60||ss>=60||mm>12||dd>31||yy==0||mm==0||dd==0) continue;  \r\n           if(mm==4||mm==6||mm==9||mm==11)  \r\n           {  \r\n               if(dd>30) continue;  \r\n           }  \r\n           if(mm==2)  \r\n           {  \r\n               if(yy%400==0||(yy%4==0)&&(yy%100!=0))  \r\n               {  \r\n                   if(dd>29) continue;  \r\n               }  \r\n               else  \r\n               {  \r\n                   if(dd>28)continue;  \r\n               }  \r\n           }  \r\n\r\n           result[total].push_back(yy);  \r\n           result[total].push_back(mm);  \r\n           result[total].push_back(dd);  \r\n           result[total].push_back(hh);  \r\n           result[total].push_back(mt);  \r\n           result[total].push_back(ss);  \r\n           total++;  \r\n\r\n       }  \r\n       printf(\"Case %d:\\n\",++count);  \r\n       for(i=0;i<total;i++)  \r\n       {  \r\n           printf(\"%04d-%02d-%02d:%02d:%02d:%02d,15980698888,Sorry,I am ACb0y's girl friend\\n\",result[i][0],result[i][1],result[i][2],result[i][3],result[i][4],result[i][5]);  \r\n       }  \r\n       printf(\"count = %d\\n\",total);  \r\n     }  \r\n   }  \r\n    return 0;  \r\n}"
},
{
"pid":195,
"code":"\n#include <iostream>  \r\n#include <functional>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\n#include <cmath>  \r\n#include <string>  \r\n#include <map>  \r\n#include <stack>  \r\n#include <vector>  \r\n#include <set>  \r\n#include <queue>  \r\n#pragma comment (linker,\"\/STACK:102400000,102400000\")  \r\n#define pi acos(-1.0)  \r\n#define eps 1e-6  \r\n#define lson rt<<1,l,mid  \r\n#define rson rt<<1|1,mid+1,r  \r\n#define FRE(i,a,b)  for(i = a; i <= b; i++)  \r\n#define FREE(i,a,b) for(i = a; i >= b; i--)  \r\n#define FRL(i,a,b)  for(i = a; i < b; i++)  \r\n#define FRLL(i,a,b) for(i = a; i > b; i--)  \r\n#define mem(t, v)   memset ((t) , v, sizeof(t))  \r\n#define sf(n)       scanf(\"%d\", &n)  \r\n#define sff(a,b)    scanf(\"%d %d\", &a, &b)  \r\n#define sfff(a,b,c) scanf(\"%d %d %d\", &a, &b, &c)  \r\n#define pf          printf  \r\n#define DBG         pf(\"Hi\\n\")  \r\ntypedef long long ll;  \r\nusing namespace std;  \r\n\r\n#define INF 0x3f3f3f3f  \r\n#define mod 1000000009  \r\nconst int maxn = 1005;  \r\nconst int MAXN = 2005;  \r\nconst int MAXM = 200010;  \r\nconst int N = 1005;  \r\n\r\nstruct Node  \r\n{  \r\n    int x,y;  \r\n}node[maxn];  \r\n\r\nint n,m,k;  \r\nint dp[maxn];  \r\n\r\nint cmp(Node a,Node b)  \r\n{  \r\n    if (a.x==b.x) return a.y<b.y;  \r\n    return a.x<b.x;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int i,j;  \r\n    while (~scanf(\"%d\",&n))  \r\n    {  \r\n        scanf(\"%d%d\",&m,&k);  \r\n        for (i=1;i<=k;i++) scanf(\"%d%d\",&node[i].x,&node[i].y);  \r\n        sort(node+1,node+k+1,cmp);  \r\n        int ans=0;  \r\n        for (i=1;i<=k;i++)  \r\n        {  \r\n            int maxx=0;  \r\n            for (j=1;j<i;j++)  \r\n            {  \r\n                if (node[j].x<node[i].x&&node[j].y<node[i].y)  \r\n                {  \r\n                    maxx=max(maxx,dp[j]);  \r\n                }  \r\n            }  \r\n            dp[i]=maxx+1;  \r\n            ans=max(ans,dp[i]);  \r\n        }  \r\n        printf(\"%.0f\\n\",(n+m-2*ans+sqrt(2.0)*ans)*100);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":197,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <algorithm>  \r\nusing namespace std;   \r\nconst int maxn = 20020;  \r\nint n, r[maxn], Left[maxn], Right[maxn];  \r\n\r\nbool judge( int p )  \r\n{  \r\n    int x = r[1], y = p - r[1];  \r\n    Left[1] = x; Right[1] = 0;  \r\n\r\n    for(int i = 2; i <= n; i++ )  \r\n    {  \r\n        if(i % 2 == 0) \r\n        {  \r\n            if(p - Left[i - 1] - Right[i - 1] < r[i] ) return false;  \r\n            Left[i] = min(x - Left[i - 1], r[i]);  \r\n            Right[i] = r[i] -Left[i];  \r\n        }  \r\n        else \r\n        {  \r\n            if(p - Left[i - 1] - Right[i - 1] < r[i] ) return false;  \r\n            Right[i] = min(r[i], y - Right[i - 1]);  \r\n            Left[i] = r[i] - Right[i];  \r\n        }  \r\n    }  \r\n\r\n    return Left[n] == 0;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    while( ~scanf(\"%d\",&n) )  \r\n    {  \r\n        for(int i = 1; i <= n; i++ ) scanf(\"%d\",&r[i]);  \r\n\r\n        if(n == 1 ) { printf(\"%d\\n\", r[1]); continue;}  \r\n\r\n        r[n + 1] = r[1];  \r\n\r\n        int L = 0, R = 0;  \r\n        for(int i = 1; i <= n; i++ ) L = max(L, r[i] + r[i + 1]);  \r\n\r\n        if(n & 1)  \r\n        {  \r\n            for( int i = 1; i <= n; i++ ) R = max(R, r[i] * 3);  \r\n\r\n            while( L < R )  \r\n            {  \r\n                int M = L + (R - L) \/ 2;  \r\n                if( judge(M) ) R = M;  \r\n                else L = M + 1;  \r\n\r\n            }  \r\n\r\n        }  \r\n        printf(\"%d\\n\", L);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":198,
"code":"\n#include <stdio.h>\r\n#include<string.h>\r\nchar change(char b)\r\n{ \r\n    switch(b)\r\n    {\r\n    case '1':return 'O';break;\r\n    case '2':return 'T';break;\r\n    case '3':return 'T';break;\r\n    case '4':return 'F';break;\r\n    case '5':return 'F';break;\r\n    case '6':return 'S';break;\r\n    case '7':return 'S';break;\r\n    case '8':return 'E';break;\r\n    case '9':return 'N';break;\r\n    case '0':return 'O';break;\r\n}\r\n}\r\n\r\nint main()\r\n{\r\n    int n,i,len,t;\r\n    char str[10];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%s\",str);\r\n        len=strlen(str)-1;\r\n        for(i=len;i>=0;i--)\r\n        {\r\n            t=change(str[i]);\r\n            printf(\"%c\",t);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":199,
"code":"\n#include <cstdio>\r\n#include <cmath>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int T, len, wid, r;\r\n    double min;\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d%d%d\", &len, &wid, &r);\r\n        min =2 * sqrt(r*r - wid*wid\/4.0);\r\n        if(r * 2 <= wid || min - 1 < 1e-6)\r\n        {\r\n            printf(\"impossible\\n\");\r\n            continue;\r\n        }\r\n        printf(\"%.0lf\\n\", len \/ min + 0.4999999);\r\n    }                                  \r\n    return 0;\r\n}"
},
{
"pid":200,
"code":"\n#include <iostream>\r\n#include<cstdio>\r\nusing namespace std;\r\n\r\nint x,y,h,z,m[101];\r\nchar c[101],a[19];\r\n\r\nvoid slove(char ch, int n)\r\n{\r\n\tif(ch == 'b')\r\n\t{\r\n\t\tz -= n * y;\r\n\t\th += n;\r\n\t}\r\n\telse if(ch == 's')\r\n\t{\r\n\t\tz += n * y;\r\n\t\th -= n;\r\n\t}\r\n\telse if(ch == 'u')\r\n\t\t\ty += n;\r\n\t\telse\r\n\t\t\ty -= n;\r\n}\r\n\r\nint main()\r\n{\r\n\tint i,t;\r\n\tcin>>t;\r\n\twhile(t--)\r\n\t{\r\n\t\tcin>>x>>y>>z;\r\n\t\tfor(i=0;i<x;++i)\r\n\t\t{\r\n\t\t\tcin>>a>>m[i];\r\n\t\t\tif(a[0] == 'b' || a[0] == 's')\r\n\t\t\t{\r\n\t\t\t\tc[i] = a[0];\r\n\t\t\t\tcin>>a;\r\n\t\t\t}\r\n\t\t\telse c[i] = a[6];\r\n\t\t}\r\n\t\th = 0; int p = z;\r\n\t\tfor(i=0;i<300;++i)\r\n\t\t{\r\n\t\t\tslove(c[i%x],m[i%x]);\r\n\t\t\tif(z < 0 || h < 0) {cout<<\"error\\n\"; break;}\r\n\t\t\telse if(z + h * y > 2 * p) {cout<<\"win\\n\";break;}\r\n\t\t\telse if(2 * (z + h * y) < p) {cout<<\"lose\\n\"; break;}\r\n\t\t}\r\n\t\tif(i >= 300) cout<<\"bad game\\n\";\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":201,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\n#define MAX(a,b) a>b?a:b  \r\nstruct Node  \r\n{  \r\n    int x,y;  \r\n};  \r\nNode map[1050];  \r\nint cmp(Node a,Node b)  \r\n{  \r\n    if(a.x!=b.x)  \r\n        return a.x<b.x;  \r\n}  \r\nint DP[1050],DP1[1050];  \r\nint main()  \r\n{  \r\n    int T,N;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&N);  \r\n        for(int i=0;i<N;i++){  \r\n            scanf(\"%d%d\",&map[i].x,&map[i].y);  \r\n             DP[i]=1;DP1[i]=1;  \r\n        }  \r\n        sort(map,map+N,cmp);  \r\n        for(int i=N-2;i>=0;i--)  \r\n            for(int j=i+1;j<N;j++)  \r\n            {  \r\n                if(map[j].y>map[i].y)  \r\n                    DP[i]=MAX(DP[i],DP[j]+1);  \r\n                if(map[j].y<map[i].y)  \r\n                    DP1[i]=MAX(DP1[i],DP1[j]+1);  \r\n            }  \r\n        printf(\"%d\\n\",MAX(*max_element(DP,DP+N),*max_element(DP1,DP1+N)));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":202,
"code":"\n#include<stdio.h>\r\nstruct Node\r\n{\r\n    int data;\r\n    int lchild,rchild;\r\n}tree[11];\r\nvoid print1(int key)\r\n{\r\n     if(key!=-1)\r\n     {\r\n          print1(tree[key].lchild);\r\n          printf(\"%d\\n\",tree[key].data);\r\n          print1(tree[key].rchild);\r\n     }\r\n}\r\nint main()\r\n{\r\n    int i,j,k,T;\r\n     int root,ld,rd,num,m;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d\",&num);\r\n        for(i=0;i<num;i++)\r\n        {\r\n            scanf(\"%d%d%d\",&root,&ld,&rd);\r\n            tree[root].data=root;\r\n            tree[root].lchild=ld;\r\n            tree[root].rchild=rd;\r\n        }\r\n        scanf(\"%d\",&m);\r\n        while(m--)\r\n            scanf(\"%*d%*d\");\r\n        print1(0);\r\n        putchar('\\n');\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":203,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nconst int P = 105;\r\nint map[P][P];\r\nint dis[P];\r\nint val[P];\r\nint bag[1000005];\r\n\r\nvoid dijkstra(int n)\r\n{\r\n    bool visit[n+5];\r\n    memset(visit, false, sizeof(visit));\r\n    visit[0] = true;\r\n    for(int i = 0; i <= n; ++i)\r\n        dis[i] = map[0][i];\r\n    for(int i = 1; i < n; ++i)\r\n    {\r\n        int min = 1000000;\r\n        int k = 0;\r\n        for(int j = 0; j <= n; ++j)\r\n        {\r\n            if(!visit[j] && min > dis[j])\r\n            {\r\n                min = dis[j];\r\n                k = j;\r\n            }\r\n        }\r\n        visit[k] = true;\r\n        for(int j = 0; j <= n; ++j)\r\n        {\r\n            if(!visit[j] && map[k][j] != 10000 && dis[j] > dis[k] + map[k][j])\r\n                dis[j] = dis[k] + map[k][j];\r\n        }\r\n    }\r\n}\r\n\r\nint dp(int n, int vol)\r\n{\r\n    for(int i = 1; i <= n; ++i)\r\n    {\r\n        for(int j = vol; j >= dis[i]; --j)\r\n        {\r\n            if(bag[j] < bag[j-dis[i]] + val[i])\r\n                bag[j] = bag[j-dis[i]] + val[i];\r\n        }\r\n    }\r\n    return bag[vol];\r\n}\r\n\r\nint main()\r\n{\r\n    int T, s, n, m, a, b, c;\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d%d%d\", &s, &n, &m);\r\n        for(int i = 0; i <= n; ++i)\r\n            for(int j = 0; j < i; ++j)\r\n                map[i][j] = map[j][i] = 10000000;\r\n        memset(bag, 0, sizeof(bag));\r\n        while(m--)\r\n        {\r\n            scanf(\"%d%d%d\", &a, &b, &c);\r\n            if(map[a][b] > c)\r\n                map[a][b] = map[b][a] = c;\r\n        }\r\n        for(int i = 1; i <= n; ++i)\r\n            scanf(\"%d\", &val[i]);\r\n        dijkstra(n);\r\n        printf(\"%d\\n\", dp(n, s));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":204,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint gcd(int a,int b){  \r\n    return !b? a:gcd(b,a%b);  \r\n}  \r\nint main(){  \r\n    int n,i,j,k,l,t;  \r\n    char s[100000];  \r\n    while(scanf(\"%d\",&n)!=EOF){  \r\n        j=l=k=t=0;  \r\n        getchar();  \r\n        gets(s);  \r\n        for(i=0;i<strlen(s);i++){  \r\n            if(s[i]=='S'){  \r\n                l=1;  \r\n                break;  \r\n            }  \r\n            if(s[i]=='U')  \r\n                j++;  \r\n            if(s[i]=='D')  \r\n                k++;  \r\n        }  \r\n        t=gcd(j,j+k);  \r\n        if((l!=1&&(double)k-0.5<=0.003)||(l!=1&&(double)k-0.5>-0.003))   \r\n            printf(\"%d\/%d\\n\",(j\/t),((j+k)\/t));  \r\n        else if((l!=1&&(double)k-0.5>0.003)||(l!=1&&(double)k-0.5<-0.003))   \r\n            printf(\"Fail\\n\");     \r\n        else    printf(\"Bingo\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":205,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stdlib.h>  \r\nchar num[1000010];  \r\nint main()  \r\n{  \r\n    long int i;  \r\n    int n,temp,t;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n       scanf(\"%s\",num);  \r\n       t=strlen(num);  \r\n       for(temp=0,i=0;i<t;i++)  \r\n          temp=(temp*10+num[i]-'0')%10003;  \r\n       printf(\"%d\\n\",temp%10003);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":206,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    long long a,b;  \r\n    while(scanf(\"%lld%lld\",&a,&b)!=EOF)  \r\n    {  \r\n        printf(\"%lld\\n\",a*(a+1)*b*(b+1)\/4);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":207,
"code":"\n#include <cstdio>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nconst int N = 50005;\r\nint father[N];\r\nint relation[N];\r\n\r\nvoid init(int n)\r\n{\r\n    for(int i = 0; i <= n; ++i)\r\n    {\r\n        father[i]= i;\r\n        relation[i] = 0;\r\n    }\r\n}\r\nint find(int x)\r\n{\r\n    if(x != father[x])\r\n    {\r\n        int temp = father[x];\r\n        father[x] = find(temp);\r\n        relation[x] = (relation[x] + relation[temp]) % 3;\r\n    }\r\n    return father[x];\r\n}\r\n\r\nint main()\r\n{\r\n    int n, m, x, y, d, fx, fy, cnt;\r\n\r\n    while(~scanf(\"%d %d\", &n, &m))\r\n    {\r\n        cnt = 0;\r\n        init(n);\r\n        for(int i = 0; i < m; ++i)\r\n        {\r\n            scanf(\"%d %d %d\", &d, &x, &y);\r\n            if(x > n || y > n)\r\n            {\r\n                ++cnt;\r\n                continue;\r\n            }\r\n            if(d == 2 && x == y)\r\n            {\r\n                ++cnt;\r\n                continue;\r\n            }\r\n            fx = find(x);\r\n            fy = find(y);\r\n            if(fx == fy)\r\n            {\r\n                if(d == 1 && relation[x] != relation[y])\r\n                    ++cnt;\r\n                if(d == 2 && relation[x] != (relation[y] + 2)%3)\r\n                    ++cnt;\r\n            }\r\n            else\r\n            {\r\n                father[fy] = fx;\r\n                relation[fy] = (relation[x] + (d-1) + (3-relation[y])) % 3;\r\n            }\r\n        }\r\n        printf(\"%d\\n\", cnt);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":208,
"code":"\n#include <iostream>  \r\n#include <string.h>  \r\n#include <cstdio>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nconst int N=10010;  \r\nint father[N];  \r\nstruct good{  \r\n  int value;  \r\n  int day;  \r\n}aa[N];  \r\nbool cmp(good a,good b){  \r\n    return a.value<b.value;  \r\n}  \r\nint find(int x){  \r\n  if(x!=father[x])  \r\n      father[x]=find(father[x]);  \r\n  return father[x];  \r\n}  \r\nint main(){   \r\n  int n;  \r\n  while(~scanf(\"%d\",&n)){  \r\n    for(int i=0;i<N;++i)  \r\n        father[i]=i;  \r\n    int sum=0;  \r\n    for(int i=0;i<n;++i){  \r\n        scanf(\"%d%d\",&aa[i].value,&aa[i].day);  \r\n    }  \r\n    sort(aa,aa+n,cmp);  \r\n    for(int i=n-1;i>=0;--i){  \r\n        int b=find(father[aa[i].day]);  \r\n        if(b>0){  \r\n            sum+=aa[i].value;  \r\n            father[b]=b-1;  \r\n        }  \r\n    }  \r\n    printf(\"%d\\n\",sum);  \r\n  }  \r\n  return 0;  \r\n}"
},
{
"pid":209,
"code":"\n#include<stdio.h>  \r\nconst int N = 10005;  \r\nint parent[N];  \r\nbool IsDif[N];  \r\nvoid Init(int n)  \r\n{  \r\n    for(int i = 1; i <= n; ++i)  \r\n    {  \r\n        parent[i] = i;  \r\n        IsDif[i] = false;\r\n    }  \r\n}  \r\nint Find(int x)  \r\n{  \r\n    if(x != parent[x])  \r\n    {  \r\n        int temp = parent[x];  \r\n        parent[x] = Find(temp);  \r\n        IsDif[x] ^= IsDif[temp];  \r\n    }  \r\n    return parent[x];  \r\n}  \r\nvoid Merge(int rx, int ry, int x, int y)  \r\n{  \r\n    if(rx < ry)  \r\n    {  \r\n        parent[ry] = rx;   \r\n        IsDif[ry] = IsDif[x]^1^IsDif[y];  \r\n    }  \r\n    else  \r\n    {  \r\n        parent[rx] = ry;  \r\n        IsDif[rx] = IsDif[x]^1^IsDif[y];  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int t,n,m,i;  \r\n    int x,y,rx,ry;  \r\n    bool flag;  \r\n    int cnt = 0;  \r\n    scanf(\"%d\", &t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d %d\", &n, &m);  \r\n        Init(n);  \r\n        flag = true;  \r\n        for(i = 0; i < m; ++i)  \r\n        {  \r\n            scanf(\"%d %d\", &x, &y);  \r\n            if(flag)  \r\n            {  \r\n                if(x == y)  \r\n                {  \r\n                    flag = false;  \r\n                    continue;  \r\n                }  \r\n                rx = Find(x);  \r\n                ry = Find(y);  \r\n                if(rx == ry)\r\n                    flag = IsDif[x]^IsDif[y];  \r\n                else  \r\n                    Merge(rx, ry, x, y);  \r\n            }  \r\n        }  \r\n        if(flag)  \r\n            printf(\"Scenario #%d:\\nNo suspicious bugs found!\\n\\n\", ++cnt);  \r\n        else  \r\n            printf(\"Scenario #%d:\\nSuspicious bugs found!\\n\\n\", ++cnt);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":210,
"code":"\n#include<iostream>  \r\n#include<vector>  \r\n#include<cstdio>  \r\n#include<iterator>  \r\n#include<queue>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nvector<short> fire;  \r\nconst short MAX=500;  \r\nint INF=0x7fff;  \r\nstruct GNode  \r\n{  \r\n    GNode(){}  \r\n    GNode(short num,short len):len(len),num(num){}  \r\n    short len,num;  \r\n};  \r\nshort len[MAX],tmplen[MAX];  \r\nvoid SPFA(const vector<vector<GNode> >& Graph,int From)  \r\n{  \r\n    queue<int> Q;  \r\n    Q.push(From);  \r\n    len[From]=0;  \r\n    while(!Q.empty())  \r\n    {  \r\n        int top=Q.front();Q.pop();  \r\n        for(unsigned i=0;i!=Graph[top].size();i++)  \r\n        {  \r\n            if(len[top]!=INF && len[top]+Graph[top][i].len<len[Graph[top][i].num])  \r\n            {  \r\n                len[Graph[top][i].num]=len[top]+Graph[top][i].len;  \r\n                Q.push(Graph[top][i].num);  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int f,n,d,a,b;  \r\n    char str[100];  \r\n    while(~scanf(\"%d%d\",&f,&n))  \r\n    {  \r\n        vector<vector<GNode> > Graph(n);  \r\n        fire.clear();  \r\n        for(int i=0;i!=f;i++) {scanf(\"%d\",&d);fire.push_back(d-1);}  \r\n        getchar();  \r\n        while(gets(str)&& strlen(str)){sscanf(str,\"%d%d%d\",&a,&b,&d);Graph[a-1].push_back(GNode(b-1,d));Graph[b-1].push_back(GNode(a-1,d));}  \r\n        for(unsigned i=0;i!=Graph.size();i++) {len[i]=INF;}  \r\n        for(int i=0;i!=f;i++)  \r\n            SPFA(Graph,fire[i]);  \r\n        copy(len,len+n,tmplen);  \r\n        int MinD=INF,MinI,maxelem;  \r\n        for(int i=0;i!=n;i++)  \r\n        {  \r\n            SPFA(Graph,i);  \r\n            maxelem=*max_element(len,len+n);  \r\n            if(MinD>maxelem) {MinD=maxelem;MinI=i;}  \r\n            copy(tmplen,tmplen+n,len);  \r\n        }  \r\n        cout<<MinI+1<<endl;  \r\n    }  \r\n}"
},
{
"pid":211,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <queue>  \r\nusing namespace std;  \r\n#define N 105  \r\n#define M 4505  \r\n#define INF 0x3fffffff  \r\n\r\nstruct node  \r\n{  \r\n    int x,y;  \r\n    int next;  \r\n}edge[2*M];  \r\nint idx,head[N];  \r\nvoid Init(){ idx=0; memset(head,-1,sizeof(head)); }  \r\nvoid Add(int x,int y)  \r\n{  \r\n    edge[idx].x=x;  \r\n    edge[idx].y=y;  \r\n    edge[idx].next = head[x];  \r\n    head[x] = idx++;  \r\n}  \r\n\r\nbool mark[N];  \r\n\r\nvoid BFS(int k)  \r\n{  \r\n    int i;  \r\n    int x,y;  \r\n    queue<int> q;  \r\n    q.push(k);  \r\n    mark[k] = true;  \r\n    while(!q.empty())  \r\n    {  \r\n        x = q.front();  \r\n        q.pop();  \r\n        for(i=head[x]; i!=-1; i=edge[i].next)  \r\n        {  \r\n            y = edge[i].y;  \r\n            if(!mark[y])  \r\n                q.push(y);  \r\n            mark[y] = true;  \r\n        }  \r\n    }  \r\n    mark[k] = false;  \r\n}  \r\n\r\nstruct point  \r\n{  \r\n    int x,y;  \r\n}p[2*M];  \r\n\r\nint num[N],num1[N],num2[N];  \r\n\r\nint main()  \r\n{  \r\n    int n,m;  \r\n    int i,j;  \r\n    while(scanf(\"%d %d\",&n,&m),n||m)  \r\n    {  \r\n        Init();    \r\n        for(i=0; i<m; ++i)  \r\n        {  \r\n            scanf(\"%d %d\",&p[i].x,&p[i].y);  \r\n            Add(p[i].x,p[i].y);  \r\n        }  \r\n        for(i=1; i<=n; ++i)  \r\n        {  \r\n            num1[i]=0;  \r\n            memset(mark,false,sizeof(mark));  \r\n            BFS(i);  \r\n            for(j=1; j<=n; ++j)   \r\n            {  \r\n                if(mark[j])  \r\n                    num1[i]++;   \r\n            }  \r\n        }  \r\n        Init(); \r\n        for(i=0; i<m; ++i)  \r\n            Add(p[i].y,p[i].x); \r\n        for(i=1; i<=n; ++i)   \r\n        {  \r\n            num2[i]=0;  \r\n            memset(mark,false,sizeof(mark));  \r\n            BFS(i);  \r\n            for(j=1; j<=n; ++j)  \r\n            {  \r\n                if(mark[j])  \r\n                    num2[i]++;  \r\n            }  \r\n        }  \r\n        int ans = 0;  \r\n        for(i=1; i<=n; ++i)  \r\n        {  \r\n            num[i] = num1[i]+num2[i];    \r\n            if(num[i]==n-1)   \r\n                ans++;  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":212,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()   \r\n{  \r\n    int t,i,j,flag,a[1001];  \r\n    long k,sum;  \r\n    scanf(\"%d%*c\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%ld\",&k);  \r\n        sum = 1;flag = 0;  \r\n        memset(a,0,sizeof(a));  \r\n        for(i = 0;sum < 1000;i++)  \r\n            sum *= k;  \r\n        for(j = 0,sum %= 1000,k %= 1000;j < 1000;j++,i++)  \r\n        {  \r\n            (a[sum] != 0)?(printf(\"%d\\n\",a[sum]+i),flag = 1):(a[sum] = i,sum = sum * k % 1000);  \r\n            if(flag == 1)  \r\n                break;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":214,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\nconst int N = 100000 + 10;\r\n\r\nusing namespace std;\r\n\r\nint a[N], dp[N];\r\n\r\nint binarysearch(int k, int len)\r\n{\r\n    int right = len;\r\n    int left = 1;\r\n    int mid = (right + left) >> 1;\r\n    while(left <= right)\r\n    {\r\n        if(k == dp[mid])\r\n            return mid;\r\n        if(k > dp[mid])\r\n            left = mid + 1;\r\n        else\r\n            right = mid - 1;\r\n        mid = (right + left) >> 1;\r\n    }\r\n    return left;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while(~scanf(\"%d\", &n))\r\n    {\r\n        int len, t;\r\n        for(int i = 0; i < n; ++i)\r\n            scanf(\"%d\", &a[i]);\r\n        len = 1;\r\n        dp[1] = a[0];\r\n        for(int i = 1; i < n; ++i)\r\n        {\r\n            t = binarysearch(a[i], len);\r\n            dp[t] = a[i];\r\n            if(t > len)\r\n                len = t;\r\n        }\r\n        printf(\"%d\\n\", len);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":215,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int sum,s,i;  \r\n    while(~scanf(\"%d\",&s),s)  \r\n    {  \r\n        sum=i=0;  \r\n        while(sum<s||(sum-s)%2==1)  \r\n        {  \r\n            sum += ++i;  \r\n        }  \r\n        printf(\"%d\\n\",i);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":216,
"code":"\n#include<stdio.h>  \r\n#include<math.h>\r\nint main(){  \r\n   int m,i;  \r\n   scanf(\"%d\",&m);  \r\n while(m--){  \r\n      int n;  \r\n      scanf(\"%d\",&n);  \r\n      int count = 0;  \r\n      int s=sqrt(n+1); \r\n     for(i=2;i<=s;++i)  \r\n    {  \r\n     if((n +1)%i==0)  \r\n      count++;  \r\n    }  \r\n    printf(\"%d\\n\",count);  \r\n\t}  \r\n\r\nreturn 0;  \r\n}"
},
{
"pid":217,
"code":"\n#include<stdio.h>  \r\nint main(){  \r\n    int n,m,sum;  \r\n    char c;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--){  \r\n        scanf(\"\\n%c%d\",&c,&m);\r\n        if(c<='z'&&c>='a') {  \r\n            sum=-(c-'a'+1);  \r\n        }  \r\n        else {  \r\n            sum=c-'A'+1;  \r\n        }  \r\n        printf(\"%d\\n\",(m+sum));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":218,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stdlib.h>  \r\nchar str[100][100];  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        for(i=0;i<n;i++)  \r\n            scanf(\"%s\",str[i]);  \r\n        int k=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n             if(strcmp(str[i],\"bowl\")==0||strcmp(str[i],\"knife\")==0||strcmp(str[i],\"fork\")==0||strcmp(str[i],\"chopsticks\")==0)  \r\n             {  \r\n                if(k==0)  \r\n                   printf(\"%s\",str[i]);  \r\n                else printf(\" %s\",str[i]);  \r\n                k++;\r\n             }  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":219,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    int year,month,day;  \r\n    while(scanf(\"%d%d%d\",&year,&month,&day)!=EOF)  \r\n    {  \r\n        if(month==1 || month==2)  \r\n        {  \r\n            month+=12;  \r\n            year--;  \r\n        }  \r\n        int k=((day+2*month+3*(month+1)\/5+year+year\/4-year\/100+year\/400)+1)%7;  \r\n        printf(\"%d\\n\",k);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":220,
"code":"\n#include <cstdio>  \r\n#include <algorithm>  \r\n#include <cstring>  \r\nusing namespace std;  \r\n\r\nstruct Node  \r\n{  \r\n    int a,b;  \r\n};  \r\nNode s[300];  \r\nint ans[300];  \r\nint comp(Node x,Node y)  \r\n{  \r\n    if(x.a!=y.a)  \r\n        return x.a<y.a;  \r\n}  \r\nint main()  \r\n{  \r\n    int T,n;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        int cmx,cmy;  \r\n        for(int i=0; i<n; i++)  \r\n        {  \r\n            scanf(\"%d%d\",&cmx,&cmy);  \r\n            cmx=(cmx+1)\/2,cmy=(cmy+1)\/2;  \r\n            if(cmx>cmy)  \r\n            {  \r\n                int temp=cmx;  \r\n                cmx=cmy;  \r\n                cmy=temp;  \r\n            }  \r\n            s[i].a=cmx,s[i].b=cmy;  \r\n        }  \r\n        sort(s,s+n,comp);  \r\n        int cas=0,last;  \r\n        memset(ans,0,sizeof(ans));  \r\n        for(int i=0; i<n; i++)  \r\n        {  \r\n            if(ans[i]==0)  \r\n            {  \r\n                last=s[i].b;  \r\n                ans[i]=1;  \r\n                cas++;  \r\n                for(int j=i+1; j<n; j++)  \r\n                {  \r\n                    if(ans[j]==0&&s[j].a>last)  \r\n                    {  \r\n                        last=s[j].b;  \r\n                        ans[j]=1;  \r\n                    }  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",cas*10);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":221,
"code":"\n#include <iostream>\r\n#include<cstdio> \r\n#include <string>\r\nusing namespace std;\r\nstruct Node{\r\n    char data;\r\n    Node* lchild;\r\n    Node* rchild;\r\n};\r\nNode* CreateTree(string pre,string in)\r\n{\r\n    Node* root = NULL;\r\n    if(pre.length()>0)\r\n    {\r\n        root = new Node;\r\n        root->data = pre[0];\r\n        int index = in.find(root->data);\r\n        root->lchild = CreateTree(pre.substr(1,index),in.substr(0,index));\r\n        root->rchild = CreateTree(pre.substr(index+1),in.substr(index+1));\r\n    }\r\n    return root;\r\n}\r\n\r\nvoid PostOrder(Node* root)\r\n{\r\n    if(root!=NULL)\r\n    {\r\n        PostOrder(root->lchild);\r\n        PostOrder(root->rchild);\r\n        cout<<root->data;\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    string pre_str,in_str;\r\n    while (cin>>pre_str>>in_str)\r\n    {\r\n        Node* rt = CreateTree(pre_str,in_str);\r\n        PostOrder(rt);\r\n        cout<<endl;\r\n    }\r\n}"
},
{
"pid":222,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint Count(int n,int m)  \r\n{   if((n>>m)==0) return 0;  \r\n    int d=(n>>m)&1;  \r\n    if(d==1) return (n>>(m+1))*(1<<m)+(n&((1<< m)-1))+1+Count(n,m+1);  \r\n    else return (n>>(m+1))*(1<<m)+Count(n,m+1);  \r\n}  \r\nint main()  \r\n{   int a,b;  \r\n    cin>>a>>b;  \r\n    int n=(a==0?1:a);  \r\n    cout<<Count(b,0)-Count(n-1,0)<<endl;   \r\n    return 0;  \r\n}"
},
{
"pid":223,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#define MAXN 100+10\r\nchar str[MAXN];\r\nint main()\r\n{\r\n    int n,x,i,len;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%s\",str);\r\n        len=strlen(str);\r\n        for(i=0;i<len;i++)\r\n        {\r\n            if(str[i]<='r')\r\n            printf(\"%d\",(str[i]-'a')\/3+2);\r\n         if(str[i]=='s')\r\n                printf(\"%d\",7);\r\n         if(str[i]>='t'&&str[i]<='v')\r\n             printf(\"%d\",8);\r\n         if(str[i]>='w'&&str[i]<='z')\r\n             printf(\"%d\",9);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":224,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<stdlib.h>\r\nint light[1000010];\r\nint main()\r\n{\r\n     int n,t,m,sum=0;\r\n     char str[10];\r\n     memset(light,0,sizeof(light));\r\n     scanf(\"%d%d\",&n,&t);\r\n     while(t--)\r\n     {\r\n        scanf(\"%s\",str);\r\n        if(strcmp(str,\"CHANGE\")==0)\r\n        {\r\n            scanf(\"%d\",&m);\r\n            if(light[m]==0)  {light[m]=1;sum++;}\r\n            else {light[m]=0;sum--;}\r\n        }\r\n        else printf(\"%d\\n\",sum);\r\n     }\r\n     return 0;\r\n}"
},
{
"pid":225,
"code":"\n#include<stdlib.h>\r\n#include<stdio.h>\r\n#include<string.h>\r\n#include<math.h>\r\n#define MAX 1010\r\nbool isPrime[MAX];\r\nint main()\r\n{\r\n    memset(isPrime,true,sizeof(isPrime));\r\n    for(int i=2;i<MAX\/2;i++){\r\n          if(isPrime[i]){\r\n\r\n            for(int j=i<<1;j<MAX;j+=i){\r\n                isPrime[j]=false;        \r\n            }               \r\n          }        \r\n\r\n    } \r\n    int t, n;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n         scanf(\"%d\",&n);\r\n         int ans=1;\r\n\r\n         for(int i=2;i<=n;i++){\r\n\r\n              if(isPrime[i]) {\r\n\r\n                ans*=i;\r\n                ans%=1000000; \r\n              }       \r\n         }\r\n       printf(\"%d\\n\",ans);                                       \r\n    }\r\n     return 0;    \r\n}"
},
{
"pid":226,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\n#include<algorithm>  \r\n#define pi 3.1415926  \r\nusing namespace std;  \r\nint n,L,top;  \r\nstruct point   \r\n{     \r\n    int x,y;  \r\n}p[1005],s[1005],t;  \r\ndouble cross(point t1,point t2,point t3,point t4)  \r\n{     \r\n    return (t2.x-t1.x)*(t4.y-t3.y)-(t2.y-t1.y)*(t4.x-t3.x);  \r\n}  \r\ndouble dis(point t1,point t2)   \r\n{  \r\n    double z=(t2.x-t1.x)*(t2.x-t1.x)+(t2.y-t1.y)*(t2.y-t1.y);  \r\n    return sqrt(z);  \r\n}  \r\nbool cmp(point t1,point t2)  \r\n{     \r\n    double z=cross(p[0],t1,p[0],t2);  \r\n    return z?z>0:dis(p[0],t1)>dis(p[0],t2);  \r\n }  \r\nvoid findpoint()  \r\n{   int i,j=0;    \r\n    t=p[0];  \r\n    for(i=1;i<n;i++)  \r\n    {     \r\n        if(t.y>p[i].y||(t.y==p[i].y&&t.x>p[i].x))   \r\n        {         \r\n            j=i;          \r\n            t=p[i];   \r\n        }  \r\n    }  \r\n    t=p[0];   \r\n    p[0]=p[j];  \r\n    p[j]=t;  \r\n}  \r\nvoid scanner()  \r\n{     \r\n    int i;  \r\n    findpoint();  \r\n    sort(p+1,p+n,cmp);  \r\n    s[0]=p[0];  \r\n    s[1]=p[1];  \r\n    top=1;    \r\n    for(i=2;i<n;i++)  \r\n    {     \r\n        while(cross(s[top-1],s[top],s[top],p[i])<0)    \r\n            top--;    \r\n        top++;    \r\n        s[top]=p[i];  \r\n    }  \r\n}  \r\nint main()  \r\n{     \r\n    int i;  \r\n    double ans;  \r\n    while(~scanf(\"%d%d\",&n,&L))   \r\n    {     \r\n        for(i=0;i<n;i++)  \r\n        {     \r\n            scanf(\"%d%d\",&p[i].x,&p[i].y);    \r\n        }     \r\n        scanner();    \r\n        ans=2*pi*L;   \r\n        for(i=0;i<=top;i++)    \r\n        {             \r\n            ans+=dis(s[i],s[(i+1)%(top+1)]);  \r\n        }     \r\n        printf(\"%.0lf\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":227,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <cmath>\r\nusing namespace std;\r\n\r\ndouble g[100][100], dist[100];\r\nbool visit[100];\r\nint n, t_id; \r\n\r\nconst double eps = 1e-8;\r\nconst double inf = 999999999;\r\nstruct Point {\r\n    double x, y;\r\n} door[20][2][2], s, t;\r\ndouble multi(Point p1, Point p2, Point p0) {\r\n    return (p1.x - p0.x) * (p2.y - p0.y) - (p1.y - p0.y) * (p2.x - p0.x);\r\n}\r\nbool cross(Point a, Point b, Point c, Point d) {\r\n    if (multi(a, d, c) * multi(b, d, c) > eps) return false;\r\n    return true;\r\n}\r\ndouble dis(Point a, Point b) {\r\n    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));\r\n}\r\nbool judge(int i, int j, Point a, Point b) {\r\n     for (; i <= j; i++)\r\n         if (cross(door[i][0][0], door[i][0][1], a, b) == false && cross(door[i][1][0], door[i][1][1], a, b) == false)\r\n            return false;\r\n     return true;\r\n}\r\nvoid make_map() {\r\n     int i, j, k, l, p, q, x, y;\r\n\r\n     for (i = 0; i < n-1; i++)\r\n         for (j = 0; j < 2; j++)\r\n            for (k = 0; k < 2; k++) {\r\n                x = 4*i+2*j+k+1;\r\n                for (l = i + 1; l < n; l++)\r\n                    for (p = 0; p < 2; p++)\r\n                        for (q = 0; q < 2; q++) {\r\n                            y = 4*l+2*p+q+1;\r\n                            if (judge(i+1, l-1, door[i][j][k], door[l][p][q]))\r\n                                g[x][y] = dis(door[i][j][k], door[l][p][q]);\r\n                        }\r\n            }\r\n}\r\ndouble Dikstra() {\r\n    int i, j, cur;\r\n    double tmp;\r\n\r\n    memset(visit, false, sizeof (visit));\r\n    for (i = 1; i <= t_id; i++) dist[i] = inf;\r\n    dist[0] = 0;\r\n    for (i = 0; i <= t_id; i++) {\r\n        tmp = inf;\r\n        cur = -1;\r\n        for (j = 0; j <= t_id; j++)\r\n            if (!visit[j] && dist[j] < tmp) {\r\n                tmp = dist[j];\r\n                cur = j;\r\n            }\r\n        visit[cur] = true;\r\n        if (cur == t_id) break;\r\n        for (j = 0; j <= t_id; j++) {\r\n            if (!visit[j] && g[cur][j] > eps && dist[cur] + g[cur][j] + eps < dist[j])\r\n                dist[j] = dist[cur] + g[cur][j];\r\n        }\r\n    }\r\n    return dist[t_id];\r\n}\r\n\r\nint main()\r\n{\r\n    double x, y1, y2, y3, y4;\r\n    int i, j, k;\r\n    s.x = 0; s.y = 5;\r\n    t.x = 10; t.y = 5;\r\n    while (scanf (\"%d\", &n) && n != -1) {\r\n        for (i = 0; i < n; i++) {\r\n            scanf (\"%lf%lf%lf%lf%lf\", &x, &y1, &y2, &y3, &y4);\r\n            door[i][0][0].x = door[i][0][1].x = door[i][1][0].x = door[i][1][1].x = x;\r\n            door[i][0][0].y = y1; door[i][0][1].y = y2;\r\n            door[i][1][0].y = y3; door[i][1][1].y = y4;\r\n        }\r\n        memset(g, 0, sizeof (g));\r\n        t_id = 4 * n + 1; \r\n        if (judge(0, n-1, s, t)) { \r\n            printf (\"%.2lf\\n\", dis(s, t));\r\n            continue;\r\n        }\r\n        int id;\r\n        for (i = 0; i < n; i++) {\r\n            for (j = 0; j < 2; j++) {\r\n                for (k = 0; k < 2; k++) {\r\n                    id = 4*i+2*j+k+1; \r\n                    if (judge(0, i-1, s, door[i][j][k])) g[0][id] = dis(s, door[i][j][k]);\r\n                    if (judge(i+1, n-1, door[i][j][k], t)) g[id][t_id] = dis(door[i][j][k], t);\r\n                }\r\n            }\r\n        }\r\n        make_map();\r\n        printf (\"%.2lf\\n\", Dikstra());\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":228,
"code":"\n#include<stdio.h>\r\n#include<malloc.h>\r\n#include<string.h>\r\nint p[1000003];\r\n\r\nint main()\r\n{\r\n    int n,m,k,s,t,i,add;\r\n    scanf(\"%d%d%d\",&n,&m,&k);\r\n    while(m--)\r\n    {\r\n        scanf(\"%d%d%d\",&s,&t,&add);\r\n        p[s]+=add;\r\n        p[t+1]-=add;\r\n    }\r\n    for(i=1;i<=n;++i)     \r\n        p[i]+=p[i-1];\r\n    for(i=1;i<=n;++i)      \r\n        p[i]=(p[i-1]+p[i])%10003;\r\n    while(k--)\r\n    {\r\n        scanf(\"%d%d\",&s,&t);\r\n        printf(\"%d\\n\",(p[t]-p[s-1]+10003)%10003);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":229,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n#include <string.h>  \r\n#define MAX_SIZE 104  \r\n#define INF 10000  \r\nint n,m;  \r\nint Time[MAX_SIZE][2];   \r\nint dp[MAX_SIZE][MAX_SIZE];\r\nint find_max(int a,int b)  \r\n{  \r\n    return a>b?a:b;  \r\n}  \r\nint check(int r)  \r\n{  \r\n    int i,j,k;  \r\n    memset(dp,-1,sizeof(dp));  \r\n    for(j=0;j<=m&&j*Time[1][0]<=r;j++)  \r\n        dp[1][j]=(r-j*Time[1][0])\/Time[1][1];  \r\n    for(i=2;i<=n;i++)  \r\n    {  \r\n        for(j=0;j<=m;j++)  \r\n        {  \r\n            for(k=0;k<=j&&k*Time[i][0]<=r;k++)  \r\n            { \r\n                if(dp[i-1][j-k]<0)  \r\n                    continue;  \r\n                int a_time=k*Time[i][0];  \r\n                dp[i][j]=find_max(dp[i][j],dp[i-1][j-k]+(r-a_time)\/Time[i][1]);  \r\n            }  \r\n        }  \r\n        if(dp[i][m]>=m)  \r\n            return 1;            \r\n    }  \r\n    return 0;  \r\n}  \r\nint solve()  \r\n{  \r\n    int lb=0,rb=INF;  \r\n    while(rb-lb>=1)  \r\n    {  \r\n        int mid=(rb+lb)\/2;  \r\n        if(check(mid))  \r\n            rb=mid;  \r\n        else lb=mid+1;  \r\n    }  \r\n    return rb;  \r\n}  \r\nint main()  \r\n{  \r\n    int i;  \r\n    int t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&Time[i][0],&Time[i][1]);  \r\n        }  \r\n        printf(\"%d\\n\",solve());  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":230,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\n\r\n#define N 505000  \r\nint set[N],du[N];  \r\n\r\nint find(int x)  \r\n{  \r\n    if(set[x]==-1) return x;  \r\n    return set[x]=find(set[x]);  \r\n}  \r\nvoid bing(int a,int b)  \r\n{  \r\n    int fa = find(a);  \r\n    int fb = find(b);  \r\n    if(fa!=fb) set[fa] = fb;  \r\n}  \r\n\r\nstruct node  \r\n{  \r\n    struct node *next[26];  \r\n    int num;  \r\n};  \r\nint id;  \r\n\r\nvoid BFS(node *root);  \r\nint Trie(node *root,char *s);  \r\nvoid Date_process(int n)  \r\n{  \r\n    int i=0;  \r\n    int t1,t2;  \r\n    char s1[15],s2[15];  \r\n    node *root = (node *)malloc(sizeof(node));  \r\n    for(i=0; i<26; ++i)  \r\n        root->next[i] = NULL;  \r\n    root->num = -1;  \r\n    id = 0;  \r\n    memset(du,0,sizeof(du));  \r\n    memset(set,-1,sizeof(set));  \r\n\r\n    for(i=0; i<n; ++i)  \r\n    {  \r\n        scanf(\"%s %s\",s1,s2);  \r\n        t1 = Trie(root,s1);  \r\n        t2 = Trie(root,s2);  \r\n        du[t1]++;  \r\n        du[t2]++;  \r\n        bing(t1,t2);  \r\n    }  \r\n    BFS(root);  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int T;  \r\n    int i,n;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        getchar();  \r\n        if(n==0)  \r\n        {  \r\n            printf(\"Possible\\n\");  \r\n            continue;  \r\n        }  \r\n        Date_process(n);  \r\n        bool flag = true;  \r\n        int k = find(0);  \r\n        for(i=0; i<id; ++i)  \r\n        {  \r\n            if(find(i)!=k)  \r\n                flag = false;  \r\n        }  \r\n        if(!flag) \r\n        {  \r\n            printf(\"Impossible\\n\");  \r\n            continue;  \r\n        }  \r\n        int ans=0;  \r\n        for(i=0; i<id; ++i)  \r\n        {  \r\n            if(du[i]%2==1)  \r\n                ans++;  \r\n        }  \r\n        if(ans==2 || ans==0)  \r\n            printf(\"Possible\\n\");  \r\n        else  \r\n            printf(\"Impossible\\n\");  \r\n    }  \r\n    return 0;  \r\n}  \r\n\r\nint Trie(node *root,char *s)\r\n{  \r\n    int i=0;  \r\n    node *p=root;  \r\n    while(s[0]!='\\0')  \r\n    {  \r\n        if(p->next[s[0]-'a']==NULL)  \r\n        {  \r\n            node *tt;  \r\n            tt = (node *)malloc(sizeof(node));  \r\n            tt->num = -1;  \r\n            for(i=0; i<26; ++i) tt->next[i] = NULL;  \r\n            p->next[s[0]-'a'] = tt;  \r\n            p = tt;  \r\n        }  \r\n        else  \r\n            p = p->next[s[0]-'a'];  \r\n        s++;  \r\n    }  \r\n    if(p->num==-1)  \r\n        p->num = id++;  \r\n    return p->num;  \r\n}  \r\n\r\nvoid BFS(node *root)  \r\n{  \r\n    int i;  \r\n    if(root==NULL) return ;  \r\n    for(i=0; i<26; i++)  \r\n    {  \r\n        if(root->next[i]!=NULL)  \r\n            BFS(root->next[i]);  \r\n    }  \r\n    free(root);  \r\n}"
},
{
"pid":231,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <vector>\r\n#define MAXN 100005\r\n#define mem(a) memset(a, 0, sizeof(a))\r\nusing namespace std;\r\n\r\nint TreeArray[MAXN], Left[MAXN], Right[MAXN], Fork[MAXN];\r\ntypedef vector<int> Ve;\r\nvector<Ve>Edge(MAXN);\r\nint N,M;\r\nint key;\r\n\r\nvoid init()\r\n{\r\n    mem(Left);  mem(Right);\r\n    mem(Fork);  mem(TreeArray);\r\n    for(int i=0;i<MAXN;i++)Edge[i].clear();\r\n}\r\n\r\nvoid DFS(int node)\r\n{\r\n    Left[node] = key;\r\n    for(int i=0;i<Edge[node].size();i++)\r\n    {\r\n        key+=1;\r\n        DFS(Edge[node][i]);\r\n    }\r\n    Right[node] = key;\r\n}\r\n\r\nint LowBit(int x)\r\n{\r\n    return x & (x ^ (x-1));\r\n}\r\n\r\nvoid Edit(int k, int num)\r\n{\r\n    while(k <= N)\r\n    {\r\n        TreeArray[k] += num;\r\n        k += LowBit(k);\r\n    }\r\n}\r\n\r\nint GetSum(int k)\r\n{\r\n    int sum = 0;\r\n    while(k>=1)\r\n    {\r\n        sum += TreeArray[k];\r\n        k -= LowBit(k);\r\n    }\r\n    return sum;\r\n}\r\n\r\nvoid ReadDataAndDo()\r\n{\r\n    int a,b;\r\n    char ch;\r\n    for(int i=1;i<N;i++)\r\n    {\r\n        scanf(\"%d%d\", &a, &b);\r\n        Edge[a].push_back(b);\r\n    }\r\n    key = 1;    DFS(1);\r\n    for(int i=1;i<=N;i++)\r\n    {\r\n        Fork[i] = 1;\r\n        Edit(i,1);\r\n    }\r\n    scanf(\"%d%*c\", &M);\r\n    for(int i=0;i<M;i++)\r\n    {\r\n        scanf(\"%c %d%*c\", &ch, &b);\r\n        if(ch == 'Q')\r\n        {\r\n            printf(\"%d\\n\", GetSum(Right[b]) - GetSum(Left[b]-1));\r\n        }\r\n        else\r\n        {\r\n            if(Fork[b]) Edit(Left[b],-1);\r\n            else Edit(Left[b],1);\r\n            Fork[b] = !Fork[b];\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    while(~scanf(\"%d\", &N))\r\n    {\r\n        init();\r\n        ReadDataAndDo();\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":232,
"code":"\n#include <iostream>  \r\n#include <cstring>  \r\n#include <cstdio>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\n#define N 100  \r\nstruct rec  \r\n{  \r\n    int l,w,h;  \r\n}at[N];  \r\nint n,dp[N];  \r\nint cmp(rec a,rec b)  \r\n{  \r\n   if(a.l==b.l)  \r\n   return a.w<b.w;  \r\n   return a.l<b.l;  \r\n}  \r\nint main()  \r\n{  \r\n    int t=1;  \r\n    while(~scanf(\"%d\",&n)&&n)  \r\n    {  \r\n        int cnt=0,a,b,c;  \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d%d%d\",&a,&b,&c);  \r\n            at[cnt].l=max(a,b);at[cnt].w=min(a,b);at[cnt++].h=c;  \r\n            at[cnt].l=max(a,c);at[cnt].w=min(a,c);at[cnt++].h=b;  \r\n            at[cnt].l=max(b,c);at[cnt].w=min(b,c);at[cnt++].h=a;  \r\n        }  \r\n        sort(at,at+cnt,cmp);  \r\n        for(int i=0;i<cnt;i++)  \r\n        dp[i]=at[i].h;  \r\n        for(int i=0;i<cnt;i++)  \r\n        {  \r\n            for(int j=0;j<i;j++)  \r\n            {  \r\n                if(at[i].l>at[j].l&&at[i].w>at[j].w)  \r\n                dp[i]=max(dp[j]+at[i].h,dp[i]);  \r\n            }  \r\n        }  \r\n        int ma=0;  \r\n        for(int i=0;i<cnt;i++)  \r\n        if(dp[i]>ma)  \r\n        ma=dp[i];  \r\n        printf(\"Case %d: maximum height = %d\\n\",t++,ma);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":233,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n\r\nint main(){  \r\n    int n, *a, count, i, j, t;  \r\n    while(scanf(\"%d\", &n) == 1){  \r\n        i = count = 0;  \r\n        a = (int *)malloc(sizeof(int) * n);  \r\n        while(i < n)  \r\n            scanf(\"%d\", &a[i++]);  \r\n        for(i = 0; i < n - 1; ++i)  \r\n            for(j = i + 1; j < n; ++j)  \r\n                if(a[i] > a[j]){  \r\n                    t = a[i], a[i] = a[j], a[j] = t;  \r\n                    ++count;  \r\n                }  \r\n\r\n        printf(\"%d\\n\", count);  \r\n\r\n        free(a);  \r\n    }     \r\n    return 0;  \r\n}"
},
{
"pid":234,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<algorithm>\r\n#include<cmath>\r\n#include<cstring>\r\n#include<string>\r\nusing namespace std;\r\nint map,dp[510],R[510][510];\r\nint main()\r\n{\r\n int m,n,i,j;\r\n while(~scanf(\"%d %d\",&m,&n))\r\n {\r\n     memset(R,0,sizeof(R));\r\n     memset(dp,0,sizeof(dp));\r\n     for(i=3;i<m+3;++i) \r\n     { \r\n         for(j=3;j<n+3;++j)\r\n         {\r\n             scanf(\"%d\",&map);\r\n             R[i][j]=max(R[i][j-2],R[i][j-3])+map;\r\n         }\r\n     }\r\n         for(i=3;i<m+3;++i)\r\n         {\r\n           dp[i]=max(dp[i-2],dp[i-3])+max(R[i][n+1],R[i][n+2]); \r\n         }\r\n         printf(\"%d\\n\",max(dp[m+1],dp[m+2]));\r\n }\r\n return 0;\r\n}"
},
{
"pid":236,
"code":"\n#include <cstdio>\r\n#include <iostream>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nstruct stick\r\n{\r\n    int len;\r\n    int weight;\r\n}a[5001];\r\n\r\nbool cmp(stick p, stick q)\r\n{\r\n    if(p.len == q.len)\r\n        return p.weight < q.weight;\r\n    else\r\n        return p.len < q.len;\r\n}\r\n\r\nint solve(int n)\r\n{\r\n    int t, cnt = 0;\r\n    for(int i = 0; i < n; ++i)\r\n    {\r\n        if(a[i].weight)\r\n        {\r\n            ++cnt;\r\n            t = a[i].weight;\r\n            a[i].weight = 0;\r\n            for(int j = i + 1; j < n ;++j)\r\n            {\r\n                if(a[j].weight >= t)\r\n                {\r\n                    t = a[j].weight;\r\n                    a[j].weight = 0;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return cnt;\r\n}\r\n\r\nint main()\r\n{\r\n    int T, n;\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        for(int i = 0; i < n; ++i)\r\n            scanf(\"%d%d\", &a[i].len, &a[i].weight);\r\n        sort(a, a + n, cmp);\r\n        printf(\"%d\\n\", solve(n));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":237,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<iostream>  \r\n#include <vector>  \r\nusing namespace std;  \r\nvector <int> st[503];  \r\nint m,n,u,use[503],lin[503];  \r\nint find(int v)  \r\n{  \r\n    int i,j;  \r\n    for(i=0;i<st[v].size();i++)  \r\n    {  \r\n        int x=st[v][i];  \r\n        if(!use[x])  \r\n        {  \r\n            use[x]=1;  \r\n            if(!lin[x]||find(lin[x]))  \r\n            {  \r\n                lin[x]=v;  \r\n                return 1;  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}  \r\nint max()  \r\n{  \r\n    int i,ans=0;  \r\n    memset(lin,0,sizeof(lin));  \r\n    for(i=1;i<=m;i++)  \r\n    {  \r\n        memset(use,0,sizeof(use));  \r\n        if(find(i))  \r\n        ans++;  \r\n    }  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    scanf(\"%d\",&u);  \r\n    while(u--)  \r\n    {  \r\n        int i,j,x,y,z;  \r\n        scanf(\"%d%d\",&m,&n);  \r\n        for(i=0;i<503;i++)  \r\n        st[i].clear();  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n        scanf(\"%d%d\",&x,&y);  \r\n        st[x].push_back(y);  \r\n        }  \r\n        int zs;  \r\n        zs=max();  \r\n         printf(\"%d\\n\",zs);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":238,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int m,n;  \r\n    scanf(\"%d\",&m);  \r\n    while (m--)  \r\n    {  \r\n        int a[101];  \r\n        int min = 10000,max = -1;  \r\n        int i;  \r\n        scanf(\"%d\",&n);  \r\n        for (i=0; i<n; i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n            if (a[i] > max)  \r\n            {  \r\n                max = a[i];  \r\n            }  \r\n            if (a[i]<min)  \r\n            {  \r\n                min = a[i];  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",max-min);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":239,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\nusing namespace std;  \r\n#define N 10010  \r\n#define M 510  \r\nint head[M], next[N], key[N], num;  \r\nint match[M];  \r\nbool use[M];  \r\n\r\nvoid add(int u, int v) \r\n{  \r\n    key[num] = v;  \r\n    next[num] = head[u];  \r\n    head[u] = num++;  \r\n}  \r\n\r\nbool find(int u) \r\n{  \r\n    int temp;  \r\n    for(int i = head[u]; i != -1; i = next[i])  \r\n    {  \r\n        temp = key[i];  \r\n        if(!use[temp])  \r\n        {  \r\n            use[temp] = true;  \r\n            if(match[temp] == -1 || find(match[temp]))\r\n            {  \r\n                match[temp] = u;  \r\n                return true;  \r\n            }  \r\n        }  \r\n    }  \r\n    return false;  \r\n}  \r\n\r\nint sum(int n) \r\n{  \r\n    int sumall = 0;  \r\n    for(int i = 1; i <= n; ++i)  \r\n    {  \r\n        memset(use, false, sizeof(use));  \r\n        if(find(i))  \r\n            sumall++;  \r\n    }  \r\n    return sumall;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int ncase;  \r\n    int allnum, relation;  \r\n    int u, v;  \r\n    scanf(\"%d\", &ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        num = 0;  \r\n        memset(head, -1, sizeof(head));  \r\n        memset(match, -1, sizeof(match));  \r\n        scanf(\"%d%d\", &allnum, &relation);  \r\n        for(int i = 0; i < relation; ++i)  \r\n        {  \r\n            scanf(\"%d%d\", &u, &v);  \r\n            add(u, v);  \r\n        }  \r\n        printf(\"%d\\n\", sum(allnum));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":240,
"code":"\n#include<stdio.h>\r\n#include<iostream>\r\n#include<algorithm>\r\n#include<string>\r\nusing namespace std;\r\nstruct chenji\r\n{\r\n    int bj;\r\n    int xh;\r\n    int cj;\r\n    int mc;\r\n} c[100001];\r\nbool comp(chenji x,chenji y)\r\n{ \r\n    if(x.cj<y.cj) return true;\r\n    if(x.cj==y.cj&&x.bj<y.bj)return true;\r\n    if(x.cj==y.cj&&x.bj==y.bj&&x.xh<y.xh)return true;\r\n    else return false;\r\n}\r\nint main()\r\n{\r\n    int i,j,k,l,n,m,count=0,s,a;\r\n    scanf(\"%d%d\",&n,&m);\r\n    for(i=1;i<=n;i++)\r\n    {   scanf(\"%d\",&s);\r\n        for(j=1;j<=s;j++)\r\n        {\r\n            c[count].bj=i;\r\n            c[count].xh=j;\r\n            scanf(\"%d\",&k);\r\n            c[count].cj=k;\r\n            count++;\r\n        }\r\n    }\r\n    sort(c,c+count,comp);\r\n    l=1;\r\n    c[count-1].mc=1;\r\n    for(i=count-2;i>=0;i--)\r\n     {if(c[i].cj==c[i+1].cj)\r\n            c[i].mc=l;\r\n     else\r\n         c[i].mc=++l;\r\n    }\r\n    for(i=1;i<=m;i++)\r\n    {\r\n        scanf(\"%d\",&a);\r\n        for(j=0;j<count;j++)\r\n        {\r\n            if(c[j].mc==a)\r\n                printf(\"%d %d\\n\",c[j].bj,c[j].xh);\r\n        }\r\n\r\n    }return 0;\r\n}"
},
{
"pid":241,
"code":"\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        int max=0,k,l,i;\r\n        char a[1020];\r\n        int b[27]={0};\r\n        scanf(\"%s\",a);\r\n        l=strlen(a);\r\n        for(i=0;i<l;i++)\r\n        b[a[i]-'a']++;\r\n        for(i=0;i<26;i++)\r\n        if(b[i]>max)\r\n        {\r\n            max=b[i];\r\n            k=i;\r\n        }\r\n        printf(\"%c\\n\",k+'a');    \r\n    }\r\n    return 0;\r\n}"
},
{
"pid":242,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n\r\n    double n;  \r\n    while( cin>>n ){  \r\n      double PI=3.1415926;  \r\n      int m=0.5+1.0*4\/3*PI*n*n*n;  \r\n      cout<<m<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":243,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int a[102],i,n,t,j;  \r\n    while(scanf(\"%d\",&n),n)  \r\n    {  \r\n        j=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n            t=a[0];  \r\n        }  \r\n        for(i=1;i<n;i++)  \r\n        {  \r\n            if(a[0]>a[i])  \r\n            a[0]=a[i],j=i;  \r\n        }  \r\n        a[j]=t;  \r\n        for(i=0;i<n;i++)  \r\n        printf(\"%d \",a[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n}"
},
{
"pid":244,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int T,a,b;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%x%x\",&a,&b);  \r\n        printf(\"%o\\n\",a+b);  \r\n    }  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":245,
"code":"\n#include<iostream>\r\n#include<stdio.h>  \r\nusing namespace std;\r\n#define N 40005\r\nstruct node{\r\n\tdouble x,y;\r\n}p[N];\r\nint n;\r\ndouble cal_dis(int x,int y){\r\n\tdouble x1=p[x].x,y1=p[x].y;\r\n\tdouble x2=p[y].x,y2=p[y].y;\r\n\treturn (x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);\r\n}\r\nint main(void){\r\n\twhile(~scanf(\"%d\",&n)){\r\n\t\tint k=1;\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tscanf(\"%lf%lf\",&p[k].x,&p[k].y);\r\n\t\t\tif(k!=1&&k%2){\r\n\t\t\t\tp[k-1].x=(p[k-2].x+p[k].x)\/2.0;\r\n\t\t\t\tp[k-1].y=(p[k-2].y+p[k].y)\/2.0;\r\n\t\t\t}\r\n\t\t\tk+=2;\r\n\t\t}\r\n\t\tp[k-1].x=(p[1].x+p[k-2].x)\/2.0;\r\n\t\tp[k-1].y=(p[1].y+p[k-2].y)\/2.0;\r\n\t\tbool flag=0;\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tdouble x1=p[i].x-p[i+n].x;\r\n\t\t\tdouble y1=p[i].y-p[i+n].y;\r\n\t\t\tint j,k;\r\n\t\t\tk=i-1;\r\n\t\t\tj=i+1;\r\n\t\t\tfor(;j<=i+n;j++,k--){\r\n\t\t\t\tif(k<=0) k=2*n;\r\n\t\t\t\tdouble x2=p[j].x-p[k].x;\r\n\t\t\t\tdouble y2=p[j].y-p[k].y;\r\n\t\t\t\tif(x1*x2+y1*y2!=0)\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tif(cal_dis(i,j)!=cal_dis(i,k))\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(j>i+n){\r\n\t\t\t\tflag=1;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flag)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n}"
},
{
"pid":246,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<algorithm>  \r\n#include<cmath>  \r\n#include<cstring>  \r\n#include<string>  \r\n#include<vector>  \r\nusing namespace std;  \r\nconst int N=305;  \r\ntypedef pair<int,int>PA;  \r\nint n,m;  \r\nchar a[N],b[N];  \r\nint v[333][333],d[N][N];  \r\nvoid init()  \r\n{  \r\n    v['A']['A']=5;  \r\n    v['A']['C']=v['C']['A']=-1;  \r\n    v['A']['G']=v['G']['A']=-2;  \r\n    v['A']['T']=v['T']['A']=-1;  \r\n    v['-']['A']=v['A']['-']=-3;  \r\n    v['C']['C']=5;  \r\n    v['C']['G']=v['G']['C']=-3;  \r\n    v['C']['T']=v['T']['C']=-2;  \r\n    v['C']['-']=v['-']['C']=-4;  \r\n    v['G']['G']=5;  \r\n    v['G']['T']=v['T']['G']=-2;  \r\n    v['G']['-']=v['-']['G']=-2;  \r\n    v['T']['T']=5;  \r\n    v['T']['-']=v['-']['T']=-1;  \r\n    v['-']['-']=-5;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int T;  \r\n    scanf(\"%d\",&T);  \r\n    init();  \r\n    while(T--){  \r\n        scanf(\"%d %s\",&n,a+1);  \r\n        scanf(\"%d %s\",&m,b+1);  \r\n        memset(d,0,sizeof(d));  \r\n        for(int i=1;i<=n;i++)  \r\n            d[i][0]=d[i-1][0]+v[a[i]]['-'];  \r\n        for(int j=1;j<=m;j++)  \r\n            d[0][j]=d[0][j-1]+v['-'][b[j]];  \r\n        for(int i=1;i<=n;i++){  \r\n            for(int j=1;j<=m;j++){  \r\n                d[i][j]=d[i-1][j-1]+v[a[i]][b[j]];                                 ;  \r\n                d[i][j]=max(d[i][j],d[i-1][j]+v[a[i]]['-']);  \r\n                d[i][j]=max(d[i][j],d[i][j-1]+v['-'][b[j]]);  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",d[n][m]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":247,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<queue>\r\nusing namespace std;  \r\n#define max(a,b) (a>b?a:b)  \r\n#define min(a,b) (a<b?a:b)  \r\n#define N 100005  \r\nint a[N],b[N],head1[N],head2[N],e;  \r\nstruct node  \r\n{  \r\n    int v,next;  \r\n}bian[N*5];  \r\nvoid add(int u,int v)  \r\n{  \r\n    bian[e].v=v;  \r\n    bian[e].next=head1[u];  \r\n    head1[u]=e++;  \r\n\r\n    bian[e].v=u;  \r\n    bian[e].next=head2[v];  \r\n    head2[v]=e++;  \r\n}  \r\nint spfa(int s,int n)  \r\n{  \r\n    queue<int>q;  \r\n    int x,i,v;  \r\n    int mark1[N],mark2[N];  \r\n    memset(mark1,0,sizeof(mark1));  \r\n    memset(mark2,0,sizeof(mark2));  \r\n    mark1[s]=1;  \r\n    mark2[n]=1;  \r\n    q.push(s);  \r\n    while(!q.empty())  \r\n    {  \r\n        x=q.front();  \r\n        q.pop();  \r\n        for(i=head1[x];i!=-1;i=bian[i].next)  \r\n        {  \r\n            v=bian[i].v;  \r\n            a[v]=min(a[v],a[x]);  \r\n            if(!mark1[v])  \r\n            {  \r\n                mark1[v]=1;  \r\n                q.push(v);  \r\n            }  \r\n        }  \r\n    }  \r\n    q.push(n);  \r\n    while(!q.empty())       \r\n    {  \r\n        x=q.front();  \r\n        q.pop();  \r\n        for(i=head2[x];i!=-1;i=bian[i].next)  \r\n        {  \r\n            v=bian[i].v;  \r\n            b[v]=max(b[v],b[x]);  \r\n            if(!mark2[v])  \r\n            {  \r\n                mark2[v]=1;  \r\n                q.push(v);  \r\n            }  \r\n        }  \r\n    }  \r\n    int ans=0;  \r\n    for(i=1;i<=n;i++)  \r\n    {  \r\n        if(mark1[i]&&mark2[i])  \r\n        {  \r\n            ans=max(ans,b[i]-a[i]);  \r\n        }  \r\n    }  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,m,u,v,x,i;  \r\n    while(scanf(\"%d%d\",&n,&m)!=-1)  \r\n    {  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n            b[i]=a[i]; \r\n        }  \r\n        memset(head1,-1,sizeof(head1));  \r\n        memset(head2,-1,sizeof(head2));  \r\n        e=0;  \r\n        while(m--)  \r\n        {  \r\n            scanf(\"%d%d%d\",&u,&v,&x);  \r\n            add(u,v);  \r\n            if(x==2)  \r\n                add(v,u);  \r\n        }  \r\n        printf(\"%d\\n\",spfa(1,n));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":248,
"code":"\n#include<stdio.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nstruct store  \r\n{  \r\n    int pos; \r\n    int f;\r\n    int c;   \r\n    int s;  \r\n}a[105];  \r\n\r\nbool comp(store a1, store a2)  \r\n{  \r\n    return a1.s < a2.s;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int k, L, n, i, j, sum, T;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d%d\",&k,&L,&n);  \r\n        for(i = 0; i < n; i++)  \r\n        {  \r\n            scanf(\"%d%d%d\",&a[i].pos, &a[i].f, &a[i].c);  \r\n            a[i].s = L - a[i].pos + a[i].c;  \r\n        }  \r\n        sort(a, a+n,comp);  \r\n        int sum = 0, cnt = 0;  \r\n        for(i = 0; i < n; i++)  \r\n        {  \r\n            if(cnt < k)  \r\n            {  \r\n                if(cnt + a[i].f <= k)  \r\n                {  \r\n                    sum += a[i].f * a[i].s;  \r\n                    cnt += a[i].f;  \r\n                    if(cnt == k)  \r\n                        break;  \r\n                }  \r\n                else  \r\n                {  \r\n                    sum += (k - cnt) * a[i].s;  \r\n                    break;  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":249,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint a[1001],w[1001];  \r\nint main()  \r\n{  \r\n    int n,i,j,max;  \r\n    while(~scanf(\"%d\",&n)&&n)  \r\n    {  \r\n        memset(a,0,sizeof(a));  \r\n        memset(w,0,sizeof(w));  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n        }  \r\n        for(max=0,i=0;i<n;i++)  \r\n        {  \r\n            for(j=1;i>=j&&a[i]<=a[i-j];j++)  \r\n            {  \r\n                w[i]++;  \r\n            }  \r\n            for(j=1;i+j<n&&a[i]<=a[i+j];j++)  \r\n            {  \r\n                w[i]++;  \r\n            }  \r\n            if(a[i]*(w[i]+1)>max) max=a[i]*(w[i]+1);  \r\n        }  \r\n        printf(\"%d\\n\",max);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":250,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\nconst int N=50010;\r\nusing namespace std;\r\nstruct Node{\r\n    int l,r;\r\n    int free;\r\n    int lmax,rmax,tmax; \r\n}tree[3*N];\r\nint build(int l,int r,int i){\r\n    tree[i].l=l;\r\n    tree[i].r=r;\r\n    tree[i].lmax=tree[i].rmax=tree[i].tmax=r-l+1; \r\n    tree[i].free=0;\r\n    if(l<r){\r\n        int mid=(l+r)>>1;\r\n        build(l,mid,i<<1);\r\n        build(mid+1,r,i<<1|1);\r\n    }\r\n}\r\nint query(int i,int len){\r\n    if(tree[i].tmax<len) return 0;  \r\n    if(tree[i].lmax>=len) return tree[i].l;  \r\n    if(tree[i<<1].tmax>=len) return query(i<<1,len); \r\n    else if(tree[i<<1].rmax+tree[i<<1|1].lmax >= len) \r\n        return tree[i<<1].r-tree[i<<1].rmax+1;\r\n    else return query(i<<1|1,len); \r\n}\r\nint update(int l,int r,int i,int state){\r\n    if(tree[i].l==l&&tree[i].r==r){ \r\n        tree[i].free=state;\r\n        if(state){ \r\n            tree[i].lmax=tree[i].rmax=tree[i].tmax=0;\r\n        }else{\r\n            tree[i].lmax=tree[i].rmax=tree[i].tmax=tree[i].r-tree[i].l+1;\r\n        }\r\n    }else if(tree[i].r > tree[i].l){\r\n        if(tree[i].free==1){  \r\n            tree[i<<1].free=tree[i<<1|1].free=1;\r\n            tree[i<<1].lmax=tree[i<<1].rmax=tree[i<<1].tmax=0;\r\n            tree[i<<1|1].lmax=tree[i<<1|1].rmax=tree[i<<1|1].tmax=0;\r\n        }\r\n        if(tree[i].free==0){\r\n            tree[i<<1].free=tree[i<<1|1].free=0;\r\n            tree[i<<1].lmax=tree[i<<1].rmax=tree[i<<1].tmax=tree[i<<1].r-tree[i<<1].l+1;\r\n            tree[i<<1|1].lmax=tree[i<<1|1].rmax=tree[i<<1|1].tmax=tree[i<<1|1].r-tree[i<<1|1].l+1;\r\n        }\r\n        int mid=(tree[i].r+tree[i].l)>>1;\r\n        if(mid>=r) update(l,r,i<<1,state);\r\n        else if(mid<l) update(l,r,i<<1|1,state);\r\n        else{\r\n            update(l,mid,i<<1,state);\r\n            update(mid+1,r,i<<1|1,state);\r\n        }\r\n        tree[i].lmax=tree[i<<1].lmax;  \r\n        tree[i].rmax=tree[i<<1|1].rmax;\r\n        if(tree[i<<1].free==0) tree[i].lmax+=tree[i<<1|1].lmax;\r\n        if(tree[i<<1|1].free==0) tree[i].rmax+=tree[i<<1].rmax;\r\n        tree[i].tmax=max(tree[i<<1].tmax,tree[i<<1|1].tmax); \r\n        tree[i].tmax=max(tree[i].tmax,tree[i<<1].rmax+tree[i<<1|1].lmax);\r\n        if(tree[i<<1].free==tree[i<<1|1].free)  \r\n            tree[i].free=tree[i<<1].free;\r\n        else tree[i].free=-1;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int N,M,s,num,start,flag;\r\n    while(~scanf(\"%d%d\",&N,&M)){\r\n        build(1,N,1);\r\n        while(M--){\r\n            scanf(\"%d\",&flag);\r\n            if(flag==1){\r\n                scanf(\"%d\",&s);\r\n                start=query(1,s); \r\n                printf(\"%d\\n\",start);\r\n                if(start) update(start,start+s-1,1,1);  \r\n            }else{\r\n                scanf(\"%d%d\",&s,&num);\r\n                update(s,s+num-1,1,0);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":251,
"code":"\n#include<stdio.h>\r\nstruct bid\r\n{\r\n     char name[7];\r\n     int price;\r\n     int count;\r\n}a[101],t;\r\n\r\nint main()\r\n{\r\n     int i,j,max,num,k,flag,temp;\r\n     while(scanf(\"%d%d\",&max,&num)!=EOF)\r\n     {\r\n      for(i=0;i<num;++i)\r\n      {\r\n       scanf(\"%s %d\",a[i].name,&a[i].price);\r\n       if(a[i].price>max)\r\n       {\r\n        --i;\r\n        --num;\r\n       }\r\n       a[i].count=1;\r\n      }\r\n      for(i=num-1;i>=0;--i)\r\n       for(j=0;j<i;++j)\r\n       {\r\n        if(a[j].price>a[j+1].price)\r\n        {\r\n         t=a[j];\r\n         a[j]=a[j+1];\r\n         a[j+1]=t;\r\n        }\r\n       }\r\n      k=num;\r\n      for(i=0;i<num-1;i+=temp)\r\n      {\r\n       temp=1;\r\n       for(j=i+1;j<num;++j)\r\n       {\r\n        if(a[j].price==a[j-1].price)\r\n         temp++;\r\n        else\r\n         break;\r\n       }\r\n       for(j=i+1;j<i+1+temp;++j)\r\n        a[j].count=temp;\r\n       \t\tif(temp<k)\r\n       \t\t{\r\n        \t\tk=temp;\r\n        \t\tflag=i;\r\n       \t\t}\r\n      \t}\r\n      \tprintf(\"The winner is %s\\n\",a[flag].name);\r\n      \tprintf(\"The price is %d\\n\",a[flag].price);\r\n    }\r\n}"
},
{
"pid":252,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n\r\nusing namespace std;\r\n\r\nint dp[41];\r\n\r\nvoid init()\r\n{\r\n    dp[2] = 3;\r\n    dp[3] = 5;\r\n    for(int i = 4; i <= 40; ++i)\r\n        dp[i] = dp[i - 1] + dp[i - 2];\r\n}\r\n\r\nint main()\r\n{\r\n    int T, len;\r\n    init();\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d\", &len);\r\n        printf(\"%d\\n\", dp[len]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":253,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n#define INF 999999  \r\nstruct Node{  \r\n    int x,y;  \r\n};  \r\nint count;  \r\nint Max(int a,int b,int c)  \r\n{  \r\n    if(a<b)  \r\n        a=b;  \r\n    if(a<c)  \r\n        a=c;  \r\n    return a;  \r\n}  \r\nint com(const void *a,const void *b)  \r\n{ \r\n    Node *c;  \r\n    Node *d;  \r\n    c=(Node *)a;  \r\n    d=(Node *)b;  \r\n    if(c->x!=d->x)  \r\n        return c->x-d->x;  \r\n    return c->y-d->y;  \r\n}  \r\nNode p[100099];  \r\nNode v[100099];  \r\nint CountCrossProduct(int x1,int y1,int x0,int y0,int x2,int y2)  \r\n{\r\n    return (x1-x0)*(y2-y0)-(x2-x0)*(y1-y0);  \r\n}  \r\nint _CountCrossProduct(Node p1,Node p0,Node p2)  \r\n{ \r\n    int a=(p1.x-p0.x)*(p2.y-p0.y)-(p2.x-p0.x)*(p1.y-p0.y);  \r\n    if(a>=0)  \r\n        return a;  \r\n    return -a;  \r\n}  \r\nint Graham()  \r\n{\r\n    int top=0;\r\n    Node p0,p1,p2;  \r\n    p[top++]=v[0];  \r\n    p[top++]=v[1];  \r\n    p[top++]=v[2];  \r\n    for(int i=3;i<count;i++)  \r\n    {  \r\n        p2=v[i];  \r\n        do  \r\n        {  \r\n            p1=p[--top];  \r\n            p0=p[top-1];  \r\n        }while(CountCrossProduct(p2.x,p2.y,p0.x,p0.y,p1.x,p1.y)>0);  \r\n        p[top++]=p1;  \r\n        p[top++]=p2;  \r\n    }  \r\n    return top;  \r\n}  \r\nint RCA(int m)  \r\n{\r\n    int ans=0;  \r\n    int i,j=1;  \r\n    p[m]=p[0];  \r\n    for(i=0;i<m;i++)  \r\n    {  \r\n        while(_CountCrossProduct(p[i],p[i+1],p[j+1])>_CountCrossProduct(p[i],p[i+1],p[j]))  \r\n            j=(j+1)%m;  \r\n        ans=Max(ans,(p[j].x-p[i].x)*(p[j].x-p[i].x)+(p[j].y-p[i].y)*(p[j].y-p[i].y),(p[j].x-p[i+1].x)*(p[j].x-p[i+1].x)+(p[j].y-p[i+1].y)*(p[j].y-p[i+1].y));  \r\n    }  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    int m;  \r\n    int i;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        count=0;  \r\n        scanf(\"%d\",&m);  \r\n        for(i=0;i<m;i++)  \r\n        {scanf(\"%d%d\",&p[i].x,&p[i].y);}  \r\n        qsort(p,m,sizeof(Node),com);\r\n        v[count++]=p[0];  \r\n        p[m].x=INF;p[m].y=INF;  \r\n        for(i=1;i<m;i++)\r\n        {  \r\n            if(p[i].x==p[i-1].x)  \r\n                continue;  \r\n            if(p[i].y<p[0].y)  \r\n                v[count++]=p[i];  \r\n        }  \r\n        for(i=m-1;i>=1;i--) \r\n        {  \r\n            if(p[i].x==p[i+1].x)  \r\n                continue;  \r\n            if(p[i].y>p[0].y)  \r\n                v[count++]=p[i];  \r\n        }  \r\n        m=Graham();  \r\n        printf(\"%d\\n\",RCA(m));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":254,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n\r\nstruct node{  \r\n    int num, time;  \r\n};  \r\n\r\nint cmp(const void *a, const void *b){  \r\n    return *(int *)a - *(int *)b;  \r\n}  \r\n\r\nint main(){  \r\n    node max;  \r\n    int t, n, i, temp, *a, j;  \r\n    scanf(\"%d\", &t);  \r\n    while(t-- && scanf(\"%d\", &n)){  \r\n        a = (int *)malloc(sizeof(int) * n);  \r\n        for(i = 0; i != n; ++i)  \r\n            scanf(\"%d\", &a[i]);  \r\n        qsort(a, n, sizeof(int), cmp);  \r\n        for(i = 0, j = 1, max.num = max.time = 0; i != n; ++i)  \r\n            if(a[i] == a[i + 1]) ++j;  \r\n            else if(j > max.time)   \r\n                max.num = a[i], max.time = j, j = 1;  \r\n            else j = 1;  \r\n        printf(\"%d\\n\", max.num);  \r\n        free(a);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":255,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n\r\nint cmp(const void *a, const void *b){  \r\n    return *(int *)a - *(int *)b;  \r\n}  \r\n\r\nint main(){  \r\n    int t, n, i, *a, flag;  \r\n    scanf(\"%d\", &t);  \r\n    while(t-- && scanf(\"%d\", &n)){  \r\n        a = (int *)malloc(sizeof(int) * n);  \r\n        for(i = 0; i != n; ++i)  \r\n            scanf(\"%d\", &a[i]);  \r\n        qsort(a, n, sizeof(int), cmp);  \r\n        flag = 1;  \r\n        for(i = 1, flag = 1; i != n; ++i){  \r\n            if(a[i] == a[i - 1]) continue;  \r\n            ++flag;  \r\n        }  \r\n        printf(\"%d\\n%d\", flag, a[0]);  \r\n        for(i = 1; i != n; ++i){  \r\n            if(a[i] == a[i - 1]) continue;  \r\n            printf(\" %d\", a[i]);  \r\n        }  \r\n        printf(\"\\n\");  \r\n        free(a);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":256,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int n,k,i;\r\n    double s,t;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        s=0;\r\n        scanf(\"%d\",&k);\r\n        for(i=1;;i++)\r\n        {\r\n            t=1.0\/i;\r\n            s+=t; \r\n            if(s>k) break;\r\n        }\r\n        printf(\"%d\\n\",i);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":257,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stack>  \r\n#include<queue>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint precede(char op) \r\n{  \r\n    if(op=='+'||op=='-')  \r\n    {  \r\n        return 1;  \r\n    }  \r\n    if(op=='*'||op=='\/')  \r\n    {  \r\n        return 2;  \r\n    }  \r\n    return 0;  \r\n}  \r\nint main()  \r\n{  \r\n    int ncases,i,j,len;  \r\n    char str[1001];  \r\n    stack<char>optr;\r\n    queue<char>opnd; \r\n    scanf(\"%d\",&ncases);  \r\n    while(ncases--)  \r\n    {  \r\n        memset(str,0,sizeof(str));  \r\n        scanf(\"%s\",str);  \r\n        len=strlen(str);  \r\n        for(i=0;i<=len-1;i++)  \r\n        {  \r\n            if(str[i]>='0'&&str[i]<='9') \r\n            {  \r\n                opnd.push(str[i]);  \r\n            }  \r\n            else  \r\n            {  \r\n                if(str[i]=='(')\r\n                {  \r\n                    optr.push('(');  \r\n                }  \r\n                else  \r\n                {  \r\n                    if(str[i]==')')\r\n                    {  \r\n                        while(optr.top()!='(')  \r\n                        {  \r\n                            opnd.push(optr.top());  \r\n                            optr.pop();  \r\n                        }  \r\n                        optr.pop(); \r\n                    }  \r\n                    else  \r\n                    {  \r\n                        if(optr.empty())\r\n                        {  \r\n                            optr.push(str[i]);  \r\n                        }  \r\n                        else  \r\n                        {  \r\n                            if(precede(str[i])>precede(optr.top())) \r\n                            {  \r\n                                optr.push(str[i]);  \r\n                            }  \r\n                            else  \r\n                            {  \r\n                                while(!optr.empty()&&precede(str[i])<=precede(optr.top()))\r\n                                {  \r\n                                    opnd.push(optr.top());  \r\n                                    optr.pop();  \r\n                                }  \r\n                                optr.push(str[i]);  \r\n                            }  \r\n                        }  \r\n                    }  \r\n                }  \r\n            }  \r\n        }  \r\n        while(!optr.empty())\r\n        {  \r\n            opnd.push(optr.top());  \r\n            optr.pop();  \r\n        }  \r\n        while(!opnd.empty())\r\n        {  \r\n            printf(\"%c\",opnd.front());  \r\n            opnd.pop();  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":258,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#define max(a,b) a>b?a:b   \r\nint stack[100010],len[100010];  \r\nint main()  \r\n{  \r\n    int a,b,n,h;  \r\n    while(scanf(\"%d\",&n)&&n)  \r\n    {  \r\n        long long top=-1,ans=0;  \r\n        for(a=0;a<=n;a++)  \r\n        {  \r\n            if(a<n)  \r\n                scanf(\"%d\",&h);  \r\n            else  \r\n                h=-1;  \r\n            if(top<0||stack[top]<h)  \r\n            {  \r\n                stack[++top]=h;  \r\n                len[top]=1;  \r\n            }  \r\n            else  \r\n            {  \r\n                int l=0;  \r\n                while(stack[top]>=h&&top>=0)  \r\n                {  \r\n                    ans= max(ans,(long long)(len[top]+l)*stack[top]);  \r\n                    l+= len[top--];  \r\n                }  \r\n                if(h>0)  \r\n                {  \r\n                    stack[++top]=h;  \r\n                    len[top]=1+l;  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%lld\\n\",ans);  \r\n    }  \r\n}"
},
{
"pid":259,
"code":"\n#include<stdio.h>\r\nint main () {\r\n    int data ( char num [ 20 ] );\r\n    char num [ 20 ];\r\n    data ( num );\r\n    return 0 ;\r\n}\r\nint data ( char num [ 20 ] ){\r\n    int n ;\r\n    scanf ( \"%d\" , & n );\r\n    if ( n >= 10 || n < 0 ) return -1 ;\r\n    getchar () ;\r\n    while ( n -- ){\r\n        gets ( num );\r\n        puts ( num );\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":260,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int N;  \r\n    scanf(\"%d\",&N);  \r\n    while(N--)  \r\n    {  \r\n        int m,i,s,sum;  \r\n        scanf(\"%d\",&m);  \r\n        sum=s=0;  \r\n        for(i=1;i<=m;++i)  \r\n        {  \r\n            s+=i;   \r\n            sum+=s;    \r\n        }  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n }"
},
{
"pid":263,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n      int i,j,m,t,N;\r\n      unsigned a[1010][3];\r\n      scanf(\"%d\",&N);\r\n      while(N--)\r\n      {\r\n          scanf(\"%d\",&m);\r\n         for(i=1;i<=m;i++)\r\n         for(j=0;j<3;j++)\r\n         scanf(\"%ld\",&a[i][j]);\r\n         for(i=1,a[0][0]=0;i<=m;i++)\r\n         if(a[i][0]>a[0][0])\r\n         {\r\n             a[0][0]=a[i][0];\r\n             t=i;\r\n        }\r\n         for(i=1,a[0][1]=a[t][1];i<=m;i++)\r\n         if(a[i][0]==a[0][0]&&a[i][1]<a[0][1])\r\n         a[0][1]=a[i][1];\r\n         for(i=1,a[0][2]=0;i<=m;i++)\r\n         if(a[i][0]==a[0][0]&&a[i][1]==a[0][1]&&a[i][2]>a[0][2])\r\n         a[0][2]=a[i][2];\r\n         printf(\"%d\\n\",a[0][2]);\r\n     }\r\n     return 0;\r\n }"
},
{
"pid":264,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n\r\nint main()  \r\n{  \r\n    int n,i,l,f;  \r\n    char s[100];  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        while(n--)  \r\n        {  \r\n             scanf(\"%s\",s);  \r\n             l=strlen(s);  \r\n             f=0;  \r\n             while(l%2==0)  \r\n             {  \r\n                for(i=0;i<=l\/2;i++)  \r\n                {  \r\n                    if(s[i]!=s[l-i-1]){f=1;break;}  \r\n                }  \r\n                if(f==0)  \r\n                {l=l\/2;}  \r\n                else  \r\n                {  \r\n                    printf(\"%d\\n\",l);  \r\n                    break;  \r\n                }  \r\n             }  \r\n             if(l%2!=0)  \r\n             {  \r\n                 printf(\"%d\\n\",l);  \r\n             }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":265,
"code":"\n#include<stdio.h>\r\nstruct jm\r\n{\r\n    int w;\r\n    int h;\r\n}w[21];\r\nint main()\r\n{\r\n    int s,n,i,j,b,min;\r\n    int a[21];\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d %d\",&w[i].w,&w[i].h);\r\n            a[i]=w[i].w;\r\n        }\r\n        scanf(\"%d\",&b);\r\n        for(min=1001,i=0;i<n;i++)\r\n        {\r\n            if(w[i].h>=min) continue;\r\n            for(j=1;i>=j&&w[i].h>=w[i-j].h;j++)\r\n            {\r\n                a[i]=a[i]+w[i-j].w;\r\n            }\r\n            for(j=1;i+j<n&&w[i].h>=w[i+j].h;j++)\r\n            {\r\n                a[i]=a[i]+w[i+j].w;\r\n            }\r\n            if(a[i]>=b) min=w[i].h;\r\n        }\r\n        printf(\"%d\\n\",min+b);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":266,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int n,i,j,t,k;\r\n    char a[40];\r\n    scanf(\"%d\",&n);\r\n    getchar();\r\n    while(n--)\r\n    {\r\n        char b[40]={0};\r\n        gets(a);\r\n        j=0;\r\n        for(i=0;i<strlen(a);i++)\r\n        {\r\n            if(a[i]<='z'&&a[i]>='a')\r\n                b[j++]=a[i];\r\n        }\r\n        k=j;\r\n        for(i=0,j--;i<j;i++,j--)\r\n        {\r\n            t=b[i];\r\n            b[i]=b[j];\r\n            b[j]=t;\r\n        }\r\n        for(i=0;i<k;i++)\r\n            printf(\"%c\",b[i]);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":267,
"code":"\n#include <cstdio>\r\n#include <iostream>\r\n#include <cstring>\r\n#include <stack>\r\n#include <cctype>\r\n\r\nusing namespace std;\r\n\r\nchar str[1005];\r\nstack<char> Optr;\r\nstack<float> Opnd;\r\n\r\nchar judge(char c1, char c2)\r\n{\r\n    if(c1 == '+' || c1 == '-')\r\n    {\r\n        if(c2 == '*' || c2 == '\/' || c2 == '(')\r\n            return '<';\r\n        else\r\n            return '>';\r\n    }\r\n    if(c1 == '*' || c1 == '\/')\r\n    {\r\n        if(c2 == '(')\r\n            return '<';\r\n        return '>';\r\n    }\r\n    if(c1 == '(' && c2 == ')' || c1 == '=' && c2 == '=')\r\n        return '=';\r\n    return '<';\r\n}\r\n\r\nfloat cal(float num1, float num2, char p)\r\n{\r\n    if(p == '+')\r\n        return num1 + num2;\r\n    else if(p == '-')\r\n        return num1 - num2;\r\n    else if(p == '*')\r\n        return num1 * num2;\r\n    else if(p == '\/')\r\n        return num1 \/ num2;\r\n}\r\n\r\nvoid change()\r\n{\r\n    int len = strlen(str);\r\n    while(!Opnd.empty())\r\n        Opnd.pop();\r\n    while(!Optr.empty())\r\n        Optr.pop();\r\n    Optr.push('=');\r\n\r\n    for(int i = 0; i < len;)\r\n    {\r\n        if(isdigit(str[i]) || str[i] == '.')\r\n        {\r\n            float t1 = 0;\r\n            int t2 = 1;\r\n            bool flag = false;\r\n            while(isdigit(str[i]) || str[i] == '.')\r\n            {\r\n                if(flag)\r\n                    t2 *= 10;\r\n                if(isdigit(str[i]))\r\n                    t1 = t1*10+str[i]-'0';\r\n                else\r\n                    flag = true;\r\n                printf(\"%c\", str[i]);                \r\n                ++i;\r\n            }\r\n            Opnd.push(t1\/t2);\r\n        }\r\n        else\r\n        {\r\n            char tmp = judge(Optr.top(), str[i]);\r\n            if(tmp == '<')\r\n            {\r\n                Optr.push(str[i]);\r\n                ++i;\r\n            }\r\n            else if(tmp == '>')\r\n            {\r\n                tmp = Optr.top();\r\n                printf(\"%c\", tmp);\r\n                Optr.pop();\r\n                float num1 = Opnd.top();\r\n                Opnd.pop();\r\n                float num2 = Opnd.top();\r\n                Opnd.pop();\r\n                Opnd.push(cal(num2, num1, tmp));\r\n            }\r\n            else\r\n            {\r\n                Optr.pop();\r\n                ++i;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%s\", str);\r\n        change();\r\n        printf(\"=\\n%.2f\\n\", Opnd.top());\r\n        if(T)\r\n            printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":268,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int n;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        char str[1010];  \r\n        int i,len;  \r\n        scanf(\"%s\",str);  \r\n        len=strlen(str);  \r\n        for(i=0;i<len;++i)  \r\n            if(str[i]=='R')  \r\n                printf(\"R\");  \r\n        for(i=0;i<len;++i)  \r\n            if(str[i]=='W')  \r\n                printf(\"W\");  \r\n        for(i=0;i<len;++i)  \r\n            if(str[i]=='B')  \r\n                printf(\"B\");  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":269,
"code":"\n#include <stdio.h>  \r\n\r\nint dp[10][82];  \r\n\r\nvoid func()  \r\n{  \r\n    int i,j,k;  \r\n    for(i = 1; i < 10; i++)  \r\n    {  \r\n        dp[1][i] = 1;  \r\n    }  \r\n    for(i = 2; i < 10; i++)  \r\n    {  \r\n        for(j = 1; j <= 9*i; j++)  \r\n        {  \r\n            for(k = 0; k <= 9&&k < j; k++)  \r\n            {  \r\n                dp[i][j] += dp[i-1][j-k];  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int s,i;  \r\n    func();  \r\n    while(~scanf(\"%d\",&s))  \r\n    {  \r\n        int count = 0;  \r\n        if(s == 1)  \r\n        {  \r\n            printf(\"%d\\n\",10);  \r\n            continue;  \r\n        }  \r\n        else  \r\n        {  \r\n            for(i = 1; i < 10; i++)  \r\n            {  \r\n                count += dp[i][s];  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",count);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":270,
"code":"\n#include <stdio.h>  \r\nint a[20];  \r\n\r\nint main(){  \r\n    int n, i, count;  \r\n    while(scanf(\"%d\", &n) == 1){  \r\n        i = 9; count = 0;     \r\n        if(n == 0){       \r\n            printf(\"10\\n\");  \r\n            continue;  \r\n        }  \r\n        if(1 == n){       \r\n            printf(\"1\\n\");  \r\n            continue;  \r\n        }  \r\n        while(i > 1){  \r\n            if(n % i == 0){  \r\n                a[count++] = i;  \r\n                n \/= i;  \r\n                continue;  \r\n            }  \r\n            --i;  \r\n        }  \r\n        if(n != 1) printf(\"-1\\n\");  \r\n        else{  \r\n            while(count--)  \r\n                printf(\"%d\", a[count]);  \r\n            printf(\"\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":271,
"code":"\n#include <iostream>\r\n#include <cstring>\r\n#include <cstdio>\r\nusing namespace std;\r\n\r\nint d[10003];\r\n\r\nint main()\r\n{\r\n    int i,j,t;\r\n    memset(d,0,sizeof(d));\r\n    for(int k=2;k<10003;k++)\r\n    {\r\n        t=k;\r\n        while(1!=t)\r\n        {\r\n            if(t&1)\r\n            {\r\n                t=t*3+1;\r\n            }\r\n            else  t>>=1;\r\n            d[k]++;\r\n        }\r\n    }\r\n    while(cin>>i>>j)\r\n    {\r\n\r\n        int max=0,t=0;\r\n        cout<<i<<\" \"<<j<<\" \";\r\n        if(i>j)\r\n        {\r\n            i^=j;j^=i;i^=j;\r\n        }\r\n        for(int k=i;k<=j;k++)\r\n        {\r\n\r\n          if(max<d[k])\r\n            max=d[k];\r\n        }\r\n\r\n        cout<<max+1<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":272,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nint main()  \r\n{  \r\n  int kkk;  \r\n  scanf(\"%d\",&kkk);  \r\n    while(kkk--)  \r\n  {  \r\n      char s1[102],s2[102],s3[102]={'0'},s4[102]={'0'},mmax[102]={'0'},mmin[102]={'0'};  \r\n    scanf(\"%s%s\",s1,s2);  \r\n    int ls1=strlen(s1);  \r\n    int ls2=strlen(s2);  \r\n    int k=0,kk=0,i,j;  \r\n    for(i=ls2-1;i>=0;i--)  \r\n        s4[kk++]=s2[i];  \r\n    for(j=ls1-1;j>=0;j--)  \r\n        s3[k++]=s1[j];  \r\n    if(k>kk)  \r\n    {  \r\n      strcpy(mmax,s3);  \r\n      strcpy(mmin,s4);  \r\n    }  \r\n    else  \r\n    {  \r\n      strcpy(mmax,s4);  \r\n      strcpy(mmin,s3);  \r\n    }  \r\n    int lmax=strlen(mmax);  \r\n    int lmin=strlen(mmin);  \r\n    int l=lmax-1;  \r\n    for(i=lmin-1;i>=0;i--)  \r\n    {mmax[l--]+=mmin[i]-'0';}  \r\n    for(j=lmax-1;j>=1;j--)  \r\n    {  \r\n      if(mmax[j]>'9')  \r\n      {  \r\n        mmax[j]-=10;  \r\n        mmax[j-1]++;  \r\n      }  \r\n    }  \r\n    int flag=0;  \r\n    if(mmax[0]>'9')  \r\n    {  \r\n      mmax[0]-=10;  \r\n      flag=1;  \r\n    }  \r\n    int newlmax=strlen(mmax);  \r\n    while(mmax[newlmax-1]=='0')  \r\n        newlmax--;  \r\n    for(i=newlmax-1;i>=0;i--)  \r\n    {  \r\n        printf(\"%c\",mmax[i]);  \r\n    }  \r\n    if(flag==1)  \r\n        printf(\"1\");  \r\n    printf(\"\\n\");  \r\n  }  \r\n  return 0;  \r\n}"
},
{
"pid":273,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n  int i,test,m,t;\r\n   char a[1010];\r\n  scanf(\"%d\",&test);\r\n  while(test--)\r\n  {\r\n  int num=0;\r\n  scanf(\"%s\",a); \r\n  t=strlen(a);\r\n  for(i=0;i<t;i++)\r\n       {\r\n      if(a[i]>='a'&&a[i]<='z')\r\n      num++;            \r\n       }   \r\n     m=num%26;\r\n       if(m==0)\r\n       printf(\"z\\n\");\r\n       else\r\n       printf(\"%c\\n\",m+96);      \r\n  }\r\n  return 0;\r\n}"
},
{
"pid":274,
"code":"\n#include<stdio.h>\r\n#define pi 3.1415926\r\nint main()\r\n{\r\n    int n;\r\n    double m;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%lf\",&m);\r\n        printf(\"%.2lf\\n\",pi*m*m\/3);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":275,
"code":"\n#include<stdio.h>  \r\nvoid bina(int n);  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        if(n==0)  \r\n        printf(\"0\");  \r\n        else  \r\n        bina(n);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}  \r\nvoid bina(int n)  \r\n{  \r\n    if(n>=1)  \r\n    {  \r\n        bina(n\/2);  \r\n        printf(\"%d\",n%2);  \r\n    }  \r\n}"
},
{
"pid":276,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    char a,b;\r\n    int i;\r\n    scanf(\"%d\",&i);\r\n    getchar();\r\n    while(i--)\r\n    {\r\n        scanf(\"%c\",&a);\r\n        getchar();\r\n        scanf(\"%c\",&b);\r\n        if(a!=b)\r\n        {\r\n           if(a>b)\r\n           printf(\"%c<%c\\n\",a,b);\r\n           else\r\n           printf(\"%c>%c\\n\",a,b);\r\n        }\r\n        else\r\n        printf(\"%c=%c\\n\",a,b);\r\n        getchar();\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":277,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar ss[6],str[6];  \r\nint main(){  \r\n    int n,m;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--){  \r\n        scanf(\"%d\",&m);  \r\n        scanf(\"%s\",ss);  \r\n        for(int i=1;i<m;++i){  \r\n            scanf(\"%s\",str);  \r\n            if(strcmp(ss,str)>0)  \r\n              memcpy(ss,str,sizeof(str));  \r\n        }  \r\n        printf(\"%s\\n\",ss);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":278,
"code":"\n#include <stdio.h>\r\n#include<stdlib.h>\r\nint main()\r\n{\r\n    int m,x,i,s,n;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n       while(~scanf(\"%d%d\",&m,&x))\r\n       {   s=0;\r\n           for (i=2;i<=m;i++) s=(s+x)%i;\r\n          printf (\"%d\\n\", s+1);\r\n       }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":279,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int a,b,n,m,k;  \r\n    int ok[505][7]={0};  \r\n    ok[1][1]=1;  \r\n    for(a=2;a<=500;a++)  \r\n    {  \r\n        for(b=1;b<=a&&b<=6;b++)  \r\n            ok[a][b]=ok[a-b][b]+ok[a-1][b-1];  \r\n    }  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {     \r\n        printf(\"%d\\n\",ok[n][m]);  \r\n    }  \r\n}"
},
{
"pid":280,
"code":"\n#include<iostream>  \r\n#include<cmath>  \r\nusing namespace std;  \r\n#define __int64 long long  \r\n__int64 pow(int value,int num)  \r\n{   __int64 sum=1;  \r\n    for(int i=1;i<=num;i++)  \r\n        sum*=value;  \r\n    return sum;       \r\n}   \r\nint gcd(int n,int m)  \r\n{   return m==0?n:gcd(m,n%m);  \r\n}  \r\n__int64 Polya(int Color,int num) \r\n{   __int64 sum=0;  \r\n    for(int i=1;i<=num;i++)  \r\n        sum+=pow(Color,gcd(num,i));  \r\n    if(num&1) sum+=num*pow(Color,(num+1)\/2);  \r\n    else sum+=(pow(Color,num\/2+1)+pow(Color,num\/2))*num\/2;        \r\n    return sum\/2\/num;  \r\n}  \r\nint main()  \r\n{   int num;  \r\n    while(cin>>num,num!=-1)  \r\n    {   cout<<(num==0?0:Polya(3,num))<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":282,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stdlib.h>  \r\n#include<math.h>  \r\n#include<queue>  \r\n#include<stack>  \r\n#include<algorithm>  \r\n#define MAX 2001  \r\nusing namespace std;  \r\nint set[MAX];  \r\nint maxnode;  \r\nint sum1,sum2;  \r\nint max(int x,int y)  \r\n{  \r\n    return x>y?x:y;  \r\n}  \r\nvoid dfs(int p,int pos)  \r\n{  \r\n    int i;  \r\n    if(set[p]==p)  \r\n    return ;  \r\n    for(i=1;i<=maxnode;i++)  \r\n    {  \r\n        if(set[p]==i) \r\n        {  \r\n            if(pos==1)  \r\n            sum1++;  \r\n            else  \r\n            sum2++;  \r\n            dfs(i,pos);\r\n        }  \r\n    }  \r\n}   \r\nvoid init()  \r\n{  \r\n    int i;  \r\n    for(i=1;i<MAX;i++)  \r\n    set[i]=i;  \r\n}  \r\nvoid solve()  \r\n{  \r\n    if(sum1==sum2)  \r\n    printf(\"You are my brother\\n\");  \r\n    else if(sum1>sum2)  \r\n    printf(\"You are my elder\\n\");  \r\n    else  \r\n    printf(\"You are my younger\\n\");  \r\n}  \r\nint main()  \r\n{  \r\n    int n,i,j,x,y;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        init();  \r\n        maxnode=0;  \r\n        while(n--)  \r\n        {  \r\n            scanf(\"%d%d\",&x,&y);  \r\n            maxnode=max(max(x,y),maxnode);  \r\n            set[x]=y;  \r\n        }  \r\n        sum1=sum2=0;  \r\n        dfs(1,1);  \r\n        dfs(2,2);  \r\n        solve();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":283,
"code":"\n#include <iostream>\r\n#include <string>\r\n#include <algorithm>\r\nusing namespace std;\r\nstring str1[25],str2[25];\r\nbool cmp(string a,string b)\r\n{ \r\n return a.length()<b.length();\r\n}\r\nint main()\r\n{\r\n     int n,i,j,k,t=1;\r\n     while(cin>>n,n)\r\n     {\r\n        j=0;k=n-1;\r\n        for( i = 0 ; i < n ; i ++ )\r\n        cin>>str1[i];\r\n        sort(str1,str1+n,cmp);\r\n        for( i = 0 ; i < n ; i ++ )\r\n        {\r\n            if( i % 2 == 0 )\r\n            str2[j++] = str1[i];\r\n            else\r\n            str2[k--] = str1[i];\r\n        }\r\n        cout<<\"SET \"<<t++<<endl;\r\n        for(i=0;i<n;i++)\r\n        cout<<str2[i]<<endl;\r\n     }\r\n     return 0;\r\n}"
},
{
"pid":284,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<string.h>\r\n#include<queue>\r\nusing namespace std;\r\nint M, N;\r\nint dx[] = {-1, 1, 0, 0};\r\nint dy[] = {0, 0, -1, 1};\r\nint map[310][310];\r\nchar str[310];\r\nint ok, bx, by, ex, ey;\r\ntypedef struct\r\n{\r\n    int v;\r\n    int step;\r\n}State;\r\nint vis[310][310];\r\npriority_queue<State> q;\r\nState s;\r\nbool operator<(State a, State b)\r\n{\r\n    return a.step > b.step;\r\n}\r\nvoid bfs(int x, int y)\r\n{\r\n    int nx, ny, d; \r\n    s.v = x * N + y;\r\n    vis[x][y] = 1;\r\n    q.push(s);\r\n    while(!q.empty())\r\n    {\r\n        State u = q.top();\r\n        q.pop();\r\n        x = u.v \/ N;\r\n        y = u.v % N;\r\n        for(d = 0; d < 4; d++)\r\n        {\r\n            nx = x + dx[d];\r\n            ny = y + dy[d];\r\n            if(nx >= 0 && nx < M && ny >= 0 && ny < N && !vis[nx][ny])\r\n            {\r\n                if(nx == ex && ny == ey)\r\n                {\r\n                    printf(\"%d\\n\", u.step+1);\r\n                    ok = 1;\r\n                    return;\r\n                }\r\n                else if(map[nx][ny] == 1)\r\n                {\r\n                    State v;\r\n                    v.v = nx * N + ny;\r\n                    v.step = u.step + 1;\r\n                    vis[nx][ny] = 1;\r\n                    q.push(v);\r\n                }\r\n                else if(map[nx][ny] == 'S' || map[nx][ny] == 'R')\r\n                    continue;\r\n                else if(map[nx][ny] == 'B')\r\n                {\r\n                    State v;\r\n                    v.v = nx * N + ny;\r\n                    v.step = u.step + 2;\r\n                    vis[nx][ny] = 1;\r\n                    q.push(v);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nint main()\r\n{\r\n    int i, j;\r\n    while(scanf(\"%d%d\", &M, &N) && (M || N))\r\n    {\r\n        for(i = 0; i < M; i++)\r\n        {\r\n            scanf(\"%s\", str);\r\n            for(j = 0; j < N; j++)\r\n            {\r\n                switch(str[j])\r\n                {\r\n                case 'Y': bx = i; by = j; map[i][j] = 1; break;\r\n                case 'T': ex = i; ey = j; map[i][j] = 1; break;\r\n                case 'E': map[i][j] = 1; break;\r\n                case 'B': map[i][j] = 'B'; break;\r\n                case 'S': map[i][j] = 'S'; break;\r\n                case 'R': map[i][j] = 'R';\r\n                }\r\n            }\r\n        }\r\n        s.step = 0;\r\n        ok = 0;\r\n        memset(vis, 0, sizeof(vis));\r\n        bfs(bx, by);\r\n        if(!ok)\r\n            printf(\"-1\\n\");\r\n        while(!q.empty())\r\n            q.pop();\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":285,
"code":"\n#include<iostream>  \r\n#include<map>  \r\nusing namespace std;  \r\nint main() {  \r\n  int n, s;  \r\n  while (cin >> n >> s && (n || s)) {  \r\n    int a[20001] = {0};  \r\n    map<string, int> m;  \r\n    string ch;  \r\n    for (int i = 0; i < n; i++) {  \r\n      cin >> ch;  \r\n      m[ch]++;  \r\n    }  \r\n    map<string, int>::iterator q = m.begin(), p;   \r\n    for (p = m.begin(); p != m.end(); p++) {  \r\n      a[p -> second - 1]++;  \r\n    }  \r\n    for (int i = 0; i < n; i++) {  \r\n      cout << a[i] << endl;  \r\n    }  \r\n  }  \r\n}"
},
{
"pid":286,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <iostream>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int b,i,j,max=0,ans=1;  \r\n    string q[10001],name;  \r\n    cin>>b;  \r\n    for(i=0; i<b; i++)  \r\n        cin>>q[i];  \r\n    sort(q,q+b);  \r\n    for(j=0; j<b-1; j++)  \r\n    {  \r\n        if(q[j+1]==q[j])  \r\n            ans++;  \r\n        else  \r\n            ans=1;  \r\n        if(max<ans)  \r\n        {  \r\n            max=ans;  \r\n            name=q[j];  \r\n        }  \r\n    }  \r\n    cout<<name<<\" \"<<max<<endl;  \r\n    return 0;  \r\n}"
},
{
"pid":287,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nconst int MAXN=1005;\r\nstruct Line\r\n{\r\n    double l,r;\r\n}line[MAXN];\r\nbool cmp(Line a,Line b)\r\n{\r\n    return a.r<b.r;\r\n}\r\nint main()\r\n{\r\n    int n,d;\r\n    int i;\r\n    int x,y;\r\n    int num=1,flag,count;\r\n    while(scanf(\"%d %d\",&n,&d)&&n&&d)\r\n    {\r\n        flag=1;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d %d\",&x,&y);\r\n            if(!flag) continue;\r\n            if(y<=d){\r\n              line[i].l=(double)x-sqrt((double)d*d-y*y);\r\n               line[i].r=(double)x+sqrt((double)d*d-y*y);\r\n            }else flag=0;\r\n        }\r\n        if(!flag)\r\n        {\r\n            printf(\"Case %d: -1\\n\",num++);\r\n            continue;\r\n        }\r\n        sort(line,line+n,cmp);\r\n        count=1;\r\n        double now=line[0].r;\r\n        for(i=1;i<n;i++)\r\n        {\r\n\r\n            if(line[i].l<=now+0.00005) continue;\r\n            now=line[i].r;\r\n            count++;\r\n        }\r\n      printf(\"Case %d: %d\\n\",num++,count);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":288,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nchar a[10][10][5];  \r\nint main()  \r\n{  \r\n    for(int i=0;i<10;i++)  \r\n    {  \r\n        if(i==1||i==4)  \r\n        {  \r\n            strcpy(a[0][i],\"   \");  \r\n        }  \r\n        else  \r\n        {  \r\n            strcpy(a[0][i],\" _ \");  \r\n        }  \r\n    }  \r\n    strcpy(a[1][0],\"| |\");strcpy(a[1][1],\"  |\");  \r\n    strcpy(a[1][2],\" _|\");strcpy(a[1][3],\" _|\");  \r\n    strcpy(a[1][4],\"|_|\");strcpy(a[1][5],\"|_ \");  \r\n    strcpy(a[1][6],\"|_ \");strcpy(a[1][7],\"  |\");  \r\n    strcpy(a[1][8],\"|_|\");strcpy(a[1][9],\"|_|\");  \r\n    strcpy(a[2][0],\"|_|\");strcpy(a[2][1],\"  |\");  \r\n    strcpy(a[2][2],\"|_ \");strcpy(a[2][3],\" _|\");  \r\n    strcpy(a[2][4],\"  |\");strcpy(a[2][5],\" _|\");  \r\n    strcpy(a[2][6],\"|_|\");strcpy(a[2][7],\"  |\");  \r\n    strcpy(a[2][8],\"|_|\");strcpy(a[2][9],\" _|\");  \r\n    int b[4];  \r\n    while(scanf(\"%d%d%d%d\",&b[0],&b[1],&b[2],&b[3])!=EOF)  \r\n    {  \r\n        for(int i=0;i<3;i++)  \r\n        {  \r\n            for(int j=0;j<4;j++)  \r\n            {  \r\n                printf(\"%s\",a[i][b[j]]);  \r\n            }  \r\n            printf(\"\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":289,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#define max(x,y)  x>y?x:y\r\nint f[1005];\r\nint main()\r\n{ \r\n\tint n,V,c,w;\r\n \twhile(1)\r\n \t{   \r\n  \t\tscanf(\"%d%d\",&n,&V);\r\n  \t\tif(!(n||V)) return 0;\r\n  \t\tmemset(f,0,sizeof(f));\r\n  \t\tfor(int i=1;i<=n;i++)\r\n  \t\t{\r\n   \t\t\tscanf(\"%d%d\",&c,&w);\r\n   \t\t\tfor(int v=V;v>=c;v--)\r\n   \t\t\t\tf[v]=max(f[v],f[v-c]+w);\r\n  \t\t}\r\n  \t\tprintf(\"%d\\n\",f[V]);\r\n \t}\r\n}"
},
{
"pid":290,
"code":"\n#include<cstring>\r\n #include<cstdio>\r\n #include<iostream>\r\n using namespace std;\r\n struct node{\r\n     node *next[26];\r\n     int count;\r\n     node(){      \r\n         memset(next,0,sizeof(next));\r\n         count=0;\r\n     }\r\n };\r\n int maxi;   \r\n char maxs[11];\r\n node *root=new node();\r\n void insert(char *s)\r\n {\r\n     node *p=root;\r\n     int i,k;\r\n     for(i=0;s[i];++i){\r\n         k=s[i]-'a';\r\n         if(p->next[k]==NULL) p->next[k]=new node();\r\n         p=p->next[k];   \r\n     }\r\n     p->count++;\r\n     if(p->count>maxi){\r\n         maxi=p->count;\r\n         strcpy(maxs,s);\r\n     }\r\n }\r\n int main()\r\n {\r\n     int n;\r\n     char s[11];\r\n     scanf(\"%d\",&n);\r\n     while(n--){\r\n         scanf(\"%s\",s);\r\n         insert(s);\r\n     }\r\n     printf(\"%s %d\\n\",maxs,maxi);\r\n     return 0;\r\n }"
},
{
"pid":291,
"code":"\n#include<stdio.h>\r\nint eular(int n)\r\n{\r\n    int i,m=1;\r\n    for(i=2;i*i<=n;i++)\r\n    if(n%i==0)\r\n    {\r\n        n\/=i;\r\n        m*=i-1;\r\n        while(n%i==0)\r\n        {\r\n            n\/=i;\r\n            m*=i;\r\n        }\r\n    }\r\n    if(n>1)\r\n    m*=n-1;\r\n    return m;\r\n}      \r\nint main()\r\n{\r\n    int n;\r\n    while(scanf(\"%d\",&n)&&n)\r\n    {\r\n        printf(\"%d\\n\",eular(n));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":293,
"code":"\n#include <cstdio>  \r\n#include <algorithm>  \r\nusing std::sort;  \r\nint stick[66], n, sum, len, ok, temp;  \r\nbool vis[66];  \r\n\r\nbool cmp(int a, int b){  \r\n    return a > b;  \r\n}  \r\n\r\nbool DFS(int k, int left, int total){ \r\n    if(left == 0){ \r\n        total -= len;  \r\n        if(!total) return true;  \r\n\r\n        int i = 1;  \r\n        while(vis[i]) ++i;  \r\n        vis[i] = 1; \r\n        if(DFS(i + 1, len - stick[i], total)) return true;  \r\n        vis[i] = 0;  \r\n        return false;  \r\n    }  \r\n\r\n    for(int i = k; i < n; ++i){  \r\n        if(i > 0 && stick[i] == stick[i-1] && !vis[i-1]) \r\n            continue;  \r\n        if(!vis[i] && left >= stick[i]){           \r\n            vis[i] = 1; left -= stick[i];   \r\n            if(DFS(i + 1, left, total)) return true;  \r\n            vis[i] = 0;   \r\n            if(!left) return false; \r\n            left += stick[i];  \r\n        }  \r\n    }  \r\n    return false;  \r\n}  \r\n\r\nint main(){  \r\n    while(scanf(\"%d\", &n), n){  \r\n        sum = ok = 0;  \r\n        for(int i = 0; i < n; ++i){  \r\n            scanf(\"%d\", stick + i);  \r\n            vis[i] = 0; sum += stick[i];  \r\n        }  \r\n        sort(stick, stick + n, cmp);  \r\n        temp = sum \/ 2; len = stick[0];  \r\n        vis[0] = 1;  \r\n        while(len <= temp){  \r\n            if(sum % len == 0 && DFS(1, len - stick[0], sum)){ \r\n                printf(\"%d\\n\", len);   \r\n                ok = 1; break;  \r\n            }  \r\n            ++len;  \r\n        }  \r\n        if(!ok) printf(\"%d\\n\", sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":294,
"code":"\n#include <iostream>  \r\n#include<cmath>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nclass bot  \r\n{  \r\n    public:  \r\n    char col;  \r\n    int pos;  \r\n};  \r\nbot data[105];  \r\n\r\nint main()  \r\n{  \r\n    int t;  \r\n    int ans;  \r\n    int n;  \r\n    int a,b;  \r\n    int i,j,k;  \r\n    cin>>t;  \r\n    int to,tb;  \r\n    bool s;  \r\n    for(k=1;k<=t;k++)  \r\n    {  \r\n        s=false;  \r\n        ans=0;  \r\n        to=1;tb=1;  \r\n        cin>>n;  \r\n        for(i=0;i<n;i++)  \r\n            cin>>data[i].col>>data[i].pos;  \r\n        i=0;  \r\n        while(i<n)  \r\n        {  \r\n\r\n            if(to==data[i].pos&&data[i].col=='O' )  \r\n            {  \r\n\r\n                i++;  \r\n                for(j=i; j<n; j++)  \r\n                    if(data[j].col=='B')  \r\n                    {  \r\n                        s=true;  \r\n                        break;  \r\n                    }  \r\n                if(s)  \r\n                {  \r\n                    if(tb<data[j].pos)  \r\n                        tb++;  \r\n                    else if(tb>data[j].pos)  \r\n                        tb--;  \r\n                    s=false;  \r\n                }  \r\n\r\n                ans++;  \r\n\r\n            }  \r\n            else if(tb==data[i].pos&&data[i].col=='B' )  \r\n            {  \r\n\r\n                i++;  \r\n                for(j=i; j<n; j++)  \r\n                    if(data[j].col=='O')  \r\n                    {  \r\n                        s=true;  \r\n                        break;  \r\n                    }  \r\n                if(s)  \r\n                {  \r\n                    if(to<data[j].pos)  \r\n                        to++;  \r\n                    if(to>data[j].pos)  \r\n                        to--;  \r\n                    s=false;  \r\n                }  \r\n\r\n                ans++;  \r\n\r\n            }  \r\n\r\n            else  \r\n            {  \r\n                for(j=i; j<n; j++)  \r\n                    if(data[j].col=='O')  \r\n                    {  \r\n                        s=true;  \r\n                        break;  \r\n                    }  \r\n                if(s)  \r\n                {  \r\n\r\n                    if(to<data[j].pos)  \r\n                        to++;  \r\n                    else if(to>data[j].pos)  \r\n                        to--;  \r\n                    s=false;  \r\n                }  \r\n                for(j=i; j<n; j++)  \r\n                    if(data[j].col=='B')  \r\n                    {  \r\n                        s=true;  \r\n                        break;  \r\n                    }  \r\n                if(s)  \r\n                {  \r\n                    if(tb<data[j].pos)  \r\n                        tb++;  \r\n                    else if(tb>data[j].pos)  \r\n                        tb--;  \r\n                    s=false;  \r\n                }  \r\n\r\n                ans++;  \r\n            }   \r\n        }  \r\n        cout<<\"Case #\"<<k<<\": \"<<ans<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":295,
"code":"\n#include<stdio.h>  \r\nstruct zhang  \r\n{  \r\n    char c1,c2,c3 ;  \r\n\r\n}t1[105] ;  \r\nstruct node  \r\n{  \r\n    char b1,b2 ;  \r\n\r\n}t2[105] ;  \r\nchar s[105],s1[105] ;  \r\nint main()  \r\n{  \r\n    int T,n,m,sm,q=1;  \r\n    char ss[10]=\"QWERASDF\" ;  \r\n    scanf(\"%d\",&T) ;  \r\n    while(T--)  \r\n    {  \r\n          scanf(\"%d\",&n) ;  \r\n          int i,j,k ;  \r\n          for(i=0;i<n;i++)  \r\n           {  \r\n               getchar() ;\r\n               scanf(\"%c%c%c\",&t1[i].c1,&t1[i].c2,&t1[i].c3) ;  \r\n           }  \r\n           scanf(\"%d\",&m) ;  \r\n          for(i=0;i<m;i++)  \r\n           {  \r\n               getchar() ;\r\n               scanf(\"%c%c\",&t2[i].b1,&t2[i].b2) ;  \r\n           }  \r\n           scanf(\"%d\",&sm) ;  \r\n           scanf(\"%s\",s) ;  \r\n        int r=0 ;  \r\n        for(k=0;k<sm;k++)  \r\n         {  \r\n             int f=0,p=0 ;  \r\n             if(!r)  \r\n              {  \r\n                   for(int yy=0;yy<8;yy++)  \r\n                     if(ss[yy]==s[k])  \r\n                      {  \r\n                          s1[r++]=s[k] ;  \r\n                      }  \r\n                      continue ;  \r\n              }  \r\n            for(i=0;i<n;i++)  \r\n             if((s[k]==t1[i].c1&&s1[r-1]==t1[i].c2)||(s1[r-1]==t1[i].c1&&s[k]==t1[i].c2))  \r\n             {  \r\n                s1[r-1]=t1[i].c3 ;  \r\n                f=1 ;  \r\n             }  \r\n          if(!f)  \r\n            {  \r\n                p=0 ;  \r\n                for(i=0;i<m;i++)  \r\n                  if(s[k]==t2[i].b1)  \r\n                  {  \r\n                    for(j=r-1;j>=0;j--)  \r\n                      if(s1[j]==t2[i].b2)  \r\n                        {  \r\n                            r=0 ;  \r\n                            p=1 ;  \r\n                            break ;  \r\n                        }  \r\n                        if(p)  \r\n                              break ;  \r\n                  }  \r\n                  else if(s[k]==t2[i].b2)  \r\n                   {  \r\n                       for(j=r-1;j>=0;j--)  \r\n                         if(s1[j]==t2[i].b1)  \r\n                         {  \r\n                             r=0 ;  \r\n                             p=1 ;  \r\n                             break ;  \r\n                         }  \r\n                         if(p)  \r\n                            {  \r\n                                break ;  \r\n                            }  \r\n                   }  \r\n            }  \r\n            if(!p&&!f)  \r\n              {  \r\n                  for(int yy=0;yy<8;yy++)  \r\n                     if(ss[yy]==s[k])  \r\n                      {  \r\n                          s1[r++]=s[k] ;  \r\n                      }  \r\n              }  \r\n         }  \r\n        printf(\"Case #%d: [\",q++) ;  \r\n        for(i=0;i<r;i++)  \r\n          if(!i)  \r\n                    printf(\"%c\",s1[i]) ;  \r\n          else      printf(\", %c\",s1[i]) ;  \r\n        printf(\"]\\n\") ;  \r\n    }  \r\n    return 0 ;  \r\n}"
},
{
"pid":296,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n#include <iostream>  \r\n#include <string.h>  \r\n#include <algorithm>  \r\n#include <queue>  \r\n#include <vector>  \r\nusing namespace std;  \r\n#define maxn 1005  \r\nint V, m;  \r\nvector<int>G[maxn];  \r\nint in[maxn];  \r\nint main()  \r\n{  \r\n    int t,n,m,i,j=1;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        int s=0;  \r\n        cin>>n;  \r\n        int ss=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n               cin>>in[i];  \r\n               ss^=in[i];  \r\n               s+=in[i];  \r\n        }  \r\n        sort(in,in+n);  \r\n        printf(\"Case #%d: \",j++);  \r\n        if(!ss)  \r\n        {  \r\n            cout<<s-in[0]<<endl;  \r\n        }  \r\n        else  \r\n        cout<<\"NO\"<<endl;  \r\n    }  \r\n}"
},
{
"pid":297,
"code":"\n#include<cstdio>  \r\nint main()  \r\n{  \r\n    int T,n,s,i,a,CASE=1;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        s=0;  \r\n        for(i=1;i<=n;++i)  \r\n        {  \r\n            scanf(\"%d\",&a);  \r\n            if(a!=i) \r\n                s++;  \r\n        }  \r\n        printf(\"Case #%d: %d.000000\\n\",CASE++,s);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":298,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <cmath>  \r\n#define PI acos(-1.0)  \r\n\r\nstruct Matrix {  \r\n    double mat[3][3];  \r\n    Matrix() {  \r\n        memset(mat, 0, sizeof(mat));  \r\n        for(int i = 0; i < 3; i++)  \r\n            mat[i][i] = 1;  \r\n    }  \r\n\r\n    Matrix Multi(Matrix A, Matrix B) {  \r\n        Matrix res;  \r\n        for(int i = 0; i < 3; i++) {  \r\n            for(int j = 0; j < 3; j++) {  \r\n                res.mat[i][j] = 0;  \r\n                for(int k = 0; k < 3; k++) {  \r\n                    res.mat[i][j] = res.mat[i][j] + A.mat[i][k] * B.mat[k][j];  \r\n                }  \r\n            }  \r\n        }  \r\n        return res;  \r\n    }  \r\n\r\n    Matrix Translation(Matrix A, double p, double q) { \r\n        Matrix res;  \r\n        res.mat[0][2] = p;  \r\n        res.mat[1][2] = q;  \r\n        return Multi(res, A);  \r\n    }  \r\n\r\n    Matrix Scale(Matrix A, double p) { \r\n        Matrix res;  \r\n        res.mat[0][0] = res.mat[1][1]  = p;  \r\n        return Multi(res, A);  \r\n    }  \r\n\r\n    Matrix Turn_UD(Matrix A) {  \r\n        Matrix res;  \r\n        res.mat[1][1] = -1;  \r\n        return Multi(res, A);  \r\n    }  \r\n\r\n    Matrix Turn_LR(Matrix A) {\r\n        Matrix res;  \r\n        res.mat[0][0] = -1;  \r\n        return Multi(res, A);  \r\n    }  \r\n\r\n    Matrix Rotate(Matrix A, double angle) {\r\n        double rad = angle \/ 180.0 * PI;  \r\n        Matrix res;  \r\n        res.mat[0][0] = cos(rad); res.mat[0][1] = -sin(rad);  \r\n        res.mat[1][0] = sin(rad); res.mat[1][1] = cos(rad);  \r\n        return Multi(res, A);  \r\n    }  \r\n};  \r\n\r\nstruct Point {  \r\n    double x, y;  \r\n} P[10005];  \r\n\r\nint main() {  \r\n    int n, m;  \r\n    char op[5];  \r\n    double x, y;  \r\n    scanf(\"%d%d\", &n, &m);  \r\n    for(int i = 0; i < n; i++)  \r\n        scanf(\"%lf%lf\", &P[i].x, &P[i].y);  \r\n    Matrix A;  \r\n    for(int i = 0; i < m; i++) {  \r\n        scanf(\"%s\", op);  \r\n        if(op[0] == 'X') A = A.Turn_UD(A);  \r\n        else if(op[0] == 'Y') A = A.Turn_LR(A);  \r\n        else if(op[0] == 'M') {  \r\n            scanf(\"%lf%lf\", &x, &y);  \r\n            A = A.Translation(A, x, y);  \r\n        }  \r\n        else if(op[0] == 'S') {  \r\n            scanf(\"%lf\", &x);  \r\n            A = A.Scale(A, x);  \r\n        }  \r\n        else if(op[0] == 'R') {  \r\n            scanf(\"%lf\", &x);  \r\n            A = A.Rotate(A, x);  \r\n        }  \r\n    }  \r\n    for(int i = 0; i < n; i++) {  \r\n        double xx = A.mat[0][0] * P[i].x + A.mat[0][1] * P[i].y + A.mat[0][2];  \r\n        double yy = A.mat[1][0] * P[i].x + A.mat[1][1] * P[i].y + A.mat[1][2];  \r\n        printf(\"%.1lf %.1lf\\n\", xx, yy);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":299,
"code":"\n#include <cstdio>  \r\n#include <string>  \r\n#include <cmath>  \r\n#include <iostream>  \r\nusing namespace std;  \r\nint M;  \r\nconst long long N = 32*2;  \r\nlong long t,b,c,f1,f2;  \r\nstruct tree   \r\n{  \r\n    long long line,cal;  \r\n    long long a[N+1][N+1];  \r\n};  \r\nstruct Node  \r\n{  \r\n    long long line,cal;  \r\n    long long a[N+1][N+1];  \r\n    Node(tree x)  \r\n    {  \r\n        line=x.line*2;  \r\n        cal=2*x.cal;  \r\n        for(int i=0;i<x.line*2;i++)  \r\n        {  \r\n            for(int j=0;j<x.cal;j++)  \r\n            {  \r\n                a[i][j]=x.a[i%x.line][j];  \r\n            }  \r\n        }  \r\n        for(int i=0;i<x.line;i++)  \r\n            for(int j=x.cal;j<x.cal*2;j++)  \r\n                a[i][j]=0;  \r\n        for(int i=x.line;i<2*x.line;i++){  \r\n            for(int j=x.cal;j<2*x.cal;j++){  \r\n                if(i==j)  \r\n                    a[i][j]=1;  \r\n                else  \r\n                    a[i][j]=0;  \r\n            }  \r\n        }  \r\n    }  \r\n};  \r\n\r\nNode isit(Node x,long long c)  \r\n{  \r\n    for(long long i=0;i<N;i++)  \r\n        for(long long j=0;j<N;j++)  \r\n            x.a[i][j]=c;  \r\n    return x;  \r\n}  \r\n\r\nNode Matlab(Node x,Node s)  \r\n{  \r\n    Node ans(x);  \r\n    ans.line = x.line,ans.cal = s.cal;  \r\n    ans=isit(ans,0);  \r\n    for(long long i=0;i<x.line;i++)  \r\n    {  \r\n        for(long long j=0;j<x.cal;j++)  \r\n        {  \r\n            for(long long k=0;k<s.cal;k++)  \r\n            {  \r\n                ans.a[i][j] += x.a[i][k]*s.a[k][j];  \r\n                ans.a[i][j]=(ans.a[i][j])%M;  \r\n            }  \r\n        }  \r\n    }  \r\n    return ans;  \r\n}  \r\nNode Fast_Matrax(tree x,long long n)  \r\n{  \r\n    Node ans(x),tmp(x);  \r\n    for(int i=0;i<ans.line\/2;i++) \r\n    {  \r\n        for(int j=0;j<ans.cal;j++)  \r\n        {  \r\n            ans.a[i][j]=ans.a[i+ans.line\/2][j];  \r\n        }  \r\n    }  \r\n    ans.line\/=2;  \r\n    while(n>0)  \r\n    {  \r\n        if(n%2)  \r\n        {  \r\n            ans=Matlab(ans,tmp);  \r\n        }  \r\n        tmp=Matlab(tmp,tmp);  \r\n        n\/=2;  \r\n    }  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,k,m;  \r\n    while(~scanf(\"%d%d%d\",&n,&k,&m))  \r\n    {  \r\n        M=m;  \r\n        tree p;  \r\n        p.line=n,p.cal=n;  \r\n        for(int i=0;i<n;i++)  \r\n            for(int j=0;j<n;j++)  \r\n                scanf(\"%d\",&p.a[i][j]);  \r\n        Node ans=Fast_Matrax(p,k-1);  \r\n        for(int i=0;i<ans.line;i++)  \r\n        {  \r\n            for(int j=0;j<ans.cal\/2;j++)  \r\n                printf(\"%d \",ans.a[i][j]);  \r\n            puts(\"\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":300,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nconst int N = 105;  \r\nchar state[N];  \r\nstruct Matrix {  \r\n    Matrix() {}  \r\n    void Init(int n) {  \r\n        row = n; col = n;  \r\n        memset(mat, 0, sizeof(mat));  \r\n        for(int i = 0; i < n; i++)  \r\n            mat[i][i] = 1;  \r\n    }  \r\n    void Init(int m, int n) {  \r\n        row = m; col = n;  \r\n        memset(mat, 0, sizeof(mat));  \r\n    }  \r\n    int row, col;  \r\n    int mat[N][N];  \r\n    const Matrix &Pow(int n);  \r\n};  \r\n\r\nconst Matrix &operator *(const Matrix &A, const Matrix &B) {  \r\n    Matrix res;  \r\n    res.Init(A.row, B.col);  \r\n    for(int i = 0; i < A.row; i++) {  \r\n        for(int j = 0; j < A.col; j++) {  \r\n            if(A.mat[i][j]) {  \r\n                for(int k = 0; k < B.col; k++) {  \r\n                    if(B.mat[j][k])  \r\n                        res.mat[i][k] = res.mat[i][k] ^ (A.mat[i][j] & B.mat[j][k]);  \r\n                }  \r\n            }  \r\n\r\n        }  \r\n    }  \r\n    return res;  \r\n}  \r\n\r\nconst Matrix &Matrix::Pow(int n) {  \r\n    Matrix tmp, pre;  \r\n    tmp = *this;  \r\n    pre.Init(this->row);  \r\n    while(n) {  \r\n        if(n&1) pre = tmp * pre;  \r\n        tmp = tmp * tmp;  \r\n        n >>= 1;  \r\n    }  \r\n    return pre;  \r\n}  \r\n\r\nint main() {  \r\n    int m;  \r\n    Matrix A, B, ans;  \r\n    while(~scanf(\"%d\", &m)) {  \r\n        scanf(\"%s\",state);  \r\n        int len = strlen(state);  \r\n        A.Init(1, len);  \r\n        for(int i = 0; i < len; i++)  \r\n            A.mat[0][i] = state[i] - '0';  \r\n        B.Init(len);  \r\n        for(int i = 0; i < len; i++) {  \r\n            B.mat[i][i] = 1;  \r\n            B.mat[i][(i+1)%len] = 1;  \r\n        }  \r\n        ans = A * B.Pow(m);  \r\n        for(int i = 0; i < len; i++)  \r\n            printf(\"%d\", ans.mat[0][i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":301,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#define mod 1000007  \r\n#define N 3  \r\ntypedef long long LL;  \r\nstruct Matrix  \r\n{  \r\n    LL mat[N][N];  \r\n};  \r\n\r\nMatrix unit_matrix =  \r\n{  \r\n    1, 0, 0,  \r\n    0, 1, 0,  \r\n    0, 0, 1  \r\n}; \r\n\r\nMatrix mul(Matrix a, Matrix b)  \r\n{  \r\n    Matrix res;  \r\n    for(int i = 0; i < N; i++)  \r\n        for(int j = 0; j < N; j++)  \r\n        {  \r\n            res.mat[i][j] = 0;  \r\n            for(int k = 0; k < N; k++)  \r\n            {  \r\n                res.mat[i][j] += a.mat[i][k] * b.mat[k][j];  \r\n                res.mat[i][j] %= mod;  \r\n            }  \r\n        }  \r\n    return res;  \r\n}  \r\n\r\nMatrix pow_matrix(Matrix a, LL n)  \r\n{  \r\n    Matrix res = unit_matrix;  \r\n    while(n != 0)  \r\n    {  \r\n        if(n & 1)  \r\n            res = mul(res, a);  \r\n        a = mul(a, a);  \r\n        n >>= 1;  \r\n    }  \r\n    return res;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    LL n, f1, f2, a, b, c, T;  \r\n    Matrix tmp, arr;  \r\n    scanf(\"%lld\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%lld%lld%lld%lld%lld%lld\",&f1, &f2, &a, &b, &c, &n);  \r\n        if(n == 0)  \r\n            printf(\"%lld\\n\",(f2-f1*b-c + mod)%mod);  \r\n        if(n == 1)  \r\n            printf(\"%lld\\n\",(f1+mod)%mod);  \r\n        else if(n == 2)  \r\n            printf(\"%lld\\n\",(f2+mod)%mod);  \r\n        else  \r\n        {  \r\n            memset(arr.mat, 0, sizeof(arr.mat));  \r\n            arr.mat[0][0] = f2;  arr.mat[1][0] = f1;  arr.mat[2][0] = 1;  \r\n            tmp.mat[0][0] = b;   tmp.mat[0][1] = a;   tmp.mat[0][2] = c;  \r\n            tmp.mat[1][0] = tmp.mat[2][2] = 1;  \r\n            tmp.mat[1][1] = tmp.mat[1][2] = tmp.mat[2][0] = tmp.mat[2][1] = 0;  \r\n            Matrix p = pow_matrix(tmp, n-2);  \r\n            p = mul(p, arr);  \r\n            LL ans = (p.mat[0][0] + mod) % mod;  \r\n            printf(\"%lld\\n\",ans);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":302,
"code":"\n#include <iostream>  \r\n#include <algorithm>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <cmath>  \r\nusing namespace std;  \r\n#define LL long long  \r\nconst int N = 105;  \r\nconst LL mod = 1000007;  \r\nstruct Matrix  \r\n{  \r\n    int n;  \r\n    LL a[N][N];  \r\n    Matrix(){  \r\n        memset(a, 0, sizeof(a));  \r\n    }  \r\n} ans, A;  \r\nint node[N], n;  \r\nint m, p;  \r\n\r\nbool Judge(int x, int y)  \r\n{  \r\n    if(x - n == y) return true;  \r\n    else if(x + n == y) return true;  \r\n    else if(x - 1 == y && y % n != 0) return true;  \r\n    else if(x + 1 == y && x % n != 0) return true;  \r\n    else return false;  \r\n}  \r\n\r\nMatrix operator * (Matrix a, Matrix b)  \r\n{  \r\n    Matrix tmpans;  \r\n    tmpans.n = a.n;  \r\n    for(int i = 1; i <= a.n; i ++){  \r\n        for(int j = 1; j <= a.n; j ++){  \r\n            for(int k = 1; k <= a.n; k ++)  \r\n            tmpans.a[i][j] = (tmpans.a[i][j] + a.a[i][k] * b.a[k][j]) % mod;   \r\n        }  \r\n    }  \r\n    return tmpans;  \r\n}  \r\n\r\nvoid power(int k)  \r\n{  \r\n    while(k){  \r\n        if(k & 1) ans = ans * A;  \r\n        A = A * A;  \r\n        k = k >> 1;  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int T;  \r\n    cin >> T;  \r\n    while(T --){  \r\n\r\n        cin >> n >> m >> p;  \r\n        for(int i = 0; i < m; i ++){  \r\n            for(int j = 1; j <= n; j ++){  \r\n                cin >> node[i * n + j];  \r\n            }  \r\n        }  \r\n        for(int i = 1; i <= m * n; i ++){  \r\n            for(int j = 1; j <= m * n; j ++){  \r\n                A.a[i][j] = 0; ans.a[i][j] = 0;  \r\n                if(i == j) continue;  \r\n                if(node[i] == node[j]) A.a[i][j] = 1;  \r\n                else if(Judge(i, j)){  \r\n                    A.a[i][j] = 1;  \r\n                }  \r\n            }  \r\n            ans.a[i][i] = 1;  \r\n        }  \r\n\r\n        ans.n = n * m; A.n = n * m;  \r\n        power(p);  \r\n        printf(\"%lld\\n\", ans.a[1][n * m] % mod);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":303,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cmath>  \r\n#include<cstring>  \r\n#include<string>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nchar s[10010], ans[10010];  \r\n\r\nvoid cmp(char *str)   \r\n{  \r\n    int res = 0, top = 0;  \r\n    int len = strlen(str);  \r\n    for(int i = 0; i < len; ++i)  \r\n        res += (int)((str[i] - '0') * pow(10.0, len - 1 - i));  \r\n    while(res)  \r\n    {  \r\n        if(res % 26 != 0)  \r\n        {  \r\n            ans[top++] = res % 26 + 'A' - 1;  \r\n            res \/= 26;  \r\n        }  \r\n        else  \r\n        {  \r\n            ans[top++] = 'Z';  \r\n            res = res \/ 26 - 1;  \r\n        }  \r\n\r\n    }  \r\n    for(int i = top - 1; i >= 0; --i)  \r\n        printf(\"%c\", ans[i]);  \r\n    printf(\"\\n\");  \r\n}  \r\n\r\nint fun(char *str) \r\n{  \r\n    int sum = 0;  \r\n    int len = strlen(str);  \r\n    for(int i = len - 1, j = 0; i >= 0; --i, ++j)  \r\n        sum += (int)(str[i] - 'A' + 1) * pow(26.0, j);  \r\n    return sum;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int ncase;  \r\n    scanf(\"%d\", &ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        scanf(\"%s\", s);  \r\n        if(s[0] >= '1' && s[0] <= '9')  \r\n            cmp(s);  \r\n        else  \r\n            printf(\"%d\\n\", fun(s));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":304,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nstruct node\r\n{\r\n    int d;\r\n    int w;\r\n}f[1001];\r\nint dp[1001][1001][2];\r\nint w[1001][1001];\r\nint min(int a,int b)\r\n{\r\n    return a<b?a:b;\r\n}\r\nint main()\r\n{\r\n    int n,v,fw,i,j;\r\n    while(scanf(\"%d%d\",&n,&v)!=EOF)\r\n    {\r\n        fw=0;\r\n        for(i=1;i<=n;++i)\r\n        {\r\n            scanf(\"%d%d\",&f[i].d,&f[i].w);\r\n            fw+=f[i].w;\r\n        }\r\n        memset(w,0,sizeof(w));\r\n        for(i=1;i<=n;++i)\r\n            for(j=i;j<=n;++j)\r\n                w[i][j]=w[i][j-1]+f[j].w;\r\n        for(i=v-1;i>0;i--)\r\n        {\r\n            dp[i][v][0]=dp[i+1][v][0]+(fw-w[i+1][v])*(f[i+1].d-f[i].d);\r\n            dp[i][v][1]=dp[i][v][0]+(fw-w[i][v])*(f[v].d-f[i].d);\r\n        }\r\n        for(i=v+1;i<=n;i++)\r\n        {\r\n            dp[v][i][1]=dp[v][i-1][1]+(fw-w[v][i-1])*(f[i].d-f[i-1].d);\r\n            dp[v][i][0]=dp[v][i][1]+(fw-w[v][i])*(f[i].d-f[v].d);\r\n        }\r\n        for(i=v-1;i>0;i--)\r\n            for(j=v+1;j<=n;++j)\r\n            {\r\n                dp[i][j][0]=min(dp[i+1][j][0]+(fw-w[i+1][j])*(f[i+1].d-f[i].d),\r\n                                    dp[i+1][j][1]+(fw-w[i+1][j])*(f[j].d-f[i].d));\r\n                dp[i][j][1]=min(dp[i][j-1][0]+(fw-w[i][j-1])*(f[j].d-f[i].d),\r\n                                    dp[i][j-1][1]+(fw-w[i][j-1])*(f[j].d-f[j-1].d));\r\n            }\r\n        printf(\"%d\\n\",min(dp[1][n][0],dp[1][n][1]));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":305,
"code":"\n#include<cstdio>\r\n#include<iostream>\r\nusing namespace std;\r\nchar str[1000];\r\nint start;\r\nint val()\r\n{\r\n    int v,n;\r\n    switch(str[start])\r\n    {\r\n    case 'm':start+=3;if(str[start-2]=='i') return min(val(),val());else return max(val(),val());\r\n    case 'a':start+=3;return val()+val();\r\n    case ')':\r\n    case '(':\r\n    case ',':++start;return val();\r\n    default:sscanf(str+start,\"%d%n\",&v,&n);start+=n;return v;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%s\",str);\r\n        start=0;\r\n        printf(\"%d\\n\",val());\r\n    }\r\n}"
},
{
"pid":306,
"code":"\n#include<stdio.h> \r\n#include<string.h> \r\n#include<iostream> \r\nusing namespace std; \r\nint map[150][150],mmax,mmin,flag; \r\nint n,sx[]={1,-1,0,0},zy[]={0,0,1,-1}; \r\nint loop[150][150]; \r\nvoid init() \r\n{ \r\n    int i,j; \r\n    mmax=-1; \r\n    mmin=999999; \r\n    memset(map,-1,sizeof(map)); \r\n    for(i=1;i<=n;i++) \r\n      for(j=1;j<=n;j++) \r\n        { \r\n            scanf(\"%d\",&map[i][j]); \r\n            mmax= max(mmax,map[i][j]); \r\n            mmin= min(mmin,map[i][j]); \r\n        } \r\n} \r\nvoid dfs(int x,int y,int L,int R) \r\n{ \r\n    if(flag)  return; \r\n    if(x==n&&y==n) {flag=1;return;} \r\n    int i,j; \r\n    for(i=0;i<4;i++) \r\n    { \r\n        int xx=x+sx[i]; \r\n        int xy=y+zy[i]; \r\n        if(map[xx][xy]>=L&&map[xx][xy]<=R&&loop[xx][xy]==0) \r\n          {loop[xx][xy]=1;dfs(xx,xy,L,R);} \r\n    } \r\n\r\n} \r\nbool find(int k) \r\n{ \r\n    int i,j; \r\n    for(i=mmin;i<=mmax-k;i++) \r\n    { \r\n        flag=0; \r\n        if(map[1][1]<i||map[1][1]>i+k) continue; \r\n        if(map[n][n]<i||map[n][n]>i+k) continue; \r\n        memset(loop,0,sizeof(loop)); \r\n        loop[1][1]=1; \r\n        dfs(1,1,i,i+k); \r\n        if(flag) \r\n          return true; \r\n    } \r\n    return false; \r\n} \r\nint find_answer() \r\n{ \r\n    int i,j,x=0,y=mmax-mmin; \r\n    while(x<y) \r\n    { \r\n        int mid=(x+y)\/2; \r\n        if(find(mid)) \r\n        { \r\n            y=mid; \r\n        } \r\n        else \r\n           x=mid+1; \r\n    } \r\n    return y; \r\n} \r\nint main() \r\n{ \r\n    int m; \r\n    while(~scanf(\"%d\",&n)) \r\n    { \r\n        init(); \r\n        m=find_answer(); \r\n        printf(\"%d\\n\",m); \r\n    } \r\n}"
},
{
"pid":307,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\n#include <vector>  \r\n#define Max_V 8100  \r\n#define inf 0x3f3f3f3f  \r\nusing namespace std;  \r\nint n,m,k,w;  \r\nstruct Edge{  \r\n    int x,y,z;  \r\n};  \r\nvector<Edge> g;  \r\nbool have[Max_V];  \r\nint maxPass[Max_V];\r\nint ik[Max_V];\r\nint p[Max_V];\r\nint findMax(int a,int b)  \r\n{  \r\n    return a>b?a:b;  \r\n}  \r\nint findMin(int a,int b)  \r\n{  \r\n    return a>b?b:a;  \r\n}  \r\nvoid init()  \r\n{  \r\n    g.clear();  \r\n    memset(have,0,sizeof(have));  \r\n}  \r\nvoid add_edge(int x,int y,int z)  \r\n{\r\n    g.push_back((Edge){x,y,z});  \r\n    g.push_back((Edge){y,x,z});  \r\n}  \r\nint cmp(const void *a,const void *b)  \r\n{  \r\n    return *(int *)a-*(int *)b;  \r\n}  \r\nint find_way()  \r\n{ \r\n    memset(maxPass,0,sizeof(maxPass));  \r\n    maxPass[1]=inf;  \r\n    bool flag=true;  \r\n    int u,v,z;  \r\n    while(flag)  \r\n    {  \r\n        flag=false;\r\n        for(int i=0;i<g.size();i++)  \r\n        {  \r\n            u=g[i].x;v=g[i].y;z=g[i].z;  \r\n            int t=maxPass[v];  \r\n            maxPass[v]=findMax(maxPass[v],findMin(maxPass[u],z));  \r\n            if (maxPass[v]!=t)\r\n                flag=true;  \r\n        }  \r\n    }  \r\n    int count=0;  \r\n    for(int j=1;j<=n;j++)  \r\n        if(have[j]&&maxPass[j]>=w) \r\n            ik[count++]=maxPass[j];  \r\n    return count;  \r\n}  \r\nint solve()  \r\n{  \r\n    int mk=find_way();  \r\n    p[0]=1;  \r\n    qsort(ik,mk,sizeof(int),cmp);\r\n    for(int i=1;i<mk;i++)  \r\n    {  \r\n        if(ik[i]>=p[i-1]*w+w)  \r\n            p[i]=p[i-1]+1;  \r\n        else p[i]=p[i-1];  \r\n    }  \r\n    return p[mk-1];  \r\n}  \r\nint main()  \r\n{  \r\n    int i;  \r\n    while(~scanf(\"%d%d%d%d\",&n,&m,&k,&w))  \r\n    {  \r\n        init();  \r\n        int loc;  \r\n        for(i=0;i<k;i++)  \r\n        {  \r\n            scanf(\"%d\",&loc);  \r\n            have[loc]=1;  \r\n        }  \r\n        int x,y,z;  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n            scanf(\"%d%d%d\",&x,&y,&z);  \r\n            add_edge(x,y,z);  \r\n        }  \r\n        printf(\"%d\\n\",solve());  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":308,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <string>  \r\n#include <algorithm>  \r\n#include <string.h>  \r\nusing namespace std;  \r\nint main(){  \r\n    int numcase;  \r\n    scanf(\"%d\",&numcase);  \r\n    string s1,s2,s3;  \r\n    while(numcase--){  \r\n      cin>>s1;  \r\n      s2=s1;  \r\n      int max=0;  \r\n      reverse(s2.begin(),s2.end());  \r\n      int len=s1.size();  \r\n      for(int i=0;i<len;++i){  \r\n          for(int j=1;j<=len-i;++j){  \r\n              string::size_type pos=s2.find(s1.substr(i,j));  \r\n              if(pos!=string::npos){  \r\n                  if(max<j){  \r\n                    max=j;  \r\n                    s3=s1.substr(i,j);  \r\n                  }  \r\n              }  \r\n          }  \r\n      }  \r\n      cout<<s3<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":309,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int L, n, i, dp[1005];  \r\n    while(~scanf(\"%d%d\",&L,&n))  \r\n    {  \r\n        int a, b;  \r\n        memset(dp, 0, sizeof(dp));  \r\n        for(i = 0; i < n; i++)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            dp[a] = b;  \r\n        }  \r\n        int pos = 1, lim = 1;  \r\n        for(i = 0; i <= L; i++)  \r\n        {  \r\n            if(dp[i] == 0) \r\n                dp[i] = lim;  \r\n            else  \r\n            {  \r\n                if(dp[i] > dp[i-1])  \r\n                    dp[i] = dp[i-1] + 1;  \r\n                else  \r\n                {  \r\n                    pos = i; \r\n                    while(dp[pos - 1] - dp[pos] > 1)  \r\n                    {  \r\n                        dp[pos-1] = dp[pos] + 1;  \r\n                        pos--;  \r\n                    }  \r\n                }  \r\n            }  \r\n            lim = dp[i] + 1;  \r\n        }  \r\n        int mmax = 0;  \r\n        for(i = 0; i <= L; i++)  \r\n            if(dp[i] > mmax)  \r\n                mmax = dp[i];  \r\n        printf(\"%d\\n\",mmax);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":311,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint d[50001];\r\nint main()\r\n{\r\n    int n,i,j;\r\n    int c,v,a,b;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n       scanf(\"%d%d\",&c,&v);\r\n       memset(d,-11,sizeof(d));\r\n       d[0]=0;\r\n       for(i=0;i<c;i++)\r\n       {\r\n           scanf(\"%d%d\",&a,&b);\r\n           for(j=a;j<=v;j++)\r\n           if(d[j]<d[j-a]+b)\r\n           d[j]=d[j-a]+b;\r\n       }\r\n       if(d[v]<0)\r\n           printf(\"NO\\n\");\r\n       else \r\n           printf(\"%d\\n\",d[v]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":312,
"code":"\n#include<stdio.h>  \r\nint mon[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};  \r\nint isleap(int year)  \r\n{  \r\n    if((year%4==0)&&(year%100!=0)||(year%400==0))  \r\n    return 1;  \r\n    return 0;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,i,year,month,day,sum;  \r\n    char ch;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        scanf(\"%d%c%d%c%d\",&year,&ch,&month,&ch,&day);  \r\n        if((month==2)&&(day==29)&&(!isleap(year+20)))  \r\n        printf(\"%d\\n\",-1);  \r\n        else  \r\n        {  \r\n            sum=0;  \r\n            for(i=1;i<20;i++)    \r\n            {  \r\n                if(isleap(year+i))  \r\n                sum+=366;  \r\n                else  \r\n                sum+=365;  \r\n            }  \r\n            for(i=month;i<=12;i++)   \r\n            sum+=mon[i];  \r\n            sum-=day;  \r\n            if((month<=2)&&(isleap(year)))  \r\n            sum+=1;  \r\n            for(i=0;i<month;i++)    \r\n            sum+=mon[i];  \r\n            sum+=day;  \r\n            if((month>2)&&(isleap(year+20)))  \r\n            sum+=1;  \r\n            printf(\"%d\\n\",sum);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":313,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nvoid tt(int &a,int &b,int &t)  \r\n{  \r\n    t=a;a=b;b=t;  \r\n}  \r\nint main()  \r\n{  \r\n    int a,b,c,d,e,t,T;  \r\n    scanf(\"%d\",&T);   \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d%d\",&a,&b,&c);  \r\n        d=e=0;  \r\n        if(a>b)  \r\n            tt(a,b,t);  \r\n        if(a>c)  \r\n            tt(a,c,t);  \r\n        if(b>c)  \r\n            tt(b,c,t);  \r\n        d=c-a;e=c-b;  \r\n        if((a==b)||(b-a)%3==0)  \r\n            printf(\"%d\\n\",b);  \r\n        else if((b==c)||d%3==0||e%3==0)  \r\n            printf(\"%d\\n\",c);  \r\n        else  \r\n            printf(\"):\\n\");   \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":314,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--){  \r\n        scanf(\"%d\",&n);  \r\n        int k=n\/4181;  \r\n        int i,flag=0;  \r\n        for(i=0;i<=k;i++){  \r\n            if((n-i*4181)%2584==0){  \r\n                flag=1;  \r\n                break;  \r\n            }  \r\n        }  \r\n        if(flag)printf(\"%d %d\\n\",(n-i*4181)\/2584,i);  \r\n        else printf(\"No answer\\n\");  \r\n    }  \r\n}"
},
{
"pid":316,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    char name[20];  \r\n    double count,price;  \r\n    double sum = 0.0;  \r\n    while (scanf(\"%s %lf %lf\",name,&count,&price) != EOF)  \r\n    {  \r\n        sum += count * price;  \r\n    }  \r\n    printf(\"%.1f\\n\",sum);  \r\n}"
},
{
"pid":317,
"code":"\n#include<stdio.h>\r\nint gcd(int x,int y)\r\n{\r\n    int t;\r\n    if(x>y)\r\n    {\r\n        t=x;\r\n        x=y;\r\n        y=t;\r\n    }\r\n    while(x)\r\n    {\r\n        t=y%x;\r\n        y=x;\r\n        x=t;\r\n    }\r\n    return y;\r\n}\r\nint main()\r\n{\r\n    int n,m;\r\n    while(scanf(\"%d%d\",&n,&m)!=EOF)\r\n    {\r\n        int t,i;\r\n        t=gcd(n,m);\r\n        if(t==1) printf(\"NO\\n\");\r\n        else\r\n        {\r\n            printf(\"%d \",m-m\/t);\r\n            for(i=1;i<m;i++)\r\n            if(i%t!=0) printf(\"%d \",i);\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":318,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,a,b,c,d,e,f,g,h;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        scanf(\"%d %d %d %d %d %d %d %d\",&a,&b,&c,&d,&e,&f,&g,&h);  \r\n        b=b-a;  \r\n        c=c-b;  \r\n        d=d-c;  \r\n        f=f-e;  \r\n        g=g-f;  \r\n        h=h-g;  \r\n        if(d==h)  \r\n        {  \r\n            printf(\"YES\\n\");  \r\n        }  \r\n        else  \r\n        {  \r\n            printf(\"NO\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":319,
"code":"\n#include<stdio.h>  \r\nint f(int n)  \r\n{  \r\n    int i,j=1;  \r\n    for(i=1; i<=n; i++)  \r\n    {  \r\n        j+=4*i-3;  \r\n    }  \r\n    return j;  \r\n}  \r\nint main()  \r\n{  \r\n    int t, n, m, i = 0;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d\",&m);  \r\n            printf(\"%d\\n\",f(m));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":321,
"code":"\n#include<iostream>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<cstdio>\r\n#include<string.h>\r\nusing namespace std;\r\n\r\nint N,M;\r\nbool vis[205];\r\nint val[205];\r\nint dp[205][205];\r\nvector<int> map[205];\r\nvoid dfs(int s)\r\n{\r\n\tfor(int i=1;i<=M;i++)dp[s][i] = val[s];\r\n\tvis[s]=1;\r\n\tfor(int i=0;i<map[s].size();i++)\r\n\t{\r\n\t\tint t=map[s][i];\r\n\t\tif(vis[t])continue;\r\n\t\tdfs(t);\r\n\t\tint j,k;\r\n\t\tif(s==0)\r\n\t\t{\t\r\n\t\t\tfor(j=M;j>=0 ;j--)\r\n\t\t\tfor(k=1;k<=j ;k++)\r\n\t\t\tdp[s][j] = max(dp[s][j],dp[s][j-k]+dp[t][k]);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tfor(j=M;j>=1 ;j--)\r\n\t\t\tfor(k=1;k<j ;k++)\r\n\t\t\tdp[s][j] = max(dp[s][j],dp[s][j-k]+dp[t][k]);\r\n\r\n\t\t}\r\n\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\twhile(~scanf(\"%d%d\",&N,&M),N+M)\r\n\t{\r\n\r\n\t\tfor(int i=0;i<=N;i++) map[i].clear();\r\n\r\n\t\tfor(int i=1;i<=N;i++)\r\n\t\t{\r\n\t\t\tint a,v;\r\n\t\t\tscanf(\"%d%d\",&a,&v);\r\n\t\t\tmap[a].push_back(i);\r\n\t\t\tval[i]=v;\r\n\t\t}\r\n\t\tmemset(dp,0,sizeof dp);\r\n\t\tmemset(vis,0,sizeof vis);\t\r\n\t\tdfs(0);\r\n\t\tprintf(\"%d\\n\",dp[0][M]);\r\n\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":322,
"code":"\n#include<stdio.h>  \r\nint a[1000001],b[1000001];\r\nint merge(int a[],int low,int mid,int high)  \r\n{  \r\n    int i=low,j=mid+1,k=low;  \r\n    int count=0;\r\n    while((i<=mid)&&(j<=high)) \r\n    {  \r\n        if(a[i]<=a[j])  \r\n        {  \r\n            b[k++]=a[i++];  \r\n        }  \r\n        else  \r\n        {  \r\n            b[k++]=a[j++];  \r\n            count+=(mid-i+1);  \r\n        }  \r\n    }  \r\n    while(i<=mid)\r\n    {  \r\n        b[k++]=a[i++];  \r\n    }  \r\n    while(j<=high)  \r\n    {  \r\n        b[k++]=a[j++];  \r\n\r\n    }  \r\n    for(i=low;i<=high;++i)\r\n    {  \r\n        a[i]=b[i];  \r\n    }  \r\n    return count;  \r\n}  \r\nint sort(int a[],int low,int high)  \r\n{  \r\n    int x,y,z;  \r\n    int mid=(high+low)\/2;  \r\n    int i=low,j=mid+1;  \r\n    if(low>=high)  \r\n    {  \r\n        return 0;  \r\n    }  \r\n    x=sort(a,low,mid);  \r\n    y=sort(a,mid+1,high);  \r\n    z=merge(a,low,mid,high);  \r\n    return (x+y+z);  \r\n}  \r\nint main()  \r\n{  \r\n    int ncases,n,i;  \r\n    scanf(\"%d\",&ncases);  \r\n    while(ncases--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        for(i=0;i<=n-1;i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n        }  \r\n        printf(\"%d\\n\",sort(a,0,n-1));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":323,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>   \r\n#include<queue>  \r\nusing namespace std;  \r\n#define M 500  \r\n#define inf 0x3f3f3f3f  \r\nstruct node{  \r\n    int v,w,next;  \r\n}mp[M*4];  \r\nint head[M],dis[M],n,m,cnt;  \r\nvoid add(int u,int v,int w){  \r\n    mp[cnt].v=v;  \r\n    mp[cnt].w=w;  \r\n    mp[cnt].next=head[u];  \r\n    head[u]=cnt++;  \r\n}  \r\nint bfs(){  \r\n    memset(dis,-1,sizeof(dis));  \r\n    queue<int> Q;  \r\n    while(!Q.empty()) Q.pop();  \r\n    dis[1]=0;  \r\n    Q.push(1);  \r\n    while(!Q.empty()){  \r\n        int u=Q.front();  \r\n        Q.pop();  \r\n        for(int i=head[u];i!=-1;i=mp[i].next){  \r\n            int v=mp[i].v;  \r\n            if(dis[v]==-1 && mp[i].w>0){  \r\n                dis[v]=dis[u]+1;  \r\n                if(v==m) return 1;  \r\n                Q.push(v);  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}  \r\nint dinic(int s,int flow){  \r\n    if(s==m || flow==0) return flow;  \r\n    int a,i,ans=flow;  \r\n    for(i=head[s];i!=-1;i=mp[i].next){  \r\n        int v=mp[i].v;  \r\n        if(mp[i].w && dis[v]==dis[s]+1 && (a=dinic(v,min(ans,mp[i].w)))){  \r\n            mp[i].w-=a;  \r\n            mp[i^1].w+=a;  \r\n            ans-=a;  \r\n            if(ans==0) return flow;  \r\n        }  \r\n    }  \r\n    return flow-ans;  \r\n}  \r\nint main(){  \r\n    int sum,i,a,b,c;  \r\n    while(scanf(\"%d%d\",&n,&m)!=EOF){  \r\n        sum=cnt=0;  \r\n        memset(head,-1,sizeof(head));  \r\n        for(i=0;i<n;i++){  \r\n            scanf(\"%d%d%d\",&a,&b,&c);  \r\n            add(a,b,c);  \r\n            add(b,a,0);  \r\n            sum+=c;  \r\n        }  \r\n        int ans=0;  \r\n        while(bfs()){  \r\n            ans+=dinic(1,inf);  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":324,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int n,i,j,m,sum;  \r\n    cin>>n;  \r\n    while(n--)  \r\n    {  \r\n        cin>>m;  \r\n        sum=1;  \r\n        for(j=0;j<m;++j)  \r\n            sum=(sum+1)*2;  \r\n        cout<<sum<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":325,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nint min, sum, total, n;\r\nint weight[25];\r\nvoid get_next(int cur, int sum, int a[])\r\n{\r\n    int t;\r\n    if(cur == n)\r\n        return;\r\n    t = (int)fabs(total - sum - sum);\r\n    if(t < min)\r\n        min = t;\r\n    get_next(cur + 1, sum, a);\r\n    get_next(cur + 1, sum + a[cur], a);\r\n}\r\nint main()\r\n{\r\n    int i;\r\n    while(scanf(\"%d\", &n) != EOF)\r\n    {\r\n        total = 0;\r\n        for(i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d\", &weight[i]);\r\n            total += weight[i];\r\n        }\r\n        min = 200001;\r\n        get_next(0, 0, weight);\r\n        printf(\"%d\\n\", min);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":326,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\n#define NN 405  \r\n#define MM 40500  \r\n#define CLR(arr,v) memset(arr,v,sizeof(arr))  \r\n\r\nint map[NN][NN],pre[NN],gap[NN],cnt[NN],stck[NN],top;  \r\nint que[NN],head,total;  \r\nbool vis[NN],flag;  \r\nint h[NN],num[MM],nex[MM],pos;  \r\nint FF[NN],DD[NN];  \r\n\r\nvoid init()  \r\n{  \r\n    CLR(map,0); CLR(gap,0); CLR(cnt,0);   \r\n    CLR(stck,0);CLR(que,0); CLR(nex,0);  \r\n    CLR(vis,0); CLR(num,0); CLR(h,0);   \r\n    pos = top = 0; flag = false;  \r\n}  \r\n\r\nvoid add(int u,int v)  \r\n{  \r\n    num[++pos] = v;  \r\n    nex[pos] = h[u];  \r\n    h[u] = pos;  \r\n}  \r\n\r\nvoid init_gap(int n)  \r\n{  \r\n    head = total = 0;  \r\n    que[total++] = n;  \r\n    vis[n] = true;  \r\n    cnt[0] = 1;  \r\n    while(head < total)  \r\n    {  \r\n        int p = que[head++];  \r\n        if(head >= NN) head -= NN;  \r\n        for(int i = h[p]; i ;i = nex[i])  \r\n        {  \r\n            if(!vis[ num[i] ])  \r\n            {  \r\n                vis[ num[i] ] = true;  \r\n                gap[ num[i] ] = gap[ p] + 1;  \r\n                cnt[ gap[num[i]] ]++;  \r\n                que[total++] = num[i];  \r\n                if(total >= NN) total -= NN;  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\n\r\nbool dfs(int p,int t)  \r\n{  \r\n    for(int i = h[p]; i ;i = nex[i])  \r\n    {  \r\n        if(gap[p] - gap[ num[i] ] == 1 && map[p][ num[i] ] > 0)  \r\n        {  \r\n            pre[ num[i] ] = p;  \r\n            if(num[i] != t) stck[++top] = num[i];  \r\n            if(num[i] == t || dfs(num[i],t)) return true;  \r\n        }  \r\n    }  \r\n    cnt[ gap[p] ]--;  \r\n    cnt[ gap[p]+1 ]++;  \r\n    top--;  \r\n    if(cnt[ gap[p] ] == 0) flag = true;  \r\n    gap[p] += 1;  \r\n    return false;  \r\n}  \r\n\r\nint MaxFlow(int s,int t)  \r\n{  \r\n    init_gap(t);  \r\n    int res = 0;  \r\n    stck[top] = s;  \r\n    while(!flag)  \r\n    {  \r\n        CLR(pre,-1);  \r\n        if(top < 0) top = 0;  \r\n        if(!dfs(stck[top],t)) continue;  \r\n        int p = t;  \r\n        res += 1;  \r\n        while(pre[p] != -1)  \r\n        {  \r\n            map[ pre[p] ][p] -= 1;  \r\n            map[p][ pre[p] ] += 1;  \r\n            p = pre[p];  \r\n        }  \r\n        top = 0;  \r\n    }  \r\n    return res;  \r\n}  \r\nint main()  \r\n{  \r\n    int F,N,D;  \r\n    while(~scanf(\"%d%d%d\",&N,&F,&D))  \r\n    {  \r\n        init();  \r\n        int s = 0,f,d;  \r\n        for(int i = 1;i <= N;++i)  \r\n        {  \r\n            map[i][i+N+F+D] = 1;  \r\n            scanf(\"%d%d\",&f,&d);  \r\n            for(int j = 0;j < f;++j)  \r\n                scanf(\"%d\",&FF[j]);  \r\n            for(int k = 0;k < d;++k)  \r\n                scanf(\"%d\",&DD[k]);  \r\n            if(f == 0 || d == 0) continue;  \r\n            for(int j = 0;j < f;++j)  \r\n                map[ FF[j]+N ][i] = 1;  \r\n            for(int j = 0;j < d;++j)  \r\n                map[i+N+F+D][ DD[j]+N+F ] = 1;  \r\n        }  \r\n        int n = F + N * 2 + D + 1;  \r\n        for(int i = F + N + 1,j = 1;j <= D;++j,++i)        \r\n            map[i][n] = 1;  \r\n        for(int i = N + 1,j = 1;j <= F;++j,++i)  \r\n            map[0][i] = 1;  \r\n\r\n        for(int i = 0;i <= n;++i)  \r\n        {  \r\n            for(int j = 0;j <= n;++j)  \r\n                if(map[i][j])   \r\n                {  \r\n                    add(i,j);  \r\n                    add(j,i);  \r\n                }  \r\n        }  \r\n        printf(\"%d\\n\",MaxFlow(s,n));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":327,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#define maxn 100000 + 5  \r\nchar str1[2 * maxn], str2[maxn];  \r\nint next[maxn], len1, len2;;  \r\n\r\nvoid getNext(){  \r\n    int j = -1, i = 0;  \r\n    next[0] = -1;  \r\n    while(i < len2){  \r\n        if(j == -1 || str2[i] == str2[j]){  \r\n            ++i; ++j;  \r\n            if(str2[i] != str2[j]) next[i] = j;  \r\n            else next[i] = next[j];  \r\n        }else j = next[j];  \r\n    }  \r\n}  \r\n\r\nbool KMP(){  \r\n    getNext();  \r\n    int i = 0, j = 0;  \r\n    while(i < len1 && j < len2){  \r\n        if(j == -1 || str1[i] == str2[j]) ++j, ++i;  \r\n        else j = next[j];  \r\n    }  \r\n    return j == len2;  \r\n}  \r\n\r\nint main(){  \r\n    while(scanf(\"%s%s\", str1, str2) == 2){  \r\n        len1 = strlen(str1);  \r\n        len2 = strlen(str2);  \r\n        if(len1 < len2){  \r\n            printf(\"no\\n\");  \r\n            continue;  \r\n        }         \r\n        memcpy(str1 + len1, str1, len1);  \r\n        len1 *= 2;  \r\n        if(KMP()) printf(\"yes\\n\");  \r\n        else printf(\"no\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":328,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\nusing namespace std;\r\n\r\nint test[2][2];\r\n\r\nint main()\r\n{\r\n    int a,b,t,i,k=0;\r\n    while(scanf(\"%d\",&t)!=EOF)\r\n    {\r\n        for(int i=0;i<t;i++)\r\n        {\r\n            scanf(\"%d%d\",&a,&b);\r\n            if(!(a&1)|| !(b&1))\r\n            {\r\n                scanf(\"%d%d%d%d\",&test[0][0],&test[0][1],&test[1][0],&test[1][1]);\r\n                if(((test[0][0]+test[0][1])&1)^((test[1][0]+test[1][1])&1))\r\n                    printf(\"YES\\n\");\r\n                else\r\n                    printf(\"NO\\n\");\r\n            }\r\n            else\r\n                printf(\"NO\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":329,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint f[210];\r\nint len,len1;\r\nchar str[210],s[210];\r\nchar put[210];\r\nvoid getmap()\r\n{\r\n    int i,j,k;\r\n    memset(s,'\\0',sizeof(s));\r\n    scanf(\"%s\",str);\r\n    len=strlen(str);\r\n    for(i=0;i<len;i++)\r\n    {\r\n        if(str[i]=='.')\r\n        {\r\n            k=i;\r\n            break;\r\n        }\r\n    }\r\n    j=0;\r\n    for(i=k+1;i<len;i++)\r\n        s[j++]=str[i];\r\n    len1=strlen(s);\r\n}\r\nvoid getfail()\r\n{\r\n    int i,j;\r\n    f[0]=f[1]=0;\r\n    for(i=1;i<len1;i++)\r\n    {\r\n        j=f[i];\r\n        while(j&&s[i]!=s[j])\r\n            j=f[j];\r\n        f[i+1]=s[i]==s[j]?j+1:0;\r\n    }\r\n}\r\nvoid kmp()\r\n{\r\n    int i,j,length,times;\r\n    int k;\r\n    length=len1-f[len1];\r\n    times=len1\/(len1-f[len1]);\r\n    j=0;\r\n    for(i=0;i<len1;i++)\r\n    {\r\n        while(j&&s[i]!=s[j])\r\n            j=f[j];\r\n        if(s[i]==s[j])\r\n            j++;\r\n        if(j==length)\r\n        {\r\n            k=i-length+1;\r\n            break;\r\n        }\r\n    }\r\n    memset(put,'\\0',sizeof(put));\r\n    j=0;\r\n    for(i=k;i<length;i++)\r\n        put[j++]=s[i];\r\n    printf(\"%d %s %d\\n\",length,put,times);\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        getmap();\r\n        getfail();\r\n        kmp();\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":330,
"code":"\n#include<cmath>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\n#include<iostream>  \r\nusing namespace std;  \r\nint a[100010]; \r\n\r\nint main()  \r\n{  \r\n    int ncase;  \r\n    int num, temp;  \r\n    scanf(\"%d\", &ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        temp = 1;  \r\n        memset(a, 0, sizeof(a));  \r\n        scanf(\"%d\", &num);  \r\n        if(num < 0)  \r\n            printf(\"-0.\");  \r\n        else  \r\n            printf(\"0.\");  \r\n        while(a[temp] != 1 && temp != 0)  \r\n        {  \r\n            a[temp] = 1;  \r\n            temp *= 10;  \r\n            printf(\"%d\", temp \/ num);  \r\n            temp %= num;  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":331,
"code":"\n#include <stdio.h>\r\nint gcd(int a,int b)\r\n{\r\n    return b==0?a:gcd(b,a%b);\r\n}\r\nint main()\r\n\r\n{\r\n    int n,m;\r\n    while(scanf(\"%d%d\",&n,&m),n!=-1&&m!=-1)\r\n    {\r\n         if(gcd(n,m)==1) puts(\"YES\");\r\n         else puts(\"POOR Haha\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":332,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\n#include<math.h>\r\nusing namespace std;\r\nchar a[5][10],b[5][10],c[5][10];\r\nint main()\r\n{\r\n    int t,n,m,i,j,k;\r\n    while(scanf(\"%d%d%d\",&t,&n,&m)!=EOF)\r\n    {\r\n        for(i=0;i<t;i++)\r\n            scanf(\"%s\",a[i]);\r\n        for(i=0;i<n;i++)\r\n            scanf(\"%s\",b[i]);\r\n        for(i=0;i<m;i++)\r\n            scanf(\"%s\",c[i]);\r\n        int temp=0;\r\n        for(i=0;i<n;i++)\r\n            for(j=0;j<t;j++)\r\n                if(strcmp(b[i],a[j])==0)\r\n                {\r\n                    int flag=0;\r\n                    for(k=0;k<m;k++)\r\n                    {\r\n                        if(strcmp(b[i],c[k])==0)\r\n                            flag=1;\r\n                    }\r\n                    if(flag==0)\r\n                    {\r\n                        printf(\"%s \",b[i]);\r\n                        temp=1;\r\n                    }\r\n                    else\r\n                    break;\r\n                }\r\n        if(temp==0)\r\n        printf(\"No enemy spy\\n\");\r\n        else\r\n        printf(\"\\n\");\r\n        getchar();\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":333,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cstdio>  \r\n#include<cmath>  \r\nusing namespace std;  \r\n\r\nconst int N = 65540;  \r\nint prim[N];  \r\n\r\nvoid Fast_Prim() \r\n{  \r\n    int limit = sqrt(N * 1.0);  \r\n    int num = 0;  \r\n    memset(prim, 0, sizeof(prim));  \r\n    for(int i = 2; i < limit; ++i)  \r\n        if(!prim[i])  \r\n            for(int j = i * i; j < N; j += i)  \r\n                prim[j] = true;  \r\n    for(int i = 2; i < N; ++i)  \r\n        if(!prim[i])  \r\n            prim[num++] = i;  \r\n}  \r\n\r\nint Prim_Induce(int n) \r\n{  \r\n    int num, sum = n;  \r\n    for(int i = 0; prim[i] * prim[i] <= n; ++i)  \r\n    {  \r\n        if(n % prim[i] == 0)  \r\n        {  \r\n            sum = sum \/ prim[i] * (prim[i] - 1);  \r\n            while(n % prim[i] == 0)  \r\n                n \/= prim[i];  \r\n        }  \r\n    }  \r\n    if(n != 1)  \r\n        sum = sum \/ n * (n - 1);  \r\n    return sum;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    Fast_Prim();  \r\n    int n;  \r\n    while(~scanf(\"%d\", &n))  \r\n        printf(\"%d\\n\", Prim_Induce(n));  \r\n    return 0;  \r\n}"
},
{
"pid":334,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint n;  \r\nvoid falie(int a,int b,int c,int d)  \r\n{  \r\n    if(b+d>n)  \r\n        return;  \r\n    if(b+d==n)  \r\n    {  \r\n        printf(\"%d\/%d,\",a+c,b+d);  \r\n        return;  \r\n    }  \r\n    falie(a,b,a+c,b+d);\r\n    printf(\"%d\/%d,\",a+c,b+d);  \r\n    falie(a+c,b+d,c,d); \r\n}  \r\nint main()  \r\n{  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        int a,b,c,d;  \r\n        printf(\"0\/1,\");  \r\n        falie(0,1,1,1);  \r\n        printf(\"1\/1\");  \r\n        printf(\"\\n\");  \r\n    }  \r\n}"
},
{
"pid":336,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\nusing namespace std;\r\nconst int MAXN=100003;\r\nchar A[MAXN];\r\nchar B[1003];\r\nint f[1003];\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%s %s\",A,B);\r\n        int numa=strlen(A);\r\n        int numb=strlen(B);\r\n        if(numa<numb)\r\n        {\r\n            printf(\"0\\n\");\r\n            continue;\r\n        }\r\n        else if(numa==numb)\r\n        {\r\n            if(!strcmp(A,B))\r\n            {\r\n                printf(\"1\\n\");\r\n                continue;\r\n            }\r\n            else printf(\"0\\n\");\r\n        }\r\n        else\r\n        {\r\n            memset(f,0,sizeof(f));\r\n            f[0]=1;\r\n            for(int i=0;i<numa;i++)\r\n            {\r\n                for(int j=numb-1;j>=0;j--)\r\n                {\r\n                    if(j>i) continue;\r\n                    if(A[i]==B[j])\r\n                    {\r\n                        f[j+1]=(f[j]+f[j+1])%10003;\r\n                    }\r\n                }\r\n            }\r\n\r\n            printf(\"%d\\n\",f[numb]);\r\n\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"
},
{
"pid":337,
"code":"\n#include <stdio.h> \r\n\r\nlong long Solve(long long n,long long m)\r\n{\r\n    if (n%m==0) return n\/m;\r\n    if (n%2==1 && m%2==0) return -1;\r\n    if (n>=3*m) return (n\/m-2)+Solve(n%m+2*m,m);\r\n    if ((n%2)==(m%2)) return 3;\r\n    if (n>=2*m) return 4;\r\n    return Solve(n,n-m);\r\n}\r\n\r\nint main()\r\n{\r\n    long long n,m,ret,q,r;\r\n    while(scanf(\"%lld%lld\",&n,&m)!=EOF)\r\n    {\r\n        ret=Solve(n,m);\r\n        if (ret<0) printf(\"No Solution!\\n\");\r\n        else printf(\"%lld\\n\",ret);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":339,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <vector>\r\n#include <algorithm>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nconst int maxn=55555;\r\nint  dfn[maxn], low[maxn], stack[maxn], belong[maxn], visit[maxn], match[maxn];\r\nbool instack[maxn];\r\nint top, scnt, Index, n, m, T;\r\nvector<int>vt[maxn];\r\n\r\nstruct Node\r\n{\r\n    int u, v;\r\n}f[2*maxn];\r\n\r\nvoid Init_tarjan()\r\n{\r\n    top=scnt=Index=0;\r\n    for(int i=1; i<=n; i++) dfn[i]=low[i]=instack[i]=0;\r\n}\r\n\r\nvoid tarjan(int u)\r\n{\r\n    stack[++top]=u;\r\n    dfn[u]=low[u]=++Index;\r\n    instack[u]=1;\r\n    for(int i=0; i<vt[u].size(); i++)\r\n    {\r\n        int v=vt[u][i];\r\n        if(!dfn[v])\r\n        {\r\n            tarjan(v);\r\n            low[u]=min(low[u],low[v]);\r\n        }\r\n        else if(instack[v])\r\n        {\r\n            low[u]=min(low[u],dfn[v]);\r\n        }\r\n    }\r\n    if(low[u]==dfn[u])\r\n    {\r\n        int v;\r\n        scnt++;\r\n        do\r\n        {\r\n            v=stack[top--];\r\n            instack[v]=0;\r\n            belong[v]=scnt;\r\n        }\r\n        while(u!=v);\r\n    }\r\n}\r\n\r\nbool find(int u)\r\n{\r\n    for(int i=0; i<vt[u].size(); i++)\r\n    {\r\n        int v=vt[u][i];\r\n        if(!visit[v])\r\n        {\r\n            visit[v]=1;\r\n            if(match[v]==-1||find(match[v]))\r\n            {\r\n                match[v]=u;\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nint hungary()\r\n{\r\n    int cnt=0;\r\n    memset(match,-1,sizeof(match));\r\n    for(int i=1; i<=scnt; i++)\r\n    {\r\n        for(int j=1; j<=scnt; j++) visit[j]=0;\r\n        if(find(i)) cnt++;\r\n    }\r\n    return cnt;\r\n}\r\n\r\nint main()\r\n{\r\n    cin >> T;\r\n    while(T--)\r\n    {\r\n        cin >> n >> m;\r\n        for(int i=0; i<=n; i++) vt[i].clear();\r\n        for(int i=0; i<m; i++)\r\n        {\r\n            scanf(\"%d%d\",&f[i].u,&f[i].v);\r\n            vt[f[i].u].push_back(f[i].v);\r\n        }\r\n        Init_tarjan();\r\n        for(int i=1; i<=n; i++)\r\n            if(!dfn[i]) tarjan(i);\r\n        for(int i=0; i<=n; i++) vt[i].clear();\r\n        for(int i=0; i<m; i++)\r\n        {\r\n            int u=belong[f[i].u], v=belong[f[i].v];\r\n            if(u==v) continue;\r\n            vt[u].push_back(v);\r\n        }\r\n        int ans=hungary();\r\n        cout << scnt-ans <<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":340,
"code":"\n#include<cstdio>\r\n#include<cstdlib>\r\n#include<cmath>\r\n#include<algorithm>\r\n#include<cstring>\r\nconst double eps=1e-9;\r\nconst double pi=acos(-1.0);\r\nusing namespace std;\r\ndouble l, r, ang;\r\nbool mark, ok;\r\nint an, bn, n;\r\nvoid check(double a)\r\n{\r\n    if((!mark)&&(fabs(a-180.0)>eps)&&(fabs(a)>eps))mark=true;\r\n    if(fabs(a-180.0)<eps)an++;\r\n    else if(fabs(a)<eps)bn++;\r\n    if(a<180.0&&a>l)l=a;\r\n    else if(a>180.0&&360.0-a>r)r=360.0-a;\r\n    if(l+r>180.0)ok=false;\r\n}\r\nint main()\r\n{\r\n    int i, t;\r\n    double tmp;\r\n    scanf(\"%d\", &t);\r\n    while(t-->0)\r\n    {\r\n        ang=0;\r\n        l=r=0;\r\n        mark=false;\r\n        an=0;bn=1;\r\n        ok=true;\r\n        scanf(\"%d\", &n);\r\n        for(i=0; i<n; i++)\r\n        {\r\n            scanf(\"%lf\", &tmp);\r\n            if(ok)\r\n            {\r\n                if(tmp<0)tmp=-tmp;\r\n                else tmp=360.0-tmp;\r\n                ang+=tmp;\r\n                if(ang>=360.0)ang-=360.0;\r\n                check(ang);\r\n            }\r\n        }\r\n        if(ok)\r\n        {\r\n            if(!mark)\r\n            {\r\n                if(an>0)ok=false;\r\n            }\r\n            else\r\n            {\r\n                if(an>0&&fabs(l)<eps)l=180.0;\r\n                else if(an>0&&fabs(r)<eps)r=180.0;\r\n                if(l+r-180.00>eps)ok=false;\r\n            }\r\n        }\r\n        if(ok)printf(\"No\\n\");\r\n        else printf(\"Yes\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":341,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n)&&n!=-1)  \r\n    {  \r\n        printf(\"I bet on Oregon Maple~\\n\");    \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":342,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <ctime>\r\n#include <iostream>\r\n#include <algorithm>\r\nusing namespace std;\r\ntypedef long long LL;\r\nconst LL NUM=10;\r\nLL t,f[100];\r\nLL mul_mod(LL a,LL b,LL n)\r\n{\r\n    a=a%n;\r\n    b=b%n;\r\n    LL s=0;\r\n    while(b)\r\n    {\r\n        if(b&1)\r\n            s=(s+a)%n;\r\n        a=(a<<1)%n;\r\n        b=b>>1;\r\n    }\r\n    return s;\r\n}\r\nLL pow_mod(LL a,LL b,LL n)\r\n{\r\n    a=a%n;\r\n    LL s=1;\r\n    while(b)\r\n    {\r\n        if(b&1)\r\n            s=mul_mod(s,a,n);\r\n        a=mul_mod(a,a,n);\r\n        b=b>>1;\r\n    }\r\n    return s;\r\n}\r\nbool check(LL a,LL n,LL r,LL s)\r\n{\r\n    LL ans,p,i;\r\n    ans=pow_mod(a,r,n);\r\n    p=ans;\r\n    for(i=1;i<=s;i++)\r\n    {\r\n        ans=mul_mod(ans,ans,n);\r\n        if(ans==1&&p!=1&&p!=n-1)return true;\r\n        p=ans;\r\n    }\r\n    if(ans!=1)return true;\r\n    return false;\r\n}\r\nbool Miller_Rabin(LL n)\r\n{\r\n    if(n<2)return false;\r\n    if(n==2)return true;\r\n    if(!(n&1))return false;\r\n    LL i,r,s,a;\r\n    r=n-1;s=0;\r\n    while(!(r&1)){r=r>>1;s++;}\r\n    for(i=0;i<NUM;i++)\r\n    {\r\n        a=rand()%(n-1)+1;\r\n        if(check(a,n,r,s))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nLL gcd(LL a,LL b)\r\n{\r\n    return b==0?a:gcd(b,a%b);\r\n}\r\nLL Pollard_rho(LL n,LL c)\r\n{\r\n    LL i=1,j,k=2,x,y,d,p;\r\n    x=rand()%n;\r\n    y=x;\r\n    while(true)\r\n    {\r\n        i++;\r\n        x=(mul_mod(x,x,n)+c)%n;\r\n        if(y==x)return n;\r\n        if(y>x)p=y-x;\r\n        else p=x-y;\r\n        d=gcd(p,n);\r\n        if(d!=1&&d!=n)return d;\r\n        if(i==k)\r\n        {\r\n            y=x;\r\n            k+=k;\r\n        }\r\n    }\r\n}\r\nvoid find(LL n)\r\n{\r\n    if(Miller_Rabin(n))\r\n    {\r\n        f[t++]=n;\r\n        return;\r\n    }\r\n    LL p=n;\r\n    while(p>=n)p=Pollard_rho(p,rand()%(n-1)+1);\r\n    find(p);\r\n    find(n\/p);\r\n}\r\nint main()\r\n{\r\n    srand(time(NULL));\r\n    LL n;\r\n    while(cin>>n)\r\n    {\r\n        if(n==1){cout<<\"is not a D_num\"<<endl;continue;}\r\n        t=0;\r\n        find(n);\r\n        if(t!=2&&t!=3){cout<<\"is not a D_num\"<<endl;continue;}\r\n        sort(f,f+t);\r\n        if(t==2)\r\n        {\r\n            if(f[0]!=f[1])cout<<f[0]<<\" \"<<f[1]<<\" \"<<n<<endl;\r\n            else cout<<\"is not a D_num\"<<endl;\r\n        }\r\n        else\r\n        {\r\n            if(f[0]==f[1]&&f[1]==f[2])cout<<f[0]<<\" \"<<f[0]*f[0]<<\" \"<<n<<endl;\r\n            else cout<<\"is not a D_num\"<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":343,
"code":"\n#include<iostream>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<cstdio>\r\nusing namespace std;\r\nint x[20][20][15][15], n, m, p, q, need[20][20][2], small[20][20];\r\nint dp[20][20][2], match[20], g[20][20];\r\nbool vst[20], equ[20][20];\r\nint find(int u, int m)\r\n{\r\n    for(int i = 0; i < m; i++)\r\n        if (!vst[i] && g[u][i])\r\n        {\r\n            vst[i] = 1;\r\n            if (match[i] == -1 || find(match[i], m) == 1)\r\n            {\r\n                match[i] = u;\r\n                return 1;\r\n            }\r\n        }\r\n    return 0;\r\n}\r\nint solve(int n)\r\n{\r\n    memset(match, -1, sizeof(match));\r\n    int ans = 0;\r\n    for(int i = 0; i < n; i++)\r\n    {\r\n        memset(vst, 0, sizeof(vst));\r\n        ans += find(i, n);\r\n    }\r\n    return ans;\r\n}\r\nint main()\r\n{\r\n    while(scanf(\"%d%d%d%d\", &n, &m, &p, &q) != EOF)\r\n    {\r\n        for(int i = 0; i < n; i++)\r\n            for(int j = 0; j < n; j++)\r\n                for(int i2 = 0; i2 < m; i2++)\r\n                    for(int j2 = 0; j2 < m; j2++)\r\n                        scanf(\"%d\", &x[i][j][i2][j2]);\r\n        for(int i = 0; i < n; i++)\r\n            for(int j = 0; j < n; j++)\r\n            {\r\n                for(int i2 = 0; i2 < m; i2++)\r\n                    for(int j2 = 0; j2 < m; j2++)\r\n                    {\r\n                        if (x[i][j][i2][j2]) g[i2][j2] = 1;\r\n                        else g[i2][j2] = 0;\r\n                    }\r\n                small[i][j] = solve(m) * p;\r\n            }\r\n        for(int i = 0; i < n; i++)\r\n            for(int j = 0; j < n; j++)\r\n            {\r\n                need[i][j][0] = need[i][j][1] = 0;\r\n                dp[i][j][0] = dp[i][j][1] = 0x7fffffff;\r\n                for(int i2 = 0; i2 < m; i2++)\r\n                {\r\n                    bool flag = false;\r\n                    for(int j2 = 0; j2 < m; j2++)\r\n                        if (x[i][j][i2][j2])\r\n                        {flag = true; break;}\r\n                    need[i][j][0] += flag;\r\n                }\r\n                need[i][j][0] *= p;\r\n                for(int j2 = 0; j2 < m; j2++)\r\n                {\r\n                    bool flag = false;\r\n                    for(int i2 = 0; i2 < m; i2++)\r\n                        if (x[i][j][i2][j2])\r\n                        {flag = true; break;}\r\n                    need[i][j][1] += flag;\r\n                }\r\n                need[i][j][1] *= p;\r\n                if (small[i][j] < need[i][j][0] && small[i][j] < need[i][j][1])\r\n                    equ[i][j] = true;\r\n                else equ[i][j] = false;\r\n            }\r\n        dp[0][0][0] = min(need[0][0][0], need[0][0][1] + q);\r\n        if (equ[0][0]) dp[0][0][0] = min(dp[0][0][0], small[0][0] + q);\r\n        dp[0][0][1] = min(need[0][0][1], need[0][0][0] + q);\r\n        if (equ[0][0]) dp[0][0][1] = min(dp[0][0][1], small[0][0] + q);\r\n        for(int i = 0; i < n; i++)\r\n            for(int j = 0; j < n; j++)\r\n            {\r\n                int tmpa, tmpb;\r\n                tmpa = i - 1; tmpb = j;\r\n                if (tmpa >= 0 && tmpa < n && tmpb >= 0 && tmpb < n)\r\n                {\r\n                    int val = dp[tmpa][tmpb][0];\r\n                    int val1 = min(need[i][j][0], need[i][j][1] + q + q);\r\n                    if (equ[i][j]) val1 = min(val1, small[i][j] + q + q);\r\n                    int val2 = min(need[i][j][0] + q, need[i][j][1] + q);\r\n                    if (equ[i][j]) val2 = min(val2, small[i][j] + q);\r\n                    dp[i][j][0] = min(dp[i][j][0], val + val1);\r\n                    dp[i][j][1] = min(dp[i][j][1], val + val2);\r\n                }\r\n                tmpa = i; tmpb = j - 1;\r\n                if (tmpa >= 0 && tmpa < n && tmpb >= 0 && tmpb < n)\r\n                {\r\n                    int val = dp[tmpa][tmpb][1];\r\n                    int val1 = min(need[i][j][1], need[i][j][0] + q + q);\r\n                    if (equ[i][j]) val1 = min(val1, small[i][j] + q + q);\r\n                    int val2 = min(need[i][j][1] + q, need[i][j][0] + q);\r\n                    if (equ[i][j]) val2 = min(val2, small[i][j] + q);\r\n                    dp[i][j][1] = min(dp[i][j][1], val + val1);\r\n                    dp[i][j][0] = min(dp[i][j][0], val + val2);\r\n                }\r\n            }\r\n        printf(\"%d\\n\", min(dp[n - 1][n - 1][0], dp[n - 1][n - 1][1]));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":344,
"code":"\n#include<iostream>\r\n#include<algorithm>\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\nusing namespace std;\r\nstruct Node\r\n{\r\n\tint value1,value,sub;\r\n}node[10005],ex;\r\nint T,P,N;\r\nint i,sum;\r\n\r\nbool cmp1(struct Node p,struct Node q)  \r\n{ \r\n\tif(p.value!=q.value)\r\n\t\treturn p.value>q.value;\r\n\telse return p.sub<q.sub;\r\n}\r\n\r\nint cmp2(const void *p,const void *q)  \r\n{  \r\n    int c = (*(struct Node*)p).sub - (*(struct Node*)q).sub;  \r\n    if(c>0) return 1;  \r\n    else return -1;  \r\n}\r\nint main()\r\n{\r\n\tcin>>T;\r\n\twhile(T--)\r\n\t{\r\n\t\tcin>>P>>N;\r\n\t\tsum=0;\r\n\t\tfor(i=0;i<N;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&node[i].value);\r\n\t\t\tnode[i].sub=i;\r\n\t\t\tnode[i].value1=node[i].value;\r\n\t\t\tsum+=node[i].value;\r\n\t\t}\r\n\t\tif(sum<P)\r\n\t\t{\r\n\t\t\tprintf(\"IMPOSSIBLE\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tsort(node,node+N,cmp1);\r\n\t\tint ln=N,lp=P,x;\r\n\t\twhile(lp>0)\r\n\t\t{\r\n\t\t\tx=node[ln-1].value;\r\n\t\t\tif(lp\/ln<x) x=lp\/ln;\r\n\t\t\tif(x>0)\r\n\t\t\t{\r\n\t\t\t\tint pre_ln=ln;\r\n\t\t\t\tfor(i=0;i<pre_ln;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tnode[i].value-=x;\r\n\t\t\t\t\tif(!node[i].value) ln--;\r\n\t\t\t\t}\r\n\t\t\t\tlp-=x*pre_ln;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tfor(i=0;i<lp;i++)\r\n\t\t\t\t\tnode[i].value--;\r\n\t\t\t\tlp=0;\r\n\t\t\t}\r\n\t\t}\r\n\t\tqsort(node,N,sizeof(struct Node),cmp2);\r\n\t\tfor(i=0;i<N-1;i++)\r\n\t\t\tprintf(\"%d \",node[i].value1-node[i].value);\r\n\t\tprintf(\"%d\\n\",node[N-1].value1-node[N-1].value);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":345,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <set>\r\n#include <algorithm>\r\nusing namespace std;\r\n#define EPS 1e-8\r\n#define LS0(a) (a << 1)\r\n#define LS1(a) ((a << 1) | 1)\r\n\r\nconst int MAXN = 20010;\r\nstruct Point { \r\n\tdouble x, y;\r\n\tPoint(double _x = 0.0, double _y = 0.0): x(_x), y(_y) {}\r\n\tPoint operator + (const Point &b) const {\r\n\t\treturn Point(x + b.x, y + b.y);\r\n\t}\r\n\tPoint operator - (const Point &b) const {\r\n\t\treturn Point(x - b.x, y - b.y);\r\n\t}\r\n\tdouble operator ^ (const Point &b) const {\r\n\t\treturn x * b.y - y * b.x;\r\n\t}\r\n\tbool operator < (const Point &b) const {  \r\n\t\treturn x * b.y < y * b.x;\r\n\t}\r\n\tvoid input() {\r\n\t\tscanf(\"%lf%lf\", &x, &y);\r\n\t}\r\n\tdouble diso() {\r\n\t\treturn sqrt(x * x + y * y);\r\n\t}\r\n\r\n}cur,ps[MAXN];\r\n\r\nPoint lnlncross_pt(Point aa, Point ad, Point ba, Point bd) { \r\n\tad = ad - aa;\r\n\tbd = bd - ba;\r\n\tdouble tmp = bd ^ ad;\r\n\treturn Point(\r\n\t\t(ad.x * bd.x * (ba.y - aa.y) + aa.x * bd.x * ad.y - ba.x * ad.x * bd.y) \/ tmp,\r\n\t\t(ad.y * bd.y * (aa.x - ba.x) + ba.y * ad.y * bd.x - aa.y * bd.y * ad.x) \/ tmp);\r\n}\r\n\r\nstruct Item {\r\n\tPoint *u, *v;\r\n\tint type; \r\n\tint sgid; \r\n\tItem(Point *_u = NULL, Point *_v = NULL, int _ty = 0, int _id = 0)\r\n\t\t: u(_u), v(_v), type(_ty), sgid(_id) {}\r\n\tbool operator < (const Item &b) const {\r\n\t\tif(u == b.u && v == b.v)\r\n\t\t\treturn false;\r\n\t\tPoint au = lnlncross_pt(Point(0.0, 0.0), cur, *u, *v);\r\n\t\tPoint bu = lnlncross_pt(Point(0.0, 0.0), cur, *b.u, *b.v);\r\n\t\treturn au.diso() < bu.diso();\r\n\t}\r\n\r\n}item[MAXN];\r\n\r\nbool flag[MAXN];\r\nset<Item> Scan;\r\n\r\nbool cmp(const Item &a, const Item &b) { \r\n\t\treturn atan2(a.u->y, a.u->x) < atan2(b.u->y, b.u->x);\r\n\r\n}\r\n\r\nvoid inputps(int n) {\r\n\tPoint src, a, b;\r\n\tsrc.input();\r\n\tfor(int i = 0; i < n; ++i) {\r\n\t\ta.input(); a = a - src;\r\n\t\tb.input(); b = b - src;\r\n\t\tif(b < a) swap(a, b);\r\n\t\tps[LS0(i)] = a;\r\n\t\tps[LS1(i)] = b;\r\n\t\titem[LS0(i)] = Item(&ps[LS0(i)], &ps[LS1(i)], 0, i);\r\n\t\titem[LS1(i)] = Item(&ps[LS1(i)], &ps[LS0(i)], 1, i);\r\n\t}\r\n\tsort(item, item + 2 * n, cmp);\r\n}\r\n\r\nbool sgcross_with_ax(Item &a) {   \r\n\tPoint tmp(-1.0, 0.0);\r\n\treturn (*a.u ^ *a.v) * (*a.u ^ tmp) > 0.0\r\n\t\t&& (*a.u ^ tmp) * (tmp ^ *a.v) > 0.0;\r\n}\r\n\r\nint main() {\r\n\tint n;\r\n\twhile(scanf(\"%d\", &n) != EOF) {\r\n\t\tinputps(n);\r\n\t\tmemset(flag,0,sizeof(flag));\r\n\t\tScan.clear();\r\n\t\tfor(int i = 0; i < 2 * n; ++i) {\r\n\t\tcur = *item[i].u;\r\n\t\t\tif(item[i].type == 1 && sgcross_with_ax(item[i]))\r\n\t\t\t\tScan.insert(item[i]);\r\n\t\t}\r\n\t\tfor(int i = 0; i < 2 * n; ++i) {\r\n\t\tcur = *item[i].u;\r\n\t\t\tif(item[i].type == 1)\r\n\t\t\t\tScan.insert(item[i]);\r\n\t\t\telse\r\n\t\t\t\tScan.erase(Item(item[i].v, item[i].u, 1, item[i].sgid));\r\n\t\t\tif(!Scan.empty())\r\n\t\t\t\tflag[Scan.begin()->sgid] = true;\r\n\t\t}\r\n\t\tint ans = 0;\r\n\t\tfor(int i = 0; i < n; ++i)\r\n\t\t\tif(flag[i])ans ++;\r\n\t\tprintf(\"%d\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n\r\n}"
},
{
"pid":346,
"code":"\n#include <stdio.h>\r\n#include <algorithm>\r\n#include <math.h>\r\nusing namespace std;\r\n\r\n#define eps 1e-6\r\n\r\ntypedef struct\r\n{\r\n    double x,y;\r\n}point;\r\n\r\npoint a[20005];\r\ndouble ret;\r\npoint tag[20005];\r\n\r\ndouble Dist(point p,point q)\r\n{\r\n    return sqrt((p.x-q.x)*(p.x-q.x)+(p.y-q.y)*(p.y-q.y));\r\n}\r\n\r\nbool cmpx(point p,point q)\r\n{\r\n    if (p.x!=q.x) return p.x<q.x;\r\n    return p.y<q.y;\r\n}\r\n\r\nbool cmpy(point p,point q)\r\n{\r\n    if (p.y!=q.y) return p.y<q.y;\r\n    return p.x<q.x;\r\n}\r\n\r\nvoid Merge(int l,int r)\r\n{\r\n    int mid,x,y,i,j,k;\r\n    double m;\r\n    if (r-l+1<=6)\r\n    {\r\n        for (i=l;i<=r;i++)\r\n        {\r\n            for (j=i+1;j<=r;j++)\r\n            {\r\n                m=Dist(a[i],a[j]);\r\n                if (m>ret\/2) continue;\r\n                for (k=j+1;k<=r;k++)\r\n                {\r\n                    ret=min(ret,m+Dist(a[j],a[k])+Dist(a[i],a[k]));\r\n                }\r\n            }\r\n        }\r\n        return;\r\n    }\r\n    mid=(l+r)\/2;\r\n    Merge(l,mid);\r\n    Merge(mid+1,r);\r\n    int up=0;\r\n    for (i=l;i<=r;i++)\r\n    {\r\n        if (fabs(a[mid].x-a[i].x)<ret\/2) tag[up++]=a[i];\r\n    }\r\n    sort(tag,tag+up,cmpy);\r\n    for (i=0;i<up;i++)\r\n    {\r\n        for (j=i+1;j<up && j<=i+7;j++)\r\n        {\r\n            m=Dist(tag[i],tag[j]);\r\n            if (m>ret\/2) continue;\r\n            for (k=j+1;k<up && k<=j+7;k++)\r\n            {\r\n                ret=min(ret,m+Dist(tag[j],tag[k])+Dist(tag[i],tag[k]));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int i,j,n,T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for (i=0;i<n;i++)\r\n        {\r\n            scanf(\"%lf%lf\",&a[i].x,&a[i].y);\r\n        }\r\n        sort(a,a+n,cmpx);\r\n        ret=999999999;\r\n        Merge(0,n-1);\r\n        printf(\"%.3lf\\n\",ret);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":347,
"code":"\n#include <iostream>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <cstdio>\r\nusing namespace std;\r\n\r\nint s, e;\r\nint count_two, count_five;\r\n\r\nint get_digit(int s, int e)\r\n{\r\n    int s1 = s \/ 10 * 10 + 10;\r\n    int e1 = e \/ 10 * 10;\r\n    int ret = 1;\r\n    if (e1 <= s1)\r\n    {\r\n        for (int i = s; i <= e; i++)\r\n            if ((i & 1) && (i % 5 != 0))\r\n                ret = ret * (i % 10) % 10;\r\n        return ret;\r\n    }\r\n    ret = (e1 - s1) \/ 10 % 2 * 8 + 1;\r\n    for (int i = s; i < s1; i++)\r\n        if ((i & 1) && (i % 5 != 0))\r\n            ret = ret * (i % 10) % 10;\r\n    for (int i = e1 + 1; i <= e; i++)\r\n        if ((i & 1) && (i % 5 != 0))\r\n            ret = ret * (i % 10) % 10;\r\n    return ret;\r\n}\r\n\r\nint cal_odd(int s, int e)\r\n{\r\n    if (s > e)\r\n        return 1;\r\n    int ret = get_digit(s, e);\r\n    int s1 = s;\r\n    while (s1 % 10 != 5)\r\n        s1++;\r\n    int e1 = e;\r\n    while (e1 > 0 && e1 % 10 != 5)\r\n        e1--;\r\n    if (e1 < s1)\r\n        return ret;\r\n    s1 \/= 5;\r\n    e1 \/= 5;\r\n    ret = ret * cal_odd(s1, e1) % 10;\r\n    count_five += (e1 - s1) \/ 2 + 1;\r\n    return ret;\r\n}\r\n\r\nint cal(int s, int e)\r\n{\r\n    if (s > e)\r\n        return 1;\r\n    int ret = cal((s + 1) \/ 2, e \/ 2) % 10;\r\n    count_two += e \/ 2 - (s + 1) \/ 2 + 1;\r\n    ret = ret * cal_odd(s, e) % 10;\r\n    return ret;\r\n}\r\n\r\nvoid test(int s, int e)\r\n{\r\n    long long a = 1;\r\n    for (int i = s; i <= e; i++)\r\n    {\r\n        a *= i;\r\n        while (a % 10 == 0)\r\n            a \/= 10;\r\n    }\r\n    printf(\"%lld\", a % 10);\r\n}\r\n\r\nint main()\r\n{\r\n\r\n    while (~scanf(\"%d%d\", &e, &s))\r\n    {\r\n        s = e - s + 1;\r\n        count_two = 0;\r\n        count_five = 0;\r\n        int ans = cal(s, e);\r\n        if (count_five > count_two)\r\n        {\r\n            puts(\"5\");\r\n            continue;\r\n        }\r\n        int temp = count_two - count_five;\r\n        if (temp == 0)\r\n        {\r\n            printf(\"%d\\n\", ans);\r\n            continue;\r\n        }\r\n        temp--;\r\n        ans = ans * 2 % 10;\r\n        for (int i = 0; i < temp % 4; i++)\r\n            ans = ans * 2 % 10;\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":348,
"code":"\n#include<stdio.h>  \r\n#include<deque>  \r\n#include<string.h>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int a,b,n,m,k,ncase;  \r\n    scanf(\"%d\",&ncase);  \r\n    while(ncase--)  \r\n    {  \r\n                  deque<int>D;  \r\n                  scanf(\"%d\",&m);  \r\n                  n=m;  \r\n                  for(a=1;a<=n;a++)  \r\n                  {  \r\n                                    D.push_front(m);  \r\n                                    b=m;  \r\n                                    while(b--)  \r\n                                    {  \r\n                                                    k=D.back();  \r\n                                                    D.pop_back();  \r\n                                                    D.push_front(k);  \r\n                                    }  \r\n                                    m--;  \r\n\r\n                  }  \r\n                  while(!D.empty())  \r\n                  {  \r\n                                   printf(\"%d \",D.front());  \r\n                                   D.pop_front();  \r\n                  }  \r\n                  printf(\"\\n\");  \r\n    }  \r\n}"
},
{
"pid":349,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<string.h>\r\n#include<cstring>\r\n#include<queue>\r\n#include<vector>\r\nusing namespace std;\r\n\r\nint n, m, v[30], a[30], sum[30], k[30];\r\nvector<int> vec[30];\r\nstruct egde\r\n{\r\n    int x, y;\r\n}e[10010];\r\nint dfs(int x)\r\n{\r\n    int flag = 0;\r\n    v[x] = -1;\r\n    int mi = n+1;\r\n    for(int i = 0; i < vec[x].size(); i++)\r\n    {\r\n        flag = 1;\r\n        int y = vec[x][i];\r\n        if(v[y] < 0) return 0;\r\n        else if(v[y] == 0)\r\n        {\r\n            if(dfs(y) == 0)\r\n                return 0;\r\n            else\r\n                mi = min(mi, a[y]);\r\n        }\r\n        mi = min(mi, a[y]);\r\n    }\r\n    v[x] = 1;\r\n    if(flag == 1)\r\n        a[x] = mi - 1;\r\n    else a[x] = n;\r\n    return 1;\r\n}\r\nint topu()\r\n{\r\n    memset(v, 0, sizeof(v));\r\n    for(int i = 1; i <= n; i++) a[i] = n+2;\r\n    for(int i = 1; i <= n; i++)\r\n    {\r\n        if(v[i] == 0 && vec[i].size() != 0)\r\n        {\r\n            int tem = dfs(i);\r\n            if(tem == 0) return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\nint main()\r\n{\r\n    while(scanf(\"%d%d\", &n, &m) != EOF && n && m)\r\n    {\r\n        for(int i = 1; i <= m; i++)\r\n        {\r\n            char a, b, c;\r\n            int tem;\r\n            cin >> a >> c >> b;\r\n            tem = a - 'A' + 1; e[i].x = tem;\r\n            tem = b - 'A' + 1; e[i].y = tem;\r\n        }\r\n        int error = -1;\r\n        int flag;\r\n        for(int i = 1; i <= n; i++) {vec[i].clear();}\r\n        for(int i = 1; i <= m; i++)\r\n        {\r\n            flag = 1;\r\n            vec[e[i].x].push_back(e[i].y);\r\n            error = topu();\r\n            if(error == 0)\r\n            {\r\n                printf(\"Inconsistency found after %d relations.\\n\", i);\r\n                break;\r\n            }\r\n            else if(error == 1)\r\n            {\r\n                memset(sum, 0, sizeof(sum));\r\n                flag = 1;\r\n                for(int i = 1; i <= n; i++)\r\n                {\r\n                    if(a[i] == n + 2)\r\n                    {\r\n                        flag = 0;continue;\r\n                    }\r\n                    sum[a[i]]++;\r\n                    k[a[i]] = i;\r\n                    if(sum[a[i]] > 1){flag = 0; break;}\r\n                }\r\n                if(flag == 1)\r\n                {\r\n                    printf(\"Sorted sequence determined after %d relations: \", i);\r\n                    for(int i = 1; i <= n; i++)\r\n                        printf(\"%c\", k[i] + 'A' - 1);\r\n                    printf(\".\\n\");\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(flag == 0)\r\n            printf(\"Sorted sequence cannot be determined.\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":350,
"code":"\n#include<cstdio>\r\n#include<string>\r\n#include<cstring>\r\n#include<iostream>\r\n#include<cmath>\r\n#include<algorithm>\r\nusing namespace std;\r\nint dp[1005][1005],sum[1005],a[1005],s[1005][1005];\r\nint main()\r\n{\r\n\tint n,m,r;\r\n\twhile(scanf(\"%d%d%d\",&n,&m,&r)!=EOF)\r\n\t{\r\n\t\tfor(int i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\t\tsum[i]=sum[i-1]+a[i];\r\n\t\t}\r\n\t\tmemset(dp,-1,sizeof(dp));\r\n\t\tmemset(s,-0x1f1f1f1f,sizeof(s));\r\n\t\tdp[0][0]=0;s[0][0]=-sum[1];\r\n\t\tfor(int i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tif(i>=r)\r\n\t\t\t{\r\n\t\t\t\tdp[0][i]=sum[i];\t\t \r\n\t\t\t}\r\n\t\t\tdp[i][i]=0;\r\n\t\t\ts[0][i]=max(s[0][i-1],dp[0][i]-sum[i+1]);\r\n\t\t}\r\n\t\tfor(int i=1;i<=m;i++)\r\n\t\t{\r\n\t\t\tfor(int j=i;j<=n;j++)\r\n\t\t\t{\r\n\t\t\t\tif(dp[i-1][j-1]!=-1)\r\n\t\t\t\t\tdp[i][j]=max(dp[i-1][j-1],dp[i][j]);\r\n\t\t\t\tif(j-r>=i&&s[i-1][j-r-1]!=-0x1f1f1f1f)\r\n\t\t\t\t\tdp[i][j]=max(dp[i][j],sum[j]+s[i-1][j-r-1]);\r\n\t\t\t\tif(dp[i][j]!=-1)\r\n\t\t\t\t\ts[i][j]=max(s[i][j-1],dp[i][j]-sum[j+1]);\r\n\t\t\t\telse\r\n\t\t\t\t\ts[i][j]=s[i][j-1];\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",dp[m][n]);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":352,
"code":"\n#include<stdio.h>  \r\nlong long a[60]={0,1,2,3,4};  \r\nint main()  \r\n{  \r\n    int i,n;  \r\n    for(i=5;i<60;i++)  \r\n    a[i]=a[i-1]+a[i-3];  \r\n    while(scanf(\"%d\",&n),n)   \r\n    printf(\"%I64d\\n\",a[n]);  \r\n    return 0;  \r\n}"
},
{
"pid":353,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <queue>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nint n, m, h;  \r\nchar Map[31][31][31];   \r\nint sx, sy, sz;\r\nbool vis[31][31][31];  \r\nstruct Node  \r\n{  \r\n    int x, y, z, step;  \r\n    friend bool operator < (Node a, Node b)  \r\n    {  \r\n        return a.step > b.step;  \r\n    }  \r\n};  \r\nvoid getMap()  \r\n{  \r\n    for(int i = 0; i < n; i++)  \r\n    {  \r\n        for(int j = 0; j < m; j++)  \r\n        {  \r\n            scanf(\"%s\", Map[i][j]);  \r\n            for(int k = 0; k < h; k++)  \r\n            {  \r\n                if(Map[i][j][k] == 'S')  \r\n                sx = i, sy = j, sz = k;  \r\n            }  \r\n        }   \r\n        getchar();\r\n    }  \r\n}  \r\nbool judge(int x, int y, int z)  \r\n{  \r\n    return x >= 0 && x < n && y >= 0 && y < m && z >= 0 && z < h && Map[x][y][z] != '#' && !vis[x][y][z];  \r\n}  \r\nvoid BFS(int x, int y, int z)  \r\n{  \r\n    priority_queue<Node> Q;  \r\n    Node now, next;  \r\n    memset(vis, false, sizeof(vis));  \r\n    int move[6][3] = {0,0,1, 0,0,-1, 1,0,0, -1,0,0, 0,1,0, 0,-1,0};  \r\n    now.x = x, now.y = y, now.z = z, now.step = 0;  \r\n    vis[now.x][now.y][now.z] = true;  \r\n    Q.push(now);  \r\n    while(!Q.empty())  \r\n    {  \r\n        now = Q.top();  \r\n        Q.pop();  \r\n        if(Map[now.x][now.y][now.z] == 'E')  \r\n        {  \r\n            printf(\"Escaped in %d minute(s).\\n\", now.step);  \r\n            return ;  \r\n        }  \r\n        for(int k = 0; k < 6; k++)  \r\n        {  \r\n            next.x = now.x + move[k][0];  \r\n            next.y = now.y + move[k][1];  \r\n            next.z = now.z + move[k][2];  \r\n            next.step = now.step + 1;  \r\n            if(judge(next.x, next.y, next.z))  \r\n            {  \r\n                Q.push(next);  \r\n                vis[next.x][next.y][next.z] = true;  \r\n            }   \r\n        }   \r\n    }  \r\n    printf(\"Trapped!\\n\");   \r\n}  \r\nint main()  \r\n{  \r\n    while(scanf(\"%d%d%d\", &n, &m, &h), n||m||h)  \r\n    {  \r\n        getMap();  \r\n        BFS(sx, sy, sz);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":354,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\n#include <stdlib.h>  \r\n\r\nint comp ( const void *a, const void *b )  \r\n{  \r\n    return * ( int * ) b - * ( int * ) a;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    double sum;  \r\n    int m,i;  \r\n    int a[110];  \r\n    scanf(\"%d\",&m);  \r\n    for (i=0; i<m; i++)  \r\n    {  \r\n        scanf(\"%d\",&a[i]);  \r\n    }  \r\n    qsort(a,m,sizeof(int),comp);  \r\n    sum = 2 * sqrt(a[0] * a[1]);  \r\n    for (i=2; i<m; i++)  \r\n    {  \r\n        sum = 2*sqrt(sum * a[i]);  \r\n    }  \r\n    printf(\"%.3f\\n\",sum);  \r\n    return 0;  \r\n}"
},
{
"pid":356,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint const MAX = 150000 + 10;  \r\nint a[MAX];  \r\nint main() {  \r\n  int T;  \r\n  cin >> T;  \r\n  while (T--) {  \r\n    int n;  \r\n    cin >> n;  \r\n    a[0] = a[n + 1] = 0;  \r\n    for (int i = 1; i <= n; i++)  \r\n      cin >> a[i];  \r\n    int s = 0;  \r\n    bool f = false;  \r\n    for (int i = 1; i <= n; i++) {  \r\n      if (!f) {  \r\n        if (a[i] >= a[i - 1] && a[i] >= a[i + 1]) { \r\n          f = true;  \r\n          s += a[i];  \r\n        }  \r\n      }   \r\n      else {  \r\n        if (a[i] <= a[i - 1] && a[i] <= a[i + 1]) {  \r\n          f = false;  \r\n          s -= a[i];  \r\n        }  \r\n      }  \r\n    }  \r\n    cout << s << endl;  \r\n  }  \r\n}"
},
{
"pid":357,
"code":"\n#include <iostream>\r\n#include <string.h>\r\nusing namespace std;\r\n\r\nstruct e{\r\n    int data;\r\n    int weight;\r\n    e *next;\r\n};\r\n\r\ne edge[1001];\r\nint n;\r\n\r\nvoid add(int s,int t,int weight){\r\n    e *p=new e;\r\n    p->data=t;\r\n    p->next=edge[s].next;\r\n    p->weight=weight;\r\n    edge[s].next=p;\r\n}\r\n\r\nint s[1001],q[1001];\r\nint f[1001][1001];\r\n\r\nint solve(int s1,int t1,int w){\r\n    int ans1=0;\r\n    int ans2=0;\r\n    int i,j,k;\r\n    if(f[s1][t1]!=-1) return f[s1][t1];\r\n\r\n    e *p=edge[s1].next;\r\n    e *q1=p;\r\n    if(w>q[s1])\r\n    {\r\n        while(p)\r\n        {\r\n            solve(p->data,s1,p->weight);\r\n            ans1+=f[p->data][s1];\r\n            p=p->next;\r\n        }\r\n        f[s1][t1]=ans1+s[s1];\r\n    }\r\n    else\r\n    {\r\n        while(p)\r\n        {\r\n            solve(p->data,s1,p->weight);\r\n            ans1+=f[p->data][s1];\r\n            p=p->next;\r\n        }\r\n        while(q1)\r\n        {\r\n            solve(q1->data,t1,w+q1->weight);\r\n            ans2+=f[q1->data][t1];\r\n            q1=q1->next;\r\n        }\r\n        f[s1][t1]=min(ans2,ans1+s[s1]);\r\n    }\r\n    return f[s1][t1];\r\n\r\n}\r\n\r\nvoid read(){\r\n    int i,j,k,s1,t,root;\r\n    int cas;\r\n    cin>>cas;\r\n    while(cas--)\r\n    {\r\n        cin>>n;\r\n        memset(edge,0,sizeof(edge));\r\n        memset(f,-1,sizeof(f));\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            cin>>j>>k>>s1>>t;\r\n            if(j!=0) add(j,i,t);\r\n            else root=i;\r\n            q[i]=k;\r\n            s[i]=s1;\r\n        }\r\n        e *p=edge[root].next;\r\n        int ans=0;\r\n        while(p)\r\n        {\r\n            ans+=solve(p->data,root,p->weight);\r\n            p=p->next;\r\n        }\r\n        cout<<ans<<endl;\r\n    }\r\n}\r\n\r\nint main(){\r\n    read();\r\n    return 0;\r\n}"
},
{
"pid":358,
"code":"\n#include <stdio.h>  \r\n\r\nlong long a[100];  \r\n\r\nint main (void)  \r\n{  \r\n    int i;  \r\n    a[0] = 0;  \r\n    a[1] = 1;  \r\n    for(i = 2; i < 100; i++)  \r\n    {  \r\n        a[i] = a[i - 1] + a[i - 2];  \r\n    }  \r\n\r\n    long long n;  \r\n    while(scanf(\"%lld\", &n) != EOF)  \r\n    {  \r\n        int f = 0;  \r\n        for(i = 2; i < 100; i ++)  \r\n        {  \r\n            if(a[i] == n)  \r\n            {  \r\n                f = 1;  \r\n                printf(\"No\\n\");  \r\n                break;  \r\n            }  \r\n        }  \r\n        if(f == 0)  \r\n            printf(\"Yes\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":359,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int n,i,j;\r\n    scanf(\"%d\",&n);\r\n    char a[1000010],b[1000010];\r\n    while(n--)\r\n    {\r\n        fflush(stdin);\r\n        scanf(\"%s\",a);\r\n        scanf(\"%s\",b);\r\n        int len=strlen(b),k=-1,flag=0;\r\n        for(i=0,j=0;j<len&&i<len+1;i++,j++)\r\n        {\r\n            if(a[i]!=b[j])\r\n            {\r\n                flag++;\r\n                if(flag==2)  break;\r\n                k=i;\r\n                j--;\r\n            }\r\n        }\r\n        if(flag==2)\r\n        printf(\"0\\n\");\r\n        else\r\n        {\r\n            if(flag==0)\r\n                k=len;\r\n            int sum2=0;\r\n            for(i=k-1;i>=0;i--)\r\n            {\r\n                if(a[i]==a[k])\r\n                    sum2++;\r\n                else  break;\r\n            }\r\n            k++;\r\n            printf(\"%d\\n\",sum2+1);\r\n            for(i=k-sum2;i<=k;i++)\r\n            printf(\"%d \",i);\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":361,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,m,rest,now;  \r\n    int sign[15]={0};  \r\n    while(~scanf(\"%d\",&n),n)  \r\n    {   \r\n        if(sign[n]==0)  \r\n        {    m=0;  \r\n             while(1)  \r\n             {  m++;  \r\n                now=0;  \r\n                rest=2*n ;  \r\n                while(1)  \r\n                {  \r\n                    now=(now+m-1)%rest+1 ;  \r\n                    if(now>n)  \r\n                    {rest--;now--;}  \r\n                    else break;  \r\n                }  \r\n                if(rest == n)  \r\n                {  \r\n                    sign[n] = m;  \r\n                    break;  \r\n                }  \r\n            }  \r\n        }  \r\n      printf(\"%d\\n\",sign[n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":362,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\ntypedef long long LL;  \r\nint main()  \r\n{  \r\n    LL a,b,p = 1;  \r\n    while(scanf(\"%lld%lld\",&a,&b)!=EOF)  \r\n    {  \r\n        LL k,ret,sum = 1 ;  \r\n        for(LL i = 2 ; i <= sqrt(a);i ++)  \r\n        {  \r\n            k = 0 ;  \r\n            if(a % i == 0)  \r\n            {  \r\n                while(a % i == 0)  \r\n                {  \r\n                    k ++ ;  \r\n                    a \/= i;  \r\n                }  \r\n                ret = ((k*b + 1)*(k*b + 2) \/ 2) % 10007 ;  \r\n                ret *= ret ;  \r\n                sum = (sum*ret) % 10007;  \r\n            }  \r\n        }  \r\n        if(a > 1)  \r\n        {  \r\n            ret = ((1+b)*(b+2) \/ 2) % 10007 ;  \r\n            ret *= ret ;  \r\n            sum = (sum*ret) % 10007;  \r\n        }  \r\n        printf(\"Case %lld: %lld\\n\",p++,sum);  \r\n    }  \r\n}"
},
{
"pid":364,
"code":"\n#include<iostream>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint tian[1005],king[1005];  \r\nbool cmp(int a,int b)  \r\n{  \r\n    return a>b;  \r\n}  \r\nint match(int n)  \r\n{  \r\n    sort(tian,tian+n,cmp);  \r\n    sort(king,king+n,cmp);  \r\n    int tl=0,tr=n-1,kl=0,kr=n-1,win=0,lose=0;  \r\n    while(tl<=tr)  \r\n    {  \r\n        if(tian[tl]>king[kl])  \r\n        {  \r\n            win++;  \r\n            tl++;  \r\n            kl++;  \r\n        }  \r\n        else if(tian[tr]>king[kr])  \r\n        {  \r\n            win++;  \r\n            tr--;  \r\n            kr--;  \r\n        }  \r\n        else  \r\n        {  \r\n            if(tian[tr]<king[kl])  \r\n                lose++;  \r\n            tr--;  \r\n            kl++;  \r\n        }  \r\n    }  \r\n    return (win-lose)*200;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    while(cin>>n)  \r\n    {  \r\n        for(i=0;i<n;i++)  \r\n            cin>>tian[i];  \r\n        for(i=0;i<n;i++)  \r\n            cin>>king[i];  \r\n        cout<<match(n)<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":366,
"code":"\n#include<iostream>\r\n#include<cstring>\r\nusing namespace std;\r\n\r\nbool visit[10];\r\nint n,a[10];\r\n\r\nvoid fun(int k)\r\n{\r\n    int i;\r\n    if(k==n)\r\n    {\r\n        for(i=0;i<n;++i)\r\n            cout<<a[i];\r\n        cout<<endl;\r\n    }\r\n    else\r\n    {\r\n        for(i=1;i<=n;++i)\r\n            if(!visit[i])\r\n            {\r\n                a[k]=i;\r\n                visit[i]=true;\r\n                fun(k+1);\r\n                visit[i]=false;\r\n            }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    cin>>T;\r\n    while(T--)\r\n    {\r\n        memset(visit,false,sizeof(visit));\r\n        cin>>n;\r\n        fun(0);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":367,
"code":"\n#include<iostream>  \r\n#include<algorithm>  \r\n#include<cstring>  \r\n#include<vector>  \r\n#include<queue>  \r\nusing namespace std;  \r\nstruct A  \r\n{int x,y;}a[1010];  \r\nvector<int> s[1010];    \r\nint b[1010];             \r\nint main()  \r\n{  \r\n    int m,n;  \r\n    while(cin>>m>>n)  \r\n    {  \r\n        memset(b,888,sizeof(b));  \r\n        for(int i=1;i<=m;i++)  \r\n        {a[i].x=0;a[i].y=0;s[i].clear();}  \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            int x,y;cin>>x>>y;  \r\n            a[x].x++;a[y].y++;s[y].push_back(x);  \r\n        }  \r\n        queue<int> r;  \r\n        for(int i=1;i<=m;i++)  \r\n        {  \r\n            if(a[i].x==0)r.push(i);    \r\n        }  \r\n        if(r.empty())cout<<-1<<endl;       \r\n        else  \r\n        {  \r\n            int sum=888*m;  \r\n            while(!r.empty())  \r\n            {  \r\n                int c=r.front();  \r\n                for(int i=0;i<s[c].size();i++)  \r\n                {  \r\n                    int d=s[c][i];  \r\n                    a[c].y--;a[d].x--;  \r\n                    if(a[d].x==0&&a[d].y!=0)r.push(d);  \r\n                    if(b[d]<=b[c]){sum+=b[c]+1-b[d];b[d]=b[c]+1;}  \r\n                }  \r\n                r.pop();  \r\n            }  \r\n            int flat=0;  \r\n            for(int i=1;i<=m;i++)  \r\n            {  \r\n                if(a[i].x!=0||a[i].y!=0){flat=1;break;}  \r\n            }  \r\n            if(flat)cout<<-1<<endl;  \r\n            else cout<<sum<<endl;  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":369,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<queue>\r\n#include<vector>\r\n#include<algorithm>\r\nusing namespace std;\r\ntypedef long long LL;\r\ntypedef pair<LL,int>Pair;\r\n#define inf (1ll)<<55\r\n#define MAXN 3333\r\n\r\nstruct Node {\r\n    int v,w;\r\n};\r\nint In[MAXN];\r\nLL dist[MAXN],pro[MAXN];\r\nbool mark[MAXN];\r\nvector<Node>Map[MAXN];\r\nvector<int>vet[MAXN];\r\nint n,m;\r\n\r\nvoid Dijkstra(){\r\n   for(int i=1;i<=n;i++){ dist[i]=inf;pro[i]=0; }\r\n   dist[1]=0;\r\n   memset(mark,false,sizeof(mark));\r\n   priority_queue<Pair,vector<Pair>,greater<Pair> >Q;\r\n   Q.push(make_pair(dist[1],1));\r\n   while(!Q.empty()){\r\n      Pair pp=Q.top();\r\n      Q.pop();\r\n      int u=pp.second;\r\n      if(mark[u])continue;\r\n      mark[u]=true;\r\n      for(int i=0;i<vet[u].size();i++){\r\n         int v=vet[u][i];\r\n         In[v]--;\r\n         pro[v]=max(pro[v],dist[u]);\r\n         if(dist[v]!=inf&&In[v]==0){\r\n            dist[v]=max(dist[v],pro[v]);\r\n            Q.push(make_pair(dist[v],v));\r\n         }\r\n      }\r\n      for(int i=0;i<Map[u].size();i++){\r\n         int v=Map[u][i].v;\r\n         int w=Map[u][i].w;\r\n         if(dist[v]>dist[u]+w){\r\n            dist[v]=max(dist[u]+w,pro[v]);\r\n            if(In[v]==0){ Q.push(make_pair(dist[v],v)); }\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nint main() {\r\n    int _case,u,v,w,x;\r\n    scanf(\"%d\",&_case);\r\n    while(_case--) {\r\n        scanf(\"%d%d\",&n,&m);\r\n        for(int i=1; i<=n; i++) {\r\n            Map[i].clear();\r\n            vet[i].clear();\r\n        }\r\n        while(m--) {\r\n            scanf(\"%d%d%d\",&u,&v,&w);\r\n            Node p;\r\n            p.v=v,p.w=w;\r\n            Map[u].push_back(p);\r\n        }\r\n        for(int i=1; i<=n; i++) {\r\n            scanf(\"%d\",&In[i]);\r\n            for(int j=1; j<=In[i]; j++) {\r\n                scanf(\"%d\",&x);\r\n                vet[x].push_back(i);\r\n            }\r\n        }\r\n        Dijkstra();\r\n        printf(\"%I64d\\n\",dist[n]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":370,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<map>\r\n#include<cstring>\r\n#include<string>\r\n#include<algorithm>\r\n#include<queue>\r\n#include<vector>\r\n#include<stack>\r\n#include<cstdlib>\r\n#include<cctype>\r\n#include<cmath>\r\n#define LL long long\r\nusing namespace std;\r\nint a[30003];\r\nint main()\r\n{\r\n    int n,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++){\r\n            scanf(\"%d\",&a[i]);\r\n        }\r\n        int res=0;\r\n        int now=a[0],ok=0;\r\n        for(int i=1;i<n;i++){\r\n            if(ok==0&&now>a[i]){\r\n                res++;\r\n                ok=1;\r\n            }\r\n            if(ok==1&&now<a[i]){\r\n                res++;\r\n                ok=0;\r\n            }\r\n            now=a[i];\r\n        }\r\n        printf(\"%d\\n\",res+1);\r\n    }\r\n\treturn 0;\r\n}"
},
{
"pid":371,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int n,i,j,dir,x,y,len;  \r\n    char s[105];  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        scanf(\"%s\",s);  \r\n        dir=4;  \r\n        x=y=0;  \r\n        len=strlen(s);  \r\n        for(i=0;i<len;i++)  \r\n        {  \r\n            if(s[i]=='L')  \r\n            {  \r\n                if(dir==1)  \r\n                   dir=4; \r\n                else  \r\n                   dir--;  \r\n            }  \r\n            else if(s[i]=='R')  \r\n            {  \r\n                if(dir==4)  \r\n                  dir=1;   \r\n                else  \r\n                  dir++;  \r\n            }  \r\n            else if(s[i]=='M')  \r\n            {  \r\n                if(dir%4==0)  \r\n                  y++;  \r\n                if(dir%4==3)  \r\n                  x--; \r\n                else if(dir%4==2)  \r\n                  y--;  \r\n                else if(dir%4==1)  \r\n                  x++;  \r\n            }  \r\n        }  \r\n        printf(\"%d %d \",x,y);  \r\n        if(dir%4==0)  \r\n          printf(\"N\\n\");  \r\n        else if(dir%4==3)  \r\n          printf(\"W\\n\");  \r\n        else if(dir%4==2)  \r\n          printf(\"S\\n\");  \r\n        else   \r\n          printf(\"E\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":372,
"code":"\n#include<stdio.h>\r\nint num[301][301];\r\nint main()\r\n{\r\n\tint T,i,j,k,max=0,sum=0,n,m;\r\n\tscanf(\"%d\",&T);\r\n\tfor(i=0;i<=300;i++)\r\n\t\tnum[0][i]=0;\r\n\tfor(i=0;i<=300;i++)\r\n\t\tnum[i][0]=0;\r\n\twhile(T--)\r\n\t{\r\n\t\tscanf(\"%d%d\",&n,&m);\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t{\r\n\t\t\tfor(j=1;j<=m;j++)\r\n\t\t\t{\r\n\t\t\t\tscanf(\"%d\",&num[i][j]);\r\n\t\t\t\tnum[i][j]+=num[i][j-1];\r\n\t\t\t}\r\n\t\t}\r\n\t\tmax=0;\r\n\t\tfor(i=1;i<=m;i++)\r\n\t\t{\r\n\t\t\tfor(j=i;j<=m;j++)\r\n\t\t\t{\r\n\t\t\t\tsum=0;\r\n\t\t\t\tfor(k=1;k<=n;k++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(sum<0)\r\n\t\t\t\t\t\tsum=num[k][j]-num[k][i-1];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tsum+=num[k][j]-num[k][i-1];\r\n\t\t\t\t\tif(sum>max)\r\n\t\t\t\t\t\tmax=sum;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",max);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":373,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stack>  \r\n#include<math.h>  \r\nusing namespace std;  \r\nchar s[100005];  \r\nstack<char>s1;  \r\nstack<double>s2;  \r\nint main()  \r\n{  \r\n    int n,ncase,i;  \r\n    while(~scanf(\"%d%d\",&n,&ncase))  \r\n    {  \r\n        while(ncase--)  \r\n        {  \r\n            while(!s1.empty()) s1.pop();  \r\n            while(!s2.empty()) s2.pop();  \r\n            scanf(\"%s\",s);  \r\n            double m=n*1.0,k;  \r\n            int len=strlen(s);  \r\n            int flag=0;  \r\n            for(i=0;i<len;i++)  \r\n            {  \r\n                if(s[i]=='q'||s[i]=='r'||s[i]=='t') continue;  \r\n                if(s[i]=='g'||s[i]=='o')  continue;  \r\n                if(s[i]=='l') flag=1;  \r\n                if(s[i]=='s') flag=2;  \r\n                if(s[i]=='n') s2.push(m);  \r\n                if(s[i]=='(')  \r\n                {  \r\n                    if(flag==1) { s1.push('l');flag=0;}  \r\n                    else if(flag==2)  { s1.push('s');flag=0;}  \r\n                    else s1.push(s[i]);  \r\n                }  \r\n                if(s[i]=='*') s1.push(s[i]);  \r\n                if(s[i]==')')  \r\n                {  \r\n                    double a1,a2;  \r\n                    while(1)  \r\n                    {  \r\n                        char x=s1.top(); s1.pop();  \r\n                        if(x=='(') break;  \r\n                        a1=s2.top(); s2.pop();  \r\n                        if(x=='l')  \r\n                        {  \r\n                            k=log(a1)\/log(2);  \r\n                            s2.push(k);  \r\n                            break;  \r\n                        }  \r\n                        if(x=='s')  \r\n                        {  \r\n                            k=sqrt(a1);  \r\n                            s2.push(k);  \r\n                            break;  \r\n                        }  \r\n                        if(x=='*')  \r\n                        {  \r\n                            a2=s2.top();s2.pop();  \r\n                            k=a1*a2;  \r\n                            s2.push(k);  \r\n                        }  \r\n                    }  \r\n                }  \r\n            }  \r\n            double t=s2.top();  \r\n            if(t>100000000) puts(\"TLE\");  \r\n            else printf(\"%.2lf\\n\",t);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":374,
"code":"\n#include <math.h>  \r\n#include <queue>  \r\n#include <deque>  \r\n#include <vector>  \r\n#include <stack>  \r\n#include <stdio.h>  \r\n#include <ctype.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\n#include <iomanip>  \r\n#include <iostream>  \r\n#include <algorithm>  \r\n\r\nusing namespace std;  \r\n#define lowbit(a) a&-a  \r\n#define Max(a,b) a>b?a:b  \r\n#define Min(a,b) a>b?b:a  \r\n#define mem(a,b) memset(a,b,sizeof(a))  \r\nint dir[4][2]= {{1,0},{-1,0},{0,1},{0,-1}};  \r\nconst double eps = 1e-6;  \r\nconst double Pi = acos(-1.0);  \r\nstatic const int inf= ~0U>>2;  \r\nstatic const int maxn =110;  \r\ndouble map[250][15];  \r\nint main()  \r\n{  \r\n    int n,m,m1,k,i,j;  \r\n    cin>>n;  \r\n    while(n--)  \r\n    {  \r\n        mem(map,0);  \r\n        cin>>m>>m1>>k;  \r\n        if(m1==2) puts(\"1.000000\");  \r\n        else  \r\n        {  \r\n            map[1][k]=1;  \r\n            for(i=2; i<=m*2-1; i++)  \r\n            {  \r\n                if(!(i%2))  \r\n                {  \r\n                    map[i][1]=(map[i-1][1])\/2,map[i][m1]=(map[i-1][m1-1])\/2; \r\n                    for(j=2; j<m1; j++)  \r\n                        map[i][j]=(map[i-1][j-1]+map[i-1][j])\/2;  \r\n                }  \r\n                else  \r\n                {  \r\n                    map[i][1]=map[i-1][1]+map[i-1][2]\/2,map[i][m1-1]=map[i-1][m1-1]\/2+map[i-1][m1];  \/\/处理边界，注意奇数排的时候边界的特殊情况  \r\n                    for(j=2; j<m1-1; j++)  \r\n                        map[i][j]=(map[i-1][j]+map[i-1][j+1])\/2;  \r\n                }  \r\n            }  \r\n            cout.setf(ios::fixed);  \r\n            cout<<setprecision(6)<<map[i-1][1]<<endl;  \r\n            for(j=2; j<m1; j++)  \r\n                cout<<setprecision(6)<<map[i-1][j]<<endl;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":375,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <iostream>  \r\n#include <queue>  \r\n#define Max_len 101  \r\n\r\nusing namespace std;  \r\ntypedef struct node{  \r\n    int x;  \r\n    int y;  \r\n    int num;  \r\n    int k;  \r\n}node;  \r\n\r\nint flag, flag1;  \r\nint m, n, record_k;  \r\nint dir[4][2] = {1, 0, -1, 0, 0, 1, 0, -1};  \r\nint visited[Max_len][Max_len];  \r\nint pro[Max_len][Max_len];  \r\nchar map[Max_len][Max_len];  \r\nint record[Max_len];  \r\nqueue <node> temp;  \r\n\r\nvoid bfs(int x, int y, int z);  \r\nint is_g(int x, int y);  \r\n\r\nint main(){  \r\n\r\n    int N;  \r\n    int i, k, v, x, y, w, j;  \r\n    node no;  \r\n\r\n    scanf(\"%d\", &N);  \r\n    while(N--){  \r\n        memset(visited, 0, sizeof(visited));  \r\n        memset(pro, 0, sizeof(pro));  \r\n        flag = 0;  \r\n        scanf(\"%d %d\", &m, &n);  \r\n        for(i = 0; i < m; i++){  \r\n            scanf(\"%s\", map[i]);  \r\n        }  \r\n\r\n        w = 0;  \r\n        for(i = 0; i < m && !w; i++){  \r\n            for(j = 0; j < n && !w; j++){  \r\n                if(map[i][j] == 'y'){  \r\n                    x = i; y = j;  \r\n                    w = 1;  \r\n                }  \r\n            }  \r\n        }  \r\n\r\n        scanf(\"%d\", &record_k);  \r\n        for(i = 0; i < record_k; i++){  \r\n            scanf(\"%d\", &record[i]);  \r\n        }  \r\n\r\n        no.x = x; no.y = y; no.num = 0; no.k = 0;  \r\n        temp.push(no);  \r\n\r\n        v = 0;  \r\n        while(!temp.empty()){  \r\n            flag1 = 0;  \r\n            memset(visited, 0, sizeof(visited));  \r\n            no = temp.front();  \r\n            bfs(no.x, no.y, no.k);  \r\n            if(flag == 1){  \r\n                break;  \r\n            }  \r\n            if(no.k < record_k){  \r\n                temp.pop();  \r\n                no.k++;  \r\n                temp.push(no);  \r\n            }     \r\n            else{  \r\n                temp.pop();  \r\n            }  \r\n        }  \r\n        if(flag == 1){  \r\n            printf(\"good luck!\\n\");  \r\n        }  \r\n        else{  \r\n            printf(\"poor yzq!\\n\");  \r\n        }  \r\n\r\n        while(!temp.empty()){  \r\n            temp.pop();  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}  \r\nint is_g(int x, int y){  \r\n    if(x >= 0 && y >= 0 && y <= n - 1 && x <= m - 1){  \r\n        return 1;     \r\n    }  \r\n    else{  \r\n        return 0;  \r\n    }  \r\n}  \r\n\r\nvoid bfs(int x, int y, int k){  \r\n\r\n    node no1, no2;  \r\n    queue <node> q;  \r\n    int i;  \r\n\r\n    no1.x = x; no1.y = y;  \r\n    no1.num = 0;  \r\n    q.push(no1);  \r\n\r\n    while(!q.empty()){  \r\n        no1 = q.front();  \r\n        q.pop();  \r\n        if(map[no1.x][no1.y] == 'd'){  \r\n            flag = 1;  \r\n            return;  \r\n        }  \r\n        else if(map[no1.x][no1.y] == '*' && !pro[no1.x][no1.y] && k < record_k){  \r\n            pro[no1.x][no1.y] = 1;  \r\n            no1.k = k + 1;  \r\n            temp.push(no1);  \r\n            flag1 = 1;  \r\n        }  \r\n\r\n        for(i = 0; i < 4; i++){  \r\n            no2 = no1;  \r\n            no2.x += dir[i][0];  \r\n            no2.y += dir[i][1];  \r\n            if(!visited[no2.x][no2.y] && map[no2.x][no2.y] != 'x' && no2.num < record[k] && is_g(no2.x, no2.y) && !pro[no2.x][no2.y]){  \r\n                no2.num ++;  \r\n                visited[no2.x][no2.y] = 1;  \r\n                q.push(no2);  \r\n            }  \r\n        }  \r\n\r\n    }  \r\n}"
},
{
"pid":376,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<vector>  \r\n#define Max(a,b) a>b?a:b  \r\nusing namespace std;  \r\nconst int INF=1005;  \r\nint dp[INF],visit[INF],v[INF];  \r\nvector<int> vec[INF];  \r\n\r\nvoid dfs(int cur)  \r\n{  \r\n    if(visit[cur]) return;  \r\n    int size=vec[cur].size();  \r\n    if(size==0)  \r\n    {  \r\n        dp[cur]=v[cur];  \r\n        return;  \r\n    }  \r\n    for(int i=0;i<size;i++)  \r\n    {  \r\n        int child=vec[cur][i];  \r\n        dfs(child);  \r\n        visit[child]=1;  \r\n        dp[cur]=Max(dp[cur],dp[child]+v[cur]);  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int n,m;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        for(int i=1;i<=n;i++)  \r\n            scanf(\"%d\",&v[i]);  \r\n        scanf(\"%d\",&m);  \r\n        int a,b;  \r\n        for(int i=0;i<m;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            vec[a].push_back(b);  \r\n        }  \r\n        for(int i=1;i<=n;i++)  \r\n        {  \r\n            vec[0].push_back(i);  \r\n        }  \r\n        memset(dp,0,sizeof(dp));  \r\n        memset(visit,0,sizeof(visit));  \r\n        dfs(0);  \r\n        printf(\"%d\\n\",dp[0]);  \r\n        for(int i=0;i<=n;i++)  \r\n            vec[i].clear();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":377,
"code":"\n#include <stdio.h>\r\n#include <string.h>\r\n\r\n#define N 10000\r\n#define LEN 32\r\n#define X 10010\r\n\r\nstruct Trie\r\n{\r\n\tint end;\r\n\tint v;\r\n\tstruct Trie *son[26];\r\n};\r\n\r\nint n, nx;\r\nint buf_cnt;\r\nstruct Trie *root, buf[N*LEN];\r\nint max[X];\r\nchar x[X];\r\n\r\nstruct Trie* New_node()\r\n{\r\n\tstruct Trie *tmp = &buf[buf_cnt++];\r\n\ttmp->end = 0;\r\n\ttmp->v = 0;\r\n\tfor (int i = 0; i < 26; i++)\r\n\t\ttmp->son[i] = 0;\r\n\treturn tmp;\r\n}\r\n\r\nvoid insert(char *s, int v)\r\n{\r\n\tstruct Trie *cur = root;\r\n\tfor (int i = 0; s[i] != 0; i++)\r\n\t{\r\n\t\tint id = s[i] - 'a';\r\n\t\tif (cur->son[id] == NULL)\r\n\t\t\tcur->son[id] = New_node();\r\n\t\tcur = cur->son[id];\r\n\t}\r\n\tcur->end = 1;\r\n\tcur->v = v;\r\n}\r\n\r\nvoid reversal(char *s)\r\n{\r\n\tint i = 0;\r\n\tint j = strlen(s);\r\n\tj--;\r\n\twhile (i < j)\r\n\t{\r\n\t\tchar tmp = s[i];\r\n\t\ts[i] = s[j];\r\n\t\ts[j] = tmp;\r\n\t\ti++;\r\n\t\tj--;\r\n\t}\r\n}\r\n\r\nvoid query(int i)\r\n{\r\n\tstruct Trie *cur = root;\r\n\tfor (int j = i; x[j] != 0; j--)\r\n\t{\r\n\t\tint id = x[j] - 'a';\r\n\t\tif (cur->son[id])\r\n\t\t{\r\n\t\t\tif (cur->son[id]->end)\r\n\t\t\t{\r\n\t\t\t\tif (max[j-1] != -1)\r\n\t\t\t\t{\r\n\t\t\t\t\tif (max[j-1]+cur->son[id]->v > max[i])\r\n\t\t\t\t\t\tmax[i] = max[j-1] + cur->son[id]->v;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcur = cur->son[id];\r\n\t\t}\r\n\t\telse\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tx[0] = 0;\r\n\twhile (scanf(\"%d %s\", &n, x+1) != EOF)\r\n\t{\r\n\t\tnx = strlen(x+1);\r\n\t\tbuf_cnt = 0;\r\n\t\troot = New_node();\r\n\t\tfor (int i = 0; i < n; i++)\r\n\t\t{\r\n\t\t\tchar s[LEN];\r\n\t\t\tint v;\r\n\t\t\tscanf(\"%s %d\", s, &v);\r\n\t\t\treversal(s);\r\n\t\t\tinsert(s, v);\r\n\t\t}\r\n\t\tmax[0] = 0;\r\n\t\tfor (int i = 1; i <= nx; i++)\r\n\t\t{\r\n\t\t\tmax[i] = -1;\r\n\t\t\tquery(i);\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", max[nx]);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":378,
"code":"\n#include<iostream>\r\n#include<stdio.h>\r\nusing namespace std;\r\nstruct node{\r\n   int lone,lzero;\r\n   int rone,rzero;\r\n   int tmax0,tmax1;\r\n   int flag;\r\n   int l,r;\r\n   int mlen;\r\n}p[100001*4];\r\nint a[100001];\r\nint max(int x,int y)\r\n{\r\n    return x>y?x:y;\r\n}\r\nint min(int x,int y)\r\n{\r\n    return x<y?x:y;\r\n}\r\nvoid update_info(int n)\r\n{\r\n    p[n].lone=p[n*2].lone;\r\n    if(p[n*2].lone==p[n*2].mlen)\r\n        p[n].lone+=p[n*2+1].lone;\r\n    p[n].lzero=p[n*2].lzero;\r\n    if(p[n*2].lzero==p[n*2].mlen)\r\n        p[n].lzero+=p[n*2+1].lzero;\r\n    p[n].rone=p[n*2+1].rone;\r\n    if(p[n*2+1].rone==p[n*2+1].mlen)\r\n        p[n].rone+=p[n*2].rone;\r\n    p[n].rzero=p[n*2+1].rzero;\r\n    if(p[n*2+1].rzero==p[n*2+1].mlen)\r\n        p[n].rzero+=p[n*2].rzero;\r\n    p[n].tmax0=max(p[n*2].tmax0,p[n*2+1].tmax0);\r\n    p[n].tmax0=max(p[n].tmax0,p[n*2].rzero+p[n*2+1].lzero);\r\n    p[n].tmax1=max(p[n*2].tmax1,p[n*2+1].tmax1);\r\n    p[n].tmax1=max(p[n].tmax1,p[n*2].rone+p[n*2+1].lone);\r\n}\r\nvoid build(int l,int r,int n)\r\n{\r\n    p[n].l=l;\r\n    p[n].r=r;\r\n    p[n].flag=0;\r\n    p[n].mlen=(r-l+1);\r\n    if(l==r)\r\n    {\r\n        if(a[l]==1)\r\n        {\r\n            p[n].lone=1;\r\n            p[n].lzero=0;\r\n            p[n].rone=1;\r\n            p[n].rzero=0;\r\n            p[n].tmax0=0;\r\n            p[n].tmax1=1;\r\n        }\r\n        else\r\n        {\r\n            p[n].lone=0;\r\n            p[n].lzero=1;\r\n            p[n].rone=0;\r\n            p[n].rzero=1;\r\n            p[n].tmax0=1;\r\n            p[n].tmax1=0;\r\n        }\r\n        return ;\r\n    }\r\n    int mid=(l+r)\/2;\r\n    build(l,mid,n*2);\r\n    build(mid+1,r,n*2+1);\r\n    update_info(n);\r\n}\r\nvoid pushdown(int n)\r\n{\r\n   p[n*2].flag=p[n*2].flag^1;\r\n   p[n*2+1].flag=p[n*2+1].flag^1;\r\n   swap(p[n*2].lone,p[n*2].lzero);\r\n   swap(p[n*2].rone,p[n*2].rzero);\r\n   swap(p[n*2].tmax1,p[n*2].tmax0);\r\n\r\n   swap(p[n*2+1].lone,p[n*2+1].lzero);\r\n   swap(p[n*2+1].rone,p[n*2+1].rzero);\r\n   swap(p[n*2+1].tmax1,p[n*2+1].tmax0);\r\n   p[n].flag=0;\r\n}\r\nvoid insert(int x,int y,int n)\r\n{\r\n    if(x==p[n].l&&y==p[n].r)\r\n    {\r\n        swap(p[n].lone,p[n].lzero);\r\n        swap(p[n].rzero,p[n].rone);\r\n        swap(p[n].tmax1,p[n].tmax0);\r\n        p[n].flag=p[n].flag^1;\r\n        return ;\r\n    }\r\n    if(p[n].flag==1)\r\n        pushdown(n);\r\n    int mid=(p[n].l+p[n].r)\/2;\r\n    if(y<=mid)\r\n        insert(x,y,n*2);\r\n    else if(x>mid)\r\n        insert(x,y,n*2+1);\r\n    else\r\n    {\r\n        insert(x,mid,n*2);\r\n        insert(mid+1,y,n*2+1);\r\n    }\r\n    update_info(n);\r\n}\r\nint sum(int x,int y,int n)\r\n{\r\n    if(x==p[n].l&&y==p[n].r)\r\n       return p[n].tmax1;\r\n    int mid=(p[n].l+p[n].r)\/2;\r\n    if(p[n].flag==1)\r\n        pushdown(n);\r\n    if(y<=mid)\r\n        return sum(x,y,n*2);\r\n    else if(x>mid)\r\n        return sum(x,y,n*2+1);\r\n    else\r\n    {\r\n        int left=0,right=0,midden=0;\r\n        midden=min(mid-x+1,p[n*2].rone)+min(y-mid,p[n*2+1].lone);\r\n        left=sum(x,mid,n*2);\r\n        right=sum(mid+1,y,n*2+1);\r\n        return max(midden,max(left,right));\r\n    }\r\n}\r\nint main()\r\n{\r\n    int n,m,i,nima,x,y;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        for(i=1;i<=n;i++)\r\n            scanf(\"%d\",&a[i]);\r\n        build(1,n,1);\r\n        scanf(\"%d\",&m);\r\n        while(m--)\r\n        {\r\n            scanf(\"%d%d%d\",&nima,&x,&y);\r\n            if(nima==1)\r\n                insert(x,y,1);\r\n            else\r\n                printf(\"%d\\n\",sum(x,y,1));\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":379,
"code":"\n#include <iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<cstdlib>\r\n#include<cmath>\r\n#include<algorithm>\r\n#include<ctime>\r\nusing namespace std;\r\n#define N 50009\r\nint R,C,ER,EC,num;\r\nint map1[505][505];\r\nint map2[505][505];\r\nint vis[505][505];\r\nstruct Point\r\n{\r\n\tint x,y,f;\r\n\tPoint(int _x,int _y,int _f){x=_x;y=_y;f=_f;}\r\n};\r\nvoid init()\r\n{\r\n\tscanf(\"%d%d%d%d\",&R,&C,&ER,&EC);\r\n\tmemset(vis,0,sizeof(vis));\r\n\tnum=0;\r\n\tfor(int i=0;i<2*R-1;i++)\r\n\t{\r\n\t\tif(i&1)\r\n\t\t{\r\n\t\tfor(int j=0;j<C;j++)\r\n\t\tscanf(\"%d\",&map1[i\/2][j]);\r\n\t\t}\r\n\t\telse \r\n\t\t{\r\n\t\tfor(int j=0;j<C-1;j++)\r\n\t\tscanf(\"%d\",&map2[i\/2][j]);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid dfs(Point s,Point ss)\r\n{\r\n\tint ff=s.f;\r\n\tfor(;;)\r\n\t{\r\n\tif(!vis[s.x][s.y])num++;\r\n\tvis[s.x][s.y]=1;\r\n\tif(s.x==ss.x&&s.y==ss.y)\r\n\t{\r\n\t\tif((s.f==3&&ff==0)||(s.f==1&&ff==2))\r\n\t\tbreak;\r\n\t\tif(s.f==ff&&ff==0&&(s.y==0||map2[s.x][s.y-1]==1))\r\n\t\tbreak;\r\n\t\tif(s.f==ff&&ff==2&&(s.y==C-1||map2[s.x][s.y]==1))\r\n\t\tbreak;\r\n\t}\r\n\tif(s.f==0)\r\n\t{\r\n\t\tif(s.y>0&&map2[s.x][s.y-1]==0)\r\n\t\t{\r\n\t\t\ts.y--;\r\n\t\t\ts.f=1;\r\n\t\t}\r\n\t\telse if(s.x+1<R&&map1[s.x][s.y]==0)\r\n\t\t{\r\n\t\t\ts.x++;\r\n\t\t\ts.f=0;\r\n\t\t}\r\n\t\telse if(s.y+1<C&&map2[s.x][s.y]==0)\r\n\t\t{\r\n\t\t\ts.y++;\r\n\t\t\ts.f=3;\r\n\t\t}\r\n\t\telse if(s.x>0&&map1[s.x-1][s.y]==0)\r\n\t\t{\r\n\t\t\ts.x--;\r\n\t\t\ts.f=2;\r\n\t\t}\r\n\r\n\t}\r\n\telse if(s.f==1)\r\n\t{\r\n\t\t if(s.x>0&&map1[s.x-1][s.y]==0)\r\n\t\t{\r\n\t\t\ts.x--;\r\n\t\t\ts.f=2;\r\n\t\t}\r\n\t\telse if(s.y>0&&map2[s.x][s.y-1]==0)\r\n\t\t{\r\n\t\t\ts.y--;\r\n\t\t\ts.f=1;\r\n\t\t}\r\n\t\telse if(s.x+1<R&&map1[s.x][s.y]==0)\r\n\t\t{\r\n\t\t\ts.x++;\r\n\t\t\ts.f=0;\r\n\t\t}\r\n\t\telse if(s.y+1<C&&map2[s.x][s.y]==0)\r\n\t\t{\r\n\t\t\ts.y++;\r\n\t\t\ts.f=3;\r\n\t\t}\r\n\r\n\t}\r\n\r\n\telse if(s.f==2)\r\n\t{\r\n\t\t if(s.y+1<C&&map2[s.x][s.y]==0)\r\n\t\t{\r\n\t\t\ts.y++;\r\n\t\t\ts.f=3;\r\n\t\t}\r\n\t\telse  if(s.x>0&&map1[s.x-1][s.y]==0)\r\n\t\t{\r\n\t\t\ts.x--;\r\n\t\t\ts.f=2;\r\n\t\t}\r\n\t\telse if(s.y>0&&map2[s.x][s.y-1]==0)\r\n\t\t{\r\n\t\t\ts.y--;\r\n\t\t\ts.f=1;\r\n\t\t}\r\n\t\telse if(s.x+1<R&&map1[s.x][s.y]==0)\r\n\t\t{\r\n\t\t\ts.x++;\r\n\t\t\ts.f=0;\r\n\t\t}\r\n\t}\r\n\telse if(s.f==3)\r\n\t{\r\n\t\t if(s.x+1<R&&map1[s.x][s.y]==0)\r\n\t\t{\r\n\t\t\ts.x++;\r\n\t\t\ts.f=0;\r\n\t\t}\r\n\t\t else if(s.y+1<C&&map2[s.x][s.y]==0)\r\n\t\t{\r\n\t\t\ts.y++;\r\n\t\t\ts.f=3;\r\n\t\t}\r\n\t\telse  if(s.x>0&&map1[s.x-1][s.y]==0)\r\n\t\t{\r\n\t\t\ts.x--;\r\n\t\t\ts.f=2;\r\n\t\t}\r\n\t\telse if(s.y>0&&map2[s.x][s.y-1]==0)\r\n\t\t{\r\n\t\t\ts.y--;\r\n\t\t\ts.f=1;\r\n\t\t}\r\n\t}\r\n\t}\r\n}\r\n\r\nvoid solve()\r\n{\r\n\tPoint s=Point(0,ER,0);\t\r\n\tPoint ss=Point(R-1,EC,2);\r\n\tdfs(s,ss);\r\n\tdfs(ss,s);\r\n\tif(num==R*C) puts(\"YES\");\r\n\telse puts(\"NO\");\r\n}\r\nint main()\r\n{\r\n    int Case;\r\n\r\n\tscanf(\"%d\",&Case);\r\n\twhile(Case--)\r\n\t{\r\n\t\tinit();\r\n\t\tsolve();\r\n\t}\r\n    return 0;\r\n}"
},
{
"pid":380,
"code":"\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n\r\n#define MAXV 500\r\n#define MAXE 1000\r\n#define INF 0x7fffffff\r\n\r\nint list[MAXV];\r\nchar s[MAXV];\r\nint f[MAXV + 1][26];\r\nbool equal[MAXV];\r\nint n;\r\n\r\nstruct Edge {\r\n    int ed, next;\r\n} edge[MAXE];\r\n\r\nint head[MAXV], nEdge;\r\n\r\nvoid init() {\r\n    memset(head, 0xff, sizeof(head));\r\n    nEdge = 0;\r\n}\r\n\r\nvoid addEdge(const int a, const int b) {\r\n    edge[nEdge].ed = b;\r\n    edge[nEdge].next = head[a];\r\n    head[a] = nEdge++;\r\n}\r\n\r\nbool find(int cur, int tar){\r\n\tint i, p;\r\n\tif (cur >= n) return false;\r\n\tif (tar >= n) return true;\r\n\tfor (i = head[cur]; ~i; i = edge[cur].next){\r\n\t\tp = edge[i].ed;\r\n\t\tif (p == tar) return true;\r\n\t\treturn find(p, tar);\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nint imin(int a, int b){\r\n\treturn a < b ? a : b;\r\n}\r\n\r\nvoid calc(){\r\n\tint i, j, k;\r\n\tfor (i = 0; i < n - 1; i++){\r\n\t\tequal[i] = find(list[i + 1] + 1, list[i] + 1);\r\n\t}\r\n\tequal[i] = true;\r\n\tfor (i = n - 1; i >= 0; i--){\r\n\t\tfor (j = 0; j < 26; j++){\r\n\t\t\tf[i][j] = n + 1;\r\n\t\t\tfor (k = j + 1 - equal[i]; k < 26; k++){\r\n\t\t\t\tf[i][j] = imin(f[i + 1][k], f[i][j]);\r\n\t\t\t}\r\n\t\t\tif (s[list[i]] != j + 'a') f[i][j]++;\r\n\t\t}\r\n\t}\r\n\r\n\tj = n + 1;\r\n\tfor (i = 0; i < 26; i++)\r\n\t\tj = imin(j, f[0][i]);\r\n\tif (j > n) j = -1;\r\n\tprintf(\"%d\\n\", j);\r\n}\r\n\r\nint main(){\r\n\tint i;\r\n\twhile(scanf(\"%d\", &n) != EOF){\r\n\t\tscanf(\"%s\", s);\r\n\t\tinit();\r\n\t\tmemset(f, 0, sizeof(f));\r\n\t\tmemset(equal, 0, sizeof(equal));\r\n\t\tfor (i = 0; i < n; i++) scanf(\"%d\", &list[i]);\r\n\t\tfor (i = 0; i < n - 1; i++){\r\n\t\t\taddEdge(list[i + 1], list[i]);\r\n\t\t}\r\n\t\tcalc();\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":384,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <memory.h>\r\n#include <cmath>\r\n#define MAXN 300\r\n#define eps 1e-5\r\n#define max(a,b) (a>b?a:b)\r\n#define min(a,b) (a<b?a:b)\r\nusing namespace std;\r\nstruct point {double x,y;};  \r\nstruct point pnt[MAXN],ll[MAXN],rr[MAXN],center;   \r\nint N,M,l_pos,r_pos;  \r\ndouble ans,H;\r\nbool ne;  \r\npoint bcenter(point pnt[], int n)\r\n{   \r\n    point p, s;   \r\n    if(n==1) \r\n        return pnt[0];\r\n    if(n==2)\r\n    {\r\n        s.x=(pnt[0].x+pnt[1].x)\/2;\r\n        s.y=(pnt[0].y+pnt[1].y)\/2;\r\n        return s;\r\n    }\r\n    double tp, area = 0, tpx = 0, tpy = 0;   \r\n    p.x = pnt[0].x; p.y = pnt[0].y;   \r\n    for (int i = 1; i <= n; ++i) \r\n    {     \r\n        s.x = pnt[(i == n) ? 0 : i].x;   \r\n        s.y = pnt[(i == n) ? 0 : i].y;   \r\n        tp = (p.x * s.y - s.x * p.y); area += tp \/ 2;   \r\n        tpx += (p.x + s.x) * tp; tpy += (p.y + s.y) * tp;   \r\n        p.x = s.x; p.y = s.y;   \r\n    }   \r\n    s.x = tpx \/ (6 * area); s.y = tpy \/ (6 * area);   \r\n    return s;   \r\n}  \r\nvoid Print()\r\n{\r\n    int i;\r\n    printf(\"-------------------------------------\\n\");\r\n    for(i=0;i<M;i++)\r\n        printf(\"%.2lf %.2lf\\n\",ll[i].x,ll[i].y);\r\n    for(i=0;i<N;i++)\r\n        printf(\"%.2lf %.2lf\\n\",rr[i].x,rr[i].y);\r\n    printf(\"-------------------------------------\\n\");\r\n}\r\npoint get_point(point c,point a,point b)\r\n{\r\n    point res;\r\n    double dx,dy;\r\n    dx=fabs(a.x-b.x);\r\n    dy=b.y-a.y;\r\n\r\n    res.y=c.y;\r\n    if(fabs(a.x-b.x)<=eps)\r\n        res.x=a.x;\r\n    else\r\n    {\r\n        if(a.x<b.x)\r\n            res.x=dx*(c.y-a.y)*1.0\/dy+a.x;\r\n        else\r\n            res.x=a.x-dx*(c.y-a.y)*1.0\/dy;\r\n    }\r\n    return res;\r\n}\r\nvoid ini()\r\n{\r\n    M=N=0;\r\n    l_pos=r_pos=0;\r\n    ans=H=0;\r\n    memset(pnt,0,sizeof(pnt));\r\n    memset(ll,0,sizeof(ll));\r\n    memset(rr,0,sizeof(rr));\r\n}\r\nvoid Init()\r\n{\r\n    int i;\r\n    ini();\r\n    scanf(\"%d%d\",&M,&N);\r\n    for(i=0;i<M;i++)\r\n        scanf(\"%lf%lf\",&ll[i].x,&ll[i].y);\r\n    for(i=0;i<N;i++)\r\n        scanf(\"%lf%lf\",&rr[i].x,&rr[i].y);\r\n}\r\nbool Judge(point o)\r\n{\r\n\tif((o.x-ll[0].x>=eps)&&(rr[0].x-o.x>=eps))\r\n\t\treturn true;\r\n\treturn false;\r\n}\r\nbool fuck(double mid,int l_pos,int r_pos)\r\n{\r\n    int i;\r\n    point temp,now1,now2;\r\n    temp.x=1;temp.y=mid;\r\n    int cnt=0;\r\n\r\n    if(fabs(ll[l_pos].y-rr[r_pos].y)<=eps)\r\n    {\r\n        for(i=l_pos;i>=0;i--)\r\n            pnt[cnt++]=ll[i];\r\n        for(i=0;i<=r_pos;i++)\r\n            pnt[cnt++]=rr[i];\r\n    }\r\n    else if(ll[l_pos].y<rr[r_pos].y)\r\n    {\r\n        now1=get_point(temp,ll[l_pos],ll[l_pos+1]);\r\n        now2=get_point(temp,rr[r_pos-1],rr[r_pos]);\r\n        pnt[cnt++]=now1;\r\n        for(i=l_pos;i>=0;i--)\r\n            pnt[cnt++]=ll[i];\r\n        for(i=0;i<r_pos;i++)\r\n            pnt[cnt++]=rr[i];\r\n        pnt[cnt++]=now2;\r\n    }\r\n    else\r\n    {\r\n        now1=get_point(temp,ll[l_pos-1],ll[l_pos]);\r\n        now2=get_point(temp,rr[r_pos],rr[r_pos+1]);\r\n        pnt[cnt++]=now1;\r\n        for(i=l_pos-1;i>=0;i--)\r\n            pnt[cnt++]=ll[i];\r\n        for(i=0;i<=r_pos;i++)\r\n            pnt[cnt++]=rr[i];\r\n        pnt[cnt++]=now2;\r\n\r\n    }\r\n    center=bcenter(pnt,cnt);\r\n    return Judge(center);\r\n}\r\n\r\nvoid Solve()\r\n{\r\n    ans=ll[0].y;;\r\n    double l,r,mid;\r\n    int i,cnt;\r\n    point now;\r\n\tl_pos=r_pos=1;\r\n    while(true)\r\n    {\r\n        cnt=0;\r\n        if(l_pos==M||r_pos==N) break;\r\n        if(ll[l_pos].y<=rr[r_pos].y)\r\n        {\r\n            for(i=l_pos;i>=0;i--)\r\n                pnt[cnt++]=ll[i];\r\n            for(i=0;i<r_pos;i++)\r\n                pnt[cnt++]=rr[i];\r\n            now=get_point(ll[l_pos],rr[r_pos-1],rr[r_pos]);\r\n            pnt[cnt++]=now;\r\n            center=bcenter(pnt,cnt);\r\n\r\n            ne=Judge(center);\r\n            if(!ne)\r\n            {\r\n\r\n                l=max(rr[r_pos-1].y,ll[l_pos-1].y);r=ll[l_pos].y;\r\n                while(fabs(l-r)>eps)\r\n                {\r\n                    mid=(l+r)\/2.0;\r\n                    if(fuck(mid,l_pos,r_pos-1))\r\n                        l=mid;\r\n                    else\r\n                        r=mid;\r\n                }\r\n                ans=max(ans,l);\r\n                break;\r\n            }\r\n            else\r\n\t\t\t{\r\n\t\t\t\tans=max(ans,ll[l_pos].y);\r\n\t\t\t\tl_pos++;\r\n\t\t\t}\r\n        }\r\n        else\r\n        {\r\n            now=get_point(rr[r_pos],ll[l_pos-1],ll[l_pos]);\r\n            pnt[cnt++]=now;\r\n\r\n            for(i=l_pos-1;i>=0;i--)\r\n                pnt[cnt++]=ll[i];\r\n            for(i=0;i<=r_pos;i++)\r\n                pnt[cnt++]=rr[i];\r\n            center=bcenter(pnt,cnt);\r\n            ne=Judge(center);\r\n            if(!ne)\r\n            {\r\n                l=max(ll[l_pos-1].y,rr[r_pos-1].y);r=rr[r_pos].y;\r\n                while(fabs(l-r)>eps)\r\n                {\r\n                    mid=(l+r)\/2.0;\r\n                    if(fuck(mid,l_pos-1,r_pos))\r\n                        l=mid;\r\n                    else\r\n                        r=mid;\r\n                }\r\n                ans=max(ans,l);\r\n                break;\r\n            }\r\n            else\r\n\t\t\t{\r\n\t\t\t\tans=max(ans,rr[r_pos].y);\r\n\t\t\t\tr_pos++;\r\n\t\t\t}\r\n        }\r\n    }\r\n    printf(\"%.3lf\\n\",ans);\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        Init();\r\n        Solve();\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":386,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int A,B,C;\r\n    while(scanf(\"%d%d%d\",&A,&B,&C)!=EOF)\r\n    {\r\n        double x=(double)(B+C)\/(A+B+C*2);\r\n        printf(\"%.6lf\\n\",(1-x)*B-x*C);\r\n    }    \r\n    return 0;\r\n}"
},
{
"pid":388,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#include<string>\r\n#include<algorithm>\r\n#include<cmath>\r\n#include<iostream>\r\nusing namespace std;\r\ndouble dis[21][21],dp[1<<21];\r\nint n,fx,fy,mac;\r\nstruct node\r\n{\r\n\tint x,y;\r\n}nd[21];\r\ndouble DIS(double x,double y,double xx,double yy)\r\n{\r\n\treturn sqrt((x-xx)*(x-xx)+(y-yy)*(y-yy));\r\n}\r\nbool cmp(node a,node b)\r\n{\r\n\treturn DIS(a.x,a.y,fx,fy)<DIS(b.x,b.y,fx,fy);\r\n}\r\ndouble DP(int sta)\r\n{\r\n\tif(dp[sta]!=0x7fffffff)\r\n\t\treturn dp[sta];\r\n\tif(sta==0) {dp[0]=0.0;}\r\n\telse\r\n\t{\r\n\t\tint tem=sta,i=0;\r\n\t\tfor(i=0;i<20;i++)\r\n\t\t{\r\n\t\t\tif((1<<i)&sta)break;\r\n\t\t}\r\n\t\tfor(int j=i+1;j<2*n;j++)\r\n\t\t{\r\n\t\t\tif((sta&(1<<j))==0)continue;\r\n\t\t\tdp[sta]=min(DP(sta-(1<<j)-(1<<i))+dis[i][j],dp[sta]);\r\n\t\t}\r\n\t}\r\n\treturn dp[sta];\r\n}\r\nint main()\r\n{\r\n\tint c,ca=0;\r\n\tscanf(\"%d\",&c);\r\n\twhile(c--)\r\n\t{\r\n\t\tca++;\r\n\t\tscanf(\"%d%d\",&fx,&fy);\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i=0;i<2*n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d%d\",&nd[i].x,&nd[i].y);\r\n\t\t}\r\n\t\tsort(nd,nd+2*n,cmp);\r\n\t\tfor(int i=0;i<2*n;i++)\r\n\t\t\tfor(int j=i+1;j<2*n;j++)\r\n\t\t\t{\r\n\t\t\t\tdis[i][j]=DIS(nd[i].x,nd[i].y,fx,fy)+DIS(nd[i].x*1.0,nd[i].y*1.0,nd[j].x*1.0,nd[j].y*1.0);\r\n\t\t\t}\r\n\t\t\tprintf(\"Case #%d: \",ca);\r\n\t\t\tfor(int i=0;i<(1<<2*n);i++)\r\n\t\t\t\tdp[i]=0x7fffffff;\r\n\t\t\tprintf(\"%.2f\\n\",DP((1<<(2*n))-1));\r\n\t}\r\n}"
},
{
"pid":389,
"code":"\n#include <stdio.h>\r\n#include <string.h>\r\n#include <math.h>\r\n#include <algorithm>\r\nusing namespace std;\r\nstruct Point\r\n{\r\n    double x, y;\r\n} node[201];\r\nstruct T_T\r\n{\r\n    int id;\r\n    double dis;\r\n} que[201];\r\ndouble sx, sy;\r\ndouble ans;\r\ndouble dis[201];\r\ndouble map[201][201];\r\nint q[201][201], q2[201][201];\r\nint n;\r\nint m;\r\nbool vis[201];\r\nint ra, rb, rc, rd;\r\ndouble rmin;\r\ndouble rdis;\r\ndouble dist(int i, int j)\r\n{\r\n    return sqrt((node[i].x - node[j].x) * (node[i].x - node[j].x)\r\n                + (node[i].y - node[j].y) * (node[i].y - node[j].y));\r\n}\r\nbool cmp(T_T a, T_T b)\r\n{\r\n    return a.dis < b.dis;\r\n}\r\nvoid init()\r\n{\r\n    for(int i = 0; i < m; i++)  dis[i] = dist(i, m);\r\n    for(int i = 0; i < m; i++)\r\n        for(int j = i + 1; j < m; j++)\r\n            map[i][j] = map[j][i] = dist(i, j);\r\n\r\n    for(int i = 0; i < m; i++)\r\n    {\r\n        int temp = 0;\r\n        for(int j = 0; j < m; j++)\r\n            if(i != j)\r\n            {\r\n                que[temp].id = j;\r\n                que[temp].dis = dis[j] + map[j][i];\r\n                temp++;\r\n            }\r\n        sort(que, que + temp, cmp);\r\n        for(int j = 0; j < temp; j++)\r\n            q[i][j] = que[j].id;\r\n    }\r\n\r\n    for(int i = 0; i < m; i++)\r\n    {\r\n        int temp = 0;\r\n        for(int j = 0; j < m; j++)\r\n            if(i != j)\r\n            {\r\n                que[temp].id = j;\r\n                que[temp].dis = map[i][j];\r\n                temp++;\r\n            }\r\n        sort(que, que + temp, cmp);\r\n        for(int j = 0; j < temp; j++)\r\n            q2[i][j] = que[j].id;\r\n    }\r\n}\r\nvoid solve()\r\n{\r\n    rmin = -1;\r\n    int a, b, c, d;\r\n\r\n    for(b = 0; b < m; b++)\r\n        if(!vis[b])\r\n        {\r\n            for(c = 0; c < m; c++)\r\n                if(!vis[c] && b != c)\r\n                {\r\n                    int t = 0;\r\n                    a = q[b][t];\r\n                    while(vis[a] || a == c)\r\n                    {\r\n                        t++;\r\n                        a = q[b][t];\r\n                    }\r\n\r\n                    t = 0;\r\n                    d = q2[c][t];\r\n                    while(vis[d] || d == a || d == b)\r\n                    {\r\n                        t++;\r\n                        d = q2[c][t];\r\n                    }\r\n\r\n                    double cou = dis[a] + map[a][b] + map[b][c] + map[c][d];\r\n                    double cdis = (dis[a] + dis[b] + dis[c] + dis[d]) \/ 4.0;\r\n                    if(rmin < 0 || cou < rmin || (rmin == cou && cdis < rdis))\r\n                    {\r\n                        rmin = cou;\r\n                        rdis = cdis;\r\n                        ra = a, rb = b, rc = c, rd = d;\r\n                    }\r\n\r\n                    t = 0;\r\n                    d = q2[c][t];\r\n                    while(vis[d] || d == b)\r\n                    {\r\n                        t++;\r\n                        d = q2[c][t];\r\n                    }\r\n\r\n                    t = 0;\r\n                    a = q[b][t];\r\n                    while(vis[a] || a == c || a == d)\r\n                    {\r\n                        t++;\r\n                        a = q[b][t];\r\n                    }\r\n\r\n                    cou = dis[a] + map[a][b] + map[b][c] + map[c][d];\r\n                    cdis = (dis[a] + dis[b] + dis[c] + dis[d]) \/ 4.0;\r\n                    if(rmin < 0 || cou < rmin || (rmin == cou && cdis < rdis))\r\n                    {\r\n                        rmin = cou;\r\n                        rdis = cdis;\r\n                        ra = a, rb = b, rc = c, rd = d;\r\n                    }\r\n                }\r\n        }\r\n\r\n    vis[ra] = 1;\r\n    vis[rb] = 1;\r\n    vis[rc] = 1;\r\n    vis[rd] = 1;\r\n    ans += rmin;\r\n}\r\nint main()\r\n{\r\n    int T;\r\n    int cas = 1;\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%lf%lf\", &sx, &sy);\r\n        scanf(\"%d\", &n);\r\n        m = 4 * n;\r\n        for(int i = 0; i < m; i++)  scanf(\"%lf%lf\", &node[i].x, &node[i].y);\r\n\r\n        node[m].x = sx;\r\n        node[m].y = sy;\r\n\r\n        init();\r\n\r\n        ans = 0;\r\n        memset(vis, 0, sizeof(vis));\r\n        for(int i = 0; i < n; i++)\r\n        {\r\n        solve();\r\n        }\r\n        printf(\"Case #%d: %0.2lf\\n\", cas++, ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":391,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <string.h>\r\n#include <algorithm>\r\n#include <cmath>\r\n#include <vector>\r\nusing namespace std;\r\nconst int mod=1000000007;\r\n\r\nlong long n,c;\r\nlong long fun(long long a,long long b)\r\n{\r\n    long long t=1,y=a;\r\n    for(int i=1;i<=b;i*=2)\r\n    {\r\n        if(b&i)\r\n          t=t*y%mod;\r\n        y=y*y%mod;\r\n    }\r\n    return t;\r\n}\r\nlong long euler(long long a)\r\n{\r\n    long long ans=a;\r\n    for(int i=2;i<=a;i++)\r\n    {\r\n        if(a%i==0)\r\n            ans-=ans\/i;\r\n        while(a%i==0)\r\n            a\/=i;\r\n    }\r\n    if(a>1)\r\n        ans-=ans\/a;\r\n    return ans;\r\n}\r\nlong long Extend_euclid(long long a,long long b,long long &x,long long &y)\r\n{\r\n    long long d=0,t=0;\r\n    if(b==0)\r\n    {\r\n        x=1;\r\n        y=0;\r\n        return a;\r\n    }\r\n    else\r\n    {\r\n        d=Extend_euclid(b,a%b,x,y);\r\n        t=x;\r\n        x=y;\r\n        y=t-a\/b*y;\r\n    }\r\n    return d;\r\n}\r\nlong long Bignum_Div(long long a,long long b)\r\n{\r\n    long long x=0,y=0;\r\n    Extend_euclid(b,mod,x,y);\r\n    long long ans= a*x%mod;\r\n    while(ans<0)\r\n        ans+=mod;\r\n    return ans;\r\n}\r\nint main()\r\n{\r\n\r\n    long long ans=0,t=1,T=0;\r\n    scanf(\"%lld\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%lld %lld\",&c,&n);\r\n        ans=0;\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            if(n%i==0)\r\n            {\r\n                ans+=fun(c,i)*euler(n\/i);\r\n                ans%=mod;\r\n            }\r\n        }\r\n        if(n&1)\r\n        {\r\n            ans+=n*fun(c,n\/2+1);\r\n            ans%=mod;\r\n        }\r\n        else\r\n        {\r\n            ans+=n\/2*( fun(c,n\/2)+fun(c,n\/2+1));\r\n            ans%=mod;\r\n        }\r\n        ans=Bignum_Div(ans,2*n);\r\n        printf(\"Case #%lld: %lld\\n\",t++,ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":393,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nconst int maxn = 100 + 10;\r\n\r\nbool cmp(char *s, int high, int low, char *sub)\r\n{\r\n int j = 0;\r\n for(int i = high; i <= low; i++) if(s[i] != sub[j++]) return 0;\r\n return 1;\r\n}\r\nint cmpp(char *a, char *b) \r\n{\r\n int len_a = strlen(a), len_b = strlen(b), len = min(len_a, len_b), i;\r\n if(len_a != len_b) \r\n {\r\n if(len_a > len_b) return 1;\r\n else return -1;\r\n }\r\n else \r\n {\r\n for(i = 0; i < len; i++)\r\n {\r\n if(a[i] > b[i]) return 1; \r\n if(a[i] < b[i]) return -1; \r\n }\r\n return 0; \r\n }\r\n}\r\nint to_int(char *s, int high, int low) \r\n{\r\n int ret = 0;\r\n for(int i = high; i <= low; i++) ret = ret*10 + s[i]-'0';\r\n return ret;\r\n}\r\nint main()\r\n{\r\n \tint i, j, k, u, v, cnt = 1, T;\r\n \tchar a[maxn], b[maxn], B[maxn], c[maxn], minn[maxn];\r\n \tscanf(\"%d\", &T);\r\n\t while(T--)\r\n \t{\r\n \t\tscanf(\"%s%s\", a, b);\r\n \t\tint len_a = strlen(a), len_b = strlen(b);\r\n \t\tfor(i = 0; i < maxn; i++) minn[i] = '9'; \r\n \t\tfor(i = len_b; i < maxn; i++) b[i] = '0'; b[maxn-1] = 0; \r\n \t\tint bb = to_int(b, 0, len_b-1); \r\n \t\tif(len_a < len_b) \r\n \t\t{\r\n \t\t\tint aa = to_int(a, 0, len_a-1);\r\n \t\t\tprintf(\"Case #%d: %d\\n\", cnt++, bb-aa);\r\n \t\t\tcontinue;\r\n \t\t}\r\n \t\tbool ok = 0; \r\n \t\tfor(i = len_a-len_b; i >= 0; i--) \r\n \t\t{\r\n \t\t\tint aa = to_int(a, i, i+len_b-1);\r\n \t\t\tif(aa == bb) \r\n \t\t\t{\r\n \t\t\t\tok = 1;\r\n \t\t\t\tbreak;\r\n \t\t\t}\r\n \t\t\telse \r\n \t\t\t{\r\n \t\t\t\tfor(u = 0; u < maxn; u++) B[u] = b[u]; \r\n \t\t\t\tfor(j = len_a-1, k = len_a-1-i; j >= i; j--, k--)\r\n \t\t\t\t{\r\n \t\t\t\t\tif(B[k] >= a[j]) c[k] = B[k] - a[j] + '0';\r\n \t\t\t\t\telse \r\n \t\t\t\t\t{\r\n \t\t\t\t\t\tif(k-1 >= 0) B[k-1]--;\r\n \t\t\t\t\t\tc[k] = B[k] + 10 - a[j] + '0';\r\n \t\t\t\t\t}\r\n \t\t\t\t}\r\n \t\t\t\tc[len_a-i] = 0; \r\n \t\t\t\tfor(v = 0; v < len_a-i; v++) if(c[v] != '0') break; \r\n \t\t\t\tif(v != 0) for(u = 0; v <= len_a-i; u++,v++) c[u] = c[v];\r\n \t\t\t\tif(cmpp(c, minn) < 0) for(u = 0; u <= len_a-i; u++) minn[u] = c[u]; \r\n \t\t\t}\r\n \t\t}\r\n \t\tif(ok) printf(\"Case #%d: %d\\n\", cnt++, 0);\r\n \t\telse \r\n \t\t{\r\n \t\t\tfor(u = 0; u < maxn; u++) B[u] = b[u]; \r\n \t\t\tfor(j = len_a-1, k = len_a; j >= 0; j--, k--)\r\n \t\t\t{\r\n \t\t\t\tif(B[k] >= a[j]) c[k] = B[k] - a[j] + '0';\r\n \t\t\t\telse \r\n \t\t\t\t{\r\n \t\t\t\t\tB[k-1]--;\r\n \t\t\t\t\tc[k] = B[k] + 10 - a[j] + '0';\r\n \t\t\t\t}\r\n \t\t\t}\r\n \t\t\tc[0] = B[0]; \r\n \t\t\tc[len_a+1] = 0; \r\n \t\t\tfor(v = 0; v < len_a+1; v++) if(c[v] != '0') break; \r\n \t\t\tif(v != 0) for(u = 0; v <= len_a+1; u++,v++) c[u] = c[v];\r\n \t\t\tif(cmpp(c, minn) == -1) for(u = 0; u <= len_a+1; u++) minn[u] = c[u]; \r\n \t\t\tprintf(\"Case #%d: %s\\n\", cnt++, minn);\r\n \t\t}\r\n \t}\r\n \treturn 0;\r\n}"
},
{
"pid":394,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<string>\r\n#include<climits>\r\n#include<algorithm>\r\nusing namespace std;\r\n#define MAXN 10010\r\nint pre1[MAXN], pre2[MAXN]; \r\nint num1, num2;\r\n\r\nstruct graph \r\n{\r\n\tint son;\r\n\tbool ring;\r\n};\r\ngraph g1[MAXN], g2[MAXN];\r\n\r\nbool cmb(const graph &g1, const graph &g2) \r\n{\r\n\tif(g1.son < g2.son)\r\n\t\treturn true;\r\n\telse if(g1.son == g2.son && g1.ring < g2.ring)\r\n\t\treturn true;\r\n\telse\r\n\t\treturn false;\r\n}\r\n\r\nint find(int x, int pre[]) \r\n{\r\n\treturn x == pre[x] ? x : find(pre[x], pre);\r\n}\r\n\r\nvoid join(int x, int y, int pre[],graph g1[]) \r\n{\r\n\tint root1, root2;\r\n\troot1 = find(x, pre);\r\n\troot2 = find(y, pre);\r\n\tif(root1 == root2)\r\n\t\tg1[root1].ring = true; \r\n\telse\r\n\t{\r\n\t\tif(g1[root1].son >= g1[root2].son)\r\n\t\t{\r\n\t\t\tpre[root2] = root1;\r\n\t\t\tg1[root1].son += g1[root2].son;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tpre[root1] = root2;\r\n\t\t\tg1[root2].son += g1[root1].son;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nbool cmp(int num, graph g1[], graph g2[]) \r\n{\r\n\tsort(g1 + 1, g1 + num + 1, cmb); \r\n\tsort(g2 + 1, g2 + num + 1, cmb);\r\n\tfor(int i = 1; i <= num; ++i)\r\n\t\tif(g1[i].son != g2[i].son || (g1[i].son == g2[i].son && g1[i].ring != g2[i].ring))\r\n\t\t\treturn false;\r\n\treturn true;\r\n}\r\n\r\nint main()\r\n{\r\n\tint ncase, T = 0;\r\n\tint link1, link2;\r\n\tint hand1, hand2;\r\n\tint ans1, ans2;\r\n\tbool flag;\r\n\tscanf(\"%d\", &ncase);\r\n\twhile(ncase--)\r\n\t{\r\n\t\tflag = true;\r\n\t\tscanf(\"%d%d\", &num1, &link1);\r\n\t\tfor(int i = 1; i < MAXN; ++i)\r\n\t\t{\r\n\t\t\tpre1[i] = i;\r\n\t\t\tpre2[i] = i;\r\n\t\t\tg1[i].son = 1;\r\n\t\t\tg2[i].son = 1;\r\n\t\t\tg1[i].ring = false;\r\n\t\t\tg2[i].ring = false;\r\n\t\t}\r\n\t\tfor(int i = 1; i <= link1; ++i)\r\n\t\t{\r\n\t\t\tscanf(\"%d%d\", &hand1, &hand2);\r\n\t\t\tjoin(hand1, hand2, pre1, g1);\r\n\t\t}\r\n\t\tscanf(\"%d%d\", &num2, &link2);\r\n\t\tif(link2 != link1) \r\n\t\t\tflag = false;\r\n\t\tfor(int i = 1; i <= link2; ++i)\r\n\t\t{\r\n\t\t\tscanf(\"%d%d\", &hand1, &hand2);\r\n\t\t\tif(flag == false)\r\n\t\t\t\tcontinue;\r\n\t\t\telse\r\n\t\t\t\tjoin(hand1, hand2, pre2, g2);\r\n\t\t}\r\n\t\tflag = cmp(num2, g1, g2);\r\n\t\tif(flag == false)\r\n\t\t\tprintf(\"Case #%d: NO\\n\", ++T);\r\n\t\telse\r\n\t\t{\r\n\t\t\tif(flag)\r\n\t\t\t\tprintf(\"Case #%d: YES\\n\", ++T);\r\n\t\t\telse\r\n\t\t\t\tprintf(\"Case #%d: NO\\n\", ++T);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":396,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\n#include <functional>\r\n#define Maxn 100\r\n#define inf 1<<30\r\nusing namespace std;\r\n\r\nint T, n, f[Maxn][Maxn], out[Maxn][Maxn];\r\nint le[Maxn], ri[Maxn];\r\n\r\nint dfs(int x, int y)\r\n{\r\n     if (f[x][y] != -1) return f[x][y];\r\n     if (out[x][y] == 1) return f[x][y] = 0;\r\n\r\n     int t1, t2, t3, tmp = inf;\r\n     for (int i=1; i<=n; i++)\r\n     {\r\n         t1 = t2 = t3 = -inf;\r\n         int x1 = x, yy1 = min(le[i]-1, y);  \r\n         if (yy1 == y) continue;\r\n         if (x1 <= yy1 && out[x1][yy1]) t1 = dfs(x1, yy1);\r\n\r\n         int x2 = max(le[i]+1, x), y2 = min(ri[i]-1, y);  \r\n         if (x2 == x && y2 == y) continue;     \r\n         if (x2 <= y2 && out[x2][y2]) t2 = dfs(x2, y2);\r\n\r\n         int x3 = max(ri[i], x), y3 = y;     \r\n         if (x3 == x) continue;         \r\n         if (x3 <= y3 && out[x3][y3]) t3 = dfs(x3, y3); \r\n\r\n         tmp = min(tmp, max(t1,max(t2, t3)));         \r\n     }\r\n     return f[x][y] = tmp + 1;\r\n     }\r\nint main()\r\n{\r\n    int k;\r\n    scanf(\"%d\", &T);\r\n    for (int t=1; t<=T; t++)\r\n    {\r\n        memset(le, -1, sizeof(le));\r\n        memset(f, -1, sizeof(f));\r\n        memset(out, 0, sizeof(out));\r\n\r\n        scanf(\"%d\", &n);\r\n        for (int i=1; i<=2*n; i++)\r\n        {\r\n            scanf(\"%d\", &k);  \r\n            if (le[k] == -1) le[k] = i;\r\n            else ri[k] = i; \r\n        }\r\n\r\n        for (int i=1; i<=2*n; i++)\r\n          for (int j=i; j<=2*n; j++)\r\n            for (int p=1; p<=n; p++)\r\n            if (ri[p] <= j && ri[p] >= i) out[i][j]++;\r\n\r\n        printf(\"Case #%d: %d\\n\", t, dfs(2, 2*n));\r\n    }\r\n\r\n    return 0;\r\n}"
},
{
"pid":399,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int m,n;  \r\n    while(~scanf(\"%d%d\",&m,&n))  \r\n    {  \r\n        printf(\"%d\\n\",m\/n);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":400,
"code":"\n#include <stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int m;  \r\n    scanf(\"%d\",&m);  \r\n    while (m--)  \r\n    {  \r\n        char a[110],b[110];  \r\n        int sum = 0,i;  \r\n        scanf(\"%s %s\",a,b);  \r\n        for (i=0; a[i] != 0; i++)  \r\n        {  \r\n            sum += a[i] - '0';  \r\n        }  \r\n        for (i=0; b[i] != 0; i++)  \r\n        {  \r\n            sum += b[i] - '0';  \r\n        }  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":401,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int s,n,m,count=1;  \r\n    scanf(\"%d\",&s);  \r\n    while(s--)  \r\n    {  \r\n        scanf(\"%d %d\",&n,&m);  \r\n        if(n<=m||(m==1&&n%2!=0))  \r\n        {  \r\n            printf(\"Case %d: first\\n\",count++);  \r\n        }  \r\n        else  \r\n        {  \r\n            printf(\"Case %d: second\\n\",count++);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":402,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <algorithm>\r\nusing namespace std;\r\nconst double eps = 1e-8;\r\nconst double pi = acos(-1.0);\r\nstruct Point {\r\n    double x, y;\r\n    Point operator - (const Point& t) const {\r\n        Point tmp;\r\n        tmp.x = x - t.x;\r\n        tmp.y = y - t.y;\r\n        return tmp;\r\n    }\r\n    Point operator + (const Point& t) const {\r\n        Point tmp;\r\n        tmp.x = x + t.x;\r\n        tmp.y = y + t.y;\r\n        return tmp;\r\n    }\r\n    bool operator == (const Point& t) const {\r\n        return fabs(x-t.x) < eps && fabs(y-t.y) < eps;\r\n    }\r\n}; \r\nstruct pol{\r\n    Point node[11];\r\n    int num;\r\n}P[11];\r\ninline double Cross(Point a, Point b, Point c) {                   \r\n    return (b.x-a.x)*(c.y-a.y) - (c.x-a.x)*(b.y-a.y); \r\n}\r\nbool dotOnSeg(Point p, Point s, Point e) {                            \r\n    if ( p == s || p == e )        \r\n        return true;\r\n    return Cross(p,s,e) < eps && \r\n        (p.x-s.x)*(p.x-e.x)<eps && (p.y-s.y)*(p.y-e.y)<eps;\r\n}\r\nstruct Line {\r\n    double a, b, c;\r\n};\r\nLine Turn(Point s, Point e) {                                       \r\n    Line ln;\r\n    ln.a = s.y - e.y;\r\n    ln.b = e.x - s.x;\r\n    ln.c = s.x*e.y - e.x*s.y;\r\n    return ln;\r\n}\r\nbool Line_Inst(Line l1, Line l2, Point &p) {                        \r\n    double d = l1.a*l2.b - l2.a*l1.b;\r\n    if ( fabs(d) < eps )    return false;\r\n    p.x = (-l1.c*l2.b + l2.c*l1.b) \/ d;\r\n    p.y = (-l1.a*l2.c + l2.a*l1.c) \/ d;\r\n    return true; \r\n}\r\nint main()\r\n{\r\n    int t,i,j,k,cases=1;\r\n    scanf(\"%d\",&t);\r\n    int x,y,m,n,ans;\r\n    while(t--)\r\n    {\r\n         scanf(\"%d\",&n);\r\n\r\n         for(i=1;i<=n;i++)\r\n         {\r\n             scanf(\"%d\",&P[i].num);\r\n             for(j=1;j<=P[i].num;j++)\r\n                  scanf(\"%lf%lf\",&P[i].node[j].x,&P[i].node[j].y);\r\n         }\r\n     if(n<=2){ printf(\"Case %d: %d\\n\",cases++,n);continue;}\r\n     Point p;\r\n     int max=0;\r\n         for(i=1;i<=n;i++)\r\n         {\r\n             for(j=i+1;j<=n;j++)\r\n             {\r\n                 for(k=1;k<=P[i].num;k++)\r\n                 {\r\n                     for(m=1;m<=P[j].num;m++)\r\n                     {   \r\n                         ans=2;                   \r\n                         Line a=Turn(P[i].node[k],P[j].node[m]) ;\r\n                         for(x=1;x<=n;x++)\r\n                         {\r\n                             if(x==i||x==j) continue;\r\n                             for(y=1;y<P[x].num;y++)\r\n                             {\r\n                                 Line b=Turn(P[x].node[y],P[x].node[y+1]);\r\n                                 if(Line_Inst(a,b,p)&&dotOnSeg(p,P[x].node[y],P[x].node[y+1]))    \r\n                                 {\r\n                                     ans++;\r\n                                     break;\r\n                                 }\r\n                             }\r\n                         }\r\n                         if(ans>max) max=ans;\r\n                     }\r\n                 }\r\n             }\r\n         }\r\n         printf(\"Case %d: %d\\n\",cases++,max);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":403,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<map>  \r\n#include<algorithm>  \r\n#define LL long long  \r\nusing namespace std;  \r\nint sum[15],n,k,q;  \r\nstruct Line{  \r\n    int left,right,mid;  \r\n    int exp,level;  \r\n    int min_dist,lazy;    \r\n}L[50005];  \r\nvoid bulid(int step,int l,int r){  \r\n    L[step].left=l;  \r\n    L[step].right=r;  \r\n    L[step].mid=(l+r)\/2;  \r\n    L[step].min_dist=sum[1];      \r\n    L[step].exp=0;          \r\n    L[step].level=1;        \r\n    L[step].lazy=0;  \r\n    if(l==r)  \r\n        return;  \r\n    bulid(2*step,l,(l+r)\/2);  \r\n    bulid(2*step+1,(l+r)\/2+1,r);  \r\n}  \r\nvoid PushDown(int step){  \r\n    L[2*step].exp+=L[step].lazy*L[2*step].level;  \r\n    L[2*step].min_dist-=L[step].lazy;  \r\n    L[2*step].lazy+=L[step].lazy;  \r\n\r\n    L[2*step+1].exp+=L[step].lazy*L[2*step+1].level;  \r\n    L[2*step+1].min_dist-=L[step].lazy;  \r\n    L[2*step+1].lazy+=L[step].lazy;  \r\n\r\n    L[step].lazy=0;  \r\n}  \r\nvoid PushUp(int step){  \r\n    L[step].exp=max(L[2*step].exp,L[2*step+1].exp);  \r\n    L[step].level=max(L[2*step].level,L[2*step+1].level);  \r\n    L[step].min_dist=min(L[2*step].min_dist,L[2*step+1].min_dist);  \r\n}  \r\nvoid update(int step,int l,int r,int e){  \r\n    if(L[step].left==L[step].right){  \r\n        L[step].exp+=L[step].level*e;     \r\n        while(L[step].exp>=sum[L[step].level])  \r\n            L[step].level++;  \r\n        L[step].min_dist=(sum[L[step].level]-L[step].exp)\/L[step].level+((sum[L[step].level]-L[step].exp)%L[step].level!=0);  \r\n        return ;  \r\n    }  \r\n    if(L[step].left==l&&L[step].right==r){   \r\n        if(e>=L[step].min_dist){  \r\n            PushDown(step);  \r\n            update(2*step,l,(l+r)\/2,e);  \r\n            update(2*step+1,(l+r)\/2+1,r,e);   \r\n            PushUp(step);  \r\n        }  \r\n        else{  \r\n            L[step].exp+=L[step].level*e;  \r\n            L[step].min_dist-=e;  \r\n            L[step].lazy+=e;  \r\n        }  \r\n        return ;  \r\n    }  \r\n    if(L[step].lazy)  \r\n        PushDown(step);  \r\n    if(r<=L[step].mid)  \r\n        update(2*step,l,r,e);  \r\n    else if(l>L[step].mid)  \r\n        update(2*step+1,l,r,e);  \r\n    else{  \r\n        update(2*step,l,L[step].mid,e);  \r\n        update(2*step+1,L[step].mid+1,r,e);  \r\n    }  \r\n    PushUp(step);  \r\n}  \r\nint query(int step,int l,int r){  \r\n    if(L[step].left==l&&L[step].right==r)  \r\n        return L[step].exp;  \r\n    if(L[step].lazy)  \r\n        PushDown(step);  \r\n    if(r<=L[step].mid)  \r\n        return query(2*step,l,r);  \r\n    else if(l>L[step].mid)  \r\n        return query(2*step+1,l,r);  \r\n    else  \r\n        return max(query(2*step,l,L[step].mid),query(2*step+1,L[step].mid+1,r));  \r\n}  \r\nint main(){  \r\n    int t,cas=0;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--){  \r\n        scanf(\"%d%d%d\",&n,&k,&q);  \r\n        for(int i=1;i<k;i++)  \r\n            scanf(\"%d\",&sum[i]);  \r\n        sum[k]=1<<30;    \r\n        printf(\"Case %d:\\n\",++cas);  \r\n        bulid(1,1,n);  \r\n        while(q--){  \r\n            char str[10];  \r\n            int x,y,e;  \r\n            scanf(\"%s\",str);  \r\n            if(str[0]=='W'){  \r\n                scanf(\"%d%d%d\",&x,&y,&e);  \r\n                update(1,x,y,e);  \r\n            }  \r\n            else{  \r\n                scanf(\"%d%d\",&x,&y);  \r\n                printf(\"%d\\n\",query(1,x,y));  \r\n            }  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":404,
"code":"\n# include<stdio.h>\r\n# include<string.h>\r\n# include<stdlib.h>\r\n# include<queue>\r\n# define N 105 \r\nusing namespace std; \r\nint n,m,MP; \r\nbool map[N][N][10]; \r\nbool visit[N][N]; \r\nint x0,y0,endx,endy; \r\nint dir1[6][2]={-1,1, 0,1, 1,1, 1,0, 0,-1, -1,0};\r\nint dir2[6][2]={-1,0, 0,1, 1,0, 1,-1, 0,-1, -1,-1};\r\nstruct node{\r\n    int x,y;\r\n    int sum;\r\n    bool operator<(const node &b) const\r\n    {\r\n        return b.sum <  sum; \r\n    } \r\n};\r\nint MIN(int a,int b)\r\n{\r\n    return a<b?a:b;\r\n}\r\nbool is(int xx,int yy)\r\n{\r\n    if(xx<0 || xx>=n || yy<0 || yy>=m) return 0;\r\n    return 1; \r\n} \r\nbool is1(int xx,int yy)\r\n{\r\n    int i,x1,y1; \r\n    if(xx%2==1)\r\n    {\r\n        for(i=0;i<6;i++)\r\n        {\r\n            x1=xx+dir1[i][0];\r\n            y1=yy+dir1[i][1];\r\n            if(is(x1,y1) && map[x1][y1][3]) return 1; \r\n        } \r\n        return 0; \r\n    } \r\n    else\r\n    {\r\n        for(i=0;i<6;i++)\r\n        {\r\n            x1=xx+dir2[i][0];\r\n            y1=yy+dir2[i][1];\r\n            if(is(x1,y1) && map[x1][y1][3]) return 1; \r\n        } \r\n        return 0;\r\n    } \r\n} \r\nint bfs()\r\n{\r\n    priority_queue<node>q;\r\n    node cur,next;\r\n    int i,cost,remain;\r\n    cur.x=x0;\r\n    cur.y=y0;\r\n    cur.sum=0;\r\n    while(!q.empty()) q.pop(); \r\n    q.push(cur); \r\n    while(!q.empty())\r\n    {\r\n        cur=q.top();\r\n        q.pop();\r\n        remain=MP-cur.sum%MP;\r\n        if(cur.x==endx && cur.y==endy) \r\n        {\r\n            if(remain==MP) return cur.sum\/MP;\r\n            else return cur.sum\/MP+1; \r\n        } \r\n        if(visit[cur.x][cur.y]) continue;\r\n        visit[cur.x][cur.y]=1; \r\n        for(i=0;i<6;i++)\r\n        {\r\n            if(cur.x%2==1)\r\n            {\r\n                next.x=cur.x+dir1[i][0];\r\n                next.y=cur.y+dir1[i][1]; \r\n            } \r\n            else\r\n            {\r\n                next.x=cur.x+dir2[i][0];\r\n                next.y=cur.y+dir2[i][1]; \r\n            } \r\n            if(!(is(next.x,next.y)) || map[next.x][next.y][3]) continue;\r\n            if(is1(cur.x,cur.y) && is1(next.x,next.y)) \r\n            {\r\n                next.sum=cur.sum+remain;\r\n                q.push(next);\r\n            }\r\n            else if(map[cur.x][cur.y][2] && map[next.x][next.y][2])\r\n            {\r\n                next.sum=cur.sum+1;\r\n                q.push(next);\r\n            }\r\n            else if(map[cur.x][cur.y][i+4])\r\n            {\r\n                next.sum=cur.sum+remain;\r\n                q.push(next);\r\n            }\r\n            else \r\n            {\r\n                if(map[next.x][next.y][0]) cost=1;\r\n                else cost=2;\r\n                cost *=4;\r\n                next.sum=cur.sum+MIN(cost,remain);\r\n                q.push(next);\r\n            }\r\n        } \r\n    } \r\n    return -1;\r\n} \r\nint main()\r\n{\r\n    int i,j,ncase,t,k;\r\n    int a[10],ans;\r\n    a[0]=1;\r\n    for(i=1;i<10;i++)\r\n    a[i]=a[i-1]*2; \r\n    scanf(\"%d\",&ncase);\r\n    for(t=1;t<=ncase;t++)\r\n    {\r\n        scanf(\"%d%d%d\",&n,&m,&MP);\r\n        MP*=4;\r\n        memset(map,0,sizeof(map)); \r\n        for(i=0;i<n;i++)\r\n        for(j=0;j<m;j++)\r\n        { \r\n            scanf(\"%d\",&ans); \r\n            for(k=9;k>=0;k--)\r\n            if(ans>=a[k])\r\n            {\r\n                map[i][j][k]=1;\r\n                ans-=a[k]; \r\n            }  \r\n        } \r\n        scanf(\"%d%d%d%d\",&x0,&y0,&endx,&endy); \r\n        memset(visit,0,sizeof(visit)); \r\n        printf(\"Case %d: %d\\n\",t,bfs()); \r\n    } \r\n    return 0; \r\n}"
},
{
"pid":406,
"code":"\n# include<stdio.h>\r\n# include<string.h>\r\n# define cc 100\r\n# define rr 60\r\n# define V 6000\r\nint U[V],D[V];\r\nint L[V],R[V];\r\nint C[V],ROW[V];\r\nint H[rr],S[cc];\r\nint mark[rr],visit[27],size,ak;\r\nstruct node{\r\n    int m;\r\n    int num1,num2;\r\n    int a[11][2],b[11][2];\r\n}s[27];\r\nvoid Link(int r,int c)\r\n{\r\n    S[c]++;\r\n    C[size]=c;\r\n    ROW[size]=r;\r\n    U[size]=U[c];D[U[c]]=size;\r\n    D[size]=c;U[c]=size;\r\n    if(H[r]==-1) H[r]=L[size]=R[size]=size;\r\n    else\r\n    {\r\n        L[size]=L[H[r]];R[L[H[r]]]=size;\r\n        R[size]=H[r];L[H[r]]=size;\r\n    }\r\n    size++;\r\n}\r\nvoid remove(int c)\r\n{\r\n    int i;\r\n    for(i=D[c];i!=c;i=D[i])\r\n    {\r\n        L[R[i]]=L[i];\r\n        R[L[i]]=R[i];\r\n    }\r\n}\r\nvoid resume(int c)\r\n{\r\n    int i;\r\n    for(i=U[c];i!=c;i=U[i])\r\n        L[R[i]]=R[L[i]]=i;\r\n}\r\nint h()\r\n{\r\n    int i,j,k,count=0;\r\n    bool hash[cc];\r\n    memset(hash,0,sizeof(hash));\r\n    for(i=R[0];i;i=R[i])\r\n    {\r\n        if(hash[i]) continue;\r\n        hash[i]=1;\r\n        count++;\r\n        for(j=D[i];j!=i;j=D[j])\r\n            for(k=R[j];k!=j;k=R[k])\r\n                hash[C[k]]=1;\r\n    }\r\n    return count;\r\n}\r\nvoid Dance(int k)\r\n{\r\n    int j,i,c,Min;\r\n    if(k+h()>=ak) return;\r\n    if(!R[0]) \r\n    {\r\n        if(k<ak) ak=k;\r\n        return;\r\n    }\r\n    for(Min=rr,i=R[0];i;i=R[i])\r\n        if(Min>S[i]) Min=S[i],c=i;\r\n    for(i=D[c];i!=c;i=D[i])\r\n    {\r\n        if(visit[mark[ROW[i]]]) continue;\r\n        visit[mark[ROW[i]]]=1;\r\n        remove(i);\r\n        for(j=R[i];j!=i;j=R[j])\r\n            remove(j);\r\n        Dance(k+1);\r\n        for(j=L[i];j!=i;j=L[j])\r\n            resume(j);\r\n        resume(i);\r\n        visit[mark[ROW[i]]]=0;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int i,j,ncase,t,n,sum[26],number,mob,k,c,r;\r\n    scanf(\"%d\",&ncase);\r\n    for(t=1;t<=ncase;t++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        sum[0]=1;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&s[i].m);\r\n            scanf(\"%d\",&s[i].num1);\r\n            for(k=0;k<s[i].num1;k++)\r\n                scanf(\"%d%d\",&s[i].a[k][0],&s[i].a[k][1]);\r\n            if(s[i].m==2)\r\n            {\r\n                scanf(\"%d\",&s[i].num2);\r\n                for(k=0;k<s[i].num2;k++)\r\n                    scanf(\"%d%d\",&s[i].b[k][0],&s[i].b[k][1]);\r\n            }\r\n            sum[i+1]=sum[i]+s[i].m;\r\n        }\r\n        c=sum[n]-1;\r\n        for(i=0;i<=c;i++)\r\n        {\r\n            S[i]=0;\r\n            U[i]=D[i]=i;\r\n            L[i+1]=i;R[i]=i+1;\r\n        }R[c]=0;\r\n        size=c+1;\r\n        r=0;\r\n        memset(H,-1,sizeof(H));\r\n        for(i=0;i<n;i++)\r\n        {\r\n            r++;\r\n            mark[r]=i;\r\n            for(j=0;j<s[i].num1;j++)\r\n            {\r\n                number=s[i].a[j][0];\r\n                mob=s[i].a[j][1];\r\n                Link(r,sum[number]+mob);\r\n            }\r\n            for(j=0;j<s[i].m;j++)\r\n                Link(r,sum[i]+j);\r\n            if(s[i].m==2)\r\n            {\r\n                r++;\r\n                mark[r]=i;\r\n                for(j=0;j<s[i].num2;j++)\r\n                {\r\n                    number=s[i].b[j][0];\r\n                    mob=s[i].b[j][1];\r\n                    Link(r,sum[number]+mob);\r\n                }\r\n                for(j=0;j<s[i].m;j++)\r\n                    Link(r,sum[i]+j);\r\n            }\r\n        }\r\n        memset(visit,0,sizeof(visit));\r\n        ak=n;\r\n        Dance(0);\r\n        printf(\"Case %d: %d\\n\",t,ak);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":408,
"code":"\n#include<stdio.h>\r\nlong long gcd(long long a,long long b)\r\n{\r\n\tif(b==0) return a;\r\n\treturn gcd(b,a%b);\r\n}\r\nint main()\r\n{\r\n\tint s,m,n,i,j,count=1;\r\n\tlong long sum,t;\r\n\tscanf(\"%d\",&s);\r\n\twhile(s--)\r\n\t{\r\n\t\tsum=1;\r\n\t\tscanf(\"%d %d\",&n,&m);\r\n\t\tfor(i=1;i<=110;i++)\r\n\t\t{\r\n\t\t\tsum=sum*m;\r\n\t\t\tif(sum>=n) break;\r\n\t\t}\r\n\t\tsum=sum*i;\r\n\t\tt=gcd(sum,n);\r\n\t\tsum=sum\/t;n=n\/t;\r\n\t\tprintf(\"Case %d: %lld\/%d\\n\",count++,sum,n);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":409,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <ctype.h>  \r\n#include <stack>  \r\n#define N 1050  \r\n\r\nusing namespace std;  \r\n\r\nchar s[N];  \r\nstack<double>Num;         \r\nstack<char>Ope;               \r\n\r\ndouble JieXi();  \r\ndouble JiSuan();  \r\n\r\nvoid To_Prefix(){           \r\n    char n[N * 3] = {\"\\0\"};              \r\n    int len = strlen(s), ni = 0;          \r\n\r\n    for(int i = len - 2; i >= 0; i --){          \r\n        if(isdigit(s[i]) || s[i] == '.'){         \r\n            n[ni ++] = s[i];  \r\n        }  \r\n        else{  \r\n            if(ni != 0 && n[ni - 1] != ' '){    \r\n                n[ni ++] = ' ';  \r\n            }  \r\n            switch(s[i]){  \r\n                case '+':                       \r\n                case '-':  \r\n                    while(!Ope.empty() && (Ope.top() ==  '*' || Ope.top() == '\/')){  \r\n                        n[ni ++] = Ope.top();  \r\n                        n[ni ++] = ' ';  \r\n                        Ope.pop();  \r\n                    }  \r\n                    break;  \r\n                case '*':                        \r\n                case '\/':  \r\n                case ')':  \r\n                    break;  \r\n                case '(':                       \r\n                    while(Ope.top() != ')'){  \r\n                        n[ni ++] = Ope.top();  \r\n                        n[ni ++] = ' ';  \r\n                        Ope.pop();  \r\n                    }  \r\n                    Ope.pop();  \r\n                    break;  \r\n            }  \r\n\r\n            if(s[i] != '('){                     \r\n                Ope.push(s[i]);  \r\n            }  \r\n        }  \r\n    }  \r\n\r\n    while(n[ni - 1] == ' '){                   \r\n        ni --;  \r\n    }  \r\n    while(!Ope.empty()){                         \r\n        n[ni ++] = ' ';  \r\n        n[ni ++] = Ope.top();  \r\n        Ope.pop();  \r\n    }  \r\n    for(int i = ni - 1; i >= 0; i --){          \r\n        printf(\"%c\", n[i]);  \r\n    }  \r\n    printf(\" =\\n\");  \r\n}  \r\n\r\nvoid To_Postfix(){           \r\n    for(int i = 0; ; i ++){  \r\n        if(isdigit(s[i]) || s[i] == '.'){         \r\n            printf(\"%c\", s[i]);  \r\n        }  \r\n        else{  \r\n            if(i > 0 && isdigit(s[i - 1])){      \r\n                printf(\" \");  \r\n            }  \r\n\r\n            switch(s[i]){  \r\n                case '(':                       \r\n                    break;  \r\n                case ')':                       \r\n                    while(Ope.top() != '('){  \r\n                        printf(\"%c \", Ope.top());  \r\n                        Ope.pop();  \r\n                    }  \r\n                    Ope.pop();                  \r\n                    break;  \r\n                case '+':                       \r\n                case '-':  \r\n                case '=':  \r\n                    while(!Ope.empty() && Ope.top() != '('){  \r\n                        printf(\"%c \", Ope.top());  \r\n                        Ope.pop();  \r\n                    }  \r\n                    break;  \r\n                case '*':                        \r\n                case '\/':  \r\n                    while(!Ope.empty() && (Ope.top() == '*' || Ope.top() == '\/')){  \r\n                        printf(\"%c \", Ope.top());  \r\n                        Ope.pop();  \r\n                    }  \r\n                    break;        \r\n            }  \r\n\r\n            if(s[i] == '='){  \r\n                printf(\"=\\n\");  \r\n                break;  \r\n            }  \r\n            else{  \r\n                if(s[i] != ')'){                 \r\n                    Ope.push(s[i]);  \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\n\r\nint main(){  \r\n    int loop;  \r\n    scanf(\"%d\", &loop);  \r\n    while(loop --){  \r\n        scanf(\" %s\", s);  \r\n\r\n        To_Prefix();                \r\n        To_Postfix();               \r\n\r\n        double ans = JieXi();       \r\n        printf(\"%.2lf\\n\", ans);  \r\n    }  \r\n\r\n    return 0;  \r\n}  \r\n\r\ndouble JieXi(){                \r\n    int i = -1, ni = 0;           \r\n    char num[100] = {\"\\0\"};     \r\n    double ans = 0;               \r\n\r\n    while(1){  \r\n        i ++;  \r\n\r\n        if(isdigit(s[i]) || s[i] == '.'){                  \r\n            num[ni ++] = s[i];  \r\n        }  \r\n        else{                                            \r\n            if(ni != 0){                                   \r\n                sscanf(num, \"%lf\", &ans);  \r\n                Num.push(ans);  \r\n                memset(num, '\\0', sizeof(num));        \r\n                ni = 0;  \r\n            }  \r\n\r\n            switch(s[i]){                                  \r\n                case '+':  \r\n                case '-':  \r\n                case '=':  \r\n                    while(!Ope.empty() && Ope.top() != '('){        \r\n                        ans = JiSuan();  \r\n                        Num.push(ans);                             \r\n                    }  \r\n                    break;  \r\n                case '*':  \r\n                case '\/':  \r\n                    while(!Ope.empty() && (Ope.top() == '*' || Ope.top() == '\/')){  \r\n                        ans = JiSuan();  \r\n                        Num.push(ans);  \r\n                    }  \r\n                    break;  \r\n                case ')':  \r\n                    while(Ope.top() != '('){           \r\n                        ans = JiSuan();  \r\n                        Num.push(ans);  \r\n                    }  \r\n                    Ope.pop();                           \r\n                    break;  \r\n                case '(':                              \r\n                    break;  \r\n            }  \r\n\r\n            if(s[i] == '='){  \r\n                Num.pop();                      \r\n                break;                            \r\n            }  \r\n            else{  \r\n                if(s[i] != ')'){                \r\n                    Ope.push(s[i]);  \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n\r\n    return ans;   \r\n}  \r\n\r\ndouble JiSuan(){                   \r\n    double b = Num.top();  \r\n    Num.pop();  \r\n    double a = Num.top();  \r\n    Num.pop();  \r\n    char c = Ope.top();  \r\n    Ope.pop();  \r\n\r\n    switch(c){  \r\n        case '+':  \r\n            return a + b;  \r\n        case '-':  \r\n            return a - b;  \r\n        case '*':  \r\n            return a * b;  \r\n        case '\/':  \r\n            return a \/ b;  \r\n    }  \r\n}"
},
{
"pid":410,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{   int i,j,c,k,l,n,m;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        c=0;  \r\n        for(i=0;;i++)  \r\n        {   l=1+c*10;  \r\n            c=l%n;  \r\n            if(!c)  \r\n            {k=i+1;break;}  \r\n        }  \r\n        printf(\"%d\\n\",k);  \r\n    }return 0;  \r\n}"
},
{
"pid":411,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\n#include<math.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int a[71]={220,1184,2620,5020,6232,10744,12285,17296,66928,67095,63020,69615,79750,122368,100485,122265,141664,142310,171856,176272,196724,185368,280540,308620,356408,319550,437456,469028,503056,522405,643336,600392,609928,624184,635624,667964,726104,802725,879712,898216,998104,1077890,947835,1154450,1185376,1156870,1280565,1175265,1392368,1328470,1358595,1511930,1466150,1468324,1798875,1669910,2082464,2236570,2723792,2739704,2652728,2802416,2728726,2803580,3276856,3606850,3805264,3786904,4238984,4259750,4246130};\r\n    int b[71]={284,1210,2924,5564,6368,10856,14595,18416,66992,71145,76084,87633,88730,123152,124155,139815,153176,168730,176336,180848,202444,203432,365084,389924,399592,430402,455344,486178,514736,525915,652664,669688,686072,691256,712216,783556,796696,863835,901424,980984,1043096,1099390,1125765,1189150,1286744,1292570,1340235,1438983,1464592,1483850,1486845,1598470,1747930,1749212,1870245,2062570,2090656,2429030,2874064,2928136,2941672,2947216,3077354,3716164,3721544,3892670,4006736,4300136,4314616,4445050,4488910};\r\n    int l,r;\r\n    while(scanf(\"%d%d\",&l,&r)!=EOF)\r\n    {\r\n        int sum=0,i;\r\n        for(i=0;i<71;i++)\r\n        {\r\n            if(l<=a[i]&&b[i]<=r)\r\n            sum++;\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":412,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cmath>  \r\n#include <bitset>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n   int  x,b,t,c,m,r;  \r\n   while(scanf(\"%d\",&x)!=EOF)  \r\n   {  \r\n      b=x&(-x);\r\n      t=x+b;\r\n      c=x^t;      \r\n      m=(c>>2)\/b; \r\n      r=t|m;      \r\n\r\n      printf(\"%d\\n\",r);  \r\n   }  \r\n}"
},
{
"pid":413,
"code":"\n#include <iostream>  \r\n#include <string.h>  \r\n#include <cstdio>  \r\nusing namespace std;  \r\nlong long sum[35000],a[35000];  \r\nvoid chushihua(){  \r\n  sum[1]=1;a[1]=1;  \r\n  for(int i=2;i<=9;++i){  \r\n    sum[i]=sum[i-1]+a[1]+(i-1);  \r\n    a[i]=sum[i]-sum[i-1];  \r\n  }  \r\n  for(int i=10;i<=99;++i){  \r\n    sum[i]=sum[i-1]+a[9]+(i-9)*2;  \r\n    a[i]=sum[i]-sum[i-1];  \r\n  }  \r\n  for(int i=100;i<=999;++i){  \r\n    sum[i]=sum[i-1]+a[99]+(i-99)*3;  \r\n    a[i]=sum[i]-sum[i-1];  \r\n  }  \r\n  for(int i=1000;i<=9999;++i){  \r\n    sum[i]=sum[i-1]+a[999]+(i-999)*4;  \r\n    a[i]=sum[i]-sum[i-1];  \r\n  }  \r\n  for(int i=10000;i<=34999;++i){  \r\n    sum[i]=sum[i-1]+a[9999]+(i-9999)*5;  \r\n    a[i]=sum[i]-sum[i-1];  \r\n  }  \r\n}  \r\nint main(){  \r\n  int k;  \r\n  chushihua();  \r\n  scanf(\"%d\",&k);  \r\n  while(k--){  \r\n    long long n;  \r\n    cin>>n;  \r\n    long long kk;  \r\n    for(int i=1;i<=34999;++i){  \r\n      if(sum[i]<n&&sum[i+1]>=n)  \r\n      {  \r\n        kk=i;break;  \r\n      }  \r\n    }  \r\n    n-=sum[kk];  \r\n    int x=1;  \r\n    for(int i=0;i<34999;++i){  \r\n      if(a[i]<n&&a[i+1]>=n)  \r\n      {x=i;break;}  \r\n    }  \r\n    n-=a[x];  \r\n    x++;  \r\n    int b[11],zz=1;  \r\n    while(x){  \r\n      b[zz++]=x%10;  \r\n      x\/=10;  \r\n    }  \r\n    cout<<b[zz-n]<<endl;  \r\n  }  \r\n  return 0;  \r\n}"
},
{
"pid":414,
"code":"\n#include<stdio.h>\r\n#include<algorithm>\r\n#include<functional>\r\n#include<string.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int jz(int n);\r\n    int jz16(int n);\r\n    int jz12(int n);\r\n    int n;\r\n    while(scanf(\"%d\",&n),n)\r\n    {\r\n        if(jz(n)==jz16(n)&&jz16(n)==jz12(n)) \r\n        printf(\"%d is a Sky Number.\\n\",n);\r\n        else\r\n        printf(\"%d is not a Sky Number.\\n\",n);\r\n    }\r\n    return 0;\r\n}\r\nint jz(int n)\r\n{\r\n    int sum=0;\r\n    sum+=n\/1000;\r\n    sum+=n%10;\r\n    sum+=n%100\/10;\r\n    sum+=n%1000\/100;\r\n    return sum;\r\n}\r\nint jz16(int n)\r\n{\r\n    int sum=0;\r\n    while(n)\r\n    {\r\n        sum+=n%16;\r\n        n\/=16;\r\n    }\r\n    return sum;\r\n}\r\nint jz12(int n)\r\n{\r\n    int sum=0;\r\n    while(n)\r\n    {\r\n        sum+=n%12;\r\n        n\/=12;\r\n    }\r\n    return sum;\r\n}"
},
{
"pid":416,
"code":"\n#include <iostream>  \r\n#include <cmath>  \r\n#include <cstdio>  \r\n#include <string.h>  \r\nusing namespace std;  \r\nint aa[1500];  \r\nint kk;  \r\nbool isprime(int n){  \r\n    for(int j=2;j<=sqrt(n);++j){  \r\n      if(n%j==0)  \r\n          return false;  \r\n    }  \r\n    return true;  \r\n}  \r\nvoid prime(){  \r\n    kk=0;  \r\n    for(int i=2;i<=10000;++i){  \r\n\r\n            if(isprime(i)){  \r\n             aa[kk++]=i;   \r\n            }  \r\n\r\n    }  \r\n}  \r\nint main(){  \r\n  prime();  \r\n  int count;  \r\n  scanf(\"%d\",&count);  \r\n  while(count--){  \r\n    int n=10,x;  \r\n    int sum[10000];  \r\n    memset(sum,0,sizeof(sum));  \r\n    while(n--){  \r\n      scanf(\"%d\",&x);  \r\n      for(int j=0;j<kk;++j){  \r\n          if(x%aa[j]==0){  \r\n              while(x%aa[j]==0){  \r\n                x\/=aa[j];  \r\n                sum[j]++;  \r\n              }  \r\n          }  \r\n      }  \r\n\r\n    }  \r\n    int num=1;  \r\n    for(int i=0;i<10000;++i){  \r\n        if(sum[i]){  \r\n          num=(num%10)*((sum[i]+1)%10)%10;  \r\n        }  \r\n    }  \r\n    printf(\"%d\\n\",num);  \r\n  }  \r\n  return 0;  \r\n}"
},
{
"pid":417,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,m;  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        n=n\/2+(n&1);  \r\n        printf(\"%s\\n\",m>n?\"YES\":\"NO\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":418,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    double e,v,m;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n    scanf(\"%lf\",&m);  \r\n    v=m;e=m;  \r\n    for(i=0;i<=m-2;i++)  \r\n    {  \r\n        v+=i*(m-2-i)*m\/4;  \r\n        e+=(i*(m-2-i)+1)*m\/2;  \r\n    }  \r\n    printf(\"%.0lf\\n\",e-v+1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":420,
"code":"\n#include<stdio.h>  \r\nint pow(int a,int b,int c)\r\n{  \r\n    if(b==1) return a%c;  \r\n    int x=pow(a,b\/2,c);  \r\n    long long ans=(long long)x*x%c;\r\n    if(b%2==1) ans=ans*a%c;  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    int s,n,p,i,x,sum;  \r\n    scanf(\"%d\",&s);  \r\n    while(s--)  \r\n    {  \r\n        sum=0;  \r\n        scanf(\"%d %d\",&n,&p);  \r\n        if(p==0)  \r\n        {  \r\n            printf(\"%d\\n\",n%10003);  \r\n        }  \r\n        else  \r\n        {  \r\n            for(i=1;i<=n;i++)\r\n            {  \r\n                x=pow(i,p,10003);  \r\n                sum=((sum%10003)+(x%10003))%10003;  \r\n            }  \r\n            printf(\"%d\\n\",sum);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":421,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\nconst int N = 10010;  \r\nint a[N], visit[N];  \r\n\r\nint main()  \r\n{  \r\n    int ncase;  \r\n    int num, t1, t2, total;  \r\n    scanf(\"%d\", &ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        t1 = t2 = 0;  \r\n        memset(visit, -1, sizeof(visit));  \r\n        scanf(\"%d\", &num);  \r\n        for(int i = 0; i < num; ++i)  \r\n            scanf(\"%d\", &a[2 * i]);  \r\n        for(int i = 0; i < num; ++i)  \r\n            scanf(\"%d\", &a[2 * i + 1]);  \r\n        num *= 2;  \r\n        for(int i = 0; i < num; ++i)  \r\n        {  \r\n            if(visit[a[i]] == -1) \r\n            {  \r\n                visit[a[i]] = i;  \r\n                continue;  \r\n            }  \r\n            else \r\n            {  \r\n                total = 0;  \r\n                for(int j = visit[a[i]]; j <= i; ++j)  \r\n                {  \r\n                    if(a[j] != -1)  \r\n                    {  \r\n                        total++;  \r\n                        visit[a[j]] = -1; \r\n                        a[j] = -1;  \r\n                    }  \r\n                }  \r\n                if(i & 1) \r\n                    t2 += total;  \r\n                else  \r\n                    t1 += total;  \r\n            }  \r\n        }  \r\n        printf(\"%s\\n\", t1 >= t2 ? \"Yes\" : \"No\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":422,
"code":"\n#include <cstdio>  \r\n#include <cstdlib>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\n#define repf(i, a, b) for (int i = (a); i <= (b); i++)  \r\nconst int MAXN = 1000100;  \r\nint t, m, a, s[MAXN];  \r\n\r\nint main() {  \r\n    scanf(\"%d\", &t);  \r\n    while (t--) {  \r\n        scanf(\"%d\", &m);  \r\n        s[0] = 0;  \r\n        int Min = 110;  \r\n        repf(i, 1, m) {  \r\n            scanf(\"%d\", &a);  \r\n            s[i] = s[i - 1] + a;  \r\n            Min = min(abs(s[i]), Min);  \r\n        }  \r\n        sort(s + 1, s + m + 1);  \r\n        int Max = max(max(abs(s[1]), s[m]), abs(s[m] - s[1]));  \r\n        for (int i = 2; i <= m && Min; i++)  \r\n            Min = min(s[i] - s[i - 1], Min);  \r\n        printf(\"%d\\n\", Max - Min);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":424,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main() {  \r\n  int n;  \r\n  while (cin >> n && n) {  \r\n    int s = n;  \r\n    for (int i = 2; i <= n; i++)   \r\n      s = s * n % 9;   \r\n    if (s == 0) cout << 9 << endl;  \r\n    else cout << s << endl;  \r\n  }  \r\n}"
},
{
"pid":426,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <queue>\r\n\r\nusing namespace std;\r\n\r\nconst int inf = 100000;\r\nconst int maxn = 1005;\r\n\r\nstruct node{\r\n\tint v;\r\n\tint w;\r\n\tnode *next;\r\n\tnode(){\r\n\t\tv = 0; w = 0; next = NULL;\r\n\t}\r\n};\r\n\r\nstruct qnode{\r\n\tint w;\r\n\tint index;\r\n\tqnode(int _w, int _index){\r\n\t\tw = _w; index = _index;\r\n\t}\r\n\tbool operator < (const qnode &b) const{\r\n\t\treturn w > b.w;\r\n\t}\r\n};\r\n\r\nint n;\r\nnode* list[maxn];\r\nint dist[maxn];\r\nbool vis[maxn]; \r\nbool vis2[maxn]; \r\n\r\nvoid list_init(){\r\n\tfor(int i = 0; i < maxn; i++)\r\n\t\tlist[i] = new node;\r\n}\r\n\r\nvoid list_clear(){\r\n\tfor(int i = 0; i <= n; i++){\r\n\t\tnode *p = list[i];\r\n\t\twhile(p->next){\r\n\t\tnode *t = p->next;\r\n\t\tp->next = t->next;\r\n\t\tdelete t;\r\n\t\t}\r\n\t}\r\n}\r\nbool input(){\r\n\tscanf(\"%d\",&n);\r\n\tif(n == 0) return false;\r\n\tlist_clear();\r\n\tint m;\r\n\tint v,w;\r\n\tfor(int i = 1; i <= n; i++){\r\n\t\tscanf(\"%d\",&m);\r\n\t\tnode *p = list[i];\r\n\t\tfor(int j = 0; j < m; j++){\r\n\t\t\tnode *t = new node;\r\n\t\t\tscanf(\"%d%d\",&t->v,&t->w);\r\n\t\t\tt->next = p->next;\r\n\t\t\tp->next =t;\r\n\t\t}\r\n\t}\r\n\treturn true;\r\n}\r\nvoid dijkstra(int s){\r\n\tpriority_queue<qnode> q;\r\n\tfor(int i = 1; i <= n; i++){\r\n\t\tdist[i] = inf; vis[i] = false;\r\n\t}\r\n\tdist[s] = 0;\r\n\tq.push(qnode(0,s));\r\n\twhile(!q.empty()){\r\n\t\tint u = q.top().index; q.pop();\r\n\t\tif(vis[u]) continue;\r\n\t\tvis[u] = true;\r\n\t\tnode *p = list[u]->next;\r\n\t\twhile(p){\r\n\t\t\tint v = p->v;\r\n\t\t\tint edge = p->w;\r\n\t\t\tif(!vis[v] && dist[u] + edge < dist[v]){\r\n\t\t\t\tdist[v] = dist[u] + edge;\r\n\t\t\t\tq.push(qnode(dist[v],v));\r\n\t\t\t}\r\n\t\t\tp = p->next;\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvoid dfs(int s){\r\n\tvis2[s] = true;\r\n\tnode *p = list[s]->next;\r\n\twhile(p){\r\n\t\tint v = p->v;\r\n\t\tif(!vis2[v]){\r\n\t\t\tdfs(v);\r\n\t\t}\r\n\t\tp = p->next;\r\n\t}\r\n}\r\n\r\nvoid solve(){\r\n\tint minimum = inf;\r\n\tint pos;\r\n\tfor(int i = 1; i <= n; i++){\r\n\t\tfor(int j = 1; j <= n; j++) vis2[j] = false;\r\n\tdfs(i);\r\n\tbool fg = false;\r\n\tfor(int j = 1; j <= n; j++) {\r\n\t\tif(vis2[j] == false) {\r\n\t\t\tfg = true; break;\r\n\t\t}\r\n\t}\r\n\tif(fg) continue;\r\n\tdijkstra(i);\r\n\tint maximum = -inf;\r\n\tfor(int j = 1; j <= n; j++){\r\n\t\tif(dist[j] > maximum)\r\n\t\t\tmaximum = dist[j];\r\n\t\tif(maximum == inf) break;\r\n\t}\r\n\tif(maximum != inf && maximum < minimum){\r\n\t\tminimum = maximum;\r\n\t\tpos = i;\r\n\t}\r\n\t}\r\n\tif(minimum == inf) puts(\"disjoint\\n\");\r\n\telse printf(\"%d %d\\n\",pos,minimum);\r\n}\r\n\r\nint main(){\r\n\tlist_init();\r\n\twhile(input()){\r\n\t\tsolve();\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":427,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int f[100000];\r\n    int a,b,n,i;\r\n    while(scanf(\"%d%d%d\",&a,&b,&n)&&(a||b||n))\r\n        {\r\n\r\n            f[1]=1;f[2]=1;\r\n            if(n==1||n==2){printf(\"1\\n\");continue;}\r\n            for(i=3;i<100000;i++)\r\n            {\r\n               f[i]=(a*f[i-1]+b*f[i-2])%7;\r\n               if(f[i]==1&&f[i-1]==1) break;\r\n            }\r\n            i=i-2;\r\n            f[0]=f[i];\r\n            printf(\"%d\\n\",f[n%i]);\r\n        }\r\n    return 0;\r\n}"
},
{
"pid":428,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<cstdlib>\r\n using namespace std;\r\nint cnt[100010];\r\nint main()\r\n{\r\n    int test,n,ai,bi;\r\n    scanf(\"%d\",&test);\r\n    while(test--)\r\n    {\r\n        memset(cnt,0,sizeof(cnt));\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\/%d\",&ai,&bi);\r\n            if(n%bi)continue;\r\n            int t=ai*n;\r\n            if(ai <= bi) cnt[t\/bi]++;\r\n        }\r\n        if(cnt[0]==0) \r\n        printf(\"No\\n\");\r\n        else \r\n        {\r\n            int cn=0;\r\n            for(int i=1;i<n;i++)\r\n            {\r\n                if(i==cnt[i]) cn++;\r\n                if(cn==2) break;\r\n            }\r\n            if(cn==1) \r\n            printf(\"No\\n\");\r\n            else \r\n            printf(\"Yes\\n\");\r\n        }\r\n    }\r\n}"
},
{
"pid":429,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n     int n,i;\r\nlong long str[52];\r\n    str[1]=1;str[2]=2;\r\n    for(i=3;i<54;i++)\r\n        str[i]=str[i-1]+str[i-2];\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        printf(\"%lld\\n\",str[n]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":430,
"code":"\n#include<iostream>  \r\n#include<cstdlib>  \r\n#include<stdio.h>  \r\n#include<algorithm>  \r\n#define ll long long  \r\nusing namespace std;  \r\nll p[10000],cnt[10000];  \r\nll fac[100000];  \r\nll cc,s;  \r\nll phi(ll n)  \r\n{  \r\n    ll ans=1,i;  \r\n    for(i=2;i*i<=n;i++)  \r\n    {  \r\n        if(n%i==0)  \r\n        {  \r\n            n\/=i;  \r\n            ans*=i-1;  \r\n            while(n%i==0)  \r\n            {  \r\n                n\/=i;ans*=i;  \r\n            }  \r\n        }  \r\n    }  \r\n    if(n>1)  \r\n    ans*=n-1;  \r\n    return ans;  \r\n}  \r\nvoid split(ll x)  \r\n{  \r\n    cc=0;  \r\n    for(ll i=2;i*i<=x;i++)  \r\n    {  \r\n        if(x%i==0)  \r\n        {  \r\n            p[cc]=i;  \r\n            int count=0;  \r\n            while(x%i==0)  \r\n            {  \r\n                count++;x\/=i;  \r\n            }  \r\n            cnt[cc]=count;  \r\n            cc++;  \r\n        }  \r\n    }  \r\n    if(x>1)  \r\n    {  \r\n        p[cc]=x;cnt[cc]=1;cc++;  \r\n    }  \r\n}  \r\nvoid dfs(ll count,ll step)  \r\n{  \r\n    if(step==cc)  \r\n    {  \r\n        fac[s++]=count;  \r\n        return ;  \r\n    }  \r\n    ll sum=1;  \r\n    for(int i=0;i<cnt[step];i++)  \r\n    {  \r\n        sum*=p[step];  \r\n        dfs(count*sum,step+1);  \r\n    }  \r\n    dfs(count,step+1);  \r\n}  \r\nll mul(ll a,ll b,ll m)  \r\n{  \r\n    ll res=0;  \r\n    while(b)  \r\n    {  \r\n        if(b&1) res+=a;  \r\n        if(res>m) res-=m;  \r\n        a+=a;  \r\n        if(a>m)  \r\n        a-=m;  \r\n        b>>=1;  \r\n    }  \r\n    return res;  \r\n}  \r\nll pow(ll a,ll b,ll m)  \r\n{  \r\n    ll res=1;  \r\n    while(b)  \r\n    {  \r\n        if(b&1) res=mul(res,a,m);  \r\n        a=mul(a,a,m);  \r\n        b>>=1;  \r\n    }  \r\n    return res;  \r\n}  \r\nll gcd(ll a,ll b)  \r\n{  \r\n    if(b==0) return a;  \r\n    return gcd(b,a%b);  \r\n}  \r\nint main()  \r\n{  \r\n    int count=1;  \r\n    ll n;  \r\n    while(scanf(\"%lld\",&n)&&n)  \r\n    {  \r\n        printf(\"Case %d: \",count++);  \r\n\r\n        ll M=9*n\/gcd(n,8);  \r\n        if(gcd(10,M)!=1) {puts(\"0\");continue;}  \r\n        ll m=phi(M);  \r\n        split(m);  \r\n        s=0;  \r\n        dfs(1,0);  \r\n        sort(fac,fac+s);  \r\n        for(int i=0;i<s;i++)  \r\n        {  \r\n            if(pow(10,fac[i],M)==1)  \r\n            {  \r\n                cout<<fac[i]<<endl;  \r\n                break;  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":431,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <string.h>  \r\nusing namespace std;  \r\nint father[10005],num[10005],rankk[10005];  \r\nint find(int x){  \r\n  int fx=father[x];  \r\n  if(fx==x){return father[x];}  \r\n  else{  \r\n    father[x]=find(father[x]);  \r\n    rankk[x]+=rankk[fx];  \r\n  }  \r\n  return father[x];  \r\n}  \r\nint main(){  \r\n    int numcase,k=0;  \r\n    scanf(\"%d\",&numcase);  \r\n    while(numcase--){  \r\n      int n,q;  \r\n      scanf(\"%d%d\",&n,&q);  \r\n      for(int i=1;i<=n;++i)  \r\n      {father[i]=i;num[i]=1;rankk[i]=0;}  \r\n      char s[2];  \r\n      int x,y;  \r\n      printf(\"Case %d:\\n\",++k);  \r\n      while(q--){  \r\n          scanf(\"%s\",s);  \r\n          if(s[0]=='T'){  \r\n          scanf(\"%d%d\",&x,&y);  \r\n          int rootx=find(x);  \r\n          int rooty=find(y);  \r\n          rankk[rootx]++;  \r\n          father[rootx]=rooty;  \r\n          num[rooty]+=num[rootx];  \r\n        }  \r\n        else{  \r\n          scanf(\"%d\",&x);  \r\n          int rootx=find(x);  \r\n          printf(\"%d %d %d\\n\",rootx,num[rootx],rankk[x]);  \r\n        }  \r\n      }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":432,
"code":"\n#include<map>  \r\n#include<set>  \r\n#include<cmath>  \r\n#include<stack>  \r\n#include<queue>  \r\n#include<cstdio>  \r\n#include<string>  \r\n#include<vector>  \r\n#include<cstring>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\n#include<functional>  \r\n\r\nusing namespace std;  \r\ntypedef long long LL;  \r\ntypedef pair<int, int> PII;  \r\n\r\nconst int MX = 1e5 + 5;  \r\nconst int INF = 0x3f3f3f3f;  \r\n\r\nint find_t(int n) {  \r\n    int p = 1, ret = 0;  \r\n    while(true) {  \r\n        ret++;  \r\n        if(p % 2) p = n \/ 2 + (p + 1) \/ 2;  \r\n        else p = p \/ 2;  \r\n\r\n        if(p == 1) return ret;  \r\n    }  \r\n}  \r\nint solve(int p, int n, int m) {  \r\n    for(int i = 1; i <= m; i++) {  \r\n        if(p * 2 <= n) p = p * 2;  \r\n        else p = (p - n \/ 2 - 1) * 2 + 1;  \r\n    }  \r\n    return p;  \r\n}  \r\n\r\nint main() {  \r\n    int n, m, x; \r\n    while(~scanf(\"%d%d%d\", &n, &m, &x)) {  \r\n        int t = find_t(n);  \r\n\r\n        for(int i = 1; i <= x; i++) {  \r\n            printf(\"%d%c\", solve(i, n, m % t), i == x ? '\\n' : ' ');  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":434,
"code":"\n#include <iostream>\r\n#include <algorithm>\r\n#include <cstdio>\r\n#include <cstring>\r\nusing namespace std;\r\nconst int MAX=27*27+1;\r\ntypedef struct\r\n{\r\n    int a,b;\r\n    int len;\r\n}node;\r\n\r\nnode nod[MAX];\r\nint father[MAX];\r\n\r\nint cmp(node b1,node b2)\r\n{\r\n    return b1.len<b2.len;\r\n}\r\nint find(int x)\r\n{\r\n    return father[x]==x?x:father[x]=find(father[x]);\r\n}\r\nvoid Union(int a1,int a2)\r\n{\r\n    father[a1]=a2;\r\n}\r\nint main()\r\n{\r\n    int n;\r\n    while(cin>>n&&n)\r\n    {\r\n        memset(nod,0,sizeof(nod));\r\n        int i;\r\n        for(i=0;i<=MAX;i++)\r\n        {\r\n            father[i]=i;\r\n        }\r\n        int tempn=n,cnt=0;\r\n        tempn--;\r\n        while(tempn--)\r\n        {\r\n            string s1;\r\n            cin>>s1;\r\n            int qn;\r\n            cin>>qn;\r\n            if(qn==0) continue;\r\n            while(qn--)\r\n            {\r\n                string s2;\r\n                cin>>s2;\r\n                int len;\r\n                cin>>len;\r\n                nod[cnt].a=s1[0]-'A'+1;\r\n                nod[cnt].b=s2[0]-'A'+1;\r\n                nod[cnt].len=len;\r\n                cnt++;\r\n            }\r\n        }\r\n        sort(nod,nod+cnt,cmp);\r\n        int sum=0;\r\n        for(i=0;i<cnt;i++)\r\n        {\r\n            int x=find(nod[i].a);\r\n            int y=find(nod[i].b);\r\n            if(x==y)\r\n            continue;\r\n            else\r\n            {\r\n                Union(x,y);\r\n                sum+=nod[i].len;\r\n            }\r\n        }\r\n        cout<<sum<<endl;\r\n\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":435,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n\r\nusing namespace std;  \r\n\r\ntypedef long long LL;  \r\n\r\nconst int MAXN = 1024;  \r\n\r\nLL dp[15][MAXN];  \r\nint num, n, m;  \r\n\r\nvoid DFS(int i, int j, int curstatus, int prestatus, int b1, int b2)  \r\n{  \r\n    if(j > m)  \r\n    {  \r\n        if(b1 == 0 && b2 == 0) \r\n            dp[i][curstatus] += dp[i-1][prestatus];  \r\n        return ;  \r\n    }  \r\n    if(b1 == 0 && b2 == 0)\r\n    {  \r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1, 0, 0);\r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1|1, 1, 0); \r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1, 1, 0);\r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1, 0, 1);\r\n        DFS(i, j+1, curstatus<<1, prestatus<<1, 1, 1);\r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1|1, 1, 1);\r\n        DFS(i, j+1, curstatus<<1, prestatus<<1|1, 0, 0);  \r\n    }  \r\n\r\n    if(b1 == 0 && b2 == 1) \r\n    {  \r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1, 1, 0);  \r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1, 1, 1);  \r\n        DFS(i, j+1, curstatus<<1, prestatus<<1, 0, 0);\r\n    }  \r\n\r\n    if (b1 == 1 && b2 == 0)  \r\n    {  \r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1, 1, 1);\r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1|1, 0, 0); \r\n    }  \r\n\r\n    if (b1 == 1 && b2 == 1)  \r\n    {  \r\n        DFS(i, j+1, curstatus<<1|1, prestatus<<1, 0, 0);\r\n    }  \r\n    return ;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    while (~scanf(\"%d %d\", &n, &m))  \r\n    {  \r\n        if(n < m)  \r\n        {  \r\n            n ^= m;  \r\n            m ^= n;  \r\n            n ^= m;  \r\n        }  \r\n        memset(dp, 0, sizeof(dp));  \r\n\r\n        dp[0][(1<<m) -1] = 1;  \r\n        for (int i = 1; i <= n; ++i)  \r\n        {  \r\n            DFS(i, 0, 0, 0, 0, 1);  \r\n        }  \r\n        printf(\"%lld\\n\", dp[n][(1<<m)-1]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":436,
"code":"\n#include <cstdio>  \r\n#include <cstdlib>  \r\n\r\nint main(){  \r\n    int n;  \r\n    while(scanf(\"%d\", &n) == 1)       \r\n        printf(\"%d\\n\", (abs(n - 1) + 1) * (1 + n) \/ 2);   \r\n    return 0;  \r\n}"
},
{
"pid":438,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <set>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\nconst int maxn = 16;\r\n\r\nstruct Trian {\r\n    int x, y, z;\r\n    Trian () {};\r\n    Trian (int x, int y, int z) {\r\n        this->x = x;\r\n        this->y = y;\r\n        this->z = z;\r\n    }\r\n\r\n    Trian add (int type) {\r\n        int mv = (x+y+z == 0 ? 1 : -1);\r\n        if (type == 0)\r\n            return Trian(x, y+mv, z+mv);\r\n        else if (type == 1)\r\n            return Trian(x+mv, y, z+mv);\r\n        else\r\n            return Trian(x+mv, y+mv, z);\r\n    }\r\n\r\n    void rotate () {\r\n        int tmp = x;\r\n        x = y;\r\n        y = z;\r\n        z = tmp;\r\n    }\r\n\r\n    void overturn () {\r\n        x = 1 - x;\r\n        y = 1 - y;\r\n        z = -z;\r\n    }\r\n\r\n    void move (int x, int y, int z) {\r\n        this->x += x;\r\n        this->y += y;\r\n        this->z += z;\r\n    }\r\n};\r\n\r\nbool operator == (const Trian& a, const Trian& b) {\r\n    return a.x == b.x && a.y == b.y && a.z == b.z;\r\n}\r\n\r\nbool operator < (const Trian& a, const Trian& b) {\r\n    if (a.x != b.x)\r\n        return a.x < b.x;\r\n    else if (a.y != b.y)\r\n        return a.y < b.y;\r\n    else\r\n        return a.z < b.z;\r\n}\r\n\r\nstruct Hash {\r\n    int cnt, key[maxn+5];\r\n};\r\n\r\nbool operator < (const Hash& a, const Hash& b) {\r\n    if (a.cnt != b.cnt)\r\n        return a.cnt < b.cnt;\r\n    for (int i = 0; i < a.cnt; i++)\r\n        if (a.key[i] != b.key[i])\r\n            return a.key[i] < b.key[i];\r\n    return false;\r\n}\r\n\r\nstruct Pizz {\r\n    int cnt;\r\n    Trian arr[maxn+5];\r\n    Pizz () { cnt = 0; }\r\n\r\n    bool add (const Trian& u) {\r\n\r\n        for (int i = 0; i < cnt; i++)\r\n            if (arr[i] == u)\r\n                return false;\r\n        arr[cnt++] = u;\r\n        return true;\r\n    }\r\n\r\n    void remove () { cnt--; }\r\n\r\n    Hash getKey () {\r\n        Hash u;\r\n        u.cnt = cnt;\r\n\r\n        for (int i = 0; i < cnt; i++) {\r\n            u.key[i] = arr[i].x + 8;\r\n            u.key[i] <<= 4;\r\n            u.key[i] += arr[i].y + 8;\r\n            u.key[i] <<= 4;\r\n            u.key[i] += arr[i].z + 8;\r\n        }\r\n        return u;\r\n    }\r\n};\r\n\r\nset<Hash> vis;\r\nint ans[maxn+5] = {0};\r\n\r\nbool find (Pizz v) {\r\n    for (int i = 0; i < 3; i++) {\r\n        sort(v.arr, v.arr+v.cnt);\r\n        if (vis.find(v.getKey()) != vis.end())\r\n            return true;\r\n\r\n        for (int j = 0; j < v.cnt; j++)\r\n            v.arr[j].rotate();\r\n    }\r\n    return false;\r\n}\r\n\r\nbool search (Pizz u) {\r\n    for (int i = 0; i < u.cnt; i++) {\r\n        int x = u.arr[i].x;\r\n        int y = u.arr[i].y;\r\n        int z = u.arr[i].z;\r\n\r\n        Pizz v = u;\r\n        if (x + y + z == 0) {\r\n\r\n            for (int j = 0; j < v.cnt; j++)\r\n                v.arr[j].move(-x, -y, -z);\r\n\r\n            if (find(v))\r\n                return true;\r\n        } else {\r\n\r\n            for (int j = 0; j < v.cnt; j++) {\r\n                v.arr[j].overturn();\r\n                v.arr[j].move(x-1, y-1, z);\r\n            }\r\n\r\n            if (find(v))\r\n                return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nvoid insert (Pizz u) {\r\n    for (int i = 0; i < 3; i++) {\r\n        sort(u.arr, u.arr+u.cnt);    \r\n        vis.insert(u.getKey());\r\n\r\n        for (int j = 0; j < u.cnt; j++)\r\n            u.arr[j].rotate();\r\n    }\r\n}\r\n\r\nvoid dfs (Pizz u) {\r\n    if (u.cnt == maxn+1)\r\n        return;\r\n\r\n    if (search(u))\r\n        return;\r\n\r\n    insert(u);\r\n    ans[u.cnt]++;\r\n\r\n    for (int i = 0; i < u.cnt; i++) {\r\n        for (int j = 0; j < 3; j++) {\r\n            Trian v = u.arr[i].add(j);\r\n            if (u.add(v)) {\r\n                dfs(u);\r\n                u.remove();\r\n            }\r\n        }\r\n    }\r\n}\r\nint rec[maxn+5] = {0, 1, 1, 1, 4, 6, 19, 43, 120, 307, 866, 2336, 6588, 18373, 52119, 147700, 422016};\r\n\r\nint main () {\r\n    int cas, n;\r\n    scanf(\"%d\", &cas);\r\n    for (int i = 1; i <= cas; i++) {\r\n        scanf(\"%d\", &n);\r\n        printf(\"Case #%d: %d\\n\", i, rec[n]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":439,
"code":"\n#include<iostream>\r\n#include<sstream>\r\n#include<vector>\r\n#include<list>\r\n#include<deque>\r\n#include<queue>\r\n#include<stack>\r\n#include<map>\r\n#include<set>\r\n#include<bitset>\r\n#include<algorithm>\r\n#include<cstdio>\r\n#include<cstdlib>\r\n#include<cstring>\r\n#include<cctype>\r\n#include<cmath>\r\n#include<ctime>\r\n#include<iomanip>\r\nusing namespace std;\r\nconst double eps(1e-8);\r\ntypedef long long lint;\r\n\r\nconst long double PI = acos(-1.0);\r\n\r\nstruct Complex\r\n{\r\n    long double real, image;\r\n    Complex(long double _real, long double _image)\r\n    {\r\n        real = _real;\r\n        image = _image;\r\n    }\r\n    Complex(){}\r\n};\r\n\r\nComplex operator + (const Complex &c1, const Complex &c2)\r\n{\r\n    return Complex(c1.real + c2.real, c1.image + c2.image);\r\n}\r\n\r\nComplex operator - (const Complex &c1, const Complex &c2)\r\n{\r\n    return Complex(c1.real - c2.real, c1.image - c2.image);\r\n}\r\n\r\nComplex operator * (const Complex &c1, const Complex &c2)\r\n{\r\n    return Complex(c1.real*c2.real - c1.image*c2.image, c1.real*c2.image + c1.image*c2.real);\r\n}\r\n\r\nint rev(int id, int len)\r\n{\r\n    int ret = 0;\r\n    for(int i = 0; (1 << i) < len; i++)\r\n    {\r\n        ret <<= 1;\r\n        if(id & (1 << i)) ret |= 1;\r\n    }\r\n    return ret;\r\n}\r\n\r\nComplex A[1 << 16];\r\nvoid FFT(Complex *a, int len, int DFT)\r\n{\r\n    for(int i = 0; i < len; i++) A[rev(i, len)] = a[i];\r\n    for(int s = 1; (1 << s) <= len; s++)\r\n    {\r\n        int m = (1 << s);\r\n        Complex wm = Complex(cos(DFT*2*PI\/m), sin(DFT*2*PI\/m));\r\n        for(int k = 0; k < len; k += m)\r\n        {\r\n            Complex w = Complex(1, 0);\r\n            for(int j = 0; j < (m >> 1); j++)\r\n            {\r\n                Complex t = w*A[k + j + (m >> 1)];\r\n                Complex u = A[k + j];\r\n                A[k + j] = u + t;\r\n                A[k + j + (m >> 1)] = u - t;\r\n                w = w*wm;\r\n            }\r\n        }\r\n    }\r\n    if(DFT == -1) for(int i = 0; i < len; i++) A[i].real \/= len, A[i].image \/= len;\r\n    for(int i = 0; i < len; i++) a[i] = A[i];\r\n}\r\n\r\nint polynomialLength;\r\n\r\nvoid multiply(Complex *p1, Complex *p2)\r\n{\r\n    for(int i = 0; i < polynomialLength; i++)\r\n        p1[i] = p1[i]*p2[i];\r\n    return;\r\n}\r\n\r\nvoid Copy(Complex *p1, Complex *p2)\r\n{\r\n    for(int i = 0; i < polynomialLength; i++)\r\n        p1[i] = p2[i];\r\n    return;\r\n}\r\n\r\nint a[13010];\r\nint p, m;\r\nComplex f[6][1 << 16];\r\nComplex g[7][1 << 16];\r\n\r\nconst int par[6][10] = \r\n{\r\n    {0},\r\n    {1},\r\n    {1, -1},\r\n    {1, -3, 2},\r\n    {1, -6, 3, 8, -6},\r\n    {1, -10, 15, 20, -20, -30, 24}\r\n};\r\n\r\nvoid solve()\r\n{\r\n    int maxL = 0;\r\n    for(int i = 1; i <= m; i++)\r\n        maxL = max(maxL, a[i]);\r\n    polynomialLength = 1;\r\n    while(polynomialLength <= maxL*p) polynomialLength <<= 1;\r\n    for(int i = 1; i <= p; i++)\r\n    {\r\n        for(int j = 0; j < polynomialLength; j++)\r\n            f[i][j] = Complex(0, 0);\r\n        for(int j = 1; j <= m; j++)\r\n            f[i][i*a[j]].real += 1;\r\n        FFT(f[i], polynomialLength, 1);\r\n    }\r\n    int inclusiveLength = -1;\r\n    switch(p)\r\n    {\r\n        case 1: Copy(g[0], f[1]);\r\n                inclusiveLength = 1;\r\n                break;\r\n        case 2: Copy(g[0], f[1]);\r\n                multiply(g[0], f[1]);\r\n                Copy(g[1], f[2]);\r\n                inclusiveLength = 2;\r\n                break;\r\n        case 3: Copy(g[0], f[1]);\r\n                multiply(g[0], f[1]); multiply(g[0], f[1]);\r\n                Copy(g[1], f[2]);\r\n                multiply(g[1], f[1]);\r\n                Copy(g[2], f[3]);\r\n                inclusiveLength = 3;\r\n                break;\r\n        case 4: Copy(g[0], f[1]);\r\n                multiply(g[0], f[1]); multiply(g[0], f[1]); multiply(g[0], f[1]);\r\n                Copy(g[1], f[2]);\r\n                multiply(g[1], f[1]); multiply(g[1], f[1]);\r\n                Copy(g[2], f[2]);\r\n                multiply(g[2], f[2]);\r\n                Copy(g[3], f[3]);\r\n                multiply(g[3], f[1]);\r\n                Copy(g[4], f[4]);\r\n                inclusiveLength = 5;\r\n                break;\r\n        case 5: Copy(g[0], f[1]);\r\n                multiply(g[0], f[1]); multiply(g[0], f[1]); multiply(g[0], f[1]); multiply(g[0], f[1]);\r\n                Copy(g[1], f[2]);\r\n                multiply(g[1], f[1]); multiply(g[1], f[1]); multiply(g[1], f[1]);\r\n                Copy(g[2], f[2]);\r\n                multiply(g[2], f[2]); multiply(g[2], f[1]);\r\n                Copy(g[3], f[3]);\r\n                multiply(g[3], f[1]); multiply(g[3], f[1]);\r\n                Copy(g[4], f[3]);\r\n                multiply(g[4], f[2]);\r\n                Copy(g[5], f[4]);\r\n                multiply(g[5], f[1]);\r\n                Copy(g[6], f[5]);\r\n                inclusiveLength = 7;\r\n                break;\r\n    }\r\n    for(int i = 0; i < inclusiveLength; i++)\r\n        FFT(g[i], polynomialLength, -1);\r\n    for(int i = 0; i < polynomialLength; i++)\r\n    {\r\n        double res = 0;\r\n        for(int j = 0; j < inclusiveLength; j++)\r\n            res += g[j][i].real*par[p][j];\r\n        for(int j = 1; j <= p; j++) res \/= j;\r\n        if(res > 0.5) printf(\"%d: %.0f\\n\", i, res);\r\n    }\r\n    return;\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\", &T);\r\n    for(int cas = 1; cas <= T; cas++)\r\n    {\r\n        scanf(\"%d %d\", &m, &p);\r\n        for(int i = 1; i <= m; i++)\r\n            scanf(\"%d\", &a[i]);\r\n        printf(\"Case #%d:\\n\", cas);\r\n        solve();\r\n        putchar('\\n');\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":442,
"code":"\n#include <iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<map>\r\n#include<string>\r\nusing namespace std;\r\nconst int N = 3005;\r\nconst int M = 1000005;\r\nint head[N];\r\nstruct node\r\n{\r\n    int to,next;\r\n}e[M];\r\nbool vis[N];\r\nint num,id;\r\nchar s1[10005],s[9][100];\r\nmap<string,int>non,verb;\r\nbool flag;\r\nvoid build(int s,int ed)\r\n{\r\n    e[num].to = ed;\r\n    e[num].next = head[s];\r\n    head[s] = num ++;\r\n}\r\nvoid gofind(int cur,int tag)\r\n{\r\n    vis[cur] = true;\r\n    if(flag)\r\n        return;\r\n    if(cur == tag)\r\n    {\r\n        flag = true;\r\n        return;\r\n    }\r\n    int i;\r\n    for(i = head[cur];~i;i = e[i].next)\r\n        if(vis[e[i].to] == false)\r\n            gofind(e[i].to,tag);\r\n}\r\nint main()\r\n{\r\n    int t,cas = 0;\r\n    scanf(\"%d\",&t);\r\n    gets(s1);\r\n    while(t --)\r\n    {\r\n        non.clear();verb.clear();\r\n        memset(head,-1,sizeof(head));\r\n        num = id = 1;\r\n        printf(\"Case #%d:\\n\",++cas);\r\n        while(gets(s1))\r\n        {\r\n            int len = strlen(s1);\r\n            if(s1[len - 1] == '!')\r\n                break;\r\n            else if(s1[len - 1] == '.')\r\n                {\r\n                    s1[len - 1] = '\\0';\r\n                    if(sscanf(s1,\"%s%s%s%s%s%s\",s[0],s[1],s[2],s[3],s[4],s[5]) != 6)\r\n                    {\r\n                        sscanf(s1,\"%s%s%s\",s[2],s[3],s[4]);\r\n                        string a,b;\r\n                        a = s[2];b = s[4];\r\n                        if(non.find(a) == non.end())\r\n                            non[a] = id ++;\r\n                        if(s[3][0] == 'a')\r\n                        {\r\n                            if(non.find(b) == non.end())\r\n                                non[b] = id ++;\r\n                            build(non[a],non[b]);\r\n                        }\r\n                        else\r\n                        {\r\n                            if(verb.find(b) == verb.end())\r\n                                verb[b] = id ++;\r\n                            build(non[a],verb[b]);\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        sscanf(s1,\"%s%s%s%s%s%s\",s[2],s[2],s[2],s[2],s[3],s[4]);\r\n                        string a,b;\r\n                        a = s[2];b = s[4];\r\n                        if(verb.find(a) == verb.end())\r\n                            verb[a] = id ++;\r\n                        if(s[3][0] == 'a')\r\n                        {\r\n                            if(non.find(b) == non.end())\r\n                                non[b] = id ++;\r\n                            build(verb[a],non[b]);\r\n                        }\r\n                        else\r\n                        {\r\n                            if(verb.find(b) == verb.end())\r\n                                verb[b] = id ++;\r\n                            build(verb[a],verb[b]);\r\n                        }\r\n                    }\r\n                }\r\n                else if(s1[len -1] == '?')\r\n                {\r\n                    memset(vis,false,sizeof(vis));\r\n                    s1[len - 1] = '\\0';\r\n                    if(sscanf(s1,\"%s%s%s%s%s%s\",s[0],s[1],s[2],s[3],s[4],s[5]) != 6)\r\n                    {\r\n                        sscanf(s1,\"%s%s%s\",s[3],s[2],s[4]);\r\n                        string a,b;\r\n                        a = s[2];b = s[4];\r\n                        if(non.find(a) == non.end())\r\n                            non[a] = id ++;\r\n                        if(s[3][0] == 'a')\r\n                        {\r\n                            if(non.find(b) == non.end())\r\n                                non[b] = id ++;\r\n                            flag = false;\r\n                            gofind(non[a],non[b]);\r\n                            if(flag)\r\n                                putchar('Y');\r\n                            else\r\n                                putchar('M');\r\n                        }\r\n                        else\r\n                        {\r\n                            if(verb.find(b) == verb.end())\r\n                                verb[b] = id ++;\r\n                            flag = false;\r\n                            gofind(non[a],verb[b]);\r\n                            if(flag)\r\n                                putchar('Y');\r\n                            else\r\n                                putchar('M');\r\n                        }\r\n                    }\r\n                    else\r\n                    {\r\n                        sscanf(s1,\"%s%s%s%s%s%s\",s[3],s[3],s[3],s[3],s[2],s[4]);\r\n                        string a,b;\r\n                        a = s[2];b = s[4];\r\n                        if(verb.find(a) == verb.end())\r\n                            verb[a] = id ++;\r\n                        sscanf(s1,\"%s\",s[3]);\r\n                        if(s[3][0] == 'a')\r\n                        {\r\n                            if(non.find(b) == non.end())\r\n                                non[b] = id ++;\r\n                            flag = false;\r\n                            gofind(verb[a],non[b]);\r\n                            if(flag)\r\n                                putchar('Y');\r\n                            else\r\n                                putchar('M');\r\n                        }\r\n                        else\r\n                        {\r\n                            if(verb.find(b) == verb.end())\r\n                                verb[b] = id ++;\r\n                            flag = false;\r\n                            gofind(verb[a],verb[b]);\r\n                            if(flag)\r\n                                putchar('Y');\r\n                            else\r\n                                putchar('M');\r\n                        }\r\n                    }\r\n                }\r\n        }\r\n        putchar(10);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":447,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\nusing namespace std;\r\nconst int MAXN=60000;\r\nint f[MAXN];\r\n\r\nint main()\r\n{\r\n    for(int i=0;i<=MAXN;i++) f[i]=i;\r\n    for(int i=2;i*i<=MAXN;i++)\r\n    {\r\n        for(int j=i*i;j<=MAXN;j++)\r\n        {\r\n            f[j]=min(f[j],f[j-i*i]+1);\r\n        }\r\n    }\r\n    int n;\r\n    while(scanf(\"%d\",&n)&&n)\r\n    {\r\n        printf(\"%d\\n\",f[n]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":448,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\n#include<cmath>  \r\nusing namespace std;  \r\n\r\nint main()  \r\n{  \r\n    int ncase;  \r\n    char s[110], ans[110];  \r\n    int m, len, sign, max, num;  \r\n    scanf(\"%d\", &ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        num = sign = 0;  \r\n        scanf(\"%s%d\", s, &m);  \r\n        len = strlen(s);  \r\n        for(int i = 0; i < len - m; ++i) \r\n        {  \r\n            max = -1;  \r\n            for(int j = sign; j <= m + i; ++j) \r\n            {  \r\n                if(max < s[j] - '0')  \r\n                {  \r\n                    max = s[j] - '0';  \r\n                    sign = j;  \r\n                }  \r\n            }  \r\n            ans[num++] = s[sign++];  \r\n        }  \r\n        for(int i = 0; i < len - m; ++i)  \r\n            cout<<ans[i] - '0';  \r\n        cout<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":449,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cmath>\r\nusing namespace std;\r\nint main()\r\n{\r\n    double h2,h1,t,test;\r\n    cin>>test;\r\n    while(test--)\r\n    {\r\n        cin>>h2>>t>>h1;\r\n        double temp=t\/log(h2\/h1);\r\n        printf(\"%.1lf\\n\",temp);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":451,
"code":"\n#include<stdio.h>\r\nint f(int n,int m)  \r\n{\r\n    long long max=1,min=1,a,b,c;\r\n    for(a=n,c=m;a>=m,c>0;a--,c--)\r\n    {\r\n        max=max*a;\r\n        min=min*c;\r\n    }\r\n    b=max\/min;\r\n    return b;\r\n}\r\nint main()\r\n{\r\n    long long a,b,n,m,c;\r\n    long long p[25]={0,0,1};\r\n    for(a=3;a<=20;a++)\r\n      p[a]=(a-1)*(p[a-1]+p[a-2]); \r\n    while(~scanf(\"%d%d\",&n,&m))\r\n    {\r\n        printf(\"%lld\\n\",f(n,m)*p[m]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":452,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<cmath>  \r\n#include<climits>  \r\n#include<cstdlib>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\nint main()  \r\n{  \r\n    int n;  \r\n    int res;  \r\n    while(scanf(\"%d\", &n) != EOF)  \r\n    {  \r\n        res = n + 2;  \r\n        for(int i = 1; i <= n; ++i)  \r\n            for(int j = 1; j <= n; ++j)  \r\n                for(int k = 1; k <= n; ++k)  \r\n                {  \r\n                    if(i * j * k > n)  \r\n                        break;  \r\n                    else if(i * j * k == n)  \r\n                        res = min(res, i + j + k);  \r\n                }  \r\n        printf(\"%d\\n\", res);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":453,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <string.h>  \r\n\r\nusing namespace std;  \r\n\r\nconst int N = 100010;  \r\nint num[N];  \r\nint vis[N*10];  \r\n\r\nvoid init()  \r\n{  \r\n    num[1] = 1;  \r\n    memset(vis,0,sizeof(vis));  \r\n    vis[1] = 1;  \r\n    for(int i = 1;i <= N-5;++i)  \r\n    {  \r\n        int x = num[i] + i;  \r\n        vis[x] = 1;  \r\n        vis[num[i]] = 1;  \r\n        for(int j = num[i] + 1;;++j)  \r\n        {  \r\n            if(!vis[j])  \r\n            {  \r\n                num[i+1] = j;  \r\n                break;  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int numcase;  \r\n    init();  \r\n    scanf(\"%d\",&numcase);  \r\n    for(int i = 1;i <= numcase;++i)  \r\n    {  \r\n        int n;  \r\n        scanf(\"%d\",&n);  \r\n        printf(\"%d %d\\n\",num[n],num[n]+n);    }  \r\n    return 0;  \r\n}"
},
{
"pid":454,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\n#include<math.h>\r\nusing namespace std;\r\n\r\ndouble h,H,D;\r\ndouble f(double x)\r\n{\r\n return h*(D+x)\/H-x+(H*x)\/(D+x);\r\n}\r\ndouble BS()\r\n{\r\n double l=0,r=D*h\/(H-h),mid1,mid2;\r\n int tim=60;\r\n\r\n while(tim--)\r\n {\r\n\tmid1=l+(r-l)\/3;\r\n\tmid2=r-(r-l)\/3;\r\n\r\n\tif(f(mid1)>f(mid2))\r\n\t r=mid2;\r\n\telse\r\n\t l=mid1;\r\n }\r\n return f(l);\r\n}\r\nint main()\r\n{\r\n int t;\r\n scanf(\"%d\",&t);\r\n while(t--)\r\n {\r\n\tscanf(\"%lf%lf%lf\",&H,&h,&D);\r\n\tdouble ans=D*h\/H;\r\n\tdouble tt=BS();\r\n\tans=max(ans,tt);\r\n\tprintf(\"%.3lf\\n\",ans);\r\n }\r\n}"
},
{
"pid":455,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int n,m;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        printf(\"%d\\n\",m);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":456,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\nusing namespace std;\r\n\r\nint n, sum;\r\nint val[1005];\r\nint result[50005];\r\n\r\nint main()\r\n{\r\n    int ncases, i, j;\r\n    scanf(\"%d\", &ncases);\r\n    while(ncases--)\r\n    {\r\n        scanf(\"%d\", &n);\r\n        sum = 0;\r\n        for(i = 1; i <= n; i++)\r\n        {\r\n            scanf(\"%d\", &val[i]);\r\n            sum += val[i];\r\n        }\r\n        memset(result, 0, sizeof(result));\r\n        for(i = 1; i <= n; i++)\r\n        {\r\n            for(j = sum\/2; j >= val[i]; j--)\r\n            {\r\n                if(result[j] < result[j-val[i]] + val[i])\r\n                    result[j] = result[j-val[i]] + val[i];\r\n            }\r\n        }\r\n        printf(\"%d\\n\", sum - result[sum\/2]*2);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":457,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n    int n,i,len;\r\n    char a[101];\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%s\",a);\r\n        len=strlen(a);\r\n        for(i=0;i<len;i++)\r\n        {\r\n            if(a[i]>='a'&&a[i]<='z')\r\n                a[i]-=32;\r\n            else\r\n                a[i]+=32;\r\n        }\r\n        printf(\"%s\\n\",a);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":458,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    long long m;  \r\n    int t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%lld\",&m);  \r\n        printf(\"%lld\\n\",471+1000*(m-1));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":459,
"code":"\n#include <stdio.h>  \r\n\r\nlong long a[64][64];  \r\n\r\nint main (void)  \r\n{  \r\n    int m, n, i, j;  \r\n    a[0][0] = a[1][0] = a[1][1] = 1;  \r\n    for(i = 2; i < 64; i++)  \r\n    {  \r\n        a[i][0] = 1;  \r\n        for(j = 1; j <= i; j++)  \r\n        {  \r\n            a[i][j] = a[i - 1][j] + a[i - 1][j - 1];  \r\n        }  \r\n    }  \r\n    while(scanf(\"%d %d\", &n, &m) != EOF)  \r\n    {  \r\n        if(m == 0 && n == 0)  \r\n            break;  \r\n        printf(\"%lld\\n\", a[m + n - 1][m]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":460,
"code":"\n#include<iostream>\r\n#define N 210\r\n\r\nusing namespace std;\r\n\r\nstruct SS{int s,e;}a[N];\r\nint m[N][N];\r\n\r\nvoid Init(int n)\r\n{\r\n    int i,j;\r\n    for(i=1;i<=2*n;i++)\r\n        for(j=1;j<=2*n;j++)\r\n            m[i][j]=0;\r\n}\r\n\r\nint dp(int i,int j)\r\n{\r\n    if(m[i][j]>0)  return m[i][j];\r\n    int k,q;\r\n    for(k=i;k<j;k++)\r\n    {\r\n        q=dp(i,k)+dp(k+1,j)+a[i].s*a[k].e*a[j].e;\r\n        if(q>m[i][j])\r\n            m[i][j]=q;\r\n    }\r\n    return m[i][j];\r\n}\r\n\r\nint main()\r\n{\r\n    int n,t,i,ans;\r\n    while(cin>>n)\r\n    {\r\n        cin>>t;\r\n        a[1].s=a[n].e=t;\r\n        for(i=2;i<=n;i++)\r\n        {\r\n            cin>>t;\r\n            a[i-1].e=a[i].s=t;\r\n        }\r\n        for(i=n+1;i<=2*n-1;i++)\r\n        {\r\n            a[i].s=a[i-n].s;\r\n            a[i].e=a[i-n].e;\r\n        }\r\n        Init(n);\r\n        ans=0;\r\n        for(i=1;i<=n;i++)\r\n        {\r\n            t=dp(i,i+n-1);\r\n            if(ans<t)\r\n                ans=t;\r\n        }\r\n        cout<<ans<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":461,
"code":"\n#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    int a[21],i,n;\r\n    double temp;\r\n    for(i=2,a[0]=0,a[1]=1;i<=20;i++)\r\n        a[i]=a[i-1]+a[i-2];                                                \r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        if(n<=20)  \r\n               printf(\"%d\\n\",a[n]);\r\n        else \r\n        {\r\n              temp=n*log((1+sqrt(5.0))\/2.0)\/log(10.0)-0.5*log(5.0)\/log(10.0);\r\n              temp-=floor(temp);\r\n              temp=pow(10.0,temp);\r\n              while(temp<1000)\r\n                   temp*=10;\r\n              printf(\"%d\\n\",(int)(temp));\r\n          }                         \r\n     }\r\n    return 0;\r\n}"
},
{
"pid":463,
"code":"\n#include<stdio.h>\r\nint main() {\r\n    int T,flag=0;\r\n    scanf(\"%d\",&T);\r\n    while(T--) {\r\n        int n;\r\n        scanf(\"%d\",&n);\r\n        if(flag)\r\n            printf(\"\\n\");\r\n        flag=1;\r\n        for(int i=1; i<=n; i++) {\r\n            for(int j=i; j<=9; j++) {\r\n                printf(\"%d*%d=%d\",i,j,i*j);\r\n                if(j==9)\r\n                    printf(\"\\n\");\r\n                else\r\n                    printf(\" \");\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":464,
"code":"\n#include <stdio.h>  \r\n\r\nint main(){  \r\n    int n, a, b, t;  \r\n    while(scanf(\"%d\", &n) == 1){  \r\n        a = b = 0;  \r\n        while(n-- && scanf(\"%d\", &t))  \r\n            if(t & 1) ++b;  \r\n            else ++a;  \r\n        printf(\"%d\\n\", b & 1 ? b : a);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":465,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int n;  \r\n    char str[105];  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        memset(str,0,sizeof(str));  \r\n        scanf(\"%s\",str);  \r\n        int len=strlen(str);  \r\n        sort(str,str+len);  \r\n        int flag1=0,flag2=0;  \r\n        for(int i=len-1;i>=0;i--)  \r\n            if(str[i]!='0')  \r\n            {  \r\n                flag1=1;  \r\n                printf(\"%c\",str[i]);  \r\n            }  \r\n            else if(flag1)  \r\n            printf(\"%c\",str[i]);  \r\n        if(!flag1)  \r\n        printf(\"0\");  \r\n        printf(\" \");  \r\n        for(int i=0;i<len;i++)  \r\n            if(str[i]!='0')  \r\n            {  \r\n                flag2=1;  \r\n                printf(\"%c\",str[i]);  \r\n            }  \r\n            else if(flag2)  \r\n            printf(\"%c\",str[i]);  \r\n        if(!flag2)  \r\n        printf(\"0\");  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":467,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <stack>\r\n#include <cctype>\r\n#include <cstdlib>\r\nusing namespace std;\r\nchar str[1005];\r\nchar pp[7]={'+','-','*','\/' ,'(' ,')'};\r\nbool cmp(char a,char b)\r\n{\r\n         char ch[6][6]=\r\n    { \r\n        {'>','>','<','<','<','>'},\r\n        {'>','>','<','<','<','>'},\r\n        {'>','>','>','>','<','>'},\r\n        {'>','>','>','>','<','>'},\r\n        {'<','<','<','<','<','='},\r\n        {'>','>','>','>',' ','>'}\r\n    };\r\n    for(int i=0;i<6;i++)\r\n    {\r\n      if(a==pp[i])a=i;\r\n      if(b==pp[i])b=i;\r\n    }\r\n    if(ch[a][b]=='>'||ch[a][b]=='=')return true;\r\n    return false;\r\n}\r\nint main()\r\n{\r\n    int i,j,k,T;\r\n    scanf(\"%d%*c\",&T);\r\n    while(T--)\r\n    {\r\n        stack <char> s;\r\n        memset(str,0,sizeof(str));\r\n        gets(str);\r\n        int len = strlen(str);\r\n        s.push(str[len-1]);\r\n        for(i=0;i<len-1;i++)\r\n        {\r\n            if(isdigit(str[i]))\r\n            {\r\n                j=i+1;\r\n                while(isdigit(str[j])||str[j]=='.')\r\n                    j++;\r\n                for(k=i;k<=j-1;k++)\r\n                    printf(\"%c\",str[k]);\r\n                putchar(' ');\r\n                i=j-1;\r\n            }                          \r\n            else if(str[i]=='(')\r\n                s.push(str[i]);                \r\n            else if(str[i]=='+'||str[i]=='-'||str[i]=='*'||str[i]=='\/')\r\n            {    \r\n                if(s.empty())    s.push(str[i]);                        \r\n                while(cmp(s.top(),str[i])&&s.size()!=1)\r\n                {\r\n                    printf(\"%c \",s.top());\r\n                    s.pop();\r\n                }\r\n                s.push(str[i]);                                      \r\n            }\r\n            else if(str[i]==')')\r\n            {\r\n                while(s.top()!='('&&s.size()!=1)                \r\n                {\r\n                    printf(\"%c \",s.top());\r\n                    s.pop();\r\n                }\r\n                s.pop();\r\n            }\r\n        }\r\n         while(!s.empty()&&s.size()!=1)\r\n         {\r\n            printf(\"%c \",s.top());\r\n            s.pop();  \r\n         }\r\n        printf(\"=\\n\"); \r\n\r\n    }\r\n        return 0;\r\n}"
},
{
"pid":468,
"code":"\n#include<stdio.h>  \r\n#include<algorithm>  \r\n#include<iostream>  \r\nusing namespace std;  \r\n\r\nlong long multi(long long a, long long b, long long mod)  \r\n{  \r\n    long long temp = a, sum = 0;  \r\n    while(b)  \r\n    {  \r\n        if(b & 1) sum = (sum +  temp) % mod;  \r\n        temp = (temp + temp) % mod;  \r\n        b = b >> 1;  \r\n    }  \r\n    return sum;  \r\n}  \r\n\r\nlong long Modular_exponent(long long a, long long x, long long mod)  \r\n{  \r\n    long long t = a % mod, r = 1;  \r\n    while(x)  \r\n    {  \r\n        if(x & 1) r = multi(r, t, mod);  \r\n        t = multi(t, t, mod); x = x >> 1;  \r\n    }  \r\n    return r;  \r\n}  \r\n\r\nbool Miller_Rabin(long long n)  \r\n{  \r\n    long long time = 20;  \r\n    if(n < 2) return false;  \r\n    if(n == 2) return true;  \r\n    bool flag = false;  \r\n    for(long long k = 0; k <= time; ++k)  \r\n    {  \r\n        flag = false;  \r\n        long long d = n - 1, r = 0, t, a = rand() % (n - 2) + 2;  \r\n        while((d & 1) == 0)  \r\n        {  \r\n            d = d>>1;  \r\n            r++;  \r\n        }  \r\n        t = Modular_exponent(a, d, n);  \r\n        if(t == 1 || t == n-1) {flag = true; continue;}  \r\n        for(long long i = 1; i < r; i++)  \r\n        {  \r\n            t = multi(t, t, n);  \r\n            if(t == 1) {flag = false; return  flag;}  \r\n            if(t == n-1) {flag = true; break;}  \r\n        }  \r\n        if(!flag) break;  \r\n    }  \r\n    return flag;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    long long n;  \r\n    while(~scanf(\"%lld\",&n))  \r\n        puts((n == 4 || (n != 2 && Miller_Rabin(n))) ? \"Yes\" : \"No\");  \r\n    return 0;  \r\n}"
},
{
"pid":469,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    int n,ac[57]={0,1,1,2};  \r\n    for(int i=4;i<=55;i++)  \r\n        ac[i]=ac[i-1]+ac[i-3]+1;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        printf(\"%d\\n\",ac[n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":470,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cmath>\r\nusing namespace std;\r\ntypedef long long ll;\r\nll gcd(ll m,ll n)\r\n{\r\n    if(!n) return m;\r\n    return gcd(n,m%n);\r\n}\r\nint main()\r\n{\r\n    ll m,n,tm,tn,t;\r\n    while(scanf(\"%lld %lld\",&m,&n)!=EOF)\r\n    {\r\n        tm=m>n?m:n;\r\n        tn=m<n?m:n;\r\n        t=gcd(m,n);\r\n        tm\/=t;\r\n        tn\/=t;\r\n        if(tm%2==0||tn%2==0)\r\n        {\r\n            printf(\"%.3lf\\n\",sqrt((double)(tm*tm+tn*tn))\/2*t);\r\n            continue;\r\n        }\r\n\r\n        double ans;\r\n        ans=sqrt((double)(tm*tm+tn*tn))*(tm*tn+1)\/(2*tm*tn)*t;\r\n        printf(\"%.3lf\\n\",ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":471,
"code":"\n#pragma comment(linker, \"\/STACK:102400000,102400000\")  \r\n#include <functional>  \r\n#include <algorithm>  \r\n#include <iostream>  \r\n#include <cstring>  \r\n#include <cstdio>  \r\n#include <string>  \r\n#include <vector>  \r\n#include <ctime>  \r\n#include <queue>  \r\n#include <cmath>  \r\n#include <set>  \r\n#define CLR(a,v) memset(a,v,sizeof(a))  \r\nusing namespace std;  \r\ntypedef long long       ll;  \r\ntypedef pair<int,int>   pii;  \r\n\r\nconst double PI = acos(-1.0);  \r\nconst int N = 1e5+10;  \r\n\r\nll gcd (int a,int b){  \r\n    return b ? gcd(b, a%b) : a ;  \r\n}  \r\n\r\nvoid TestRand(){  \r\n    srand((unsigned int)time(NULL));  \r\n    int g = 0 , i = 0;  \r\n    for( i = 0 ; i < 500000 ; i++)  \r\n        if(gcd( rand()+1,rand()+1 ) == 1){  \r\n            g++;  \r\n        }  \r\n    printf(\"%lf  %lf\\n\",g*1.0\/i,6.0\/(PI*PI));  \r\n}  \r\n\r\nint prime[N];  \r\nbool p[N];  \r\nint GetPrime(){  \r\n    int cnt = 0;  \r\n    for(int i = 2 ; i < N ; i++){  \r\n        if( !p[i] ){  \r\n            prime[cnt++] = i;  \r\n            for(int j = i+i ; j < N ; j+=i){  \r\n                if(!p[j])  \r\n                    p[j]=true;  \r\n            }  \r\n        }  \r\n    }  \r\n    return cnt;  \r\n}  \r\n\r\nint f[N]; \r\nvoid Init(int PrimeCnt){  \r\n    f[1]=0;  \r\n    for(int i = 2 ; i < N; i++){  \r\n        if(!p[i]){f[i]=1;continue;} \r\n        int a = i;  \r\n        for(int j = 0 ; j < PrimeCnt ; j++){  \r\n            if(a % prime[j] == 0){  \r\n                f[i]++;  \r\n                a \/= prime[j];  \r\n            }  \r\n            if(a % prime[j] == 0){  \r\n                f[i] = -1;  \r\n                a \/= prime[j];  \r\n            }  \r\n            if(a < prime[j] || f[i]==-1) break;  \r\n        }  \r\n    }  \r\n}  \r\n\r\nint main(){  \r\n    int PrimeCnt = GetPrime();  \r\n    Init(PrimeCnt);  \r\n    int T;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--){  \r\n        int m,n;  \r\n        scanf(\"%d%d\",&m, &n);  \r\n        int bound = min(m,n);  \r\n\r\n        ll ans = 0;  \r\n        for(int i = 1 ; i <= bound ; i++){  \r\n            if(f[i]>=0){  \r\n                ans += (f[i]&1) ? (-((ll)n\/i)*((ll)m\/i)) : (((ll)n\/i)*((ll)m\/i));  \r\n            }  \r\n        }  \r\n        printf(\"%lld\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":472,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\nusing namespace std;\r\n\r\ntypedef struct\r\n{\r\n    int x1,y1,x2,y2,_max;\r\n}Matrix;\r\nMatrix matrix[1003];\r\n\r\nbool cover(int i,int j)\r\n{\r\n    if(matrix[i].x1>=matrix[j].x2||matrix[j].x1>=matrix[i].x2) return false;\r\n    if(matrix[i].y1>=matrix[j].y2||matrix[j].y1>=matrix[i].y2) return false;\r\n    return true;\r\n}\r\n\r\nint main()\r\n{\r\n    int N,M,C;\r\n    while(scanf(\"%d %d %d\",&N,&M,&C)!=EOF)\r\n    {\r\n        int ans=0;\r\n        int a,b,h,x,y;\r\n        for(int i=0;i<C;i++)\r\n        {\r\n            int tmax=0;\r\n            scanf(\"%d %d %d %d %d\",&a,&b,&h,&x,&y);\r\n            matrix[i].x1=x;\r\n            matrix[i].y1=y;\r\n            matrix[i].x2=x+a;\r\n            matrix[i].y2=y+b;\r\n            for(int j=i-1;j>=0;j--)\r\n            {\r\n                if(cover(i,j))\r\n                {\r\n                    tmax=max(tmax,matrix[j]._max);\r\n                }\r\n\r\n            }\r\n            matrix[i]._max=tmax+h;\r\n            ans=max(ans,matrix[i]._max);\r\n        }\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":473,
"code":"\n#include<iostream>  \r\n#include<cmath>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int a,b;  \r\n    while(scanf(\"%d%d\",&a,&b)!=EOF)  \r\n    {  \r\n        if(a==0)  \r\n            printf(\"0\\n\");  \r\n        else if(b==0)  \r\n            printf(\"1\\n\");  \r\n        else  \r\n        {  \r\n            int s=1;  \r\n            a%=10;  \r\n            b=b%4+4; \r\n            printf(\"%d\\n\",(int)pow(a,b)%10);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":474,
"code":"\n#include <iostream>\r\n#include <string.h>\r\n#include <stdio.h>\r\n\r\nusing namespace std;\r\ntypedef long long LL;\r\nconst int N = 10000005;\r\nconst int M = 1000005;\r\n\r\nbool prime[N];\r\nint p[N];\r\nint k;\r\n\r\nvoid isprime()\r\n{\r\n    k = 0;\r\n    memset(prime,true,sizeof(prime));\r\n    for(int i=2;i<N;i++)\r\n    {\r\n        if(prime[i])\r\n        {\r\n            p[k++] = i;\r\n            for(int j=i+i;j<N;j+=i)\r\n                prime[j] = false;\r\n        }\r\n    }\r\n}\r\n\r\nLL quick_mod(LL a,LL b,LL m)\r\n{\r\n    LL ans = 1;\r\n    a %= m;\r\n    while(b)\r\n    {\r\n        if(b&1)\r\n        {\r\n            ans = ans * a % m;\r\n            b--;\r\n        }\r\n        b >>= 1;\r\n        a = a * a % m;\r\n    }\r\n    return ans;\r\n}\r\n\r\nint main()\r\n{\r\n    int n,m,t;\r\n    isprime();\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d%d\",&n,&m);\r\n        LL cnt = 0;\r\n        for(int i=0;i < k;i++)\r\n        {\r\n            if(p[i] > n) break;\r\n            cnt += n \/ p[i];\r\n        }\r\n        LL ans = quick_mod(2,cnt,m);\r\n        printf(\"%I64d\\n\",ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":475,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<algorithm>\r\nusing namespace std;\r\nconst int MAXM=30004;\r\nconst int INF=0x7fffffff-1;\r\ntypedef struct\r\n{\r\n    int y1,y2;\r\n}Line;\r\nLine line[MAXM];\r\nint temp1[MAXM\/2+1];\r\nint temp2[MAXM\/2+1];\r\nint cnt;\r\nbool cmp(Line l1,Line l2)\r\n{\r\n    return l1.y1>l2.y1;\r\n}\r\nvoid merge(int start,int mid,int end)\r\n{\r\n    int n1,n2;\r\n    n1=mid-start+1;\r\n    n2=end-mid;\r\n    for(int i=0;i<n1;i++)\r\n    temp1[i]=line[start+i].y2;\r\n    for(int i=0;i<n2;i++)\r\n    temp2[i]=line[mid+i+1].y2;\r\n    temp1[n1]=-INF;\r\n    temp2[n2]=-INF;\r\n    for(int k=start,i=0,j=0;k<=end;k++)\r\n    {\r\n        if(temp1[i]>=temp2[j])\r\n        {\r\n            line[k].y2=temp1[i];\r\n            i++;\r\n        }\r\n        else\r\n        {\r\n            cnt+=n1-i;\r\n            line[k].y2=temp2[j];\r\n            j++;\r\n        }\r\n    }\r\n\r\n}\r\nvoid mergesort(int start,int end)\r\n{\r\n    if(start>=end) return;\r\n    int mid=(end+start)\/2;\r\n    mergesort(start,mid);\r\n    mergesort(mid+1,end);\r\n    merge(start,mid,end);\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    int lx,rx;\r\n    while(scanf(\"%d%d\",&lx,&rx)!=EOF)\r\n    {\r\n        cnt=0;\r\n        int n,k,b;\r\n        scanf(\"%d\",&n);\r\n        for(int i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d%d\",&k,&b);\r\n            line[i].y1=lx*k+b;\r\n            line[i].y2=rx*k+b;\r\n\r\n        }\r\n        sort(line,line+n,cmp);\r\n        mergesort(0,n-1);\r\n        printf(\"%d\\n\",cnt+n+1);\r\n\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":476,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\n#include<string.h>  \r\n#include<stack>  \r\n#include<set>  \r\n#include<queue>  \r\n#include<vector>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\n#define MAXN 1010000  \r\n#define LL long long  \r\n#define ll __int64  \r\n#define INF 0xfffffff  \r\n#define mem(x) memset(x,0,sizeof(x))  \r\n#define PI acos(-1)  \r\nusing namespace std;  \r\nint gcd(int a,int b){return b?gcd(b,a%b):a;}  \r\nLL powmod(LL a,LL b,LL MOD){LL ans=1;while(b){if(b%2)ans=ans*a%MOD;a=a*a%MOD;b\/=2;}return ans;}  \r\nint cnt[10010];  \r\nint main()  \r\n{  \r\n    int t,i,j;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        int a;  \r\n        int M=-INF;  \r\n        mem(cnt);  \r\n        for(i=0;i<10;i++)  \r\n        {  \r\n            scanf(\"%d\",&a);  \r\n            M=max(M,a);  \r\n            int x=a;  \r\n            for(j=2;j<=a;j++)  \r\n            {  \r\n                if(x%j==0)  \r\n                {  \r\n                    while(x%j==0)  \r\n                    {  \r\n                        cnt[j]++;  \r\n                        x\/=j;  \r\n                    }  \r\n                }  \r\n                if(x==1)  \r\n                break;  \r\n            }  \r\n        }  \r\n        LL ans=1;  \r\n        for(i=1;i<=M;i++)  \r\n        {  \r\n            if(cnt[i]>=1)  \r\n            ans*=(cnt[i]+1);  \r\n        }  \r\n        printf(\"%lld\\n\",ans%10);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":477,
"code":"\n#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n    double a, b, c;\r\n    int n;\r\n    scanf(\"%d\", &n);\r\n    while(n--){\r\n\r\n            scanf(\"%lf %lf %lf\", &a, &b, &c);\r\n            if(fabs(a+b-c) <= 1e-5)\r\n            {\r\n                printf(\"Yes\\n\");\r\n            }\r\n            else\r\n            {\r\n                printf(\"No\\n\");\r\n            }\r\n\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":478,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cmath>  \r\nusing namespace std;  \r\nconst int N=500010;  \r\nint ans[N]={0,-1};  \r\nvoid init(){  \r\n    int x = sqrt(N+0.5);  \r\n    for(int i = 2;i <= x;++i){  \r\n      ans[i*i] += i;  \r\n      for(int j = i+1;j <=N\/i;++j){  \r\n        ans[j*i] +=(i+j);  \r\n      }  \r\n    }  \r\n}  \r\nint main(){   \r\n    init();  \r\n    int numcase;  \r\n    scanf(\"%d\",&numcase);  \r\n    while(numcase--){  \r\n      int n;  \r\n      scanf(\"%d\",&n);  \r\n      printf(\"%d\\n\",ans[n]+1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":479,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\n\r\nconst int N = 10005;  \r\nlong long euler[N];  \r\n\r\nvoid Fast_Euler()  \r\n{  \r\n    for(int i = 1; i < N; ++i) \r\n        euler[i] = i;  \r\n    for(int i = 2; i < N; ++i)  \r\n    {  \r\n        if(euler[i] == i)  \r\n        {  \r\n            for(int j = i; j < N; j += i)  \r\n                euler[j] = euler[j] \/ i * (i - 1);  \r\n        }  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int n;  \r\n    Fast_Euler();  \r\n    while(~scanf(\"%d\", &n))  \r\n        printf(\"%lld\\n\", euler[n]);  \r\n}"
},
{
"pid":480,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nint F(int n)\r\n{\r\n    if(n==1)\r\n    return 3;\r\n    else if(n==2)\r\n    return 7;\r\n    else return F(n-1)+F(n-2);\r\n}\r\n\r\nint panduan(int m)\r\n{\r\n    int i;\r\n    for(i=2;i<=sqrt(m);i++)\r\n    if(m%i==0)\r\n    return 0;\r\n    return 1;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while(scanf(\"%d\",&n)&&n!=-1)\r\n    {\r\n        if(panduan(F(n)))\r\n        printf(\"Yes\\n\");\r\n        else\r\n        printf(\"No\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":481,
"code":"\n#include<iostream>\r\n#include<algorithm>\r\n#include<cmath>\r\n#include<string.h>\r\n#include<stdio.h>\r\n#include<stdlib.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n\tchar a[100];\r\n\tchar b[100];\r\n\tchar c[100];\r\n\twhile(scanf(\"%s\",a)!=EOF)\r\n\t{\r\n\t\tint len=strlen(a);\r\n\t\tint j=0,k=0;\r\n\t\tfor(int i=0; i<len; i++)\r\n\t\t{\r\n\t\t\tif(a[i]>='a'&&a[i]<='m')\r\n\t\t\t{\r\n\t\t\t\tb[j++]=a[i];\r\n\t\t\t}\r\n\t\t\telse if(a[i]>='n'&&a[i]<='z')\r\n\t\t\t{\r\n\t\t\t\tc[k++]=a[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(j==0)\r\n\t\t{\r\n\t\t\tfor(int i=0; i<k\/2; i++)\r\n\t\t\t{\r\n\t\t\t\tb[i]=c[i]-13;\r\n\t\t\t}\t\r\n\t\t\tfor(int i=k-1; i>=k\/2; i--)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",c[i]);\r\n\t\t\t}\r\n\t\t\tfor(int i=k\/2-1; i>=0; i--)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",b[i]);\r\n\t\t\t}\r\n\t\t\tcout<<endl;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(k==0)\r\n\t\t{\r\n\t\t\tfor(int i=0; i<j\/2; i++)\r\n\t\t\t{\r\n\t\t\t\tc[i]=b[i]+13;\r\n\t\t\t}\r\n\t\t\tfor(int i=j-1; i>=j\/2; i--)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",b[i]);\r\n\t\t\t}\r\n\t\t\tfor(int i=j\/2-1; i>=0; i--)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",c[i]);\r\n\t\t\t}\r\n\t\t\tcout<<endl;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif(j>k)\r\n\t\t{ \r\n\t\t\tint jishu=0;\r\n\t\t\tfor(int i=0;i<len;i++)\r\n\t\t\t{\r\n\t\t\t\tif(a[i]>='a'&&a[i]<='m')\r\n\t\t\t\t{\r\n\t\t\t\t\ta[i]='0';\r\n\t\t\t\t\tjishu++;\r\n\t\t\t\t}\r\n\t\t\t\tif(jishu==j-k)\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int i=len-1;i>=0;i--)\r\n\t\t\t{\r\n\t\t\t\tif(a[i]!='0')\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%c\",a[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcout<<endl;\r\n\t\t}\r\n\t\telse if(j<k)\r\n\t\t{\r\n\t\t\tint jishu=0;\r\n\t\t\tfor(int i=0;i<len;i++)\r\n\t\t\t{\r\n\t\t\t\tif(a[i]>='n'&&a[i]<='z')\r\n\t\t\t\t{\r\n\t\t\t\t\ta[i]='0';\r\n\t\t\t\t\tjishu++;\r\n\t\t\t\t}\r\n\t\t\t\tif(jishu==k-j)\r\n\t\t\t\t{\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(int i=len-1;i>=0;i--)\r\n\t\t\t{\r\n\t\t\t\tif(a[i]!='0')\r\n\t\t\t\t{\t\r\n\t\t\t\t\tprintf(\"%c\",a[i]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tcout<<endl;\r\n\t\t}\r\n\t\telse if(j==k)\r\n\t\t{\r\n\t\t\tfor(int i=len-1;i>=0;i--)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%c\",a[i]);\r\n\t\t\t}\r\n\t\t\tcout<<endl;\r\n\t\t}\r\n\t}\r\n}"
},
{
"pid":482,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<iostream>\r\nusing namespace std;\r\n\r\nlong long key[40];\r\nint fun(int n,int mid,int k,int f)\r\n{\r\n\tif(n == mid)return 0;\r\n\tint sum = 0;\r\n\twhile(mid && k){\r\n\t\tif(n == mid)\r\n\t\t\tbreak;\r\n\t\telse if(n < mid){\r\n\t\t\tmid -= key[k -1];\r\n\t\t\tsum = sum + f * (key[k - 1] - 1);\r\n\t\t}\r\n\t\telse{\r\n\t\t\tmid += key[k - 1];\r\n\t\t\tsum = sum - f * (key[k -1] - 1);\r\n\t\t}\r\n\t\tk --;\r\n\t}\r\n\treturn sum;\r\n}\r\n\r\nint main()\r\n{\r\n\tkey[0] = 1;\r\n\tfor(int i = 1;i < 33; ++ i)\r\n\t\tkey[i] = key[i - 1] * 2;\r\n\tlong long n, m, temp;\r\n\twhile(~scanf(\"%lld%lld\", &n, &m))\r\n\t{\r\n\t\tint k;\r\n\t\tif(n > m)temp = n,n = m,m =temp;\r\n\t\tfor(int i = 0;i < 32; ++ i)\r\n\t\t\tif(key[i] >= m){\r\n\t\t\t\tk = i;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\tint mid = key[k];\r\n\r\n\t\twhile(mid){\r\n\t\t\tif(n <= mid && m >= mid)\r\n\t\t\t\tbreak;\r\n\t\t\telse if(m < mid)\r\n\t\t\t\tmid -= key[k - 1];\r\n\t\t\telse\r\n\t\t\t\tmid += key[k - 1];\r\n\t\t\tk --;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\", fun(n, mid, k, 1) + fun(m, mid, k, -1));\r\n\t}\r\n}"
},
{
"pid":483,
"code":"\n#include<iostream>  \r\n#include<queue>  \r\n#include<cstring>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nstruct node{  \r\n    int x,y,step,time;  \r\n};  \r\nint dir[4][2]={1,0,0,1,-1,0,0,-1},map[12][12];  \r\nbool ever[12][12];  \r\nint BFS(int x,int y){  \r\n    node cur,next;  \r\n    cur.x = x;cur.y = y;cur.step = 0,cur.time = 6;  \r\n    queue<node>q;  \r\n    q.push(cur);  \r\n    while(!q.empty()){  \r\n        cur = q.front();  \r\n        q.pop();  \r\n        if(map[cur.x][cur.y]==3){  \r\n            return cur.step;  \r\n        }  \r\n        if(cur.time == 1) continue;  \r\n        for(int i=0;i<4;++i){  \r\n            next.x = cur.x + dir[i][0];  \r\n            next.y = cur.y + dir[i][1];  \r\n            next.step = cur.step + 1;  \r\n            next.time = cur.time - 1;  \r\n            if(map[next.x][next.y]&&!ever[next.x][next.y]){  \r\n                if(map[next.x][next.y] == 4){  \r\n                    next.time = 6;  \r\n                    map[next.x][next.y] = 1;  \r\n                }  \r\n                q.push(next);  \r\n            }  \r\n        }  \r\n    }  \r\n    return -1;  \r\n}  \r\nint main(){  \r\n    int n,m,T,startx=1,starty=1;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--){   \r\n        memset(map,0,sizeof(map));  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        for(int i=1;i<=n;++i){  \r\n            for(int j=1;j<=m;++j){  \r\n                scanf(\"%d\",&map[i][j]);  \r\n                if(map[i][j]==2) startx = i,starty = j;  \r\n            }  \r\n        }  \r\n         printf(\"%d\\n\",BFS(startx,starty));  \r\n\r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":484,
"code":"\n#include<cstdio>  \r\n#include <iostream>  \r\n#include <string.h>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    char NIUBI[5];  \r\n    int i = 0, t = 0;  \r\n    while (cin>>NIUBI)  \r\n    {  \r\n        if (strcmp(NIUBI, \"I\") == 0) t = 1;  \r\n        else if (strcmp(NIUBI, \"II\") == 0) t = 2;  \r\n        else if (strcmp(NIUBI, \"III\") == 0) t = 3;  \r\n        else if (strcmp(NIUBI, \"IV\") == 0) t = 4;  \r\n        else if (strcmp(NIUBI, \"V\") == 0) t = 5;  \r\n        else if (strcmp(NIUBI, \"VI\") == 0) t = 6;  \r\n        else if (strcmp(NIUBI, \"VII\") == 0) t = 7;  \r\n        else if (strcmp(NIUBI, \"VIII\") == 0) t = 8;  \r\n        else if (strcmp(NIUBI, \"IX\") == 0) t = 9;  \r\n        else if (strcmp(NIUBI, \"X\") == 0) t = 10;  \r\n        else if (strcmp(NIUBI, \"XI\") == 0) t = 11;  \r\n        else if (strcmp(NIUBI, \"XII\") == 0) t = 12;  \r\n     printf(\"Case %d: %d\\n\",++i,t);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":485,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    int n;\r\n    long long a,b;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%lld%lld\",&a,&b);\r\n        if(a==0 || b==0)\r\n            printf(\"0\\n\");\r\n        else\r\n        {\r\n            int tp=(a%9)*(b%9)%9;\r\n            if(tp==0)\r\n                tp=9;\r\n            printf(\"%d\\n\",tp);\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":486,
"code":"\n#include<stdio.h>  \r\nint calc(int a,char o,int b)  \r\n{  \r\n    switch(o)  \r\n    {  \r\n    case '+':  \r\n        return a+b;  \r\n    case '-':  \r\n        return a-b;  \r\n    case '*':  \r\n        return a*b;  \r\n    case '\/':  \r\n        return a\/b;  \r\n    case '%':  \r\n        return a%b;  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int ncase;  \r\n    int a,b,c,r;  \r\n    char o;  \r\n    scanf(\"%d\",&ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        scanf(\"%d%c%d=%d\",&a,&o,&b,&c);  \r\n        if((o=='\/'||o=='%')&&b==0)  \r\n        {  \r\n            puts(\"Input Error\");  \r\n            continue;  \r\n        }  \r\n        r=calc(a,o,b);  \r\n        if(r==c)  \r\n            puts(\"Accept\");  \r\n        else  \r\n            printf(\"Wrong Answer\\n%d\\n\",r);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":487,
"code":"\n#include <iostream>\r\n#include <cmath>\r\n#include <cstdio>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\tdouble x1, y1, x2, y2, x3, y3;\r\n\twhile(scanf(\"%lf %lf %lf %lf %lf %lf\", &x1, &y1, &x2, &y2, &x3, &y3) != EOF) {\r\n\t\tdouble s = fabs((x2 - x1)*(y3 - y1) - (y2 - y1)*(x3 - x1))\/2;\r\n\t\tdouble max_x, min_x;\r\n\t\tif(x1 > x2) { max_x = x1; min_x = x2; }\r\n\t\telse { max_x = x2; min_x = x1; }\r\n\t\tif(max_x > x3) ;\r\n\t\telse max_x = x3;\r\n\t\tif(min_x < x3) ;\r\n\t\telse min_x = x3;\r\n\t\tdouble max_y, min_y;\r\n\t\tif(y1 > y2) {max_y = y1; min_y = y2; }\r\n\t\telse {max_y = y2; min_y = y1; }\r\n\t\tif(max_y > y3) ;\r\n\t\telse max_y = y3;\r\n\t\tif(min_y < y3) ;\r\n\t\telse min_y = y3;\r\n\t\tdouble sum = 0;\r\n\t\tfor(int i = min_x; i <= max_x; i++) {\r\n\t\t\tfor(int j = min_y; j <= max_y; j++) {\r\n\t\t\t\tdouble s1 = fabs((x1 - i)*(y2 - j) - (x2 - i)*(y1 - j))\/2;\r\n\t\t\t\tdouble s2 = fabs((x3 - i)*(y1 - j) - (x1 - i)*(y3 - j))\/2;\r\n\t\t\t\tdouble s3 = fabs((x2 - i)*(y3 - j) - (x3 - i)*(y2 - j))\/2;\r\n\t\t\t\tif(s1 + s2 + s3 == s) sum++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << sum << endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":488,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n\r\nint prime[40]={1,1,0,0,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,0,1,1,1,1,1,0,1,0,1,1,01,1,1,0,1,1};\r\nint visit[21];\r\nint ring[21];\r\n\r\nvoid DFS(int k,int n)\r\n{\r\n    int i;\r\n    if(k==n+1&&prime[ring[n]+ring[1]]==0)\r\n    {\r\n        printf(\"1\");\r\n        for(i=2;i<=n;++i)\r\n            printf(\" %d\",ring[i]);\r\n        printf(\"\\n\");\r\n        return;\r\n    }\r\n    for(i=2;i<=n;++i)\r\n    {\r\n        if(!visit[i]&&!prime[i+ring[k-1]])\r\n        {\r\n            visit[i]=1;\r\n            ring[k]=i;\r\n            DFS(k+1,n);\r\n            visit[i]=0;\r\n        }\r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int T,n;\r\n    T=1;\r\n    while(scanf(\"%d\",&n),n)\r\n    {\r\n        printf(\"Case %d:\\n\",T++);\r\n        if(n==1)\r\n        {\r\n            printf(\"1\\n\");\r\n            continue;\r\n        }\r\n        if(n&1)\r\n        {\r\n            printf(\"No Answer\\n\");\r\n            continue;\r\n        }\r\n        memset(visit,0,sizeof(visit));\r\n        visit[1]=ring[1]=1;\r\n        DFS(2,n);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":489,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include <iostream>  \r\nusing namespace std;  \r\n#define INF 1<<29;  \r\nint s,t;    \r\nint m;       \r\nint cf[605][605];   \r\nint flow;      \r\nint cf_path;      \r\nbool flag;        \r\nint vh[1000];  \r\nint h[1000];     \r\nvoid sap()  \r\n{  \r\n    flow =cf_path=s=t=0;  \r\n    flag=false;  \r\n    memset(cf,0,sizeof(cf));  \r\n    memset(vh,0,sizeof(vh));  \r\n    memset(h,0,sizeof(h));  \r\n}  \r\nvoid find_path_sap(int cur)  \r\n{  \r\n    if(cur==t)  \r\n    {  \r\n        flow++;  \r\n        flag=true;  \r\n        return;  \r\n    }  \r\n    int i;  \r\n    int minH=m*2;  \r\n    int tmp_cf_path=cf_path;  \r\n    for(i=0;i<=m;i++)  \r\n    {  \r\n        if(cf[cur][i])  \r\n        {  \r\n            if(h[i]+1==h[cur])  \r\n            {  \r\n\r\n                find_path_sap(i);  \r\n                if(h[1]>=m) return;  \r\n                if(flag)  break;  \r\n            }  \r\n            if(h[i]<minH) minH=h[i];  \r\n        }  \r\n    }  \r\n    if(flag)  \r\n    {  \r\n        cf[cur][i]--;  \r\n        cf[i][cur]++;  \r\n    }  \r\n    else  \r\n    {  \r\n        vh[h[cur]]--;  \r\n        if(vh[h[cur]]==0) h[0]=m;  \r\n        h[cur]=minH+1;  \r\n        vh[h[cur]]++;  \r\n    }  \r\n}  \r\nint solve()  \r\n{  \r\n    vh[0]=m;  \r\n    flow=0;  \r\n    while(h[0]<m)\r\n    {  \r\n        flag=false;  \r\n        cf_path=INF;  \r\n        find_path_sap(s);  \r\n    }  \r\n    return flow;  \r\n}  \r\nvoid addEdge(int x,int y,int c)  \r\n{  \r\n    cf[x][y]+=c;  \r\n}  \r\nint main()  \r\n{   \r\n    int mm,a;  \r\n    scanf(\"%d\",&a);  \r\n    while(a--)  \r\n    {  \r\n        int cn,n;  \r\n        scanf(\"%d%d\",&cn,&n);  \r\n        sap();  \r\n        mm=cn+n+3;  \r\n        s=0;  \r\n        t=mm;  \r\n        m=mm;  \r\n        int i,cf=0,kf=0;  \r\n        for(i=1;i<=cn;i++)  \r\n        {  \r\n            int c;  \r\n            scanf(\"%d\",&c);  \r\n            cf+=c;  \r\n            addEdge(0,i,c);  \r\n            for(int j=cn+1;j<=cn+n;j++)  \r\n                addEdge(i,j,1);  \r\n        }  \r\n        for(i=cn+1;i<=cn+n;i++)  \r\n        {  \r\n            int x;  \r\n            scanf(\"%d\",&x);  \r\n            kf+=x;  \r\n            addEdge(i,cn+n+3,x);  \r\n        }  \r\n        if(cf!=kf)  \r\n        printf(\"Terrible\\n\");  \r\n        else  \r\n        {  \r\n        int hs;  \r\n        hs=solve();  \r\n        if(cf==hs)  \r\n        printf(\"Not Sure\\n\");  \r\n        else   \r\n             printf(\"Terrible\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":490,
"code":"\n#include<cstdio>\r\n#include<iostream>\r\n#include<stdlib.h>\r\n#include<cstring>\r\n#include<map>\r\nusing namespace std;\r\nint main()\r\n{\r\n    char a[11],b[11],str[3001],c[11],d;\r\n    int i,len,k;\r\n    map<string,string> m;\r\n    map<string,string>::iterator p;\r\n    gets(a);     \r\n    while(1)\r\n    {\r\n        gets(str);\r\n        if(strcmp(str,\"END\")==0)break;        \r\n        sscanf(str,\"%s%s\",a,b);\r\n        m[b]=a;\r\n    }\r\n    gets(a);    \r\n    while(1)\r\n    {\r\n            gets(str);\r\n            if(strcmp(str,\"END\")==0)break;\r\n            len=strlen(str);k=0;\r\n            for(i=0;i<len;i++)\r\n            {\r\n               if(str[i]>='a'&&str[i]<='z')\r\n               c[k++]=str[i];     \r\n               else\r\n               {\r\n                  c[k]='\\0'; d=str[i];    \r\n                  if(strlen(c)==0)\r\n                  {cout<<d;continue;}  \r\n                  else\r\n                  {\r\n                     p=m.find(c);\r\n                     if(p!=m.end())    \r\n                     cout<<m[c];\r\n                     else\r\n                     cout<<c;\r\n                  }\r\n                  cout<<d;  \r\n                  k=0;continue;\r\n               }\r\n            }\r\n            c[k]='\\0';\r\n            if(strlen(c)==0)cout<<endl;\r\n            else\r\n            {\r\n              p=m.find(c);\r\n              if(p!=m.end())      \r\n              cout<<m[c];\r\n              else\r\n              cout<<c;\r\n              cout<<endl;\r\n            }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":491,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <cstdlib>\r\n#include <vector>\r\n#include <climits>\r\n#include <algorithm>\r\n#include <cmath>\r\n#define LL long long\r\nusing namespace std;\r\nbool tri[21][21];\r\nint ans[21],cnt = 0;\r\nvoid dfs(int n) {\r\n    if(n > 20) return;\r\n    for(int k = 0; k < 2; k++) {\r\n        tri[n][0] = k;\r\n        cnt += tri[n][0];\r\n        for(int i = 1; i < n; i++) {\r\n            tri[n][i] = tri[n-1][i-1]?tri[n][i-1]:!tri[n][i-1];\r\n            cnt += tri[n][i];\r\n        }\r\n        if((cnt<<1) == (n*(n+1)>>1)) ans[n]++;\r\n        dfs(n+1);\r\n        for(int i = 0; i < n; i++)\r\n            cnt -= tri[n][i];\r\n    }\r\n}\r\nint main() {\r\n    int n;\r\n    dfs(1);\r\n    while(~scanf(\"%d\",&n)) printf(\"%d\\n\",ans[n]);\r\n    return 0;\r\n}"
},
{
"pid":492,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\ntypedef long long LL;  \r\nint n,K,cnt;  \r\nint s[150];  \r\nint p[150];  \r\nLL dp[11][150][101];  \r\nbool ok(int x){  \r\n    if(x&(x<<1)) return false;  \r\n    return true;  \r\n}  \r\nvoid init(){  \r\n    cnt = 0;  \r\n    for(int i = 0;i < (1<<n);i++){  \r\n        if(ok(i)) s[cnt++] = i;  \r\n    }  \r\n}  \r\nint cal(int x){  \r\n    int count = 0;  \r\n    while(x){  \r\n        count ++;  \r\n        x &= (x-1);  \r\n    }  \r\n    return count;  \r\n}  \r\nint main(){  \r\n    while(cin >> n >> K){  \r\n        init();  \r\n        memset(dp,0,sizeof(dp));  \r\n        for(int i = 0;i < cnt;i++){  \r\n            p[i] = cal(s[i]);  \r\n            if(p[i] <= K) dp[0][i][p[i]] = 1;  \r\n        }  \r\n        for(int i = 1;i < n;i++){  \r\n            for(int j = 0;j < cnt;j++){  \r\n                if(p[j] > K) continue;  \r\n                for(int k = 0;k < cnt;k++){  \r\n                    if(s[j]&s[k]) continue;  \r\n                    if((s[j]&(s[k]<<1))||(s[j]&(s[k]>>1))) continue;  \r\n                    for(int r = 0;r <= K;r++)  \r\n                        if(r + p[j] <= K )  \r\n                            dp[i][j][r+p[j]] += dp[i-1][k][r];  \r\n                }  \r\n            }  \r\n        }  \r\n        LL ans = 0;  \r\n        for(int i = 0;i < cnt;i++){  \r\n            ans += dp[n-1][i][K];  \r\n        }  \r\n        cout << ans << endl;  \r\n    }  \r\n}"
},
{
"pid":494,
"code":"\n#include <stdio.h>\r\n\r\nint judge(int buf[], int n, int s, int p);\r\nvoid bubble(int a[], int n);\r\nint main(void)\r\n{\r\n\tint t, n, s, p, i, k, cases = 0;\r\n\tint buf[100];\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d%d%d\", &n, &s, &p);\r\n\t\tfor (i = 0; i < n; i++)\r\n\t\t\tscanf(\"%d\", &buf[i]);\r\n\t\tbubble(buf, n);\r\n\t\tprintf(\"Case #%d: %d\\n\", ++cases, judge(buf, n, s, p));\r\n\t}\r\n\treturn 0;\r\n}\r\nint judge(int buf[], int n, int s, int p)\r\n{\r\n\tint i, a[100], b[100], cnt = 0;\r\n\tfor (i = 0; i < n; i++) {\r\n\tif (buf[i] == 0 || buf[i] == 1)\r\n\ta[i] = buf[i], b[i] = -1;\r\n\telse if (buf[i] == 29 || buf[i] == 30)\r\n\ta[i] = 10, b[i] = -1;\r\n\telse if (buf[i] >= 2 && buf[i] <= 28)\r\n\tif (buf[i] % 3 == 2)\r\n\ta[i] = buf[i] \/ 3 + 1, b[i] = buf[i] \/ 3 + 2;\r\n\telse\r\n\ta[i] = buf[i] \/ 3 + buf[i] % 3, b[i] = buf[i] \/ 3 + 1;\r\n\t}\r\n\tfor (i = 0; i < n && cnt < s; i++)\r\n\t\tif (b[i] >= p)\r\n\t\t\ta[i] = -1, cnt++;\r\n\tfor (i = 0; i < n; i++)\r\n\t\tif (a[i] >= p) cnt++;\r\n\t\t\treturn cnt;\r\n}\r\n\r\nvoid bubble(int a[], int n)\r\n{\r\n\tint i, j, tmp, swapped = 1;\r\n\tfor (i = 0; swapped; i++) {\r\n\t\tswapped = 0;\r\n\t\tfor (j = 0; j < n - (i + 1); j++) {\r\n\t\t\tif (a[j] > a[j + 1]) {\r\n\t\t\t\ttmp = a[j];\r\n\t\t\t\ta[j] = a[j + 1];\r\n\t\t\t\ta[j + 1] = tmp;\r\n\t\t\t\tswapped = 1;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}"
},
{
"pid":495,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint fun(char *s)  \r\n{  \r\n    int len=strlen(s);  \r\n    int i,j=len-1,k;  \r\n    for(i=0;i<j;i++,j--)  \r\n    {  \r\n        if(s[i]!=s[j])  \r\n            return 0;  \r\n    }  \r\n    return 1;  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        char s[500];  \r\n        int len,i,j,k;  \r\n        scanf(\"%s\",s);  \r\n        len=strlen(s);  \r\n        if(fun(s))  \r\n        {  \r\n            printf(\"%s\\n\",s);  \r\n            continue;  \r\n        }  \r\n        for(i=0;i<len;i++)  \r\n        {  \r\n            k=len;  \r\n            for(j=i;j>=0;j--)  \r\n            {  \r\n                s[k++]=s[j];  \r\n                s[k]='\\0';    \r\n            }if(fun(s))  \r\n                    break;  \r\n        }  \r\n        printf(\"%s\\n\",s);  \r\n    }  \r\n}"
},
{
"pid":496,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint map[30][30],b[50],n,m,in[50];  \r\nchar c[100];  \r\nvoid toposort()  \r\n{  \r\n    int incnt=0,flag=1,front=1,rear=1,i,j,k;  \r\n    for(i=1;i<=n;i++)  \r\n        if(!in[i])  \r\n        {  \r\n            incnt++;  \r\n            b[rear++]=i;  \r\n        }  \r\n    if(incnt!=1)  \r\n        flag=0;  \r\n    j=0; \r\n    while(front<rear)  \r\n    {  \r\n        incnt=0;  \r\n        k=b[front++];  \r\n        c[j++]=k+'A'-1;  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            if(map[k][i])  \r\n            {  \r\n                in[i]--;  \r\n                if(!in[i])    \r\n                {  \r\n                    incnt++;  \r\n                    b[rear++]=i;\r\n                }  \r\n            }     \r\n        }  \r\n        if(incnt>1)  \r\n        {  \r\n            flag=0;  \r\n            break;  \r\n        }  \r\n    }  \r\n    if(j<n||!flag)  \r\n        printf(\"No Answer\\n\");  \r\n    else  \r\n    {  \r\n        for(i=0;i<j;i++)  \r\n            printf(\"%c\",c[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int t,i;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        char A,B;  \r\n        int a,b;  \r\n        memset(map,0,sizeof(map));  \r\n        memset(in,0,sizeof(in));  \r\n        memset(c,0,sizeof(c));  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        getchar();  \r\n        for(i=1;i<=m;i++)  \r\n        {  \r\n            scanf(\"%c %c\",&A,&B);  \r\n            a=A-'A'+1;  \r\n            b=B-'A'+1;  \r\n            map[a][b]=1;  \r\n            in[b]++;  \r\n            getchar();  \r\n        }  \r\n        toposort();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":497,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint map[100000];  \r\nbool cmp(int x,int y)  \r\n{  \r\n    return x<y;  \r\n}  \r\nint main()  \r\n{  \r\n    int T;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        int n;  \r\n        int i,j;  \r\n        scanf(\"%d\",&n);  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&map[i]);  \r\n        }  \r\n        sort(map,map+n,cmp);  \r\n        int xx=0;  \r\n        int ans=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            ans+=(xx+map[i]);  \r\n            xx+=map[i];  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":498,
"code":"\n#include<iterator>  \r\n#include<string>  \r\n#include<set>  \r\n#include<vector>  \r\n#include<iostream>  \r\n#include<cstring>  \r\n#include<math.h>  \r\n#include<algorithm>  \r\n#include<stack>  \r\n#include<cstdio>  \r\n#include<list>  \r\n#include<stdio.h>  \r\n#include<stdlib.h>  \r\nusing namespace std;  \r\nusing namespace std;  \r\nint pre[51];  \r\nint in[51];  \r\ntypedef struct tnode  \r\n{  \r\n    int data;  \r\n    struct tnode* lchild;  \r\n    struct tnode* rchild;  \r\n}*bt;  \r\nvoid creat(int pre1,int in1,int n,bt &b)  \r\n{  \r\n    int p;  \r\n    int k;  \r\n    if(n<=0)  \r\n    {  \r\n        b=NULL;  \r\n        return;  \r\n    }  \r\n    b=(bt)malloc(sizeof(struct tnode));  \r\n    b->data=pre[pre1];  \r\n    for(p=in1; p<in1+n; p++)  \r\n    {  \r\n        if(pre[pre1]==in[p])  \r\n        {  \r\n            break;  \r\n        }  \r\n    }  \r\n    k=p-in1;  \r\n    creat(pre1+1,in1,k,b->lchild);  \r\n    creat(pre1+k+1,p+1,n-k-1,b->rchild);  \r\n}  \r\nint sum;  \r\nvoid pre_vis(bt b)  \r\n{  \r\n    if(b!=NULL)  \r\n    {  \r\n        sum++;  \r\n        pre_vis(b->lchild);  \r\n        pre_vis(b->rchild);  \r\n    }  \r\n}  \r\nvoid findbt(bt &b,int x)  \r\n{  \r\n    if(b==NULL)  \r\n    {  \r\n        return ;  \r\n    }  \r\n    if(b->data==x)  \r\n    {  \r\n        pre_vis(b);  \r\n        return;  \r\n    }  \r\n    else  \r\n    {  \r\n        findbt(b->lchild,x);  \r\n        findbt(b->rchild,x);  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    cin>>n;  \r\n    while(n--)  \r\n    {  \r\n        int len;  \r\n        cin>>len;  \r\n        for(int i=0; i<len; i++)  \r\n        {  \r\n            scanf(\"%d\",&pre[i]);  \r\n        }  \r\n        for(int i=0; i<len; i++)  \r\n        {  \r\n            scanf(\"%d\",&in[i]);  \r\n        }  \r\n        bt t;  \r\n        creat(0,0,len,t);  \r\n        int m;  \r\n        scanf(\"%d\",&m);  \r\n        for(int i=0; i<m; i++)  \r\n        {  \r\n            int x;  \r\n            scanf(\"%d\",&x);  \r\n            sum=0;  \r\n            findbt(t,x);  \r\n            cout<<sum<<endl;  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":499,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint a[7][7],b[7][7];\r\nint sum,n,m;\r\nvoid dfs(int x,int y)\r\n{\r\n    if(x==n-1&&y==m-1) sum++;\r\n    if(!b[x+1][y]&&!a[x+1][y]&&x+1<n)\r\n    {\r\n        b[x+1][y]=1;\r\n        dfs(x+1,y);\r\n        b[x+1][y]=0;\r\n    }\r\n    if(!b[x-1][y]&&!a[x-1][y]&&x-1>=0)\r\n    {\r\n        b[x-1][y]=1;\r\n        dfs(x-1,y);\r\n        b[x-1][y]=0;\r\n    }\r\n    if(!b[x][y+1]&&!a[x][y+1]&&y+1<m)\r\n    {\r\n        b[x][y+1]=1;\r\n        dfs(x,y+1);\r\n        b[x][y+1]=0;\r\n    }\r\n    if(!b[x][y-1]&&!a[x][y-1]&&y-1>=0)\r\n    {\r\n        b[x][y-1]=1;\r\n        dfs(x,y-1);\r\n        b[x][y-1]=0;\r\n    }\r\n}\r\nint main()\r\n{\r\n    int s;\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        int i,j;\r\n        memset(b,0,sizeof(b));\r\n        scanf(\"%d%d\",&n,&m);\r\n        for(i=0;i<n;i++)\r\n        for(j=0;j<m;j++)\r\n        scanf(\"%d\",&a[i][j]);\r\n        sum=0;\r\n        b[0][0]=1;\r\n        dfs(0,0);\r\n        printf(\"%d\\n\\n\",sum);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":500,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n\r\n    int i,T,j,x,A,B,Ax,Bx;  \r\n    int a[3][3];  \r\n    cin>>T;  \r\n    while(T--)  \r\n    {  \r\n        Ax=0;  \r\n        Bx=0;  \r\n        A=0;  \r\n        B=0;  \r\n        for(i=0; i<3; i++)  \r\n        {  \r\n            for(j=0; j<3; j++)  \r\n            {  \r\n                cin>>a[i][j];  \r\n                if(a[i][j]==1)  \r\n                    A++;  \r\n                else if(a[i][j]==2)  \r\n                    B++;  \r\n            }  \r\n        }  \r\n        if(A-B==1)  \r\n        {  \r\n            if(a[0][0]==a[0][1]&&a[0][1]==a[0][2]&&(a[0][0]!=0))  \r\n            {  \r\n                if(a[0][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[1][0]==a[1][1]&&a[1][1]==a[1][2]&&(a[1][0]!=0))  \r\n            {  \r\n                if(a[1][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[2][0]==a[2][1]&&a[2][1]==a[2][2]&&(a[2][0]!=0))  \r\n            {  \r\n                if(a[2][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][0]==a[1][0]&&a[1][0]==a[2][0]&&(a[0][0]!=0))  \r\n            {  \r\n                if(a[0][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][1]==a[1][1]&&a[1][1]==a[2][1]&&(a[0][1]!=0))  \r\n            {  \r\n                if(a[0][1]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][2]==a[1][2]&&a[1][2]==a[2][2]&&(a[0][2]!=0))  \r\n            {  \r\n                if(a[0][2]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][0]==a[1][1]&&a[1][1]==a[2][2]&&(a[0][0]!=0))  \r\n            {  \r\n                if(a[0][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][2]==a[1][1]&&a[1][1]==a[2][0]&&(a[0][2]!=0))  \r\n            {  \r\n                if(a[0][2]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(Ax==1&&Bx==0)  \r\n                cout<<\"YES\"<<endl;  \r\n            else if(Ax==0&&Bx==0)  \r\n                cout<<\"YES\"<<endl;  \r\n            else cout<<\"NO\"<<endl;  \r\n        }  \r\n        else if(A==B&&A!=0)  \r\n        {  \r\n            if(a[0][0]==a[0][1]&&a[0][1]==a[0][2]&&(a[0][0]!=0))  \r\n            {  \r\n                if(a[0][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[1][0]==a[1][1]&&a[1][1]==a[1][2]&&(a[1][0]!=0))  \r\n            {  \r\n                if(a[1][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[2][0]==a[2][1]&&a[2][1]==a[2][2]&&(a[2][0]!=0))  \r\n            {  \r\n                if(a[2][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][0]==a[1][0]&&a[1][0]==a[2][0]&&(a[0][0]!=0))  \r\n            {  \r\n                if(a[0][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][1]==a[1][1]&&a[1][1]==a[2][1]&&(a[0][1]!=0))  \r\n            {  \r\n                if(a[0][1]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][2]==a[1][2]&&a[1][2]==a[2][2]&&(a[0][2]!=0))  \r\n            {  \r\n                if(a[0][2]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][0]==a[1][1]&&a[1][1]==a[2][2]&&(a[0][0]!=0))  \r\n            {  \r\n                if(a[0][0]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(a[0][2]==a[1][1]&&a[1][1]==a[2][0]&&(a[0][2]!=0))  \r\n            {  \r\n                if(a[0][2]==1)  \r\n                    Ax++;  \r\n                else Bx++;  \r\n            }  \r\n            if(Ax==0&&Bx==1)  \r\n                cout<<\"YES\"<<endl;  \r\n            else if(Ax==0&&Bx==0)  \r\n                cout<<\"YES\"<<endl;  \r\n            else cout<<\"NO\"<<endl;  \r\n        }  \r\n        else  if(A==0&&B==0)  \r\n            cout<<\"YES\"<<endl;  \r\n        else  cout<<\"NO\"<<endl;  \r\n    }  \r\n    return 0;  \r\n\r\n}"
},
{
"pid":502,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#define M 10000000\r\nint map[105][105];\r\nint prim(int m)\r\n{\r\n    int used[105]={0},dis[105]={0};\r\n    int i,j,k=0,min,sum=0,count=1,w;\r\n    for(i=1;i<=m;i++)\r\n    dis[i]=map[i][1];\r\n    for(i=2;i<=m;i++)\r\n    {\r\n        min=M;w=0;\r\n        for(j=2;j<=m;j++)\r\n        if(min>dis[j]&&used[j]==0)\r\n        {\r\n            min=dis[j];\r\n            k=j;w=1;\r\n        }\r\n        sum+=min;\r\n        if(w) count++;\r\n        used[k]=1;\r\n        for(j=1;j<=m;j++)\r\n        if(used[j]==0&&dis[j]>map[k][j])\r\n        dis[j]=map[k][j];\r\n    }\r\n    if(count==m) return sum;\r\n    else return 0;\r\n}\r\n\r\nint main()\r\n{\r\n    int s,n,m,i,j,t;\r\n    int a,b,c;\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        scanf(\"%d%d\",&n,&m);\r\n        for(i=1;i<=m;i++)\r\n        for(j=1;j<=m;j++)\r\n        if(i==j)  map[i][j]=0;\r\n        else map[i][j]=M;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d%d%d\",&a,&b,&c);\r\n            map[a][b]=map[b][a]=c;\r\n        }\r\n        t=prim(m);\r\n        if(t) printf(\"%d\\n\",t);\r\n        else printf(\"No solution\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":503,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\ndouble f(double x)  \r\n{  \r\n    return 8*pow(x,4) - 7*pow(x,3) + 2*pow(x,2) + 3*x + 6;  \r\n}  \r\ndouble Binary_Find(double left,double right,double y)  \r\n{  \r\n    while(right-left>1e-7)  \r\n    {  \r\n        double mid=(left+right)\/2;  \r\n        if(f(mid) < y)  \r\n            left  = mid;  \r\n        else  \r\n            right = mid;  \r\n    }  \r\n    return left;  \r\n}  \r\nint main()  \r\n{  \r\n    int z;  \r\n    double y;  \r\n    scanf(\"%d\",&z);  \r\n    while(z--)  \r\n    {  \r\n        scanf(\"%lf\",&y);  \r\n        if(f(0)>y || f(100)<y)  \r\n            puts(\"No solution!\");  \r\n        else  \r\n            printf(\"%.4lf\\n\",Binary_Find(0,100,y));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":504,
"code":"\n#include<iostream>\r\n#include<algorithm>\r\n#include<cstring>\r\n#include<cstdio>\r\nusing namespace std;\r\nbool vis[210];\r\nstruct Node \r\n{\r\n\tint x ,y;\r\n}node[2200];\r\nbool cmp(struct Node x ,struct Node y)\r\n{\r\n\treturn x.x<y.x;\r\n}\r\nint solve(int n,int m)\r\n{\r\n\tint i,j ,temp,temp1, ans;\r\n\tans=999999999;\r\n\t for(i=0;i<n;i++)\r\n\t {   \r\n\t\t temp=1;\r\n\t\t memset(vis,false,sizeof(vis));\r\n\t\t vis[node[i].y]=true;\r\n\t\t for(j=i;j<n;j++)\r\n\t\t {\r\n\t\t\t if(!vis[node[j].y])\r\n\t\t\t {\r\n\t\t\t\t temp++;\r\n\t\t\t\t vis[node[j].y]=true;\r\n\t\t\t\tif(temp==m)\r\n\t\t\t\t {\r\n\t\t\t\t\t if((node[j].x-node[i].x)<ans)\r\n\t\t\t\t\t {\r\n\t\t\t\t\t\t ans=node[j].x-node[i].x; \r\n\t\t\t\t\t }\r\n\t\t\t\t\t break;\r\n\t\t\t\t }\r\n\t\t\t }\r\n\t\t }\r\n\t }\r\n\treturn ans;\r\n}\r\nint main()\r\n{\r\n\tint T ,n, m;\r\n\tcin>>T;\r\n\twhile(T--)\r\n\t{\r\n\t\tcin>>n>>m;\r\n\t\tint temp=0;\r\n\t\tfor(int i=1; i<=n; i++)\r\n\t\t{\r\n\t\t\tfor(int j=0;j<m;j++)\r\n\t\t\t{\r\n\t\t\t\tcin>>node[temp].x;\r\n\t\t\t\tnode[temp++].y=i;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsort(node,node+temp,cmp);\r\n\t\tcout<<solve(temp,n)<<endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":506,
"code":"\n#include<stdio.h>  \r\n#define max 50010  \r\nint a[max];  \r\n\r\nint cmp(int n)  \r\n{  \r\n    while(n)  \r\n    {  \r\n        if(n%10==4)  \r\n           return 1;  \r\n        n=n\/10;  \r\n    }  \r\n    return 0;     \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int n;  \r\n    for(int i=1;i<=50000;i++)  \r\n    {  \r\n        if(cmp(i))  \r\n           a[i]=a[i-1];  \r\n        else   \r\n           a[i]=a[i-1]+1;  \r\n    }  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n       printf(\"%d\\n\",a[n]);  \r\n    return 0;  \r\n}"
},
{
"pid":507,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nconst int MAX=10;  \r\n#define __int64 long long   \r\n#define CLR(arr,val) memset(arr,val,sizeof(arr))  \r\nint x,y,num;  \r\nclass Matrix{  \r\npublic:  \r\n    Matrix(int r,int c):row(r),col(c){}  \r\n    void Init()    \r\n    {   CLR(map,0);  \r\n        x%=10007,y%=10007;\r\n        map[0][0]=map[0][1]=map[2][1]=1;   \r\n        map[1][1]=x*x%10007;  \r\n        map[1][2]=y*y%10007;  \r\n        map[1][3]=(2*x*y)%10007;  \r\n        map[3][1]=x%10007,map[3][3]=y%10007;   \r\n    }  \r\n    void Unit()  \r\n    {   CLR(map,0);  \r\n        for(int i=0;i<row;i++)  \r\n            map[i][i]=1;  \r\n    }  \r\n    void Clear()  \r\n    {   for(int i=0;i<4;i++)  \r\n            map[i][0]=1;  \r\n    }  \r\n    int Result() const {return map[0][0]%10007;}  \r\n    friend Matrix operator*(const Matrix& ,const Matrix&);  \r\n    friend ostream& operator<<(ostream& ,const Matrix&);   \r\n    int Pow(int);  \r\nprivate:  \r\n    __int64 map[MAX][MAX];      \r\n    int row,col;         \r\n};  \r\nMatrix operator*(const Matrix& M1,const Matrix& M2)   \r\n{   Matrix M(M1.row,M2.col);  \r\n    for(int i=0;i<M1.row;i++)  \r\n        for(int j=0;j<M2.col;j++)  \r\n        {   M.map[i][j]=0;  \r\n            for(int k=0;k<M1.col;k++)  \r\n                M.map[i][j]+=M1.map[i][k]*M2.map[k][j];   \r\n            M.map[i][j]%=10007;  \r\n        }    \r\n    return M;      \r\n}  \r\nMatrix M(4,4);  \r\nint Matrix::Pow(int n)   \r\n{   Matrix temp(4,4),Start(4,1);  \r\n    temp.Init();  \r\n    Start.Clear();  \r\n    while(n)  \r\n    {   if(n&1) M=M*temp;  \r\n        temp=temp*temp;  \r\n        n>>=1;  \r\n    }  \r\n    Start=M*Start;  \r\n    return Start.Result();      \r\n}  \r\nostream& operator<<(ostream &cout,const Matrix& M)  \r\n{   for(int i=0;i<M.row;i++)  \r\n    {   for(int j=0;j<M.col;j++)  \r\n            cout<<M.map[i][j]<<\" \";  \r\n        cout<<endl;      \r\n    }  \r\n    return cout;  \r\n}  \r\nint main()  \r\n{   while(scanf(\"%d%d%d\",&num,&x,&y)!=EOF)  \r\n    {   M.Unit();  \r\n        cout<<M.Pow(num)<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":508,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<map>\r\n#include<cstring>\r\n#include<string>\r\n#include<algorithm>\r\n#include<queue>\r\n#include<vector>\r\n#include<stack>\r\n#include<cstdlib>\r\n#include<cctype>\r\n#include<cstring>\r\n#include<cmath>\r\n#define LL long long\r\n#define MOD 1000000007\r\nusing namespace std;\r\nLL ModSum1(LL n){\r\n    LL t=(n+1)\/2-1;\r\n    LL sum=t*(t+1)\/2;\r\n    for(LL i=1;i<=n\/2;i++){\r\n        sum+=n-(n\/i*i);\r\n    }\r\n    return sum;\r\n}\r\n\r\nLL ModSum2(LL n,LL k){\r\n    LL sum=0,n1=n;\r\n    n=k;\r\n    LL tem=sqrt(n);\r\n    for(LL i=1;i<=tem;i++){\r\n        if(n\/i==i){\r\n            sum+=n-n\/i*i;\r\n            continue;\r\n        }\r\n        sum+=n-n\/i*i;\r\n        sum=sum;\r\n        LL tt=n*(n\/i-(n\/(i+1)))-i*((n\/i+(n\/(i+1))+1)*(n\/i-(n\/(i+1)))\/2);\r\n        sum=(sum+tt);\r\n    }\r\n    if(k<=n1){\r\n        sum+=(n1-k)*k;\r\n    }\r\n    else {\r\n        for(LL i=n1+1;i<=k;i++){\r\n            sum-=k%i;\r\n        }\r\n\r\n    }\r\n    return sum;\r\n}\r\nint main()\r\n{\r\n\tlong long n,k;\r\n\twhile(cin>>n>>k){\r\n        LL sum2;\r\n        sum2=ModSum2(n,k);\r\n        cout<<sum2<<endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":509,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cstdio>  \r\n#include<cmath>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\nconst int N = 10010;  \r\nint prim[N], res[N], temp; \r\n\r\nvoid fun()  \r\n{  \r\n    memset(prim, 0, sizeof(prim));  \r\n    int limit = sqrt(N * 1.0);  \r\n    for(int i = 2; i <= limit; ++i)  \r\n        if(!prim[i])  \r\n            for(int j = i * i; j < N; j += i)  \r\n                prim[j] = 1;  \r\n    int top = 0;  \r\n    for(int i = 2; i < N; ++i)  \r\n        if(!prim[i])  \r\n            prim[top++] = i;  \r\n}  \r\n\r\nvoid prim_induce(int n)  \r\n{  \r\n    for(int i = 0; ; ++i)  \r\n    {  \r\n            while(n % prim[i] == 0)  \r\n            {  \r\n                n \/= prim[i];  \r\n                res[prim[i]]++;  \r\n            }  \r\n        if(n == 1)  \r\n        {  \r\n            temp = max(temp, prim[i]);  \r\n            break;  \r\n        }  \r\n    }  \r\n    if(n != 1)  \r\n    {  \r\n        res[n] += 1;  \r\n        temp = max(temp, n);  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    fun();  \r\n    int ncase, n;  \r\n    scanf(\"%d\", &ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        temp = 0;  \r\n        memset(res, 0, sizeof(res));  \r\n        scanf(\"%d\", &n);  \r\n        for(int i = 2; i <= n; ++i)  \r\n            prim_induce(i);  \r\n        for(int i = 2; i <= temp; ++i)  \r\n            if(res[i])  \r\n                printf(\"%d \", res[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":510,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\nusing namespace std;\r\n\r\nconst int size = 101;\r\nconst int inf = 999999999;\r\nint d[size];\r\nint level[size];\r\nint price[size][size];\r\nbool flag[size];\r\n\r\nint qmin(int x,int y)\r\n{\r\n   return ((x)<(y))?(x):(y);\r\n} \r\n\r\nint dij(int N)\r\n{\r\n   int i,j;\r\n   for(i=1;i<=N;++i)\r\n    d[i]=price[0][i];\r\n   for(i=1;i<=N;++i)\r\n    {\r\n       int mi=inf;\r\n       int k=0;\r\n       for(j=1;j<=N;++j)\r\n        if(!flag[j] && mi>d[j])\r\n        {\r\n          mi=d[j];\r\n          k=j;\r\n        } \r\n       if(!k)break;\r\n       flag[k]=true;\r\n\r\n       for(j=1;j<=N;++j)\r\n        {\r\n          if(!flag[j] &&  d[j] > d[k]+price[k][j])\r\n           {\r\n              d[j]=d[k]+price[k][j];\r\n           }\r\n        }\r\n    }\r\n   return d[1];\r\n}\r\n\r\nint main()\r\n{\r\n   int M,N,X,i,j,a,b;\r\n   while(scanf(\"%d%d\",&M,&N) && (M || N))\r\n    {\r\n      for(i=1;i<=N;++i)\r\n       {\r\n          price[i][i]=0;\r\n          for(j=i+1;j<=N;++j)\r\n           price[i][j]=price[j][i]=inf;\r\n       } \r\n      for(i=1;i<=N;++i)\r\n       {\r\n         scanf(\"%d%d%d\",&price[0][i],&level[i],&X);\r\n         for(j=0;j<X;++j)\r\n          {\r\n            scanf(\"%d%d\",&a,&b);\r\n            price[a][i]=b;\r\n          }\r\n       }\r\n\r\n      int maxlevel;\r\n      int minp=inf;\r\n      for(i=1;i<=N;++i)\r\n       {\r\n          maxlevel=level[i];\r\n          for(j=1;j<=N;++j)\r\n           if(level[j]>maxlevel || maxlevel-level[j]>M)flag[j]=true;\r\n           else flag[j]=false;\r\n          minp=qmin(minp,dij(N)); \r\n       }\r\n      printf(\"%d\\n\",minp); \r\n    }\r\n   return 0;\r\n}"
},
{
"pid":511,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cmath>  \r\n#include<cstdio>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint l[10010], r[10010];  \r\n\r\nint main()  \r\n{  \r\n    int ncase;  \r\n    scanf(\"%d\", &ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        int num, query;  \r\n        char ope;  \r\n        int x, y;  \r\n        scanf(\"%d %d\", &num, &query);  \r\n        for(int i = 1; i <= num; ++i)\r\n        {  \r\n            r[i] = ((i + 1) <= num ? (i + 1) : (i + 1) % num);  \r\n            l[i] = ((i - 1) == 0 ? num : (i - 1));  \r\n        }  \r\n        for(int i = 0; i < query; ++i)  \r\n        {  \r\n            getchar();  \r\n            scanf(\"%c %d %d\", &ope, &x, &y);  \r\n            if(ope == 'A')  \r\n            {  \r\n                r[l[x]] = r[x]; l[r[x]] = l[x];  \r\n                l[x] = l[y]; r[x] = y;  \r\n                r[l[y]] = x; l[y] = x;  \r\n            }  \r\n            else if(ope == 'B')  \r\n            {  \r\n                r[l[x]] = r[x]; l[r[x]] = l[x];  \r\n                l[x] = y; r[x] = r[y];  \r\n                l[r[y]] = x; r[y] = x;  \r\n            }  \r\n            else  \r\n                printf(\"%d\\n\", x ? r[y] : l[y]);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":513,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#define max(a,b) a>b?a:b  \r\nstruct Num  \r\n{  \r\n    int len,back;  \r\n    char num[800];  \r\n}A,B;  \r\nvoid swap(char &a,char &b)  \r\n{  \r\n    a ^= b;  \r\n    b ^= a;  \r\n    a ^= b;  \r\n}  \r\nvoid Init(Num &c)  \r\n{  \r\n    c.len = strlen(c.num);  \r\n    char *p = strchr(c.num,'.');  \r\n    if(p == NULL)  \r\n    {  \r\n        c.num[c.len++]='.';  \r\n        c.num[c.len++]='0';  \r\n        c.back = 1;  \r\n    }  \r\n    else  \r\n    {  \r\n        int point_loc = p - c.num;  \r\n        for(int i=c.len-1;i>=point_loc+2;i--)  \r\n        {  \r\n            if(c.num[i] != '0')  \r\n                break;  \r\n            c.len--;  \r\n        }  \r\n        c.back = c.len - 1 - point_loc;  \r\n    }  \r\n}  \r\nvoid Reverse(Num &c)  \r\n{  \r\n    for(int i=0;i<c.len-1-i;i++)  \r\n        swap(c.num[i],c.num[c.len-1-i]);  \r\n}  \r\nvoid add(Num &a,Num &b)  \r\n{  \r\n    Reverse(a);  \r\n    int sub = a.back - b.back;  \r\n    int max_loc = max(sub+b.len,a.len);  \r\n    memset(a.num + a.len, '0', max_loc - a.len + 1);  \r\n    for(int i = sub;i < max_loc ;i++)  \r\n    {  \r\n        if(a.num[i]=='.')  \r\n            continue;  \r\n        int loc_b = b.len-1 - (i-sub);  \r\n        if(loc_b >= 0)  \r\n            a.num[i] += b.num[loc_b] - '0';  \r\n        if(a.num[i] > '9')  \r\n        {  \r\n            a.num[i+1]=='.' ? a.num[i+2]++ : a.num[i+1]++;  \r\n            a.num[i] -= 10;  \r\n        }  \r\n    }  \r\n    int min_loc;  \r\n    for( min_loc=0; a.num[min_loc]=='0'; min_loc++);  \r\n    max_loc = a.num[max_loc]=='0' ? max_loc-1 : max_loc;  \r\n    min_loc = a.num[min_loc]=='.' ? min_loc+1 : min_loc;  \r\n    for(int i= max_loc;i >= min_loc;i--)  \r\n        putchar(a.num[i]);  \r\n    printf(\"\\n\");  \r\n}  \r\nint main()  \r\n{  \r\n    while(~scanf(\"%s%s\",A.num,B.num))  \r\n    {  \r\n        Init(A);  \r\n        Init(B);  \r\n        A.back > B.back ? add(A,B) : add(B,A);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":514,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint low,high;  \r\nint Pow[10]={1,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000};  \r\nint Count(int n)  \r\n{   int digit=0,temp=n,sum=0;  \r\n    while(temp)  \r\n    {   if(temp%10>1) sum+=Pow[digit];  \r\n        else if(temp%10==1) sum+=n%Pow[digit]+1;  \r\n        sum+=temp%10*digit*Pow[digit-1];  \r\n        temp\/=10,digit++;  \r\n    }  \r\n    return sum;  \r\n}   \r\nint main()  \r\n{   while(cin>>low>>high,low+high)  \r\n    {   if(low>high) swap(low,high);    \r\n        cout<<Count(high)-Count(low-1)<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":515,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n\r\nusing namespace std;  \r\n\r\ntypedef long long LL;  \r\n\r\nLL dp[12][1<<12];  \r\n\r\nint m, k;  \r\n\r\nvoid Pre_Slove(int j, int curstatus)  \r\n{  \r\n    if(j >= m)  \r\n    {  \r\n        dp[0][curstatus]++;  \r\n        return ;  \r\n    }  \r\n\r\n    if(j+1 <= m)\r\n        Pre_Slove(j+1, curstatus<<1);  \r\n\r\n    if(j+2 <= m) \r\n        Pre_Slove(j+2, curstatus<<2|3);  \r\n    return ;  \r\n}  \r\n\r\nvoid DFS(int j, int curstatus, int prestatus)  \r\n{  \r\n    if(j >= m)  \r\n    {  \r\n        dp[k][curstatus] += dp[(k+1)%2][prestatus];  \r\n        return ;  \r\n    }  \r\n\r\n    if(j+1 <= m)  \r\n    {  \r\n        DFS(j+1, curstatus<<1|1, prestatus<<1);  \r\n        DFS(j+1, curstatus<<1, prestatus<<1|1);  \r\n    }  \r\n\r\n    if(j+2 <= m)  \r\n        DFS(j+2, curstatus<<2|3, prestatus<<2|3);  \r\n    return ;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int n;  \r\n    while(scanf(\"%d %d\", &n, &m) && (m+n))  \r\n    {  \r\n        if(m*n % 2)  \r\n        {  \r\n            printf(\"0\\n\");  \r\n            continue ;  \r\n        }  \r\n        if(n < m)  \r\n        {  \r\n            n ^= m;  \r\n            m ^= n;  \r\n            n ^= m;  \r\n        }  \r\n        memset(dp, 0, sizeof(dp));  \r\n\r\n        Pre_Slove(0, 0);  \r\n\r\n        for(int i = 2; i <= n; ++i)  \r\n        {  \r\n            k = (i+1)%2;  \r\n            DFS(0, 0, 0);  \r\n            memset(dp[(k+1)%2], 0, sizeof(dp[0]));  \r\n        }  \r\n        printf(\"%lld\\n\", dp[(n+1)%2][(1<<m) - 1]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":516,
"code":"\n#include <iostream>  \r\n#include <string.h>  \r\n#include <stdio.h>  \r\n#include <math.h>  \r\n\r\nusing namespace std;  \r\ntypedef long long LL;  \r\nconst int N = 10000005;  \r\nconst LL MOD = 1000000007;  \r\n\r\nbool prime[N];  \r\nint p[N];  \r\nint k;  \r\nLL ans,a,x;  \r\n\r\nvoid isprime()  \r\n{  \r\n    k = 0;  \r\n    int i,j;  \r\n    memset(prime,true,sizeof(prime));  \r\n    for(i=2; i<N; i++)  \r\n    {  \r\n        if(prime[i])  \r\n        {  \r\n            p[k++] = i;  \r\n            for(j=i+i; j<N; j+=i)  \r\n            {  \r\n                prime[j] = false;  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\n\r\nvoid quick_mod()  \r\n{  \r\n    while(x)  \r\n    {  \r\n        if(x&1)  \r\n        {  \r\n            ans = ans*a%MOD;  \r\n            x--;  \r\n        }  \r\n        x>>=1;  \r\n        a=a*a%MOD;  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int n;  \r\n    isprime();  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        if(n==0) break;  \r\n        ans = 1;  \r\n        x = 0;  \r\n        a = 1;  \r\n        for(int i=0; p[i] <= n; i++)  \r\n        {  \r\n            int t = n;  \r\n            int cnt = 0;  \r\n            while(t)  \r\n            {  \r\n                cnt += t\/p[i];  \r\n                t \/= p[i];  \r\n            }  \r\n            if(cnt > 1)  \r\n            {  \r\n                if(cnt&1) cnt--;  \r\n                if(cnt == x) a = a * p[i] % MOD;  \r\n                else  \r\n                {  \r\n                    quick_mod();  \r\n                    x = cnt;  \r\n                    a = p[i];  \r\n                }  \r\n            }  \r\n            else  \r\n            {  \r\n                quick_mod();  \r\n                break;  \r\n            }  \r\n        }  \r\n        printf(\"%lld\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":517,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint num[1005],s[105],k;  \r\nvoid mul(int x)\r\n{  \r\n    for(int i=0;i<k;++i)  \r\n    {  \r\n        num[i]*=x;  \r\n    }  \r\n    for(int i=0;i<k;++i)  \r\n    {  \r\n        num[i+1]+=num[i]\/10000;  \r\n        num[i]%=10000;  \r\n        while(num[k])  \r\n        {  \r\n            ++k;  \r\n        }  \r\n    }  \r\n}   \r\nint main()  \r\n{  \r\n    for(int i=1;i<105;++i)  \r\n    {  \r\n        s[i]=i;  \r\n    }  \r\n    for(int i=2;i<105;++i)  \r\n    {  \r\n        for(int j=2*i;j<105;j+=i)  \r\n        {  \r\n            if(s[j]%s[i]==0)  \r\n            {  \r\n                s[j]\/=s[i];  \r\n            }  \r\n        }  \r\n    }  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        memset(num,0,sizeof(num));  \r\n        k=1;num[0]=1;  \r\n        for(int i=1;i<=n;++i)  \r\n        {  \r\n            mul(s[i]);  \r\n        }  \r\n        printf(\"%d\",num[k-1]);  \r\n        for(int i=k-2;i>=0;--i)  \r\n        {  \r\n            printf(\"%04d\",num[i]);  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":518,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    int i,n,r[10003]={-1,0,1,0,1,0,1,0,1};  \r\n    for (i=9;i<=10000;i++)  \r\n        r[i]=(r[i-8] && r[i-3] && r[i-7] && r[i-1])?(0):(1);  \r\n    scanf(\"%d\",&n);  \r\n    while(~scanf(\"%d\",&n))  \r\n        printf(\"%d\\n\",r[n]);  \r\n    return 0;  \r\n}"
},
{
"pid":519,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint shu[100];\r\nchar str[100];\r\nint change(int n)\r\n{\r\n   if(n<=9)return n;\r\n   int t=0;\r\n   while(n)\r\n   {\r\n     t+=n%10;\r\n     n\/=10;\r\n   }\r\n   return change(t);\r\n}  \r\nint main()\r\n{\r\n    int ncase,i,k,len;\r\n    scanf(\"%d\",&ncase);\r\n    while(ncase--)\r\n    {\r\n      memset(str,0,sizeof(str));\r\n      memset(shu,0,sizeof(shu));\r\n      scanf(\"%s\",str);\r\n      len=strlen(str);\r\n      for(i=0;i<len;i++)\r\n      {\r\n          shu[i%6]+=str[i];\r\n      }\r\n      for(i=0;i<6;i++)\r\n       {\r\n          shu[i]=change(shu[i]);\r\n       }\r\n       for(i=0;i<6;i++)\r\n        printf(\"%d\",shu[i]);\r\n       printf(\"\\n\");\r\n      }\r\n      return 0;\r\n}"
},
{
"pid":520,
"code":"\n#include <iostream>  \r\n#include <string.h>  \r\n#include <cstdio>  \r\n#include <cmath>  \r\nusing namespace std;  \r\nconst int mmax=1000005;  \r\nint k=0,prime[500005],num[mmax];  \r\nbool flag[mmax];  \r\nvoid init(){  \r\n    memset(flag,0,sizeof(flag));  \r\n    memset(num,0,sizeof(num));  \r\n    for(int i=2;i<=(int)sqrt(mmax*1.0);++i){  \r\n        if(!flag[i]){  \r\n            for(int j=i*i;j<mmax;j+=i){  \r\n              flag[j]=1;  \r\n            }  \r\n        }  \r\n    }  \r\n    k=0;  \r\n    for(int i=2;i<mmax;++i){  \r\n        if(!flag[i]){  \r\n          prime[k]=i;  \r\n          num[i]=k;  \r\n          k++;  \r\n        }  \r\n    }  \r\n}  \r\nint fenjie(int n){  \r\n    int i;  \r\n    for(i=0;prime[i]<=(int)sqrt(n*1.0);++i){  \r\n        if(n==1)break;  \r\n        if(n%prime[i]==0){  \r\n            while(n%prime[i]==0){  \r\n              n\/=prime[i];  \r\n            }  \r\n        }  \r\n    }  \r\n    if(n==1)  \r\n    return prime[i-1];  \r\n    else return n;  \r\n}  \r\nint main(){  \r\n    init();  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n)){  \r\n        if(n==1){puts(\"0\");}  \r\n        else{  \r\n          int x=fenjie(n);  \r\n          printf(\"%d\\n\",num[x]+1);        \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":522,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <string.h>  \r\n#include <cmath>  \r\nconst int N=200002;  \r\nconst int M=100001;  \r\nint num[N],ans[N];  \r\nint lowbit(int x){  \r\n    return x&(-x);  \r\n}  \r\nvoid update(int m,int value){  \r\n    while(m>0){  \r\n      num[m]+=value;  \r\n      m-=lowbit(m);  \r\n    }  \r\n}  \r\nint sum(int x){  \r\n    int s=0;  \r\n    while(x<=N){  \r\n      s+=num[x];  \r\n      x+=lowbit(x);  \r\n    }  \r\n    return s;  \r\n}  \r\nint main(){  \r\n    int numcase;  \r\n    scanf(\"%d\",&numcase);  \r\n    while(numcase--){  \r\n      memset(num,0,sizeof(num));  \r\n      int n,m;  \r\n      scanf(\"%d%d\",&n,&m);  \r\n      int x,y;  \r\n      while(n--){  \r\n        scanf(\"%d%d\",&x,&y);  \r\n        x=x+M;  \r\n        y=y+M;  \r\n        update(x-1,-1);  \r\n        update(y,1);  \r\n      }  \r\n      while(m--){  \r\n        scanf(\"%d\",&x);  \r\n        x=x+M;  \r\n          printf(\"%d\\n\",sum(x));  \r\n      }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":523,
"code":"\n#include <stdio.h>\r\n#include <string.h>\r\n#include <queue>\r\nusing namespace std;\r\n\r\nint map[55][55][55],f[]={1,-1,0,0,0,0},g[]={0,0,1,-1,0,0},w[]={0,0,0,0,1,-1};\r\nbool vis[55][55][55],flag;\r\nstruct Node\r\n{\r\n    int x,y,z,step;\r\n};\r\n\r\nint bfs(int a,int b,int c,int time)\r\n{\r\n    int i,j,k;\r\n     int r,s,t;\r\n    memset(vis,0,sizeof(vis));\r\n    queue <Node> q;\r\n    Node temp={0,0,0,time};\r\n    vis[0][0][0]=1;\r\n    q.push(temp);\r\n    while(!q.empty())\r\n    {\r\n        temp=q.front();\r\n        q.pop();\r\n        for(i=0;i<6;i++)\r\n        {\r\n            r=temp.x+f[i];\r\n            s=temp.y+g[i];\r\n            t=temp.z+w[i];\r\n            if(r>=0&&r<a&&s>=0&&s<b&&t>=0&&t<c&&vis[r][s][t]==0)\r\n            {\r\n                if(r==a-1&&s==b-1&&t==c-1&&map[r][s][t]==0&&temp.step-1>=0)\r\n                {\r\n                    flag=1;\r\n                    break;\r\n                }\r\n                else if(map[r][s][t]==0&&temp.step-1)\r\n                {\r\n                    Node next={r,s,t,temp.step-1};\r\n                    q.push(next);\r\n                    vis[r][s][t]=1;\r\n                }    \r\n            }\r\n        }\r\n        if(flag==1||temp.step-1==0)\r\n            break;\r\n    }\r\n    while(!q.empty())\r\n        q.pop();\r\n    return time-(temp.step-1);\r\n}\r\n\r\nint main()\r\n{\r\n    int a,b,c;\r\n     int i,j,k,T;\r\n     int time;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        memset(map,0,sizeof(map));\r\n        flag=0;\r\n        scanf(\"%d%d%d%d\",&a,&b,&c,&time);\r\n        for(k=0;k<a;k++)\r\n        {\r\n            for(i=0;i<b;i++)\r\n            {\r\n                for(j=0;j<c;j++)\r\n                {\r\n                    scanf(\"%d\",&map[k][i][j]);\r\n                }\r\n            }\r\n        }\r\n        int cnt=bfs(a,b,c,time);\r\n        if(flag==1)\r\n            printf(\"%d\\n\",cnt);\r\n        else\r\n            printf(\"-1\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":524,
"code":"\n#include <stdio.h>  \r\n#include <ctype.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\nconst int M=100000;  \r\nvoid back(char* c,int &l)  \r\n{  \r\n    if(strchr(c,'.') == NULL)           \r\n        return ;  \r\n    for(int i=l-1;i>=1;i--)            \r\n    {  \r\n        if(c[i]!='0')  \r\n            break;  \r\n        l--;  \r\n    }  \r\n    if(c[l-1]=='.')  \r\n        l--;  \r\n    c[l]='\\0';  \r\n}  \r\nvoid front(char* c,int &l,bool &f)  \r\n{  \r\n    int cnt = isdigit(c[0]) ? 0 : 1;   \r\n    if(c[0]=='-')  \r\n        f = false;  \r\n    for(int i=cnt;i<l-1;i++)            \r\n    {  \r\n        if(c[i+1]=='.' || c[i]!='0')    \r\n            break;  \r\n        cnt++;  \r\n    }  \r\n    if(cnt)  \r\n    {  \r\n        for(int i=0;i<l-cnt;i++)        \r\n            c[i] = c[i+cnt];  \r\n        c[l-cnt] = '\\0';  \r\n    }  \r\n}  \r\nvoid deal(char *c,bool &f)  \r\n{  \r\n    int l = strlen(c);  \r\n    f = true;                          \r\n    back(c,l);  \r\n    front(c,l,f);  \r\n}  \r\nbool Cmp(char* A,char* B,bool a,bool b)  \r\n{  \r\n    if(strcmp(A,B) == 0)  \r\n    {  \r\n        if(strcmp(A,\"0\") == 0 || a^b == 0)  \r\n            return true;  \r\n    }  \r\n    return false;  \r\n}  \r\nint main()  \r\n{  \r\n    char A[M],B[M];  \r\n    bool a,b;  \r\n    while(~scanf(\"%s%s\",A,B))  \r\n    {  \r\n        deal(A,a);  \r\n        deal(B,b);  \r\n        puts(Cmp(A,B,a,b)?\"YES\":\"NO\");  \r\n    }  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":525,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\nint main()\r\n{\r\n    char s[5005];\r\n    int a[5005];\r\n    int i,len,k,n;\r\n    while(scanf(\"%s\",s)!=EOF)\r\n    {\r\n        n=0;\r\n        k=0;\r\n        len=strlen(s);\r\n        s[len]='5';   \r\n        i=0;\r\n        while(s[i++]=='5');  \r\n        for(i--;i<=len;++i)\r\n        {\r\n            if(i>0&&s[i]=='5'&&s[i-1]=='5')\r\n                continue;\r\n            if(s[i]!='5')\r\n                k=k*10+s[i]-'0';\r\n            else           \r\n            {\r\n                a[n++]=k;\r\n                k=0;\r\n            }\r\n        }\r\n        sort(a,a+n);\r\n        printf(\"%d\",a[0]);\r\n        for(i=1;i<n;++i)\r\n            printf(\" %d\",a[i]);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":526,
"code":"\n#include <iostream>  \r\n#include <algorithm>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <cmath>  \r\nusing namespace std;  \r\n#define INT long long  \r\n\r\nconst int N = 20;  \r\nconst double eps = 1e-8;  \r\nconst INT prime[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};  \r\n\r\nINT _pow(INT a, INT k)  \r\n{  \r\n    INT ans = 1;  \r\n    while(k){  \r\n        if(k & 1) ans = ans * a;  \r\n        a = a * a;  \r\n        k = k >> 1;  \r\n    }  \r\n    return ans;  \r\n}  \r\nINT F(INT n, INT tmp)  \r\n{  \r\n    INT ans = pow((double)n, 1.0 \/ tmp) + eps;  \r\n    if(pow(ans, 0.0 + tmp) > n) ans --;  \r\n    if(ans < 1) ans = 1;  \r\n    return ans - 1;  \r\n}  \r\n\r\nINT solve(INT n)  \r\n{  \r\n    int p[N], top = 0;  \r\n    for(int i = 0; i < 20; i ++){  \r\n        if(_pow(2, prime[i]) <= n) p[top ++] = prime[i];  \r\n        else break;  \r\n    }  \r\n    INT ans = 0;  \r\n    for(int i = 1; i < (1 << top); i ++){  \r\n        int cnt = 0;  \r\n        INT tmp = 1;  \r\n        for(int j = 0; j < top; j ++){  \r\n            if(i & (1 << j)){  \r\n                cnt ++;  \r\n                tmp = tmp * p[j];  \r\n            }  \r\n        }  \r\n        if(cnt % 2) ans += F(n, tmp);  \r\n        else ans -= F(n, tmp);  \r\n    }  \r\n    return ans;  \r\n}  \r\n\r\nint main()\r\n{  \r\n    INT n;  \r\n    while(cin >> n){  \r\n        cout << solve(n) + 1 << endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":527,
"code":"\n#include <stdio.h>  \r\nint f[300];  \r\nconst int N=1314520;  \r\nint count_bit(int n){  \r\n    int r=0;  \r\n    while(n){  \r\n      n>>=1;  \r\n      r++;  \r\n    }  \r\n    return r;  \r\n}  \r\nint countone(int n){  \r\n    int r=0;  \r\n    while(n){  \r\n      n&=(n-1);  \r\n      r++;  \r\n    }  \r\n    return r;  \r\n}  \r\nint main(){  \r\n    int n;  \r\n    f[0]=1;f[1]=1;f[2]=2;  \r\n    while(~scanf(\"%d\",&n)){  \r\n      int sumdigit=count_bit(n);  \r\n      int numone=countone(n);  \r\n      int numzero=sumdigit-numone;  \r\n      int x=numzero*numone;  \r\n      for(int i=2;i<=x;++i){  \r\n        f[i]=( ( f[i-1]%N ) + (f[i-2]%N) )%N;  \r\n      }  \r\n      printf(\"%d\\n\",f[x]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":528,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cstdio>  \r\n#include<map>  \r\n#include<cmath>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\nint Scan()  \r\n{  \r\n    int res = 0 , ch;  \r\n    while( !( ( ch = getchar() ) >= '0' && ch <= '9' ) )  \r\n    {  \r\n        if( ch == EOF )  return 1 << 30 ;  \r\n    }  \r\n    res = ch - '0' ;  \r\n    while( ( ch = getchar() ) >= '0' && ch <= '9' )  \r\n        res = res * 10 + ( ch - '0' ) ;  \r\n    return res ;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int n, temp, x;  \r\n    while(scanf(\"%d\", &n) != EOF)  \r\n    {  \r\n        temp = 0;  \r\n        for(int i = 0; i < n; ++i)  \r\n        {  \r\n            x = Scan();  \r\n            temp ^= x;  \r\n        }  \r\n        printf(\"%d\\n\", temp);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":529,
"code":"\n#include <iostream>  \r\n#include <stdio.h>  \r\n#include <string.h>  \r\nint numa[50],numb[50];  \r\nvoid fun(int x,int a[50]){  \r\n    int k=0;  \r\n    while(x){  \r\n      a[k++]=x%2;  \r\n      x\/=2;  \r\n    }  \r\n}  \r\nint main(){  \r\n    int numcase,n;  \r\n    scanf(\"%d\",&numcase);  \r\n    while(numcase--){  \r\n      scanf(\"%d\",&n);  \r\n      memset(numa,0,sizeof(numa));  \r\n      memset(numb,0,sizeof(numb));  \r\n      fun(n,numa);  \r\n      fun(n+1,numb);  \r\n      int s=0;  \r\n      for(int i=0;i<50;++i)  \r\n          if(numa[i]!=numb[i])  \r\n              s++;  \r\n      printf(\"%d\\n\",s);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":530,
"code":"\n#include <iostream>  \r\n#include <algorithm>  \r\n#include <cmath>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <queue>  \r\nusing namespace std;  \r\n\r\nconst int N = 105;  \r\nconst int mod = 1991;  \r\nstruct Matrix  \r\n{  \r\n    int n;  \r\n    int a[N][N];  \r\n    Matrix() {  \r\n        memset(a, 0, sizeof(a));\r\n    }  \r\n    Matrix(int ax){  \r\n        n = ax;  \r\n        memset(a, 0, sizeof(a));  \r\n    }  \r\n} ans, A;  \r\n\r\nMatrix operator * (Matrix a, Matrix b)  \r\n{  \r\n    Matrix tmpans;  \r\n    tmpans.n = a.n;  \r\n    for(int i = 1; i <= a.n; i ++){  \r\n        for(int j = 1; j <= a.n; j ++){  \r\n            for(int k = 1; k <= a.n; k ++)  \r\n            tmpans.a[i][j] = (tmpans.a[i][j] + a.a[i][k] * b.a[k][j]) % mod;  \r\n        }  \r\n    }  \r\n    return tmpans;  \r\n}  \r\n\r\nvoid power(int k)  \r\n{  \r\n    while(k){  \r\n        if(k & 1) ans = ans * A;  \r\n        A = A * A;  \r\n        k = k >> 1;  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int T;  \r\n    cin >> T;  \r\n    while(T --){  \r\n        int n, m, k, l;  \r\n        memset(A.a, 0, sizeof(A.a));  \r\n        memset(ans.a, 0, sizeof(ans.a));  \r\n        cin >> n >> m >> k >> l;  \r\n        A.n = n; ans.n = n;  \r\n        int x, y;  \r\n        for(int i = 1; i <= m; i ++){  \r\n            cin >> x >> y;  \r\n            A.a[x][y] = A.a[x][y] + 1;  \r\n        }  \r\n        for(int i = 1; i <= n; i ++){  \r\n            ans.a[i][i] = 1;  \r\n        }  \r\n        power(k);  \r\n        for(int i = 1; i <= l; i ++){  \r\n            cin >> x >> y;  \r\n            cout << ans.a[x][y] % mod << endl;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":531,
"code":"\n#include<queue>  \r\n#include<stdio.h>  \r\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<algorithm>  \r\n#include<string.h>  \r\n#include<vector>  \r\nusing namespace std;  \r\n#define maxn 11111  \r\n#define inf 11111111  \r\nstruct edge{int to,cap,rev;  \r\n    edge(int to=0,int cap=0,int rev=0):to(to),cap(cap),rev(rev){}  \r\n};  \r\nvector<edge>g[maxn];  \r\nint lv[maxn],iter[maxn];  \r\nvoid add(int u,int v,int w)  \r\n{  \r\n    edge a;a.to=v;a.cap=w;a.rev=(int)g[v].size();  \r\n    g[u].push_back(a);  \r\n    a.to=u;a.cap=0;a.rev=(int)g[u].size()-1;  \r\n    g[v].push_back(a);  \r\n}  \r\nvoid bfs(int s)  \r\n{  \r\n    memset(lv,-1,sizeof lv);  \r\n    queue<int>q;  \r\n    q.push(s);  \r\n    lv[s]=0;  \r\n    int v;  \r\n    while(!q.empty())  \r\n    {  \r\n        v=q.front();  \r\n        q.pop();  \r\n        for(int i=0;i<g[v].size();++i)  \r\n        {  \r\n            if(lv[g[v][i].to]<0&&g[v][i].cap>0)  \r\n            {  \r\n                lv[g[v][i].to]=lv[v]+1;  \r\n                q.push(g[v][i].to);  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\nint dfs(int u,int v,int f)  \r\n{  \r\n    if(u==v)return f;  \r\n    for(int &i=iter[u];i<g[u].size();++i)  \r\n    {  \r\n        edge &e=g[u][i];  \r\n        if(lv[u]<lv[e.to]&&e.cap>0)\r\n        {  \r\n            int d=dfs(e.to,v,min(f,e.cap));  \r\n            if(d>0)  \r\n            {  \r\n                e.cap-=d;  \r\n                g[e.to][e.rev].cap+=d;  \r\n                return d;  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}  \r\nint max_flow(int s,int t)  \r\n{  \r\n    int flow=0;  \r\n    for(;;)  \r\n    {  \r\n        memset(lv,-1,sizeof lv);  \r\n        bfs(s);  \r\n        if(lv[t]<0)return flow;  \r\n        memset(iter,0,sizeof iter);    \r\n        int f;  \r\n        while((f=dfs(s,t,inf))>0){  \r\n            flow+=f;  \r\n        }  \r\n    }  \r\n}  \r\npair<int,int>cow[3333],bottle[3333];  \r\nint main()  \r\n{  \r\n    int t,n,m;  \r\n    int a,b,c;  \r\n    int x,y,ans;  \r\n    while(~scanf(\"%d%d\",&x,&y)){  \r\n        n=x+y+1;ans=0;  \r\n        for(int i=1;i<=x;++i){  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            ans+=a;  \r\n            add(0,i,a);  \r\n            while(b--){  \r\n                scanf(\"%d\",&c);  \r\n                add(i,c+x,inf);  \r\n            }  \r\n        }  \r\n        for(int i=1;i<=y;++i){  \r\n            scanf(\"%d\",&c);  \r\n            add(i+x,n,c);  \r\n        }  \r\n\r\n        printf(\"%d\\n\",ans-max_flow(0,n));  \r\n        for(int i=0;i<=n;++i)g[i].clear();  \r\n    }  \r\n    return 0;    \r\n\r\n}"
},
{
"pid":532,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\nusing namespace std;\r\nint sum;\r\nint mi(int x,int y){\r\n\tint s=1;\r\n\tfor(int i=0;i<y;++i){\r\n\t  s*=9;\r\n\t}\r\n\treturn x*s;\r\n}\r\nbool fun(int x){\r\n\tsum=0;\r\n\tint k=0;\r\n\twhile(x){\r\n\t  int y=x%10;\r\n\t  x\/=10;\r\n\t  if(!y)\r\n\t\t  return false;\r\n\t  sum+=mi(y,k++);\r\n\t}\r\n\treturn true;\r\n}\r\nint main(){\r\n\tint n;\r\n\twhile(~scanf(\"%d\",&n)){\r\n\t\tif(n==0){puts(\"Unlucky\");continue;}\r\n\t   bool flag=fun(n);\r\n\t   if(flag==false)\r\n\t\t   puts(\"Unlucky\");\r\n\t   else{\r\n\t     printf(\"%d\\n\",sum);\r\n\t   }\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":534,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <string.h>  \r\nusing namespace std;  \r\nconst int N=50010;  \r\n#define max(x,y) ((x)>(y)?(x):(y))  \r\nstruct tree{  \r\n    int left,right,flag;  \r\n    int lsum,rsum,sum;  \r\n    int getmid(){  \r\n      return (left+right)\/2;  \r\n    }  \r\n    void change(int pos);  \r\n}tt[N*4];  \r\nvoid tree::change(int pos){  \r\n       tt[pos*2].flag=tt[pos*2+1].flag=tt[pos].flag;  \r\n        int x,y;  \r\n        if(tt[pos].flag){  \r\n          x=y=0;  \r\n        }  \r\n        else{  \r\n          x=tt[pos*2].right-tt[pos*2].left+1;  \r\n          y=tt[pos*2+1].right-tt[pos*2+1].left+1;  \r\n        }  \r\n        tt[pos*2].lsum=tt[pos*2].rsum=tt[pos*2].sum=x;  \r\n        tt[pos*2+1].lsum=tt[pos*2+1].rsum=tt[pos*2+1].sum=y;  \r\n        tt[pos].flag=-1;  \r\n}  \r\nvoid built_tree(int lp,int rp,int pos){  \r\n    tt[pos].left=lp;  \r\n    tt[pos].right=rp;  \r\n    tt[pos].flag=0;  \r\n    tt[pos].lsum=tt[pos].rsum=tt[pos].sum=rp-lp+1;  \r\n    if(lp==rp)return;  \r\n    int mid=tt[pos].getmid();  \r\n    built_tree(lp,mid,pos*2);  \r\n    built_tree(mid+1,rp,pos*2+1);  \r\n}  \r\nint find(int x,int pos){  \r\n    if(tt[pos].right==tt[pos].left){  \r\n      return tt[pos].left;  \r\n    }  \r\n    if(tt[pos].flag!=-1){  \r\n      tt[pos].change(pos);  \r\n    }  \r\n    if(tt[pos*2].sum>=x){  \r\n      return find(x,pos*2);  \r\n    }  \r\n    else if(tt[pos*2].rsum+tt[pos*2+1].lsum>=x){  \r\n      return tt[pos*2].right-tt[pos*2].rsum+1;  \r\n    }  \r\n    else if(tt[pos*2+1].sum>=x){  \r\n      return find(x,pos*2+1);  \r\n    }  \r\n    else{  \r\n      return 0;  \r\n    }  \r\n}  \r\nvoid update(int lp,int rp,int modl,int pos){  \r\n    if(tt[pos].left==lp&&tt[pos].right==rp){  \r\n        if(modl==1){  \r\n          tt[pos].lsum=tt[pos].rsum=tt[pos].sum=0;  \r\n        }  \r\n        else{  \r\n            tt[pos].lsum=tt[pos].rsum=tt[pos].sum=tt[pos].right-tt[pos].left+1;  \r\n        }  \r\n        tt[pos].flag=modl;  \r\n        return;  \r\n    }  \r\n    if(tt[pos].flag!=-1){  \r\n      tt[pos].change(pos);  \r\n    }  \r\n    int mid=tt[pos].getmid();  \r\n    if(rp<=mid)  \r\n        update(lp,rp,modl,pos*2);  \r\n    else if(lp>mid)  \r\n        update(lp,rp,modl,pos*2+1);  \r\n    else{  \r\n      update(lp,mid,modl,pos*2);  \r\n      update(mid+1,rp,modl,pos*2+1);  \r\n    }  \r\n    tt[pos].sum=max(max(tt[pos*2].sum,tt[pos*2+1].sum),tt[pos*2].rsum+tt[pos*2+1].lsum);  \r\n    tt[pos].lsum=tt[pos*2].lsum;  \r\n    tt[pos].rsum=tt[pos*2+1].rsum;  \r\n    if(tt[pos*2].lsum==tt[pos*2].right-tt[pos*2].left+1)  \r\n        tt[pos].lsum+=tt[pos*2+1].lsum;  \r\n    if(tt[pos*2+1].rsum==tt[pos*2+1].right-tt[pos*2+1].left+1)  \r\n        tt[pos].rsum+=tt[pos*2].rsum;  \r\n}  \r\nint main(){  \r\n    int n,m;  \r\n    while(~scanf(\"%d%d\",&n,&m)){  \r\n      built_tree(1,n,1);  \r\n      int mod,x,y,ans;  \r\n      while(m--){  \r\n        scanf(\"%d\",&mod);  \r\n        if(mod==1){  \r\n          scanf(\"%d\",&x);  \r\n          ans=0;  \r\n          ans=find(x,1);  \r\n          printf(\"%d\\n\",ans);  \r\n          if(ans){  \r\n            update(ans,ans+x-1,1,1);  \r\n          }  \r\n        }  \r\n        else{  \r\n          scanf(\"%d%d\",&x,&y);  \r\n          update(x,x+y-1,0,1);  \r\n        }  \r\n      }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":535,
"code":"\n#include<iostream>\r\n#include<iomanip>\r\n#include<cmath>\r\n#include<cstdio>\r\n#include<cstdlib>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\nint n,c[1005];\r\nlong long ans[405],tot[405],g[405];\r\nvoid chenggao(long long a[],long long b[])\r\n{\tint i,j;\r\n\tmemset(g,0,sizeof(g));\r\n\tg[0]=a[0]+b[0];\r\n\tfor(i=1;i<=a[0];i++)\r\n\t\tfor(j=1;j<=b[0];j++)\r\n\t\t\tg[i+j-1]+=a[i]*b[j];\r\n\tfor(i=1;i<=g[0];i++)\r\n\t\t{\tg[i+1]+=g[i]\/10000;\r\n\t\t\tg[i]=g[i]%10000;\r\n\t\t}\t\t\r\n\twhile(g[g[0]]==0&&g[0]>0)g[0]--;\r\n\tfor(i=0;i<=g[0];i++)\r\n\t\ta[i]=g[i];\t\t\r\n}\r\nvoid jia(long long a[],long long b[])\r\n{\tint i;\r\n\ta[0]=max(a[0],b[0]);\r\n\tfor(i=1;i<=a[0];i++)\r\n\t\ta[i]=a[i]+b[i];\r\n\tfor(i=1;i<=a[0];i++)\r\n\t\t{\ta[i+1]+=a[i]\/10000;\r\n\t\t\ta[i]=a[i]%10000;\r\n\t\t}\t\r\n\twhile(a[a[0]+1]!=0)\r\n\t\t{\ta[0]++;\r\n\t\t\ta[a[0]+1]=a[a[0]]\/10000;\r\n\t\t\ta[a[0]]=a[a[0]]%10000;\r\n\t\t}\t\r\n}\r\nvoid chudan(long long a[],int x)\r\n{\tlong long d=0;\r\n\tint i;\r\n\tfor(i=a[0];i>=1;i--)\r\n\t\t{\td=d*10000+a[i];\r\n\t\t\ta[i]=d\/x;\r\n\t\t\td=d%x;\r\n\t\t}\r\n\twhile(a[a[0]]==0&&a[0]>0)a[0]--;\r\n}\r\nvoid chengdan(long long a[],int x)\r\n{\tint i;\r\n\tfor(i=1;i<=a[0];i++)\r\n\t\ta[i]=a[i]*x;\r\n\tfor(i=1;i<=a[0];i++)\r\n\t\t{\ta[i+1]+=a[i]\/10000;\r\n\t\t\ta[i]=a[i]%10000;\r\n\t\t}\t\r\n\twhile(a[a[0]+1]!=0)\r\n\t\t{\ta[0]++;\r\n\t\t\ta[a[0]+1]=a[a[0]]\/10000;\r\n\t\t\ta[a[0]]=a[a[0]]%10000;\r\n\t\t}\t\r\n}\r\nvoid print(long long a[])\r\n{\tint i;\r\n\tprintf(\"%lld\",a[a[0]]);\r\n\tfor(i=a[0]-1;i>=1;i--)\r\n\t\t{\tprintf(\"%lld\",a[i]\/1000);\r\n\t\t\tprintf(\"%lld\",a[i]\/100%10);\r\n\t\t\tprintf(\"%lld\",a[i]\/10%10);\r\n\t\t\tprintf(\"%lld\",a[i]%10);\r\n\t\t}\r\n\tprintf(\"\\n\");\t\r\n}\r\nvoid Mulpow(int x,int tmp)\r\n{\tint i;\r\n\tmemset(tot,0,sizeof(tot));\r\n\r\n\tc[0]=0;\r\n\twhile(tmp>0)\r\n\t\t{\tc[0]++;\r\n\t\t\tc[c[0]]=tmp%2;\r\n\t\t\ttmp=tmp\/2;\r\n\t\t}\r\n\ttot[0]=1;\r\n\ttot[1]=x;\r\n\r\n\tfor(i=c[0]-1;i>=1;i--)\r\n\t\t{\tchenggao(tot,tot);\r\n\t\t\tif(c[i]==1)\r\n\t\t\t\tchengdan(tot,x);\r\n\t\t}\t\r\n}\r\nint main()\r\n{\r\n\tint p,x,y,i,tmp,N;\r\n\twhile(scanf(\"%d%d\",&n,&p)!=EOF)\r\n\t\t{\tN=n*n;\r\n\t\t\tmemset(ans,0,sizeof(ans));\r\n\t\t\tif(n==1)\r\n\t\t\t\t{\tprintf(\"%d\\n\",p);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\tif(n%2==0)\r\n\t\t\t\t{\tMulpow(p,N);\/\/0\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,N\/4);\/\/90\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,N\/2);\/\/180\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,N\/4);\/\/270\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,N\/2);\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,N\/2);\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,n+(N-n)\/2);\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,n+(N-n)\/2);\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\ty=8;\r\n\t\t\t\t}\t\r\n\t\t\telse\r\n\t\t\t\t{\tMulpow(p,N);\/\/0\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,1+(N-1)\/4);\/\/90\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,1+(N-1)\/2);\/\/180\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,1+(N-1)\/4);\/\/270\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,n+(N-n)\/2);\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,n+(N-n)\/2);\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,n+(N-n)\/2);\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\tMulpow(p,n+(N-n)\/2);\r\n\t\t\t\t\tjia(ans,tot);\r\n\r\n\t\t\t\t\ty=8;\r\n\t\t\t\t}\t\r\n\t\t\tchudan(ans,y);\t\r\n\t\t\tprint(ans);\t\r\n\t\t}\r\n\r\n\treturn 0;\r\n}"
},
{
"pid":536,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\nusing namespace std;  \r\nconst int N=210;  \r\nint p[N];  \r\nint d[105][105];  \r\n#define MAX 100000000;  \r\nint main(){  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n)){  \r\n      for(int i=1;i<=n;++i)  \r\n          scanf(\"%d%d\",&p[i-1],&p[i]);  \r\n      for(int i=1;i<=n;++i)  \r\n          d[i][i]=0;  \r\n      for(int l=2;l<=n;l++){  \r\n          for(int i=1;i<=n-l+1;i++){  \r\n            int j=i+l-1;  \r\n            d[i][j]=MAX;  \r\n            for(int k=i;k<=j-1;k++){  \r\n              int v=d[i][k]+d[k+1][j]+p[i-1]*p[k]*p[j];  \r\n              if(v<d[i][j])  \r\n                  d[i][j]=v;  \r\n            }  \r\n          }  \r\n      }  \r\n      printf(\"%d\\n\",d[1][n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":540,
"code":"\n#include<stdio.h>  \r\n#include<stdlib.h>  \r\n#include<string.h>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nchar *strrev(char *str)\r\n{  \r\n    int len=strlen(str);  \r\n    char *begin=str;  \r\n    char *end=str+len-1;  \r\n    while(begin<end)  \r\n    {  \r\n        char temp;  \r\n        temp=*begin;  \r\n        *begin=*end;  \r\n        *end=temp;  \r\n        ++begin;  \r\n        --end;  \r\n    }  \r\n    return str;  \r\n}  \r\nstruct node  \r\n{  \r\n    int firstnum;  \r\n    int lastnum;  \r\n}w[100001];  \r\nbool comp(node x,node y)  \r\n{  \r\n    if(x.lastnum<y.lastnum) return true;  \r\n    return false;  \r\n}  \r\nchar z[100001];  \r\nint main()  \r\n{  \r\n    int ncases,x,y;  \r\n    scanf(\"%d\",&ncases);  \r\n    while(ncases--)  \r\n    {  \r\n        int cnt=0;  \r\n        scanf(\"%d %d\",&x,&y);  \r\n        for(int i=x;i<=y;i++)  \r\n        {  \r\n            w[cnt].firstnum=i;  \r\n            sprintf(z,\"%d\",i);\r\n            strrev(z);\r\n            w[cnt].lastnum=atoi(z); \r\n            cnt++;  \r\n            memset(z,0,sizeof(z));\r\n        }  \r\n        sort(w,w+y-x+1,comp);  \r\n        for(int i=0;i<y-x+1;i++)  \r\n        {  \r\n            if(i==0)  \r\n            {  \r\n                printf(\"%d\",w[0].firstnum);  \r\n            }  \r\n            else  \r\n            {  \r\n                printf(\" %d\",w[i].firstnum);  \r\n            }  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":541,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n\r\nint ans[205];\r\n\r\nint multiply(int x)\r\n{\r\n    int i,j,k;\r\n    int temp = 0;\r\n    int c = 0;\r\n    for(i=0; i<200; i++)\r\n    {\r\n        temp = ans[i]*x+c;\r\n        ans[i] = temp%10; \r\n        c = temp\/10;   \r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    int i,j,k;\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    int num,n;\r\n    while(T--)\r\n    {\r\n        memset(ans,0,sizeof(ans));\r\n        scanf(\"%d\",&num);\r\n        n=num\/3;\r\n        ans[0]=1;\r\n        if(num%3==1) \r\n            n--;\r\n\r\n        for(i=0;i<n;i++)\r\n            multiply(3);\r\n        if(num%3==1) \r\n            multiply(4);\r\n        else if(num%3==2) \r\n            multiply(2);\r\n\r\n        for(i=200;i>=0;i--)\r\n        if(ans[i]) \r\n            break;\r\n        for(;i>0;i--)\r\n            printf(\"%d\",ans[i]);\r\n        printf(\"%d\\n\",ans[0]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":542,
"code":"\n#include<stdio.h>\r\n#include<iostream>\r\n#include<cstdio>\r\n#include<string>\r\n#include<cstring>\r\n#include<vector>\r\n#include<map>\r\n#include<algorithm>\r\nusing namespace std;\r\nvector<string>f[401];\r\nvector<string>e[501];\r\nvector<string>all;\r\nmap<string,int>have;\r\nchar s[110];\r\nvoid fun(int t)\r\n{\r\n    int len,i=0,ki;\r\n    char str[20];\r\n    len=strlen(s);\r\n    ki=0;\r\n    memset(str,0,sizeof(str));\r\n    while(1)\r\n    {\r\n        if(s[i]=='=')\r\n        {\r\n            f[t].push_back(str);\r\n            memset(str,0,sizeof(str));\r\n            i++;\r\n            ki=0;\r\n            break;\r\n        }\r\n        if(s[i]!='+')\r\n        {\r\n            str[ki++]=s[i++];\r\n        }\r\n        else if(s[i]=='+')\r\n        {\r\n            f[t].push_back(str);\r\n            memset(str,0,sizeof(str));\r\n            i++;\r\n            ki=0;\r\n        }\r\n    }\r\n    for(;i<len;++i)\r\n    {\r\n        if(s[i]=='+')\r\n        {\r\n            e[t].push_back(str);\r\n            ki=0;\r\n            memset(str,0,sizeof(str));\r\n        }\r\n        else\r\n        {\r\n            str[ki++]=s[i];\r\n        }\r\n    }\r\n    e[t].push_back(str);\r\n    strcpy(str,\"\");\r\n}\r\n\r\nint main()\r\n{\r\n    int n,m,i,x,j,m2,flag,len;\r\n    char s2[15];\r\n    scanf(\"%d\",&n);\r\n    for(i=0;i<n;i++)\r\n    {\r\n        scanf(\"%s\",s);\r\n        fun(i);\r\n    }\r\n    scanf(\"%d\",&m);\r\n    for(i=1;i<=m;++i)\r\n    {\r\n        scanf(\"%s\",s2);\r\n        have[s2]=i;\r\n    }\r\n    m2=m;\r\n    for(x=0;x<=m2;++x)\r\n    {\r\n        for(i=0;i<n;++i)\r\n        {\r\n            len=f[i].size();\r\n            flag=1;\r\n            for(j=0;j<len;++j)\r\n            {\r\n                if(have[f[i][j]]==0)\r\n              {\r\n                  flag=0;\r\n                  break;\r\n              }\r\n            }\r\n            if(flag)\r\n            {\r\n                len=e[i].size();\r\n                for(j=0;j<len;++j)\r\n                    if(have[e[i][j]]==0)\r\n                    {\r\n                        have[e[i][j]]=m2++;\r\n                        all.push_back(e[i][j]);\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    sort(all.begin(),all.end());\r\n    printf(\"%d\\n\",m2-m);\r\n    for(i=0;i<m2-m;++i)\r\n             cout << all[i] << endl;\r\n\r\n    return 0;\r\n}"
},
{
"pid":543,
"code":"\n#include<stdio.h>\r\nint map[4][4];\r\nint panduan(int Y)\r\n{\r\n \tint A[2],k=0,ok=1,i;\r\n \tif(Y>=10&&map[3][0]==0)\r\n  \t\treturn 0;\r\n \tif(Y==0)\r\n \t{\r\n  \t\tA[0]=0;\r\n  \t\tk=1;\r\n \t}\r\n \twhile(Y)\r\n \t{\r\n  \t\tA[k++]=Y%10;\r\n  \t\tY\/=10;\r\n \t}\r\n \tfor(i=k-1;i>=0;i--)\r\n \t{\r\n  \t\tswitch(A[i])\r\n  \t\t{\r\n  \t\t\tcase 1: if(map[0][0]!=1) ok=0; break;\r\n  \t\t\tcase 2: if(map[0][1]!=1) ok=0; break;\r\n  \t\t\tcase 3: if(map[0][2]!=1) ok=0; break;\r\n  \t\t\tcase 4: if(map[1][0]!=1) ok=0; break;\r\n  \t\t\tcase 5: if(map[1][1]!=1) ok=0; break;\r\n  \t\t\tcase 6: if(map[1][2]!=1) ok=0; break;\r\n  \t\t\tcase 7: if(map[2][0]!=1) ok=0; break;\r\n  \t\t\tcase 8: if(map[2][1]!=1) ok=0; break;\r\n  \t\t\tcase 9: if(map[2][2]!=1) ok=0; break;\r\n  \t\t\tcase 0: if(map[3][1]!=1) ok=0; break;\r\n  \t\t}\r\n  \t\tif(ok==0)\r\n   \t\t\treturn 0;\r\n \t}\r\n \tif(k==2)\r\n  \t\treturn 3;\r\n \telse\r\n  \t\treturn 1;\r\n}\r\nint step1(int X,int Y)\r\n{\r\n \tint sum1=150,sum2=150,k=0;\r\n \tif(map[0][3])\r\n \t{\r\n  \t\tif(Y>X)\r\n   \t\t\tsum1=Y-X;\r\n  \t\telse\r\n   \t\t\tsum1=100-X+Y;\r\n \t}\r\n \tif(map[1][3])\r\n \t{\r\n  \t\tif(Y<X)\r\n   \t\t\tsum2=X-Y;\r\n  \t\telse\r\n   \t\t\tsum2=100-Y+X;\r\n \t}\r\n \treturn sum1<sum2?sum1:sum2;\r\n}\r\nint step2(int X,int Y)\r\n{\r\n \tint i,sum1=150,sum2=150,k=0;\r\n \tif(map[0][3])\r\n \t{\r\n  \t\ti=Y;\r\n  \t\twhile(!panduan(i))\r\n  \t\t{\r\n   \t\t\ti--; k++;\r\n   \t\t\tif(i==-1)\r\n    \t\t\ti=99;\r\n   \t\t\tif(k==150)\r\n    \t\t\tbreak;\r\n  \t\t}\r\n  \t\tsum1=k+panduan(i);\r\n \t}\r\n \tk=0;\r\n \tif(map[1][3])\r\n \t{\r\n  \t\ti=Y;\r\n  \t\twhile(!panduan(i))\r\n  \t\t{\r\n   \t\t\ti++; k++;\r\n   \t\t\tif(i==100)\r\n    \t\t\ti=0;\r\n   \t\t\tif(k==150)\r\n    \t\t\tbreak;\r\n  \t\t}\r\n  \t\tsum2=k+panduan(i);\r\n \t}\r\n \treturn sum1<sum2?sum1:sum2;\r\n}\r\nint main()\r\n{\r\n \tint i,j,n,X,Y,num1,num2,num3,num;\r\n \tscanf(\"%d\",&n);\r\n \twhile(n--)\r\n \t{\r\n  \t\tnum1=num2=num3=150;\r\n  \t\tfor(i=0;i<4;i++)\r\n   \t\tfor(j=0;j<4;j++)\r\n   \t\t{\r\n    \t\tif(i==2&&j==3||i==3&&j==2||i==3&&j==3)\r\n     \t\t\tcontinue;\r\n    \t\tscanf(\"%d\",&map[i][j]);\r\n   \t\t}\r\n  \t\tscanf(\"%d%d\",&X,&Y);\r\n  \t\tif(X==Y)\r\n  \t\t{\r\n   \t\t\tprintf(\"0\\n\");  continue;\r\n  \t\t}\r\n  \t\tif(panduan(Y))\r\n   \t\t\tnum1=panduan(Y);\r\n  \t\tif(map[0][3]+map[1][3]!=0)\r\n  \t\t{\r\n   \t\t\tnum2=step1(X,Y);\r\n   \t\t\tnum3=step2(X,Y);\r\n  \t\t}\r\n  \t\tnum=(num1<num2?num1:num2)<num3?(num1<num2?num1:num2):num3;\r\n  \t\tif(num>=150)\r\n   \t\t\tprintf(\"-1\\n\");\r\n  \t\telse\r\n   \t\t\tprintf(\"%d\\n\",num);\r\n \t}\r\n}"
},
{
"pid":545,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint x[35][35];  \r\nvoid slove(int n)  \r\n{  \r\n    for(int i=0;i<n;++i)   \r\n    {  \r\n        if(x[i][i]!=0)  \r\n        {  \r\n            printf(\"1\\n\");  \r\n            return;  \r\n        }  \r\n    }  \r\n    for(int i=0;i<n;++i)  \r\n    {  \r\n        for(int j=0;j<n;++j)  \r\n        {  \r\n            if(i!=j&&x[i][j]<=0)  \r\n            {  \r\n                printf(\"2\\n\");  \r\n                return;  \r\n            }  \r\n        }  \r\n    }  \r\n    for(int i=0;i<n;++i)  \r\n    {  \r\n        for(int j=0;j<n;++j)  \r\n        {  \r\n            if(i!=j&&x[i][j]!=x[j][i])  \r\n            {  \r\n                printf(\"3\\n\");  \r\n                return;  \r\n            }  \r\n        }  \r\n    }  \r\n    for(int i=0;i<n;++i)  \r\n    {  \r\n        for(int j=0;j<n;++j)  \r\n        {  \r\n            for(int k=0;k<n;++k)  \r\n            {  \r\n                if(i!=j&&j!=k&&i!=k&&x[i][j]+x[j][k]<x[i][k])  \r\n                {  \r\n                    printf(\"4\\n\");  \r\n                    return ;   \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n    printf(\"0\\n\");  \r\n}  \r\nint main()  \r\n{  \r\n    int t,n;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        for(int i=0;i<n;++i)  \r\n        {  \r\n            for(int j=0;j<n;++j)  \r\n            {  \r\n                scanf(\"%d\",&x[i][j]);  \r\n            }  \r\n        }  \r\n        slove(n);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":546,
"code":"\n#include <cstdio>\r\n#include <iostream>\r\n#include <cstring>\r\n\r\nusing namespace std;\r\n\r\nint sum[11];\r\nint tot;\r\nbool flag;\r\n\r\nvoid DFS(int sumval)  \r\n{\r\n    if(flag)  \r\n        return;\r\n    if(sumval == tot)\r\n    {\r\n        flag = true;\r\n        return;\r\n    }\r\n    for(int i = 10; i >= 1; --i)\r\n    {                            \r\n        if(sum[i]>0 && sumval+i<=tot)  \r\n        {\r\n            sum[i]--;\r\n            DFS(sumval + i);\r\n            if(flag)\r\n                return;\r\n        }        \r\n    }\r\n}\r\n\r\nint main()\r\n{\r\n    for(int T = 1; ; ++T)\r\n    {\r\n        tot = 0;\r\n        for(int i = 1; i <= 10; ++i)\r\n        {\r\n            scanf(\"%d\", &sum[i]);\r\n            tot += sum[i]*i;\r\n        }\r\n        if(!tot)\r\n            break;\r\n        if(tot & 1)  \r\n        {\r\n            printf(\"#%d:Can't be divided.\\n\\n\", T);\r\n            continue;\r\n        }\r\n        tot >>= 1;\r\n        flag = false;\r\n        DFS(0);\r\n        if(flag)\r\n            printf(\"#%d:Can be divided.\\n\\n\", T);\r\n        else\r\n            printf(\"#%d:Can't be divided.\\n\\n\", T);\r\n    }    \r\n    return 0;\r\n}"
},
{
"pid":547,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<queue>\r\nusing namespace std;\r\nint n,m;\r\n#define N 400\r\nint p[N][N];\r\nstruct node {\r\n  int x,y,w;\r\n  friend bool operator<(node a,node b) {\r\n   return a.w>b.w;\r\n  }\r\n};\r\nint visit[N][N];\r\nint dis[4][2]={1,0,0,1,-1,0,0,-1};\r\nint judge(int x,int y) {\r\nif(x<=n&&x>=1&&y<=m&&y>=1&&!visit[x][y])\r\n    return 1;\r\nreturn 0;\r\n}\r\nint main() {\r\n    int i,j,sum;\r\nwhile(scanf(\"%d%d\",&m,&n)!=EOF) {\r\n        priority_queue<node>q;\r\n        node cur,next;\r\n        memset(visit,0,sizeof(visit));\r\n    for(i=1;i<=n;i++)\r\n        for(j=1;j<=m;j++) {\r\n        scanf(\"%d\",&p[i][j]);\r\n        if(j==1||j==m||i==1||i==n) {\r\n        cur.x=i;cur.y=j;\r\n        cur.w=p[i][j];\r\n        visit[i][j]=1;\r\n        q.push(cur);\r\n        }\r\n        }\r\n        sum=0;\r\n        while(!q.empty()) {\r\n            cur=q.top();\r\n            q.pop();\r\n            for(i=0;i<4;i++) {\r\n                int xx=next.x=cur.x+dis[i][0];\r\n                int yy=next.y=cur.y+dis[i][1];\r\n                if(judge(xx,yy)) {\r\n                        visit[xx][yy]=1;\r\n                    if(p[xx][yy]<cur.w) {\r\n                        sum+=cur.w-p[xx][yy];\r\n                        next.w=cur.w;\r\n                        q.push(next);\r\n                    }\r\n                    else {\r\n                        next.w=p[xx][yy];\r\n                        q.push(next);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",sum);\r\n    }\r\nreturn 0;\r\n}"
},
{
"pid":548,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\n#define pi 3.14159265358  \r\ndouble rest(double a[],int n,double x0,double xt)  \r\n{  \r\n    int i;  \r\n    double sum=0.0;  \r\n    for(i=0;i<=n;i++)  \r\n        sum+=(pow(xt,i+1)-pow(x0,i+1))*a[i]\/(i+1.0);  \r\n    return sum*pi;  \r\n}  \r\ndouble br(double a[],int n,double x0,double st,double xt,double v)  \r\n{  \r\n    double mid=(xt+st)*0.5;  \r\n    if(fabs(rest(a,n,x0,mid)-v)>0.001)  \r\n        if(rest(a,n,x0,mid)-v>0)  \r\n            return br(a,n,x0,st,mid,v);  \r\n        else  \r\n            return br(a,n,x0,mid,xt,v);   \r\n    else  \r\n        return mid;  \r\n}  \r\nint main()  \r\n{  \r\n    int i,j,k,l,m=0,n;  \r\n    double p[30],p1[20],low,high,bound,st;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        for(i=0;i<=n;i++)  \r\n            scanf(\"%lf\",&p1[i]);  \r\n        for(i=0;i<30;i++)  \r\n            p[i]=0.0;  \r\n        for(i=0;i<=n;i++)  \r\n            for(j=0;j<=n;j++)  \r\n                p[i+j]+=p1[i]*p1[j];  \r\n        scanf(\"%lf%lf%lf\",&low,&high,&bound);  \r\n        printf(\"Case %d: %.2lf\\n\",++m,st=rest(p,2*n,low,high));  \r\n        if(st<bound)  \r\n            puts(\"insufficient volume\");  \r\n        else  \r\n        {  \r\n            st=low;  \r\n            for(i=0;i<8;i++)  \r\n            {  \r\n                if(rest(p,2*n,low,high)<bound)  \r\n                    break;  \r\n                printf(\"%.2lf \",(low=br(p,2*n,low,low,high,bound))-st);  \r\n            }  \r\n            printf(\"\\n\");  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":550,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    char arr[4]={0};  \r\n    while(~scanf(\"%c%c%c\",&arr[0],&arr[1],&arr[2]))  \r\n        printf(\"%c%c%c\",arr[2],arr[1],arr[0]);  \r\n    return 0;  \r\n}"
},
{
"pid":551,
"code":"\n#include <stdio.h>\r\nint main()\r\n{\r\n    int n;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        if(n>=90)\r\n        printf(\"A\\n\");\r\n        if(n>=80&&n<90)\r\n        printf(\"B\\n\");\r\n         if(n>=70&&n<80)\r\n        printf(\"C\\n\");\r\n         if(n>=60&&n<70)\r\n        printf(\"D\\n\");\r\n          if(n<60)\r\n        printf(\"E\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":552,
"code":"\n#include<stdio.h>  \r\nint sum(int n)  \r\n{  \r\n    if(n==1)   return 1;  \r\n    return sum(n-1)*n;  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(scanf(\"%d\",&n)!=EOF){  \r\n    printf(\"%d\\n\",sum(n));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":553,
"code":"\n#include <iostream>\r\nusing namespace std;  \r\nint main() {  \r\n    char ch[100];  \r\n    int i,c;  \r\n    while(cin.getline(ch,100)) {  \r\n        c=0;  \r\n        for(i=0;ch[i]!='\\0';i++) {  \r\n          if(ch[i]=='a')  \r\n            c++;   \r\n        }  \r\n        cout<<c<<endl;  \r\n    }   \r\n}"
},
{
"pid":554,
"code":"\n#include <stdio.h>\r\nint main()\r\n{\r\n    int m,n;\r\n    while(scanf(\"%d%d\",&m,&n)!=EOF)\r\n    {\r\n        int i;\r\n        for(i=m;i<=n;i++)\r\n        if(i%3==0)\r\n        printf(\"%d \",i);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":555,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nchar b[400];\r\nint main()\r\n{\r\n\tint i,j,k,n;\r\n\twhile(gets(b)!=NULL)\r\n\t{\r\n\t\tint a[200]={0};\r\n\t\tn=strlen(b);\r\n\t\tfor(k=0,i=0;i<n;)\r\n\t\t\tif(b[i]!=' ')\r\n\t\t\t{\r\n\t\t\t\tj=0;\r\n\t\t\t\twhile(b[i+j]!=' '&&i+j<n)\r\n\t\t\t\t{\r\n\t\t\t\t\ta[k]=a[k]*10+b[i+j]-'0';\r\n\t\t\t\t\tj++;\r\n\t\t\t\t}\r\n\t\t\t\tk++;\r\n\t\t\t\ti=i+j+1;\r\n\t\t\t}\r\n\t\t\telse i++;\r\n\t\tfor(i=k-1;i>=0;i--)\r\n\t\t\tprintf(\"%d \",a[i]);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":556,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n \tint x,y,k;\r\n \twhile(scanf(\"%d,%d\",&x,&y)!=EOF)\r\n \t{\r\n\t  \twhile(y!=0)\r\n\t  \t{\r\n\t      \tk=x%y;\r\n\t\t  \tx=y;\r\n      \t\ty=k;\r\n  \t\t}\r\n  \t\tprintf(\"%d\\n\",x);\r\n \t}\r\n \treturn 0;\r\n}"
},
{
"pid":557,
"code":"\n#include <stdio.h>\r\nint main()\r\n{\r\n    int a[11];\r\n    while(scanf(\"%d%d%d%d%d%d%d%d%d%d\",&a[0],&a[1],&a[2],&a[3],&a[4],&a[5],&a[6],&a[7],&a[8],&a[9])!=EOF)\r\n   \t{\r\n        int i,num;\r\n        num=0;\r\n    \tfor(i=0;i<10;i++)\r\n    \t\tif(a[i]%2!=0)\r\n    \t\t\tnum++;\r\n    \tprintf(\"%d\\n\",num);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":558,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int T,len;  \r\n    char str[7];  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%s\",str);  \r\n        len=strlen(str);  \r\n        if(len>3)  \r\n            printf(\"3\\n\");  \r\n        else  \r\n        {  \r\n            if((str[0]=='o'&&str[1]=='n')||(str[0]=='o'&&str[2]=='e')||(str[1]=='n'&&str[2]=='e'))  \r\n                printf(\"1\\n\");  \r\n            else  \r\n                printf(\"2\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":559,
"code":"\n#include<stdio.h>  \r\nint n,m,k;  \r\nint fun()  \r\n{  \r\n    int i=0,j=1,flag=0,t;  \r\n    while(1)  \r\n    {  \r\n        for(i=1,j=j;i<=n;i++,j++)  \r\n        {  \r\n            if(i==m)  \r\n            {  \r\n                if((j%7)==0)  \r\n                {  \r\n                    flag++;  \r\n                    if(flag==k)  \r\n                    {  \r\n                        return j;  \r\n                    }  \r\n                }  \r\n                else  \r\n                {  \r\n                    t=j;  \r\n                    while(t!=0)  \r\n                    {  \r\n                        if((t%10)==7)  \r\n                        {  \r\n                            flag++;  \r\n                            if(flag==k)  \r\n                            {  \r\n                                return j;  \r\n                            }  \r\n                            break;     \r\n                        }  \r\n                        t=t\/10;  \r\n                    }  \r\n                }  \r\n            }  \r\n        }  \r\n        for(i=n-1,j=j;i>1;i--,j++)  \r\n        {  \r\n            if(i==m)  \r\n            {  \r\n                if((j%7)==0)  \r\n                {  \r\n                    flag++;  \r\n                    if(flag==k)  \r\n                    {  \r\n                        return j;  \r\n                    }  \r\n                }  \r\n                else  \r\n                {  \r\n                    t=j;  \r\n                    while(t!=0)  \r\n                    {  \r\n                        if((t%10)==7)  \r\n                        {  \r\n                            flag++;  \r\n                            if(flag==k)  \r\n                            {  \r\n                                return j;  \r\n                            }  \r\n                            break;\r\n                        }  \r\n                        t=t\/10;  \r\n                    }  \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}  \r\nint main()  \r\n{  \r\n    while(scanf(\"%d%d%d\",&n,&m,&k)&&(n+m+k))  \r\n    {  \r\n        printf(\"%d\\n\",fun());  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":560,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\nusing namespace std;  \r\nchar map[10][10],s[10][10];  \r\nint x1,y1,x2,y2,n,m;  \r\nvoid get_big()\r\n{  \r\n    bool flag=true;  \r\n    for(int i=0;i<n;i++)  \r\n    {  \r\n        for(int j=0;j<n;j++)  \r\n        {  \r\n            if(s[i][j]=='*')  \r\n            {  \r\n                x1=i;  \r\n                y1=j;  \r\n                flag=false;  \r\n                break;  \r\n            }  \r\n        }  \r\n         if(!flag) break;  \r\n    }  \r\n}  \r\nvoid get_small()\r\n{  \r\n    bool flag=true;  \r\n    for(int i=0;i<m;i++)  \r\n    {  \r\n        for(int j=0;j<m;j++)  \r\n        {  \r\n            if(map[i][j]=='*')  \r\n            {  \r\n                x2=i;  \r\n                y2=j;  \r\n                flag=false;  \r\n                break;  \r\n            }  \r\n        }  \r\n        if(!flag) break;  \r\n    }  \r\n}  \r\nbool judge()\r\n{  \r\n    for(int i=0;i<n;i++)  \r\n        for(int j=0;j<n;j++)  \r\n        if(s[i][j]=='*')  \r\n        return false;  \r\n    return true;  \r\n}  \r\nint sovle()\r\n{  \r\n    get_small();  \r\n    while(!judge())  \r\n    {  \r\n        get_big();  \r\n        for(int i=x2;i<m;i++)  \r\n            for(int j=0;j<m;j++)  \r\n        {  \r\n            if(map[i][j]=='*')  \r\n            {  \r\n                 if(s[x1+i-x2][y1+j-y2]=='*') \r\n                        s[x1+i-x2][y1+j-y2]='.';  \r\n                else  \r\n                    return 0;  \r\n            }  \r\n        }  \r\n    }  \r\n    return 1;  \r\n}  \r\nint main()  \r\n{  \r\n    int i,j;  \r\n    while(scanf(\"%d%d\",&n,&m)&&n&&m)  \r\n    {  \r\n        for(i=0;i<n;i++)  \r\n          scanf(\"%s\",s[i]);  \r\n        for(j=0;j<m;j++)  \r\n          scanf(\"%s\",map[j]);  \r\n        printf(\"%d\\n\",sovle());  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":562,
"code":"\n#include<stdio.h>  \r\nint fun(int n)  \r\n{  \r\n    int i=1;  \r\n    while(i<n)  \r\n    {  \r\n        i=i*2+1;  \r\n        if(i==n)  \r\n            return 1;  \r\n    }  \r\n    return 0;  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n)&&n)  \r\n    {  \r\n        if(fun(n))  \r\n            printf(\"Bob\\n\");  \r\n        else  \r\n            printf(\"Alice\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":564,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<memory.h>\r\n#include<queue>\r\nusing namespace std;\r\nint map[205][205], dis[205][205],d[205][205], n,mins, dir[4][2] = {-1,0,0,1,1,0,0,-1};\r\nbool flag[205][205];\r\n\r\n#define M 1000000009\r\nvoid bfs()\r\n{\r\n    queue<int> q;\r\n    int i, x, y, x1, y1;\r\n    x = 1; q.push(x);\r\n    y = 1; q.push(y);\r\n    dis[1][1] = map[1][1];\r\n    while(!q.empty())\r\n    {\r\n        x = q.front(); q.pop();\r\n        y = q.front(); q.pop();\r\n        for(i = 0; i < 4; ++i)\r\n        {\r\n            x1 = x + dir[i][0];\r\n            y1 = y + dir[i][1];\r\n            if(map[x1][y1] && dis[x1][y1] > dis[x][y] + map[x1][y1])\r\n            {\r\n                dis[x1][y1] = dis[x][y] + map[x1][y1];\r\n                q.push(x1); q.push(y1);\r\n            }\r\n        }\r\n    }\r\n    mins = dis[1][n];\r\n    for(i=2; i<n; ++i)\r\n        if(dis[i][n-i+1] < mins)\r\n            mins = dis[i][n-i+1];\r\n}\r\n\r\nint dfs(int x,int y)\r\n{\r\n    int i,tx,ty;\r\n    if(x==1 && y==1) return 1;\r\n    if(flag[x][y]) return d[x][y];  \r\n    flag[x][y]=true;\r\n\r\n    d[x][y]=0;\r\n    for(i=0;i<4;i++)\r\n    {\r\n        tx=x+dir[i][0];\r\n        ty=y+dir[i][1];\r\n        if(map[tx][ty] && dis[x][y] == dis[tx][ty] + map[x][y])   \r\n            d[x][y]=(d[x][y]+dfs(tx,ty)) % M;\r\n    }\r\n    return d[x][y];\r\n}\r\n\r\nint main()\r\n{\r\n    int i,j;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        if(n==0) break;\r\n        memset(map,0,sizeof(map));\r\n        for(i=1; i<=n; ++i)\r\n            for(j=1; j<=n; ++j)\r\n            {\r\n                scanf(\"%d\",&map[i][j]);\r\n                dis[i][j] = M+2;\r\n            }\r\n        for(i=1; i<n; ++i)\r\n            for(j=1; j<=n-i; ++j)\r\n            {\r\n                map[i][j] += map[n-j+1][n-i+1];\r\n                map[n-j+1][n-i+1] = 0;\r\n            }\r\n        bfs();\r\n        memset(flag,false,sizeof(flag));\r\n        int key=0;                 \r\n        for(i = 1; i <= n; i++)\r\n           if(mins == dis[i][n-i+1])\r\n                 key=(key+dfs(i,n-i+1)) % M;\r\n        printf(\"%d\\n\",key);\r\n\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":568,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<memory.h>\r\n#include<queue>\r\n#include<algorithm>\r\n#include<string.h> \r\nusing namespace std;\r\n#define mid (L+R)\/2\r\n#define lson rt*2,L,mid\r\n#define rson rt*2+1,mid+1,R\r\nconst int maxn=110000;\r\nconst int INF=1e9;\r\nint minv[maxn*4];\r\nint a[maxn],cnt=0;\r\nint b[5000];\r\nchar str[100];\r\nvoid PushUP(int rt){\r\n        minv[rt]=min(minv[rt*2],minv[rt*2+1]);\r\n}\r\nvoid build(int rt,int L,int R){\r\n    if(L==R){\r\n        scanf(\"%d\",&minv[rt]);\r\n        a[cnt++]=minv[rt];\r\n        return ;\r\n    }\r\n    build(lson);\r\n    build(rson);\r\n    PushUP(rt);\r\n}\r\nint get_b(int st,int en){\r\n    int cnt=0;\r\n    int tm,tmp=0;\r\n    for(int i=st;i<en;i++){\r\n        if(str[i]>='0'&&str[i]<='9'){\r\n           tm=str[i]-'0';\r\n           tmp*=10;\r\n           tmp+=tm;\r\n        }else{\r\n            b[cnt++]=tmp;\r\n            tmp=0;\r\n        }\r\n    }\r\n    return cnt;\r\n}\r\nvoid exchange(int la,int ra){\r\n    int tm=a[la];\r\n    a[la]=a[ra];\r\n    a[ra]=tm;\r\n}\r\nint query(int rt,int L,int R,int l_ran,int r_ran){\r\n    if(l_ran<=L&&R<=r_ran){\r\n        return minv[rt];\r\n    }\r\n    int ret_l=INF,ret_r=INF;\r\n    if(l_ran<=mid){\r\n        ret_l=query(lson,l_ran,r_ran);\r\n    }\r\n    if(r_ran>mid){\r\n        ret_r=query(rson,l_ran,r_ran);\r\n    }\r\n    return min(ret_l,ret_r);\r\n}\r\nvoid update(int rt,int L,int R,int pos,int val){\r\n    if(L==R){\r\n        minv[rt]=val;\r\n        return ;\r\n    }\r\n    if(pos<=mid){\r\n        update(lson,pos,val);\r\n    }else{\r\n        update(rson,pos,val);\r\n    }\r\n    PushUP(rt);\r\n}\r\nvoid debug(){\r\n for(int i=1;i<16;i++)\r\n    printf(\"%d %d\\n\",i,minv[i]);\r\n}\r\nint main(){\r\n    int n,q,m,ans;\r\n    while(scanf(\"%d%d\",&n,&q)!=EOF){\r\n        cnt=0;\r\n        build(1,1,n);\r\n        for(int i=0;i<q;i++){\r\n            scanf(\"%s\",&str);\r\n            int len=strlen(str);\r\n            m= get_b(6,len);\r\n            if(str[0]=='q'){\r\n                ans=query(1,1,n,b[0],b[1]);\r\n                printf(\"%d\\n\",ans);\r\n            }else{\r\n                b[m]=b[0];\r\n                for(int i=0;i<m;i++){   \r\n                    update(1,1,n,b[i],a[b[i+1]-1]);\r\n                }\r\n                for(int i=0;i<m-1;i++){\r\n                    exchange(b[i]-1,b[i+1]-1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":569,
"code":"\n#include<iostream>\r\n#include <cstdio>\r\nusing namespace std;\r\n\r\nint Eular(int n)\r\n{\r\n    int ans = n;\r\n    for(int i = 2; i * i <= n; i++)\r\n    {\r\n        if(n % i == 0)      \r\n        {\r\n            ans -= ans \/ i;     \r\n            while(n % i == 0)  \r\n                n \/= i;\r\n            if(n == 1) \r\n                break;\r\n        }\r\n    }\r\n    if(n != 1)  \r\n        ans -= ans \/ n;\r\n    return ans;\r\n}\r\nint main()\r\n{\r\n\r\n    int n;\r\n    while(~scanf(\"%d\", &n))\r\n    {\r\n        long long sum = 0;\r\n        for(int i = 1; i * i <= n; i++)\r\n        {\r\n            if(i * i == n)     \r\n            {\r\n                sum += ((long long)(Eular(i) * i));\r\n                break;\r\n            }\r\n            if(n % i == 0)      \r\n            {\r\n                sum += ((long long)(Eular(i) * (n \/ i)));\r\n                sum += ((long long)(Eular(n \/ i) * i));\r\n            }\r\n        }\r\n        printf(\"%lld\\n\", sum);\r\n    }\r\n}"
},
{
"pid":570,
"code":"\n#include<stdio.h>  \r\nint Eular(int  n)  \r\n{  \r\n    int i;  \r\n    int  ans=n;  \r\n    for(i=2; i*i<=n; ++i)  \r\n    {  \r\n        if(n%i==0)  \r\n        {  \r\n            ans-=ans\/i;  \r\n            while(n%i==0)  \r\n                n=n\/i;  \r\n            if(n==1)  \r\n                break;  \r\n        }  \r\n    }  \r\n    if(n!=1)  \r\n        ans-=ans\/n;  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    int i, j, k, n, x;  \r\n    while( ~scanf(\"%d\",&n) )  \r\n    {  \r\n        int sum = 0;  \r\n        if(n==1)  \r\n        {  \r\n            puts(\"0\");  \r\n            continue;  \r\n        }  \r\n        for(i=1; i*i<=n; i++)  \r\n        {  \r\n            if(n%i==0)  \r\n            {  \r\n                sum+=(Eular(i));  \r\n                if( i!=1 && i*i!=n )  \r\n                    sum+=(Eular(n\/i));  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":571,
"code":"\n#include<iostream>  \r\n#include <cstring>  \r\n#include<vector>  \r\n#include <cstdio>  \r\nusing namespace std;  \r\n#define N 55+1  \r\nint dp[N][N];  \r\n\r\nint main()  \r\n{  \r\n    int n,k;  \r\n    int out[6];  \r\n    while(cin>>n>>k)  \r\n    {  \r\n        memset(dp,0,sizeof(dp));  \r\n        dp[0][0]=1;  \r\n        for (int i=0;i<=n;i++)  \r\n        {  \r\n            for (int j=1;j<=n;j++)  \r\n            {  \r\n                if(j<=i)  \r\n                dp[i][j]=dp[i-j][j]+dp[i][j-1];  \r\n                else  \r\n                dp[i][j]=dp[i][i];  \r\n            }  \r\n        }  \r\n        out[1]=dp[n][n];  \r\n        out[3]=dp[n][k];  \r\n        memset(dp,0,sizeof(dp));  \r\n        for(int i=1;i<=n;i++)  \r\n        for (int j=1;j<=i;j++)  \r\n        {  \r\n              if(j==1)  \r\n              dp[i][j]=1;  \r\n              else  \r\n              dp[i][j]=dp[i-j][j]+dp[i-1][j-1];   \r\n        }  \r\n        out[2]=dp[n][k];  \r\n       memset(dp,0,sizeof(dp));  \r\n       for(int i=0;i<=n;i++)  \r\n       {  \r\n           dp[i][1]=1;  \r\n           if(i&1)  \r\n           dp[0][i]=1;  \r\n        }  \r\n        for (int i=1;i<=n;i++)  \r\n        {  \r\n            for (int j=1;j<=n;j++)  \r\n            {  \r\n                if(j&1)  \r\n                {  \r\n                    if(j<=i)  \r\n                    dp[i][j]=dp[i-j][j]+dp[i][j-1];  \r\n                    else   \r\n                    dp[i][j]=dp[i][i];  \r\n                }  \r\n                else  \r\n                dp[i][j]=dp[i][j-1];  \r\n            }  \r\n        }  \r\n        out[4]=dp[n][n];   \r\n        memset(dp,0,sizeof(dp));  \r\n        dp[0][0]=1;  \r\n        for (int i=0;i<=n;i++)  \r\n        {  \r\n              for (int j=1;j<=n;j++)  \r\n              {  \r\n                   if(j<=i)  \r\n                   dp[i][j]=dp[i-j][j-1]+dp[i][j-1];  \r\n                    else  \r\n                    dp[i][j]=dp[i][i];  \r\n              }  \r\n        }  \r\n        out[5]=dp[n][n];  \r\n        for (int i=1;i<=5;i++)  \r\n            {  \r\n                cout<<out[i]<<endl;  \r\n            }  \r\n            cout<<endl;  \r\n\r\n       }  \r\n}"
},
{
"pid":572,
"code":"\n#include <iostream>\r\n#include <cmath>\r\n#include <cstdio>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int m,n;\r\n    while(~scanf(\"%d %d\", &m, &n))\r\n    {\r\n        printf(\"%lld\\n\",(long long)pow(2,(m-1)*(n-1)));\r\n    }\r\n}"
},
{
"pid":573,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\nusing namespace std;  \r\ndouble dp[200][100];  \r\ndouble f[100];  \r\nint main()  \r\n{  \r\n    int T,n,Q,R;double t;scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n    memset(dp,0,sizeof(dp));  \r\n    scanf(\"%d\",&n);  \r\n    for(int i=1;i<=n;i++) {scanf(\"%lf\",&t);f[i]=t\/100.0;}  \r\n    scanf(\"%d%d\",&Q,&R);  \r\n    dp[1][0]=1-f[1];  \r\n    dp[1][1]=f[1];  \r\n    for(int i=1;i<n;i++)  \r\n        for(int j=0;j<Q;j++)  \r\n        {  \r\n        dp[i+1][(2*j)%Q]+=dp[i][j]*(1-f[i+1]);  \r\n        dp[i+1][(2*j+1)%Q]+=dp[i][j]*f[i+1];  \r\n        }  \r\n    printf(\"%.5lf\\n\",dp[n][R]);  \r\n    }  \r\n}"
},
{
"pid":574,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\n#define MAXN 30010\r\nusing namespace std;\r\n\r\nstruct ST\r\n{\r\n    int l,r,v;\r\n};\r\n\r\nST st[MAXN*4];\r\nint a[MAXN],b[MAXN];\r\n\r\nint BSearch(int k,int high)\r\n{\r\n    int low,mid;\r\n    for(low=0;low<=high;)\r\n    {\r\n        mid=(low+high)>>1;\r\n        if(b[mid]==k)\r\n            return mid;\r\n        else if(b[mid]<k)\r\n            low=mid+1;\r\n        else\r\n            high=mid-1;\r\n    }\r\n    return -1;\r\n}\r\n\r\nvoid BuildST(int l,int r,int i)\r\n{\r\n    st[i].l=l;\r\n    st[i].r=r;\r\n    st[i].v=0;\r\n    int mid=(l+r)>>1;\r\n    if(l<r)\r\n    {\r\n        BuildST(l,mid,i<<1);\r\n        BuildST(mid+1,r,(i<<1)+1);    \r\n    }\r\n}\r\n\r\nvoid Insert(int i,int k)\r\n{\r\n    int mid=(st[i].l+st[i].r)>>1;\r\n    if(k<=mid)\r\n    {\r\n        st[i].v++;\r\n        if(st[i].l<st[i].r)\r\n            Insert(i<<1,k);\r\n    }    \r\n    else\r\n        Insert((i<<1)+1,k);\r\n}\r\n\r\nint Query(int i,int j)\r\n{\r\n    if(st[i].l==st[i].r)\r\n        return st[i].l;\r\n    if(j<=st[i].v)\r\n        return Query(i<<1,j);\r\n    return Query((i<<1)+1,j-st[i].v);\r\n\r\n}\r\n\r\nint main()\r\n{\r\n    int i,j,k,t,n,m,l;\r\n    for(;scanf(\"%d%d\",&n,&m)+1;)\r\n    {\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",a+i);\r\n            b[i]=a[i];\r\n        }\r\n        sort(b,b+n);\r\n        for(i=j=1;i<n;i++)\r\n            if(b[i]!=b[i-1])\r\n                b[j++]=b[i];\r\n        l=j-1;\r\n        BuildST(0,l,1);\r\n        for(i=j=0;m--;)\r\n        {\r\n            scanf(\"%d\",&t);\r\n            for(;j<t;j++)\r\n            {\r\n                k=BSearch(a[j],l);\r\n                Insert(1,k);\r\n            }\r\n            k=Query(1,++i);\r\n            printf(\"%d\\n\",b[k]);    \r\n        }    \r\n    }\r\n    return 0;\r\n}"
},
{
"pid":576,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    double ans;\r\n    int n;\r\n    while(~scanf(\"%d\",&n))\r\n    {\r\n        if(n<10000)\r\n        {\r\n            ans=0.0;\r\n            for(int i=1;i<=n;i++)\r\n                ans+=1.0*n\/i;\r\n            printf(\"%lld\\n\",(long long)(ans+0.5));\r\n        }\r\n    else{\r\n            printf(\"%lld\\n\",(long long)(n*(log(n+1)+0.5772156649)));\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":585,
"code":"\n#include<stdio.h>\r\nint main(){\r\n    int N;\r\n    scanf(\"%d\",&N);\r\n    while(N--){\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tif(!n){\r\n\t\t\tprintf(\"HRDV\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tint sum;\r\n\t\tscanf(\"%d\",&sum);\r\n\t\tfor(int i=1;i<n;i++){\r\n\t\t\tint a;\r\n\t\t\tscanf(\"%d\",&a);\r\n\t\t\tsum^=a;\r\n\t\t}\r\n\t\tif(!sum)\r\n\t\t\tprintf(\"HRDV\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"PIAOYI\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":586,
"code":"\n#include <cstdio>\r\n#include <iostream>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint n, c;\r\nint pos[100005];\r\n\r\nbool judge(int k)    \r\n{\r\n    int cnt = 1;\r\n    int st = pos[0];\r\n    for(int i = 1; i < n; ++i)\r\n    {\r\n        if(pos[i] - st >= k)\r\n        {\r\n            ++cnt;\r\n            if(cnt >= c)\r\n                return true; \r\n            st = pos[i];\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nint binary_search()  \r\n{\r\n    int left = 0;\r\n    int right = pos[n-1] - pos[0];\r\n    int mid = (left + right) >> 1;\r\n    while(left <= right)\r\n    {\r\n        if(judge(mid))  \r\n            left = mid+1;\r\n        else           \r\n            right = mid-1;\r\n        mid = (left + right) >> 1;\r\n    }\r\n    return left-1;\r\n}\r\n\r\nint main()\r\n{\r\n    while(~scanf(\"%d%d\", &n, &c))\r\n    {\r\n        for(int i = 0; i < n; ++i)\r\n            scanf(\"%d\", &pos[i]);\r\n        sort(pos, pos+n);\r\n        printf(\"%d\\n\", binary_search());\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":587,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint n;  \r\nint ans;  \r\n\r\nchar a[7][7];  \r\nvoid dfs(int q,int sum)  \r\n{  \r\n    int x=q\/n;\r\n    int y=q%n;  \r\n    if(q>=n*n)  \r\n    {  \r\n        if(sum>ans)\r\n            ans=sum;  \r\n        return;  \r\n    }  \r\n    else  \r\n    {  \r\n         if(a[x][y]=='.')  \r\n        {  \r\n            int bj=0;  \r\n            for(int i=x-1; i>=0; i--)\r\n            {  \r\n                if(a[i][y]=='X')  \r\n                    break;  \r\n                if(a[i][y]=='Y')  \r\n                {bj=1;  \r\n                    break;  \r\n                }  \r\n\r\n            }  \r\n            for(int j=y-1;j>=0;j--)\r\n            {  \r\n                if(a[x][j]=='X')  \r\n                break;  \r\n                if(a[x][j]=='Y')  \r\n                {  \r\n                   bj=1;  \r\n                   break;  \r\n                }  \r\n            }  \r\n            if(bj==0)\r\n            {  \r\n                a[x][y]='Y';  \r\n                dfs(++q,++sum);  \r\n                a[x][y]='.';  \r\n                q--;  \r\n                sum--;  \r\n\r\n            }  \r\n\r\n        }  \r\n        dfs(q+1,sum);  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    while(scanf(\"%d\",&n)&&n!=0)  \r\n    {memset(a,0,sizeof(a));  \r\n        for(int i=0; i<n; i++)  \r\n        {  \r\n            getchar();  \r\n            for(int j=0; j<n; j++)  \r\n            {  \r\n                scanf(\"%c\",&a[i][j]);  \r\n            }  \r\n        }  \r\n        ans=0;  \r\n        dfs(0,0);  \r\n        printf(\"%d\\n\",ans);  \r\n\r\n    }  \r\n}"
},
{
"pid":588,
"code":"\n#include <stdio.h>  \r\nint a[101] = {0, 10};  \r\n\r\nint main(){  \r\n    int t, n;  \r\n    for(n = 2; n != 101; ++n)  \r\n        a[n] = a[n - 1] + n * 10 - 1;  \r\n    scanf(\"%d\", &t);  \r\n    while(t-- && scanf(\"%d\", &n))  \r\n        printf(\"%d\\n\", a[n]);  \r\n    return 0;  \r\n}"
},
{
"pid":589,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n\r\nint main(){  \r\n    int t, n, s, *a, max;  \r\n    scanf(\"%d\", &t);  \r\n    while(t-- && scanf(\"%d\", &n)){  \r\n        a = (int *)malloc(sizeof(int) * n);  \r\n        s = max = 0;  \r\n        for(int i = 0; i != n; ++i){  \r\n            scanf(\"%d\", &a[i]);  \r\n            if(a[i] > max) max = a[i];  \r\n            s += a[i];  \r\n        }  \r\n        if(s - max >= max - 1) printf(\"Yes\\n\");  \r\n        else printf(\"No\\n\");          \r\n        free(a);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":590,
"code":"\n#include <stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int m,n;  \r\n    while (scanf(\"%d %d\",&n,&m) != EOF)  \r\n    {  \r\n        int i,j,k;  \r\n        int a[1001];  \r\n        int total = 0;  \r\n        for (i=0; i<n; i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n        }  \r\n        for (i=0; i<n;i++)  \r\n        {  \r\n            j = i;  \r\n            k = m;  \r\n            while (k>0)  \r\n            {  \r\n                k -=a[j];  \r\n                j++;  \r\n            }  \r\n            if (k == 0)  \r\n            {  \r\n                total ++;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",total);  \r\n    }   \r\n    return 0;  \r\n}"
},
{
"pid":591,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstdlib>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nconst int MAXN=33;\r\n\r\nstruct rec\r\n{\r\n    int x,y,d;\r\n}ans[MAXN*2];\r\nstruct node\r\n{\r\n    int h,m,dat,num;\r\n}a[MAXN*2];\r\nint n,m,k;\r\nint map[MAXN][MAXN];\r\nbool b[MAXN][MAXN];\r\n\r\nbool cmp(node a,node b)\r\n{\r\n    if (a.h<b.h || (a.h==b.h && a.m<b.m)) return 1; else return 0;\r\n}\r\n\r\nbool Init()\r\n{\r\n    scanf(\"%d%d%d\",&n,&m,&k);\r\n    if (!n && !m && !k) return 0;\r\n    for (int i=1;i<=n;++i)\r\n        for (int j=1;j<=m;++j)\r\n            scanf(\"%d\",&map[i][j]);\r\n    for (int i=1;i<=k;++i)\r\n        scanf(\"%d:%d %d\",&a[i].h,&a[i].m,&a[i].dat),a[i].num=i;\r\n    sort(a+1,a+k+1,cmp);\r\n\r\n    return 1;\r\n}\r\n\r\nbool Cleck(int x,int y,int z)\r\n{\r\n    for (int i=y;i<=y+z-1;++i)\r\n        if (b[x][i]) return 0;\r\n    return 1;\r\n}\r\n\r\nbool GF(int h)\r\n{\r\n    rec Max;\r\n    Max.x=Max.y=Max.d=0;\r\n    for (int i=1;i<=n;++i)\r\n        for (int j=1;j<=m-a[h].dat+1;++j)\r\n            if (Cleck(i,j,a[h].dat))\r\n                if (map[i][j]>Max.d) \r\n                    Max.x=i,Max.y=j,Max.d=map[i][j];\r\n    if (Max.x && Max.y) \r\n    {\r\n        ans[a[h].num]=Max;\r\n        for (int i=Max.y;i<=Max.y+a[h].dat-1;++i) b[Max.x][i]=1;\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nbool GM(int h)\r\n{\r\n    rec Max;\r\n    Max.x=Max.y=Max.d=0;\r\n    for (int i=1;i<=n;++i)\r\n        for (int j=1;j<=m;++j)\r\n            if (!b[i][j] && Max.d<map[i][j]) Max.x=i,Max.y=j,Max.d=map[i][j];\r\n    if (Max.x && Max.y) \r\n    {\r\n        ans[a[h].num]=Max,b[Max.x][Max.y]=1;\r\n        return 1;\r\n    }\r\n    return 0;\r\n}\r\n\r\nvoid Solve()\r\n{\r\n    memset(ans,0,sizeof(ans));\r\n    memset(b,0,sizeof(b));\r\n    for (int i=1;i<=k;++i)\r\n    {\r\n        if (GF(i)) continue;\r\n        if (GM(i)) continue;\r\n        ans[a[i].num].d=-1;\r\n    }\r\n    for (int i=1;i<=k;++i)\r\n        if (ans[i].d!=-1) printf(\"%d %d\\n\",ans[i].x,ans[i].y); else printf(\"-1\\n\");\r\n}\r\n\r\nint main()\r\n{\r\n    while (Init()) Solve();\r\n    return 0;\r\n}"
},
{
"pid":592,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\n#include<queue>  \r\nusing namespace std;  \r\nint map[105][105]={0};  \r\nint mm=10000,n=100;  \r\nint fir,end,loop[105][105];  \r\nint prime[11000]={1,1,0};  \r\nint sx[]={0,0,1,-1},zy[]={1,-1,0,0};  \r\nvoid Build_map() \r\n{  \r\n    int i,j,k;  \r\n    for(i=1;i<=(n+1)\/2;i++)  \r\n    {  \r\n        for(j=1;j<=n-2*i+2;j++)  \r\n            map[i][j+i-1]=mm--;  \r\n        for(j=1;j<=n-2*i;j++)  \r\n           map[j+i][n-i+1]=mm--;  \r\n        for(j=n-i+1;j>=i;j--)  \r\n           map[n-i+1][j]=mm--;  \r\n        for(j=n-i;j>=i+1;j--)  \r\n           map[j][i]=mm--;  \r\n    }  \r\n}  \r\nvoid printf_map()\r\n{  \r\n    int i,j;  \r\n    for(i=1;i<=n;i++)  \r\n    {  \r\n        for(j=1;j<=n;j++)  \r\n          printf(\"%d \",map[i][j]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n\r\n}  \r\nvoid judge_prime()  \r\n{  \r\n    int i,j;  \r\n    for(i=2;i<=10000;i++)  \r\n    {  \r\n        if(prime[i]==0)  \r\n        {  \r\n            for(j=i+i;j<=10000;j+=i)  \r\n              prime[j]=1;  \r\n        }  \r\n    }  \r\n}  \r\nstruct coordinate  \r\n{  \r\n    int x;  \r\n    int y;  \r\n    int step;  \r\n}t1;  \r\nvoid find()\r\n{  \r\n    int i,j;  \r\n    for(i=1;i<=n;i++)  \r\n      for(j=1;j<=n;j++)  \r\n      {  \r\n          if(map[i][j]==fir)  \r\n          {  \r\n              t1.x=i;  \r\n              t1.y=j;  \r\n              loop[i][j]=1;  \r\n              t1.step=0;  \r\n              return;  \r\n          }  \r\n      }  \r\n}  \r\nint bfs()  \r\n{  \r\n    int i,j,step,x,y;  \r\n    queue<coordinate> Q;  \r\n    Q.push(t1);  \r\n    while(!Q.empty())  \r\n    {  \r\n        i=Q.front().x;  \r\n        j=Q.front().y;  \r\n        step=Q.front().step;  \r\n        Q.pop();  \r\n        if(map[i][j]==end)  \r\n          return step;  \r\n        for(int a=0;a<4;a++)  \r\n        {  \r\n            x=i+sx[a];  \r\n            y=j+zy[a];  \r\n            if(map[x][y]!=0&&prime[map[x][y]]==1&&loop[x][y]==0)  \r\n            {  \r\n                coordinate t2={x,y,step+1};  \r\n                Q.push(t2);  \r\n                loop[x][y]=1;  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}  \r\nint main()  \r\n{  \r\n    int i,j,nn=0;  \r\n    Build_map();  \r\n    judge_prime();   \r\n    while(~scanf(\"%d%d\",&fir,&end))  \r\n    {  \r\n        nn++;  \r\n        memset(loop,0,sizeof(loop));  \r\n        find();  \r\n        int ans=bfs();  \r\n        if(ans)  \r\n            printf(\"Case %d: %d\\n\",nn,ans);  \r\n        else  \r\n            printf(\"Case %d: impossible\\n\",nn);  \r\n    }  \r\n}"
},
{
"pid":593,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int m,i;  \r\n    int a[10];  \r\n    while (~scanf(\"%d\",&m))  \r\n    {  \r\n        int count = 0;  \r\n        for (i=0; i<10; i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n        }  \r\n        for (i=0; i<10 && m != 0; i++)  \r\n        {  \r\n            m += a[i];  \r\n        }  \r\n        printf(\"%d\\n\",i);  \r\n    }  \r\n}"
},
{
"pid":594,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<iostream>  \r\nusing namespace std;  \r\nint fun(char str[20])  \r\n{  \r\n    if(strcmp(str,\"zero\")==0) return 0;  \r\n    if(strcmp(str,\"one\")==0) return 1;  \r\n    if(strcmp(str,\"two\")==0) return 2;  \r\n    if(strcmp(str,\"three\")==0) return 3;  \r\n    if(strcmp(str,\"four\")==0) return 4;  \r\n    if(strcmp(str,\"five\")==0) return 5;  \r\n    if(strcmp(str,\"six\")==0) return 6;  \r\n    if(strcmp(str,\"seven\")==0) return 7;  \r\n    if(strcmp(str,\"eight\")==0) return 8;  \r\n    if(strcmp(str,\"nine\")==0) return 9;  \r\n}  \r\nint main()  \r\n{  \r\n    char str1[20];  \r\n    while(scanf(\"%s\",str1)!=EOF)  \r\n    {  \r\n        char str2[20],str3[20],str4[20],str5[20],str6[20];  \r\n        int x,y;  \r\n        x=fun(str1);  \r\n        cin>>str2;  \r\n        if(strcmp(str2,\"+\")!=0)  \r\n        {  \r\n            x=fun(str2)+x*10;  \r\n            cin>>str3;  \r\n            cin>>str4;  \r\n            y=fun(str4);  \r\n            cin>>str5;  \r\n            if(strcmp(str5,\"=\")!=0)  \r\n            {  \r\n                cin>>str6;  \r\n                y=fun(str5)+y*10;  \r\n                cout<<x+y<<endl;  \r\n            }  \r\n            else  \r\n            cout<<x+y<<endl;  \r\n        }  \r\n        else  \r\n        {  \r\n            cin>>str3;  \r\n            y=fun(str3);  \r\n            cin>>str4;  \r\n            if(strcmp(str4,\"=\")==0)  \r\n            cout<<x+y<<endl;  \r\n            else  \r\n            {  \r\n                y=fun(str4)+y*10;  \r\n                cin>>str5;  \r\n                cout<<x+y<<endl;  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":595,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n#include <string.h>  \r\nint a[100], b[101];  \r\nint cmp(const void *a, const void *b){  \r\n    return *(int *)b - *(int *)a;  \r\n}  \r\n\r\nint main(){  \r\n    int n, m, i, count, t, j;  \r\n    while(scanf(\"%d%d\", &n, &m) == 2){  \r\n        if(n == 0 || m == 0) continue;  \r\n        for(i = 0; i != n; ++i)  \r\n            scanf(\"%d\", &a[i]);  \r\n        qsort(a, n, sizeof(int), cmp);  \r\n        for(i = 0, count = 0; i != n; ++i, count = 0){  \r\n            for(j = i; j != n; ++j)  \r\n                if(a[i] == a[j])  \r\n                    ++count;  \r\n                else break;               \r\n            b[i + 1] = count;  \r\n            i = j - 1;  \r\n        }  \r\n        while(m-- && scanf(\"%d\", &t))  \r\n            printf(\"%d\\n\", b[t]);  \r\n        memset(b, 0, sizeof(b));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":596,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,a,b,sum,max;  \r\n    while(scanf(\"%d\",&n),n)  \r\n    {  \r\n        max=0;  \r\n        while(n--)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            sum=a+b;  \r\n            if(max<sum)  \r\n                max=sum;  \r\n        }  \r\n        printf(\"%d\\n\",max);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":597,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,i,j,sum;\r\n\tint a[10000];\r\n\twhile(scanf(\"%d\",&n)!=EOF)\r\n\t{\r\n\t\tif(n==-1)\r\n\t\tbreak;\r\n\t\telse \r\n\t\t{\r\n\t\t\tsum=0;\r\n\t\t\tif(n==1||n==2)\r\n\t\t\tprintf(\"No\\n\");\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t\tfor(i=1,j=0;i<=n\/2;i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(n%i==0)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ta[j++]=i;\r\n\t\t\t\t\t\tsum+=i;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(sum!=n)\r\n\t\t\t\tprintf(\"No\\n\");\r\n\t\t\t\telse \r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%d=%d\", n, a[0]);\r\n\t\t\t\t\tfor (i = 1; i < j; i++)\r\n\t\t\t\t\t \t{\r\n\t\t\t\t\t\t\tprintf(\"+%d\", a[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tprintf(\"\\n\");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":598,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint num[205][205],sum[205];  \r\nint main()  \r\n{  \r\n    int T,n,m,a,b,i,j,min,flag;  \r\n    char str[205];  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%s\",str);  \r\n            flag=0;  \r\n            for(j=0;str[j]!='\\0';j++)  \r\n            {  \r\n                num[i][j]=str[j]-'0';  \r\n                if(num[i][j]==1)  \r\n                    flag=1;  \r\n            }  \r\n        }  \r\n\r\n        if(flag==0)  \r\n        {  \r\n            printf(\"-1\\n\");  \r\n            continue;  \r\n        }  \r\n        memset(sum,0,sizeof(sum));  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            for(j=0;j<m;j++)  \r\n            {  \r\n                if(num[i][j]==0)  \r\n                {  \r\n                    a=j;  \r\n                    b=j;  \r\n                    while((num[i][a]==0)&&(num[i][b]==0))  \r\n                    {  \r\n                        a=(a+m-1)%m;  \r\n                        b=(b+m+1)%m;  \r\n                        sum[j]++;  \r\n                    }  \r\n                }  \r\n            }  \r\n        }  \r\n        min=999999999;  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n            if(min>sum[i])  \r\n                min=sum[i];  \r\n        }  \r\n        printf(\"%d\\n\",min);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":599,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int t,H,n,i;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d\",&H);  \r\n        if(H<=10)  \r\n            printf(\"1\\n\");  \r\n        else   \r\n        {  \r\n            if(H%5==0)  \r\n                printf(\"%d\\n\",H\/5-1);  \r\n            else  \r\n                printf(\"%d\\n\",H\/5);  \r\n        }  \r\n    }     \r\n\r\n    return 0;  \r\n}"
},
{
"pid":600,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\nusing namespace std;\r\nconst int MAX = 300010;\r\ntypedef struct Node \r\n{\r\n    int num;\r\n    int id; \r\n}Node;\r\nNode s[MAX];\r\nint a[MAX],c[MAX];\r\n\r\nint cmp(const void *a,const void *b)\r\n{\r\n    return (*(Node *)a).num - (*(Node *)b).num;\r\n}\r\n\r\nint lowbit(int i)\r\n{\r\n    return i&(-i);\r\n}\r\n\r\nvoid add(int i,int value)\r\n{\r\n    while(i<MAX)\r\n    {\r\n        c[i]+=value;\r\n        i+=lowbit(i);\r\n    }\r\n}\r\n\r\nint sum(int i)\r\n{\r\n    int t=0;\r\n    while(i>0)\r\n    {\r\n        t+=c[i];\r\n        i-=lowbit(i);\r\n    }\r\n    return t;\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        int i,j,n,m,total,count;\r\n        memset(c,0,sizeof(c));\r\n        scanf(\"%d%d\",&n,&m);\r\n        total=n*2+m;\r\n        for(i=0;i<total;i++)\r\n        {\r\n            scanf(\"%d\",&s[i].num);\r\n            s[i].id=i;\r\n        }\r\n        qsort(s,total,sizeof(s[0]),cmp);\r\n        count = 1;a[s[0].id]=count;\r\n        for(i=1;i<total;i++)\r\n        {\r\n            if(s[i].num!=s[i-1].num)\r\n            a[s[i].id]=++count;\r\n            else\r\n            a[s[i].id]=count;\r\n        }\r\n        for(i=0;i<n*2;i+=2)\r\n        {\r\n            add(a[i],1);\r\n            add(a[i+1]+1,-1);\r\n        }\r\n        for(i=n*2;i<total;i++)\r\n        printf(\"%d\\n\",sum(a[i]));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":601,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\n\r\nint n,m;\r\nint bit[10000],cnt;\r\n\r\nvoid change(int n,int base){\r\n    cnt=0;\r\n    while(n){\r\n        bit[cnt++]=n%base;\r\n        n\/=base;\r\n    }\r\n}\r\n\r\nint main(){\r\n    while(scanf(\"%d%d\",&n,&m)!=EOF){\r\n        int sum=0,i;\r\n        int t=(int)sqrt(n*1.0);\r\n        for(i=1;i<=t;i++)\r\n            if(n%i==0){\r\n                int tmp=i;\r\n                while(tmp){\r\n                    sum+=(tmp%m)*(tmp%m);\r\n                    tmp\/=m;\r\n                }\r\n                tmp=n\/i;\r\n                if(tmp==i)\r\n                    continue;\r\n                while(tmp){\r\n                    sum+=(tmp%m)*(tmp%m);\r\n                    tmp\/=m;\r\n                }\r\n            }\r\n        change(sum,m);\r\n        for(i=cnt-1;i>=0;i--)\r\n            if(bit[i]>=10)\r\n                printf(\"%c\",bit[i]-10+'A');\r\n            else\r\n                printf(\"%d\",bit[i]);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":602,
"code":"\n#include<iostream>  \r\n#include<math.h>  \r\n#include<stdio.h>  \r\nusing namespace std;  \r\nlong b[1000000];  \r\nvoid gou()  \r\n{  \r\n    long value=1;  \r\n    for(int i=1;i<20;i++)  \r\n    {  \r\n        value*=2;  \r\n        b[i]=value;  \r\n    }  \r\n}  \r\nint cha (int m)  \r\n{  \r\n    b[0]=1;  \r\n    for(int i=0;i<100000;i++)  \r\n    {  \r\n        if(b[i]==m)  \r\n            return i;  \r\n        if(b[i]>m)  \r\n            return i;  \r\n    }  \r\n}  \r\nlong long  one(int n, int m,int  k)  \r\n{  \r\n    int a[4]={n,m,k};  \r\n    int Max=-1000;  \r\n    int Min=10000000;  \r\n    for(int i=0;i<3;i++)  \r\n    {  \r\n        if(a[i]>Max)  \r\n            Max=a[i];  \r\n        if(a[i]<Min)  \r\n            Min=a[i];  \r\n    }  \r\n    long long Mid=n+m+k-Max-Min;  \r\n    long long  value=(long long )((Min-1)+(Min*(Mid-1))+(long long)(Min*Mid*(Max-1)));  \r\n    return value;  \r\n}  \r\nint more(int n,int m,int k)  \r\n{  \r\n    int value=0;  \r\n    int _n=cha(n);  \r\n    int _m=cha(m);  \r\n    int _k=cha(k);  \r\n    value=_n+_m+_k;  \r\n    return value;  \r\n}  \r\nint main()  \r\n{  \r\n    long t,n,m,k,i;  \r\n    gou();  \r\n    cin>>t;  \r\n    int temp=t;  \r\n    while(t--)  \r\n    {  \r\n        cin>>n>>m>>k;  \r\n        printf(\"Case #%d: %lld %d\\n\",temp-t,one(n,m,k),more(n,m,k));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":603,
"code":"\n#include<stdio.h>\r\n#include<iostream>\r\n#include<string.h>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nint cnt[35];\r\n\r\nbool judge4X3()\r\n{\r\n    int ret=0;\r\n    int tmp[35];\r\n    for(int i=0;i<34;i++)tmp[i]=cnt[i];\r\n\r\n    for(int i=0;i<=18;i+=9)\r\n      for(int j=0;j<9;j++)\r\n      {\r\n          if(tmp[i+j]>=3)\r\n          {\r\n              tmp[i+j]-=3;\r\n              ret++;\r\n          }\r\n          while(j+2<9 && tmp[i+j] && tmp[i+j+1] &&tmp[i+j+2])\r\n          {\r\n              tmp[i+j]--;\r\n              tmp[i+j+1]--;\r\n              tmp[i+j+2]--;\r\n              ret++;\r\n          }\r\n      }\r\n    for(int j=0;j<7;j++)\r\n    {\r\n        if(tmp[27+j]>=3)\r\n        {\r\n            tmp[27+j]-=3;\r\n            ret++;\r\n        }\r\n    }\r\n    if(ret==4)return true;\r\n    return false;\r\n}\r\n\r\nbool judge1()\r\n{\r\n    for(int i=0;i<34;i++)\r\n    {\r\n        if(cnt[i]>=2)\r\n        {\r\n            cnt[i]-=2;\r\n            if(judge4X3())\r\n            {\r\n                cnt[i]+=2;\r\n                return true;\r\n            }\r\n            cnt[i]+=2;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nbool judge2()\r\n{\r\n    for(int i=0;i<34;i++)\r\n    {\r\n        if(cnt[i]!=2 && cnt[i]!=0)\r\n          return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nbool judge3()\r\n{\r\n    for(int j=0;j<7;j++)\r\n      if(cnt[j+27]==0)\r\n        return false;\r\n    for(int i=0;i<=18;i+=9)\r\n    {\r\n        if(cnt[i]==0 || cnt[i+8]==0)return false;\r\n        for(int j=1;j<8;j++)\r\n          if(cnt[i+j]!=0)\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nbool judge()\r\n{\r\n    if(judge1() || judge2() || judge3())return true;\r\n    return false;\r\n}\r\n\r\nint main()\r\n{\r\n    int T;\r\n    char str[10];\r\n    scanf(\"%d\",&T);\r\n    int ans[35],tol;\r\n    while(T--)\r\n    {\r\n        memset(cnt,0,sizeof(cnt));\r\n        for(int i=0;i<13;i++)\r\n        {\r\n            scanf(\"%s\",&str);\r\n            int t=str[0]-'1';\r\n            if(str[1]=='m')t+=0;\r\n            else if(str[1]=='s')t+=9;\r\n            else if(str[1]=='p')t+=18;\r\n            else t+=27;\r\n            cnt[t]++;\r\n        }\r\n        tol=0;\r\n        for(int i=0;i<34;i++)\r\n        {\r\n            cnt[i]++;\r\n            if(cnt[i]<=4 && judge())\r\n               ans[tol++]=i;\r\n            cnt[i]--;\r\n        }\r\n        if(tol==0)printf(\"Nooten\\n\");\r\n        else\r\n        {\r\n            printf(\"%d\",tol);\r\n            for(int i=0;i<tol;i++)\r\n            {\r\n                printf(\" %d\",(ans[i]%9)+1);\r\n                if(ans[i]\/9==0)printf(\"m\");\r\n                else if(ans[i]\/9==1)printf(\"s\");\r\n                else if(ans[i]\/9==2)printf(\"p\");\r\n                else printf(\"c\");\r\n            }\r\n            printf(\"\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":604,
"code":"\n#include<stdio.h>  \r\nchar str[120];  \r\nint main()  \r\n{  \r\n    int T,i;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%s\",str);  \r\n        for(i=0;str[i]!='\\0';i+=2)  \r\n            if(str[i]>='a'&&str[i]<='z')  \r\n                str[i]=(char)(str[i]-'a'+'A');  \r\n        printf(\"%s\\n\",str);  \r\n    }  \r\n}"
},
{
"pid":605,
"code":"\n#include<stdio.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int n,i,t,a,b;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        scanf(\"%d\",&t);\r\n        int flag=1;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d%d\",&a,&b);\r\n            if(a==t||b==t||a==7-t||b==7-t)\r\n            flag=0;\r\n        }\r\n        printf(flag?\"YES\\n\":\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":606,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint T,i;\r\n\tscanf(\"%d\",&T);\r\n\tfor(i=0;i<T;i++)\r\n\tprintf(\"I Love Acm.\\n\");\r\n\treturn 0;\r\n}"
},
{
"pid":608,
"code":"\n#include <stdio.h>  \r\nint fa[1005];  \r\nint find(int x)  \r\n{  \r\n    if(fa[x]!=x)  \r\n    fa[x]=find(fa[x]);  \r\n    return fa[x];  \r\n}  \r\nvoid comb(int a,int b)  \r\n{  \r\n    fa[find(fa[a])]=find(fa[b]);  \r\n}  \r\nint main()  \r\n{  \r\n    int n,m,a,b;  \r\n    while(scanf(\"%d\",&n)&&n)  \r\n    {  \r\n        scanf(\"%d\",&m);  \r\n        for(int i=1;i<=n;i++)  \r\n        fa[i]=i;  \r\n        for(int i=0;i<m;i++)  \r\n        {  \r\n            scanf(\"%d %d\",&a,&b);  \r\n            comb(a,b);  \r\n        }  \r\n        int sum=0;  \r\n        for(int i=1;i<=n;i++)  \r\n        if(fa[i]==i)  \r\n        sum++;  \r\n        printf(\"%d\\n\",sum-1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":610,
"code":"\n#include<stdio.h>  \r\n#include<iostream>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\nint a[50005];  \r\nint main()  \r\n{  \r\n    int n,m;  \r\n    while(cin>>n>>m)  \r\n   {  \r\n       int b;  \r\n       memset(a,0,sizeof(a));  \r\n\r\n       for(int i=0;i<n;i++)  \r\n       {  \r\n           cin>>b;  \r\n           a[b]++;  \r\n       }  \r\n\r\n       int sum=0;  \r\n\r\n       for(int i=0;i<=m;i++)  \r\n       {  \r\n           sum+=a[i];  \r\n       }  \r\n       int max=sum;  \r\n       for(int i=m+1;i<50005;i++)  \r\n       {  \r\n           sum=sum-a[i-m-1]+a[i];  \r\n           if(sum>max)  \r\n           max=sum;  \r\n       }  \r\n       printf(\"%d\\n\",max);  \r\n   }  \r\n}"
},
{
"pid":611,
"code":"\n#include<stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int n;  \r\n    while (scanf(\"%d\",&n) != EOF)  \r\n    {  \r\n\r\n            printf(\"%d\\n\",n % 2 == 0 ?(n+2)* n \/ 4 : (n+1) * (n-1) \/ 4);  \r\n    }  \r\n}"
},
{
"pid":613,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\n#include <iostream>\r\n\r\nusing namespace std;\r\n\r\nint pie[11][100001], res[11][100001];\r\nint maxt, ans;\r\n\r\nint max(int a, int b)\r\n{\r\n    return a > b ? a : b;\r\n}\r\n\r\nint BFS(int pos, int tim)\r\n{\r\n    if(res[pos][tim] >= 0)\r\n        return res[pos][tim];\r\n    if(tim > maxt)\r\n        return 0;\r\n    int t1, t2, t3;\r\n    t1 = t2 = t3 = 0;\r\n    t1 = BFS(pos, tim+1)+pie[pos][tim+1];\r\n    if(pos > 0)\r\n        t2 = BFS(pos-1, tim+1)+pie[pos-1][tim+1];\r\n    if(pos < 10)\r\n        t3 = BFS(pos+1, tim+1)+pie[pos+1][tim+1];\r\n    return res[pos][tim] = max(t1, max(t2, t3));\r\n}\r\n\r\nint main()\r\n{\r\n    int n, x, t;\r\n    while(scanf(\"%d\", &n), n)\r\n    {\r\n        memset(pie, 0, sizeof(pie));\r\n        memset(res, -1, sizeof(res));\r\n        maxt = -1;\r\n        while(n--)\r\n        {\r\n            scanf(\"%d%d\", &x, &t);\r\n            if(t > maxt)\r\n                maxt = t;\r\n            ++pie[x][t];\r\n        }\r\n        ans = 0;\r\n        printf(\"%d\\n\", BFS(5, 0));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":614,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,i,j;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        for(i=2,j=2;;i++)  \r\n        {  \r\n            if(j>n)  \r\n                j=(j-n)*2-1;  \r\n            else  \r\n                j=j*2;  \r\n            if(j==1)  \r\n                break;  \r\n        }  \r\n        printf(\"%d\\n\",i);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":615,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmp(const void *a,const void *b)\r\n{\r\n\treturn *(int *)a-*(int *)b;\r\n}\r\nint main()\r\n{\r\n \tint n,i,j,min,m,a[1000],b[1000];\r\n \twhile(scanf(\"%d\",&n)!=EOF)\r\n \t{\r\n  \t\tfor(i=0;i<n;i++)\r\n   \t\t\tscanf(\"%d\",&a[i]);\r\n  \t\tqsort(a,n,sizeof(a[0]),cmp);\r\n  \t\tfor(j=0,i=1;i<n;i++)\r\n   \t\t\tb[j++]=a[i]-a[i-1];\r\n  \t\tmin=b[0];\r\n  \t\tm=0;\r\n  \t\tfor(i=0;i<j;i++)\r\n   \t\tif(b[i]<min)\r\n   \t\t{\r\n    \t\tmin=b[i];\r\n        \tm=i;\r\n   \t\t}\r\n   \t\tprintf(\"%d %d\\n\",a[m],a[m+1]);\r\n \t}\r\n \treturn 0;\r\n}"
},
{
"pid":616,
"code":"\n#include<iostream>  \r\n#include<algorithm>  \r\n#include<string.h>  \r\n#include<cstdio>  \r\n#include<cmath>  \r\nusing namespace std;  \r\nint dp[105][105],map[105][105];  \r\nint main()  \r\n{  \r\n    int t;  \r\n    cin>>t;  \r\n while(t--)  \r\n {  \r\n     int n,m;  \r\n     cin>>n>>m;  \r\n     for(int i=0;i<n;i++)  \r\n     for(int j=0;j<m;j++)  \r\n         cin>>map[i][j];  \r\n        memset(dp,0,sizeof(dp));  \r\n    dp[0][0]=1;  \r\n     for(int i=0;i<n;i++)  \r\n     for(int j=0;j<m;j++)  \r\n        if(map[i][j])  \r\n        for(int k=0;k<=map[i][j];k++)  \r\n        for(int h=0;h<=map[i][j]-k;h++)  \r\n        {  \r\n            if((k!=0||h!=0)&&k+i<n&&h+j<m)  \r\n            dp[i+k][j+h]=(dp[i][j]+dp[i+k][j+h])%10000;  \r\n        }  \r\n    cout<<dp[n-1][m-1]<<endl;  \r\n }  \r\n}"
},
{
"pid":617,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\nusing namespace std;\r\nconst int maxn=1e5+10,inf=0x3f3f3f3f,mod=1000000007;\r\nint x[maxn];\r\ntypedef long long LL;\r\nLL get(LL n){\r\n    LL ans=1;\r\n    for(int i=0;i<n;i++){\r\n        ans=ans*x[i]%mod;\r\n    }\r\n    return ans;\r\n}\r\nLL power(LL a,LL p){\r\n    LL ans=1,temp=a;\r\n    while(p){\r\n        if(p&1) ans=ans*temp%mod;\r\n        temp=temp*temp%mod;\r\n        p>>=1;\r\n    }\r\n    return ans;\r\n}\r\nint main()\r\n{\r\n    int t,ca=1;\r\n    cin>>t;\r\n    while(t--){\r\n        LL n,m;\r\n        while(cin>>n>>m){\r\n             int negsum=0,f1=-inf,dex;\r\n             for(int i=0;i<n;i++){\r\n                 scanf(\"%d\",&x[i]);\r\n                 if(x[i]<0) negsum++;\r\n                 if(x[i]<0&&f1<x[i]){\r\n                     dex=i;\r\n                     f1=x[i];\r\n                 }\r\n             }\r\n             if(negsum&1){\r\n                 if(-f1>=m){\r\n                     x[dex]+=m;\r\n                     printf(\"Case %d: %lld\\n\",ca++,get(n));\r\n                     continue;\r\n                 }\r\n                 m+=x[dex];\r\n                 x[dex]=0;\r\n             }\r\n             for(int i=0;i<n&&m>0;i++){\r\n                 if(x[i]==0){  x[i]++;  m--;  }\r\n             }\r\n             for(int i=0;i<n&&m>0;i++){\r\n                 if(x[i]==1){ x[i]++; m--;  }\r\n             }\r\n             int minx=inf;\r\n             dex=0;\r\n             for(int i=0;i<n&&m>0;i++){\r\n                 if(x[i]==2){\r\n                    x[i]++;  m--;\r\n                }\r\n                if(minx>x[i]&&x[i]>=0){\r\n                    minx=x[i];\r\n                    dex=i;\r\n                }\r\n             }\r\n             if(m==1){\r\n                  x[dex]++;\r\n                  printf(\"Case %d: %lld\\n\",ca++,get(n));\r\n                  continue;\r\n             }\r\n             if(m==2){\r\n                  printf(\"Case %d: %lld\\n\",ca++,get(n)*2%mod);\r\n                  continue;\r\n             }\r\n             if(m%3==0){\r\n                  printf(\"Case %d: %lld\\n\",ca++,get(n)*power(3,m\/3)%mod);\r\n                  continue;\r\n             }\r\n             if((m-1)%3==0){\r\n                  printf(\"Case %d: %lld\\n\",ca++,get(n)*power(3,m\/3-1)%mod*4%mod);\r\n                  continue;\r\n             }\r\n             if((m-2)%3==0){\r\n                  printf(\"Case %d: %lld\\n\",ca++,get(n)*power(3,m\/3)%mod*2%mod);\r\n             }\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":618,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tdouble k,a,b,v,d,V;\r\n\twhile(scanf(\"%lf %lf %lf %lf\",&k,&a,&b,&v)!=EOF)\r\n\t{\r\n\t\td=fabs(k*a-b)\/sqrt(k*k+1);  \r\n\t\tV=d*v\/sqrt(a*a+b*b-d*d);    \r\n\t\tprintf(\"%.3f\\n\",V);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":619,
"code":"\n#include <cstdio>\r\n#include <iostream>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\n\r\nint len, n, m;\r\nint pos[500005];\r\n\r\nbool judge(int k)\r\n{\r\n    int st = 0;\r\n    int cnt = 0;\r\n    for(int i = 0; i <= n; ++i)\r\n    {\r\n        if(pos[i] - st <= k)\r\n        {\r\n            while(pos[i] - st <= k && i <= n)\r\n                ++i;\r\n            st = pos[--i];\r\n            ++cnt;\r\n        }    \r\n    }\r\n    if(cnt <= m)\r\n        return true;\r\n    return false;\r\n}\r\n\r\nint binary_search()\r\n{\r\n\r\n    int left = 0;\r\n    int right = len;\r\n\r\n    for(int i = 1; i <= n; ++i)\r\n        if(pos[i] - pos[i-1] > left)\r\n            left = pos[i] - pos[i-1];\r\n\r\n    int mid = (left+right)>>1;\r\n    while(left <= right)\r\n    {\r\n        if(judge(mid)) \r\n            right = mid-1;\r\n        else         \r\n            left = mid+1;\r\n        mid = (left+right)>>1;\r\n    }\r\n    return right + 1; \r\n}\r\n\r\nint main()\r\n{\r\n    while(~scanf(\"%d%d%d\", &len, &n, &m))\r\n    {\r\n        for(int i = 0; i < n; ++i)\r\n            scanf(\"%d\", &pos[i]);\r\n        pos[n] = len;\r\n        sort(pos, pos+n);\r\n        printf(\"%d\\n\", binary_search());\r\n    }    \r\n    return 0;\r\n}"
},
{
"pid":620,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint num[100009];  \r\nint main()  \r\n{  \r\n    int T,n,i,max,min,a,b;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        min=n;  \r\n        max=0;  \r\n        memset(num,0,sizeof(num));  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            if(a>n)  \r\n                continue;  \r\n            b=b>n?n:b;  \r\n            min=min>a?a:min;  \r\n            max=max>b?max:b;  \r\n            if(a>0)  \r\n                num[a-1]-=1;  \r\n            num[b]+=1;  \r\n        }  \r\n        for(i=max;i>=min;i--)  \r\n        {  \r\n            num[i]+=num[i+1];  \r\n            if(num[i]==i)  \r\n            {  \r\n                printf(\"%d\\n\",i);  \r\n                break;  \r\n            }  \r\n        }  \r\n        if(i<min)  \r\n            printf(\"-1\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":621,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int t,cas=1,k,a,b,ans;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        ans=0;\r\n        scanf(\"%d%d\",&a,&b);\r\n        while(a<b)\r\n        {\r\n            k=3*a;\r\n            if(k<=b)\r\n            {\r\n                ans+=a;\r\n                a=3*a+1;\r\n            }\r\n            else\r\n            {\r\n                ans+=(b-a)\/2;break;\r\n            }\r\n        }\r\n        printf(\"Case #%d: %d\\n\",cas++,ans);\r\n    }\r\n}"
},
{
"pid":622,
"code":"\n#include<stdio.h>  \r\nint num[109];  \r\nint main()  \r\n{  \r\n    int n,a,i,j,max,t,sum;  \r\n    while(scanf(\"%d\",&n)&&n)  \r\n    {  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&a);  \r\n            if(a%2==0)     \r\n                num[i]=a\/2+1;  \r\n            else  \r\n                num[i]=(a+1)\/2;  \r\n        }  \r\n        for(i=1;i<n;i++)  \r\n        {  \r\n            for(j=0;j<n-i;j++)  \r\n            {  \r\n                if(num[j]>num[j+1])  \r\n                {  \r\n                    t=num[j];  \r\n                    num[j]=num[j+1];  \r\n                    num[j+1]=t;  \r\n                }  \r\n            }  \r\n        }  \r\n        sum=0;  \r\n        for(i=0;i<=n\/2;i++)  \r\n            sum+=num[i];  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":623,
"code":"\n#include<stdio.h>\r\nint a[55][55],b[55][55],c[55][55];\r\nint main()\r\n{\r\n    int m,n,k,i,j,sum,a1,b1;\r\n    while(scanf(\"%d%d%d\",&m,&n,&k)&&m+n+k)\r\n    {\r\n        for(i=0;i<m;i++)\r\n        for(j=0;j<n;j++)\r\n        scanf(\"%d\",&a[i][j]);\r\n        for(i=0;i<n;i++)\r\n        for(j=0;j<k;j++)\r\n        scanf(\"%d\",&b[i][j]);\r\n        for(i=0;i<m;i++)\r\n        for(j=0;j<k;j++)\r\n        {\r\n            a1=b1=sum=0;\r\n            while(a1<n)\r\n            sum+=a[i][a1++]*b[b1++][j];\r\n            c[i][j]=sum;\r\n        }\r\n        for(i=0;i<m;i++)\r\n        {\r\n\r\n           for(j=0;j<k;j++)\r\n           printf(\"%d \",c[i][j]);\r\n           printf(\"\\n\");\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":624,
"code":"\n#include <stdio.h>  \r\nchar *str[] = {\"East\", \"South\", \"West\", \"North\"}, buf[10];  \r\n\r\nint main(){  \r\n    int s, n, i, t;  \r\n    while(scanf(\"%s%d\", buf, &n) == 2){  \r\n        s = 0;  \r\n        while(n-- && scanf(\"%d\", &t))  \r\n            s += (t ? 1 : -1);  \r\n        s %= 4;  \r\n        switch(buf[0]){  \r\n            case 'E': i = 0; break;  \r\n            case 'S': i = 1; break;  \r\n            case 'W': i = 2; break;  \r\n            case 'N': i = 3; break;  \r\n        }  \r\n        i += 4;  \r\n        i += s;  \r\n        puts(str[i % 4]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":625,
"code":"\n#include <stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int v[125];  \r\n    int t;  \r\n    int tem;  \r\n    int sum;  \r\n    int i;  \r\n    int first,last;  \r\n    while(scanf(\"%d\",&t)!=EOF)  \r\n    {  \r\n        sum=0;  \r\n        for (i=0;i<t;i++)  \r\n        {  \r\n            scanf(\"%d\",&v[i]);  \r\n            sum+=v[i];  \r\n        }  \r\n        first=0;  \r\n        last=0;  \r\n        for(i=t-1;i>=0;i--)    \r\n            if(v[i]+last>=first)     \r\n            {  \r\n                tem=last;  \r\n                last=first;  \r\n                first=v[i]+tem;  \r\n            }  \r\n\r\n            printf(\"%d %d %d\\n\",first,last,sum-first-last);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":626,
"code":"\n#include <iostream>  \r\n#include <stdio.h>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nint a[50010],b[50010];  \r\nbool search(int x,int *p,int len)  \r\n{  \r\n    int left=0,right=len-1;  \r\n    while(left<=right)   \r\n    {  \r\n        int mid=(left+right)\/2;  \r\n        if(x>p[mid])  \r\n            left=mid+1;  \r\n        else if(x==p[mid])  \r\n            {  \r\n                return true;  \r\n            }  \r\n        else  \r\n            right=mid-1;  \r\n    }  \r\n    return false;  \r\n}  \r\nint main()  \r\n{  \r\n    int m,n,count;  \r\n    while(~scanf(\"%d%d\",&m,&n))  \r\n    {  \r\n        count=0;  \r\n        if(n==0&&m==0) break;  \r\n        for(int i=0;i<m;i++)  \r\n            scanf(\"%d\",&a[i]);  \r\n        for(int i=0;i<n;i++)  \r\n            scanf(\"%d\",&b[i]);  \r\n        if(m>=n)  \r\n        {  \r\n            sort(a,a+m);  \r\n            for(int i=0;i<n;i++)  \r\n            {  \r\n                if(search(b[i],a,m))  \r\n                    count++;  \r\n            }  \r\n            printf(\"%d\\n\",count);  \r\n        }  \r\n        else  \r\n        {  \r\n            sort(b,b+n);  \r\n            for(int i=0;i<m;i++)  \r\n            {  \r\n                if(search(a[i],b,n))  \r\n                    count++;  \r\n            }  \r\n            printf(\"%d\\n\",count);  \r\n        }  \r\n    }  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":627,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint n;\r\n\twhile(scanf(\"%d\",&n)!=EOF)\r\n\t{\r\n\t\tint i,t,sum=0;\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&t);\r\n\t\t\tsum+=t;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",sum%n?n-1:n);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":628,
"code":"\n#include <stdio.h>  \r\n\r\nint main(){  \r\n    int t, m, a, b, temp;  \r\n    scanf(\"%d\", &t);  \r\n    while(t-- && scanf(\"%d\", &m)){  \r\n        a = 0;  \r\n        while(m-- && scanf(\"%d\", &temp)){  \r\n            if(!a){  \r\n                b = temp;  \r\n                a = 1;  \r\n                continue;  \r\n            }  \r\n            if(temp == b) ++a;  \r\n            else{  \r\n                printf(\"%d %d \", a, b);  \r\n                a = 1;  \r\n                b = temp;  \r\n            }  \r\n        }  \r\n        printf(\"%d %d\\n\", a, b);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":630,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nchar str[35], buf[35];  \r\n\r\nvoid f1(){  \r\n    int t, i;  \r\n    char *p = strtok(str, \".\");  \r\n    buf[8] = '\\0';  \r\n    while(p != '\\0'){  \r\n        sscanf(p, \"%d\", &t);  \r\n        i = 8;  \r\n        while(t){                     \r\n            buf[--i] = t % 2 + '0';  \r\n            t \/= 2;  \r\n        }  \r\n        while(i) buf[--i] = '0';  \r\n        printf(buf);  \r\n        p = strtok(NULL, \".\");  \r\n    }  \r\n    puts(\"\");  \r\n}  \r\n\r\nvoid f2(char *s){  \r\n    int t, i = 0;  \r\n    while(s[0] != '\\0'){  \r\n        t = 0;  \r\n        for(i = 0; i <= 7; ++i)  \r\n            t = t * 2 + s[i] -'0';  \r\n        printf(\"%d\", t);  \r\n        s += 8;  \r\n        if(s[0] != '\\0') putchar('.');  \r\n    }  \r\n    puts(\"\");  \r\n}  \r\n\r\nint main(){  \r\n    while(scanf(\"%s\", str) == 1)  \r\n        if(strchr(str, '.')) f1();  \r\n        else f2(str);     \r\n    return 0;  \r\n}"
},
{
"pid":631,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint num[25],m;  \r\nint sum[50005];  \r\nint lowbit(int i)  \r\n{  \r\n    return i&(-i);  \r\n}  \r\nvoid update(int i)  \r\n{  \r\n    while(i<=m)  \r\n    {  \r\n        num[i]+=1;  \r\n        i+=lowbit(i);  \r\n    }  \r\n}  \r\nint get(int i)  \r\n{  \r\n    int result=0;  \r\n    while(i>0)  \r\n    {  \r\n        result+=num[i];  \r\n        i-=lowbit(i);  \r\n    }  \r\n    return result;  \r\n}  \r\nint main()  \r\n{  \r\n    int T,n,i,j,a,ans,k,count;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        memset(sum,0,sizeof(sum));  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&m);  \r\n            ans=0;  \r\n            memset(num,0,sizeof(num));  \r\n            for(j=1;j<=m;j++)  \r\n            {  \r\n                scanf(\"%d\",&a);\r\n                update(a);  \r\n                ans+=j-get(a);  \r\n            }  \r\n            sum[i]=ans*10;  \r\n        }  \r\n        count=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            if(sum[i]!=-1)  \r\n            {  \r\n                k=sum[i];  \r\n                sum[i]=-1;  \r\n                for(j=i+1;j<n;j++)  \r\n                {  \r\n                    if(sum[j]!=-1&&sum[j]>k)  \r\n                    {  \r\n                        k=sum[j];  \r\n                        sum[j]=-1;  \r\n                    }  \r\n                }  \r\n                count++;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",count);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":632,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\n\r\nint dp[11][70];\r\ndouble p[12][12];\r\n\r\nint main (void)  \r\n{  \r\n    int i, j, k, h;  \r\n    for(i = 0; i < 7; i++)  \r\n        dp[1][i] = 1;  \r\n    for(i = 2; i < 11; i++)  \r\n    {  \r\n        for(j = 2; j < 67; j++)  \r\n        {  \r\n            for(k = 1; k < 7; k++)  \r\n                if(k < j)  \r\n                    dp[i][j] += dp[i - 1][j - k];  \r\n        }  \r\n    }  \r\n\r\n    double sum;  \r\n    for(i = 1; i < 11; i++)  \r\n    {  \r\n        for(j = 1; j < 11; j++)  \r\n        { \r\n            sum = 0.0; \r\n            for(k = 1; k < 70; k++)  \r\n            { \r\n                for(h = 1; h < k; h++)  \r\n                { \r\n                    sum += (double)dp[i][k] * dp[j][h]; \r\n                }  \r\n            }  \r\n            double temp = (double)pow(6, i + j); \r\n            p[i][j] = sum \/ temp;  \r\n        }  \r\n    }  \r\n    int t;  \r\n    scanf(\"%d\", &t);  \r\n    while(t --)  \r\n    {  \r\n        int m, n;  \r\n        scanf(\"%d %d\", &m, &n);  \r\n        printf(\"%lf\\n\", p[m][n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":633,
"code":"\n#include<iostream>\r\n#include<cmath>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n    double k,m,t;\r\n    cin>>t;\r\n    while(t--)\r\n    {\r\n        cin>>k>>m;\r\n        int a = pow(10.0,double(log10(m)\/k));\r\n        while(pow(a+1,k) <= m)    ++a;\r\n        cout<<a<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":634,
"code":"\n#include<algorithm>  \r\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<queue>  \r\nusing namespace std;  \r\nint a[100001],b[100001];  \r\nstruct node {  \r\n    int v; int n;  \r\n    node(){}  \r\n    node(int a,int b):v(a),n(b){}   \r\n    bool operator < (const node& tmp ) const{  \r\n    return v< tmp.v;   \r\n    }  \r\n};  \r\nbool cmp(int aa,int bb)  \r\n{  \r\n    return aa > bb;  \r\n}  \r\nvoid fun(int *A,int *B,int *C,int n)  \r\n{  \r\n    priority_queue<node> q;  \r\n    int i;  \r\n    for( i = 0 ; i < n ; i++)  \r\n        q.push(node(A[i]+B[0],0)); \r\n    for( i = 0 ; i < n ; i++)  \r\n    {  \r\n        node tmp = q.top(); q.pop(); \r\n        C[i] = tmp.v;          \r\n        int b = tmp.n;              \r\n        if(b<n-1)           \r\n        {  \r\n            q.push(node(tmp.v - B[b] +B[b+1],b+1));\r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int k,i,n;  \r\n    while(scanf(\"%d%d\",&n,&k)!=EOF)  \r\n    {  \r\n        for(i = 0 ; i < n ; i++)  \r\n            scanf(\"%d\",&a[i]);  \r\n        for(i = 0 ; i < n ;i++)  \r\n            scanf(\"%d\",&b[i]);  \r\n        sort(a,a+n,cmp);     \r\n        sort(b,b+n,cmp);  \r\n        fun(a,b,a,k);  \r\n        printf(\"%d\",a[k-1]);  \r\n        for(i = k -2 ;i>= 0 ;--i)  \r\n        printf(\" %d\",a[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n\r\n}"
},
{
"pid":635,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <algorithm>  \r\n#include <queue>  \r\n#define INF 0x3f3f3f3f  \r\nusing namespace std;  \r\nchar mp[55][55];  \r\nint vis[55][55];  \r\nint n,m;  \r\nint x,y,ex,ey;  \r\nint ans;  \r\nint dx[4]={0,1,-1,0};  \r\nint dy[4]={1,0,0,-1};  \r\nstruct node   \r\n{  \r\n    int x,y,step;  \r\n    bool friend operator < (node a,node b)  \r\n    {  \r\n        return a.step>b.step;  \r\n    }   \r\n}a,temp;  \r\nint judge()  \r\n{  \r\n    if(temp.x<1||temp.x>n)    return 0;  \r\n    if(temp.y<1||temp.y>m)    return 0;  \r\n    if(vis[temp.x][temp.y]==1)  return 0;  \r\n    if(temp.step>=ans) return 0;  \r\n    return 1;  \r\n}  \r\nvoid bfs()  \r\n{  \r\n    a.x=x;  \r\n    a.y=y;  \r\n    a.step=0;  \r\n    priority_queue<node>q;  \r\n    q.push(a);  \r\n    memset(vis,0,sizeof(vis));  \r\n    vis[x][y]=1;  \r\n    while(!q.empty())  \r\n    {  \r\n        a=q.top();  \r\n        q.pop();  \r\n        for(int i=0;i<4;i++)  \r\n        {  \r\n            temp.x=a.x+dx[i];  \r\n            temp.y=a.y+dy[i];  \r\n            if(mp[temp.x][temp.y]=='#')  \r\n                temp.step=a.step+4;  \r\n            else  \r\n                temp.step=a.step+1;  \r\n            if(judge())  \r\n            {  \r\n                if(temp.x==ex&&temp.y==ey)  \r\n                {  \r\n                    ans=temp.step;  \r\n                    return;  \r\n                }  \r\n                q.push(temp);  \r\n                vis[temp.x][temp.y]=1;  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        ans=INF; \r\n        for(int i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%s\",mp[i]+1);      \r\n        }  \r\n        x=1;y=1;  \r\n        scanf(\"%d%d\",&ex,&ey);  \r\n        if(ex==x&&ey==y)  \r\n        {  \r\n            printf(\"0\\n\");  \r\n            continue;  \r\n        }  \r\n        bfs();  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":636,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int N,a;\r\n    while(~scanf(\"%d\",&N))\r\n    {\r\n        for(int i=1;i<=N;i++)\r\n            scanf(\"%d\",&a);\r\n        printf(\"YES\\n\");\r\n    }\r\n}"
},
{
"pid":637,
"code":"\n#include<iostream>  \r\n#include<string.h>  \r\nusing namespace std;  \r\nstring s=\"我\";  \r\nint size=s.size();  \r\nint main()  \r\n{  \r\n    string str,t;  \r\n    while(cin>>str)  \r\n    {  \r\n        if(str.compare(\"0\")==0)  \r\n            break;  \r\n        for(int i=0;i<str.size();++i)  \r\n        {  \r\n            if(str[i]<0)  \r\n            {  \r\n                t=str.substr(i,size);  \r\n                if(t.compare(\"我\")==0)  \r\n                    cout<<\"你\";  \r\n                else if(t.compare(\"你\")==0)  \r\n                    cout<<\"我\";  \r\n                else  \r\n                    cout<<t;  \r\n                i+=size-1;  \r\n            }  \r\n            else  \r\n                cout<<str[i];  \r\n        }  \r\n        cout<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":638,
"code":"\n#include <stdio.h>  \r\n\r\nint main(){  \r\n    int a[5], t, s, st, i;  \r\n    while(scanf(\"%d\", &a[0]) == 1){  \r\n        st = a[0] * 10 + 5;  \r\n        s = 0;  \r\n        for(i = 1; i != 5; ++i){  \r\n            scanf(\"%d\", &a[i]);  \r\n            st += a[i] * 10 + 5;  \r\n        }  \r\n        for(i = 0; i != 5; ++i){  \r\n            scanf(\"%d\", &t);  \r\n            s += t;;  \r\n        }  \r\n        if(s <= st) puts(\"No !\");  \r\n        else printf(\"Yes %d\\n\", s - st);          \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":639,
"code":"\n#include <stdio.h>  \r\nint a[11];  \r\n\r\nint main(){  \r\n    int i, flag, t;  \r\n    while(scanf(\"%d\", &a[1]) == 1){  \r\n        for(i = 2; i != 6; ++i)  \r\n            scanf(\"%d\", &a[i]);  \r\n        flag = 0;  \r\n        if(!flag){  \r\n            t = a[2] - a[1];  \r\n            for(i = 3; i != 6; ++i)  \r\n                if(a[i] - a[i - 1] != t) break;  \r\n            if(i == 6) flag = 1; \r\n        }  \r\n        if(!flag){  \r\n            if(a[1] == 0 || a[2] == 0) goto label;  \r\n            double tt = a[2] * 1.0 \/ a[1];  \r\n            for(i = 3; i != 6; ++i)  \r\n                if(a[i] == 0 || a[i] \/ a[i - 1] != tt) break;  \r\n            if(i == 6) flag = 2;  \r\n        }  \r\nlabel:  if(!flag){  \r\n            for(i = 3; i != 6; ++i)  \r\n                if(a[i] != a[i - 1] + a[i - 2]) break;  \r\n            if(i == 6) flag = 3;  \r\n        }  \r\n\r\n        if(flag == 1){  \r\n            t = a[2] - a[1];  \r\n            for(i = 6; i != 11; ++i)  \r\n                a[i] = a[i - 1] + t;  \r\n        }else if(flag == 2){  \r\n            t = a[2] \/ a[1];  \r\n            for(i = 6; i != 11; ++i)  \r\n                a[i] = a[i - 1] * t;  \r\n        }else if(flag == 3){  \r\n            for(i = 6; i != 11; ++i)  \r\n                a[i] = a[i - 1] + a[i - 2];  \r\n        }  \r\n        if(flag)  \r\n            for(i = 6; i != 11; ++i)  \r\n                printf(\"%d \", a[i]);  \r\n        else printf(\"None\");  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":640,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\ntypedef long long LL;  \r\nLL Cal_Mul(LL a,LL b,LL m)   \r\n{  \r\n    LL res(0),base(a);  \r\n    while(b)  \r\n    {  \r\n        if(b&1) res=(res+base)%m;  \r\n        base=(base+base)%m;  \r\n        b>>=1;  \r\n    }  \r\n    return res;  \r\n}  \r\nLL Cal_Pow(LL a,LL b,LL m)  \r\n{  \r\n    LL res(1),base(a);  \r\n    while(b)  \r\n    {  \r\n        if(b&1) res=Cal_Mul(res,base,m);  \r\n        base=Cal_Mul(base,base,m);  \r\n        b>>=1;  \r\n    }  \r\n    return res;  \r\n}  \r\nLL Solve(LL a,LL n,LL m)    \r\n{  \r\n    if(n==1) return a%m;  \r\n    LL res=Solve(a,n\/2,m);  \r\n    if(n&1)  \r\n    {  \r\n        LL temp=Cal_Pow(a,n\/2+1,m);  \r\n        return (res+temp+Cal_Mul(res,temp,m))%m;  \r\n    }  \r\n    else  \r\n    {  \r\n        LL temp=Cal_Pow(a,n\/2,m);  \r\n        return (res+Cal_Mul(res,temp,m))%m;  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    LL a,m,n;  \r\n    while(~scanf(\"%lld%lld%lld\",&a,&n,&m))  \r\n        printf(\"%lld\\n\",Solve(a,n,m));  \r\n    return 0;  \r\n}"
},
{
"pid":641,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint G[1001][1001],visit[1001];  \r\nint n;  \r\nvoid DFS(int x)  \r\n{  \r\n    int i;  \r\n    visit[x]=1;  \r\n    for(i=1;i<=n;i++)  \r\n    {  \r\n        if(!visit[i]&&G[x][i]&&(i!=x))  \r\n        {  \r\n            DFS(i);  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int m,i,count,a,b;  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        memset(G,0,sizeof(G));  \r\n        memset(visit,0,sizeof(visit));  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            G[a][b]=G[b][a]=1;  \r\n        }  \r\n        count=0;  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            if(!visit[i])  \r\n            {  \r\n                DFS(i);  \r\n                count++;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",count);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":642,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar ch[103],str[103];  \r\nint main()  \r\n{  \r\n    int n,max,a,b,i,d,m;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        max=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%s%d%d\",str,&a,&b);  \r\n            if(b<200)    \r\n                continue;  \r\n            d=(b\/200)*200;  \r\n            if(d>1000) \r\n                d=1000;  \r\n            if(max<d\/a)  \r\n            {  \r\n                max=d\/a;  \r\n                strcpy(ch,str);  \r\n                m=b;  \r\n            }  \r\n            if(max==(d\/a)&&m<b) \r\n            {  \r\n                strcpy(ch,str);  \r\n                m=b;  \r\n            }  \r\n        }  \r\n        printf(\"%s\\n\",ch);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":643,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int i,a,b,j,count;  \r\n    char str[1005],ch;  \r\n    while(gets(str))  \r\n    {  \r\n        if((str[0]>='A')&&(str[0]<='Z')||str[0]==' ')  \r\n        {  \r\n            for(i=0;str[i]!='\\0';i++)  \r\n            {  \r\n                if(str[i]==' ')  \r\n                {  \r\n                    printf(\"0 \");  \r\n                }  \r\n                else if(str[i]>='A'&&str[i]<='R')  \r\n                {  \r\n                    a=(str[i]-'A')%3+1;\r\n                    b=(str[i]-'A')\/3+2;\r\n                    for(j=1;j<=a;j++)  \r\n                        printf(\"%d\",b);  \r\n                    printf(\" \");  \r\n                }  \r\n                else if(str[i]=='S')  \r\n                    printf(\"7777 \");  \r\n                else if(str[i]>='T'&&str[i]<='Y')  \r\n                {  \r\n                    a=(str[i]-'T')%3+1;  \r\n                    b=(str[i]-'T')\/3+8;  \r\n                    for(j=1;j<=a;j++)  \r\n                        printf(\"%d\",b);  \r\n                    printf(\" \");  \r\n                }  \r\n                else if(str[i]=='Z')  \r\n                    printf(\"9999 \");  \r\n            }  \r\n            printf(\"\\n\");  \r\n        }  \r\n        else  \r\n        {  \r\n            for(i=0;str[i]!='\\0';i++)  \r\n            {  \r\n                if(str[i]==' ')  \r\n                    continue;  \r\n                if(str[i]=='0')  \r\n                    printf(\" \");  \r\n                if(str[i]>='2'&&str[i]<='7')  \r\n                {  \r\n                    count=0;  \r\n                    a=str[i]-'0';  \r\n                    while(str[i]>='0'&&str[i]<='7')  \r\n                    {  \r\n                        count++;  \r\n                        i++;  \r\n                    }  \r\n                        ch=(a-2)*3+'A'+(count-1);  \r\n                        printf(\"%c\",ch);  \r\n                }  \r\n                else if(str[i]>='8'&&str[i]<='9')  \r\n                {  \r\n                    count=0;  \r\n                    a=str[i]-'8';  \r\n                    while(str[i]>='8'&&str[i]<='9')  \r\n                    {  \r\n                        count++;  \r\n                        i++;  \r\n                    }  \r\n                    ch=a*3+'T'+(count-1);  \r\n                    printf(\"%c\",ch);  \r\n                }  \r\n            }  \r\n            printf(\"\\n\");  \r\n        }  \r\n        memset(str,0,sizeof(str));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":644,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nlong long n;  \r\nlong long d[21];  \r\nlong long ans;  \r\n\r\nlong long gcd(long a,long b)  \r\n{  \r\n    return b==0 ? a : gcd(b,a%b);  \r\n}  \r\nlong long LCM(long a,long b) \r\n{  \r\n    return (a*b)\/gcd(a,b);  \r\n}  \r\n\r\nvoid dfs(int deep,int a,long long lcm,int m)  \r\n{  \r\n    if(deep > m)\r\n    {  \r\n        if(a == 0) \r\n            return;  \r\n        if(a%2==1)  \r\n            ans += n\/lcm;  \r\n        else  \r\n            ans -= n\/lcm;  \r\n        return;  \r\n    }  \r\n    dfs(deep+1,a,lcm,m);  \r\n    dfs(deep+1,a+1,LCM(d[deep],lcm),m);  \r\n}  \r\nint main()  \r\n{  \r\n    int m;  \r\n    int i;  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        ans = 0;  \r\n        n--;  \r\n        for(i = 1; i <= m; i++)  \r\n        {  \r\n            int t;  \r\n            scanf(\"%d\",&t);  \r\n            if(t==0)  \r\n            {  \r\n                i--;  \r\n                m--;  \r\n                continue;  \r\n            }  \r\n            else  \r\n                d[i] = t;  \r\n        }  \r\n        dfs(1,0,1,m);  \r\n        printf(\"%I64d\\n\",ans);  \r\n    }  \r\n}"
},
{
"pid":645,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint dp[1001][1001];  \r\nvoid DP()  \r\n{  \r\n    memset(dp,0,sizeof(dp));  \r\n    dp[1][1]=1; dp[1][2]=1; dp[1][3]=1;  \r\n    dp[1][4]=1; dp[1][5]=1; dp[1][6]=1;  \r\n    int i,j,k,t;  \r\n    for(i=2;i<=1000;i++)  \r\n    {  \r\n        for(j=i;j<=6*i&&j<=1000;j++)  \r\n        {  \r\n            k=j;  \r\n            t=j-6;  \r\n            while(k>=i&&k>t)  \r\n            {  \r\n                dp[i][j]=(dp[i][j]+dp[i-1][k-1])%100007;  \r\n                k--;  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int n,k;  \r\n    DP();  \r\n    while(~scanf(\"%d%d\",&n,&k))  \r\n    {  \r\n        printf(\"%d\\n\",dp[n][k]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":646,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\nint flag[1000002]={1,1},sum[1000004],v,a,b,k;  \r\nvoid inti()  \r\n{  \r\n    for(int i = 2;i <= 1000;i ++)  \r\n    {  \r\n        if(!flag[i])  \r\n        {  \r\n            for(int j = i * i;j <= 1000000;j += i)  \r\n            flag[j] = 1;  \r\n        }  \r\n    }  \r\n}  \r\nbool fun(int x)  \r\n{  \r\n    int ans = 0;  \r\n    for(int i = x;i < v;i ++)  \r\n    if(sum[i] - sum[i - x] < k)  \r\n    {  \r\n        ans = 1;  \r\n        break;  \r\n    }  \r\n    if(ans) return false;  \r\n    return true;  \r\n}  \r\nint main()  \r\n{  \r\n    inti();  \r\n    while(~scanf(\"%d %d %d\",&a,&b,&k))  \r\n    {  \r\n        v = 1;  \r\n        if(b - a + 1 < k) puts(\"-1\");  \r\n        else  \r\n        {  \r\n            for(int i = a;i <= b;i ++)  \r\n            {  \r\n                if(flag[i] == 0)  \r\n                sum[v] = sum[v - 1] + 1;  \r\n                else  \r\n                sum[v] = sum[v - 1];  \r\n                v ++;  \r\n            }  \r\n            int start = 1,end = v - 1,ans = 0;  \r\n            while(start <= end)  \r\n            {  \r\n                int mid = (start + end) \/ 2;  \r\n                if(fun(mid))  \r\n                {  \r\n                    end = mid;  \r\n                    if(start == end) {ans = 1;break;}  \r\n                }  \r\n                else  \r\n                start = mid + 1;  \r\n            }  \r\n            if(ans == 0) puts(\"-1\");  \r\n            else printf(\"%d\\n\",start);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":647,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    double n;  \r\n    int i,count,num[25],m;  \r\n    while(~scanf(\"%lf\",&n))  \r\n    {  \r\n        m=((int)n);      \r\n        count=0;  \r\n        do  \r\n        {  \r\n            num[count]=m%2;  \r\n            m=m\/2;  \r\n            count++;  \r\n        }while(m!=0);  \r\n        for(i=count-1;i>=0;i--)  \r\n            printf(\"%d\",num[i]); \r\n\r\n        count=0;          \r\n        for(i=0;i<25;i++)  \r\n            num[i]=0;  \r\n        n=n-((int)n);  \r\n        while(count<20&&n!=0)  \r\n        {  \r\n            n=n*2;  \r\n            if(n>=1)  \r\n            {  \r\n                num[count]=1;  \r\n                n=n-((int)n);  \r\n            }  \r\n            else  \r\n                num[count]=0;  \r\n            count++;  \r\n        }  \r\n        count--;  \r\n        while(count>=0&&num[count]==0)  \r\n            count--;  \r\n        if(count>=0)  \r\n            printf(\".\");  \r\n        for(i=0;i<=count;i++)  \r\n            printf(\"%d\",num[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":648,
"code":"\n#include<stdio.h>  \r\nint fun(int n)  \r\n{  \r\n    if(n<1)  \r\n        return 0;  \r\n    int sum=0,t=n,p=1;  \r\n    while(n>0)  \r\n    {  \r\n        if(n%10==0)  \r\n            sum+=n\/10*p;  \r\n        else if(n%10==1)  \r\n        {  \r\n            if(n==t)  \r\n                sum+=n\/10*p+1;  \r\n            else  \r\n            {  \r\n                sum+=n\/10*p+t%p+1;  \r\n            }  \r\n        }  \r\n        else  \r\n            sum+=(n\/10+1)*p;  \r\n        n\/=10;  \r\n        p*=10;  \r\n    }  \r\n    return sum;  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        printf(\"%d\\n\",fun(n));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":649,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <math.h>  \r\nint a[100010];  \r\nint main()  \r\n{  \r\n    int i,j,n,m,s,t,k;  \r\n    int pos,sum,max;  \r\n    while(scanf(\"%d %d\",&n,&m)!=EOF)  \r\n    {  \r\n        for(i=0;i<=n-1;i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n        }  \r\n        max=0; k=0;  \r\n        for(i=0,pos=-1,sum=0;i<=n-1;i++)  \r\n        {  \r\n            if(i!=0)  \r\n            {  \r\n                sum-=a[i-1];  \r\n            }  \r\n            k=0;  \r\n            if(pos+1<i)  \r\n            {  \r\n                pos=i-1;  \r\n                sum=0;  \r\n            }  \r\n            for(j=pos+1;j<=n-1;j++)  \r\n            {  \r\n                if(sum+a[j]<=m)  \r\n                {  \r\n                    k=1;  \r\n                    sum+=a[j];  \r\n                    pos=j;  \r\n                }else  \r\n                {  \r\n                    break;  \r\n                }  \r\n            }  \r\n            if((j-i)>max)  \r\n            {  \r\n                max=j-i;  \r\n            }  \r\n            if(n-i-1<=max)  \r\n            {  \r\n                break;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",max);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":650,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int  n,a[105];  \r\n    while(scanf(\"%d\",&n),n)  \r\n    {  \r\n        int i,sum=0;  \r\n        for(i=0;i<n;i++)       \r\n        scanf(\"%d\",&a[i]);  \r\n        for(i=0;i<n;i++)  \r\n        sum+=a[i]*a[i];  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":651,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int N = 50000 + 10;  \r\nconst int M = 320;  \r\nconst int MOD = 1000000;  \r\nint dp[N][M];  \r\nvoid inin()  \r\n{  \r\n    memset(dp, 0, sizeof(dp));  \r\n    for(int i = 3; i < N; i++)\r\n        dp[i][2] = (i-1)\/2;  \r\n    for(int i = 4; i < N; i++)  \r\n        for(int j = 3; j < M; j++)  \r\n            if(i > j)  \r\n               dp[i][j] = (dp[i-j][j] + dp[i-j][j-1])%MOD;  \r\n}  \r\nint main()  \r\n{  \r\n    int T, n, ans;  \r\n    inin();  \r\n    scanf(\"%d\", &T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\", &n);  \r\n        ans = 0;  \r\n        for(int i = 2; i < M; i++)  \r\n            ans =(ans + dp[n][i])%MOD;  \r\n        printf(\"%d\\n\", ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":652,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\n#include<algorithm>  \r\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    double n = 100000000.0;  \r\n    double ans = 0.0;  \r\n    int N;  \r\n    int M;  \r\n    cin>>N;  \r\n    while(N--)  \r\n    {  \r\n        cin>>M;  \r\n\r\n          printf(\"%.6lf %.6lf\\n\",0.82246703342408*M,M-0.82246703342408*M);  \r\n\r\n    }  \r\n}"
},
{
"pid":654,
"code":"\n#include <stdio.h>  \r\n#include <iostream>  \r\n#include <string.h>  \r\n#include <algorithm>  \r\n#define CLR(c,v) (memset(c,v,sizeof(c)))  \r\nusing namespace std;  \r\n\r\ntemplate <typename _T>  \r\ninline _T Max(_T a,_T b){  \r\n    return (a>b)?(a):(b);  \r\n}  \r\ntemplate <typename _T>  \r\ninline _T Max(_T a,_T b,_T c){  \r\n    return (a>Max(b,c))?(a):(Max(b,c));  \r\n}  \r\nconst int COST =  1e6 + 10;  \r\nconst int M    =  1e4 + 10;  \r\n\r\nint dp[COST];  \r\nint value[M];  \r\nint volume[M];  \r\n\r\nint main(){  \r\n    int Ncase;  \r\n    scanf(\"%d\",&Ncase) ;  \r\n    while(Ncase--){  \r\n        CLR(dp,0);  \r\n        int max_cost, n_bags;  \r\n        scanf(\"%d%d\",&n_bags, &max_cost);  \r\n        for (int i = 0 ; i < n_bags ; ++i){ \r\n            scanf(\"%d%d\",&volume[i],&value[i]);  \r\n        }  \r\n        for (int i = 0 ; i < n_bags ; ++i){ \r\n            int sum = 0;  \r\n            for(int j = i ; j < n_bags ; ++j){  \r\n                sum += volume[j];  \r\n            }  \r\n            int bound = Max(max_cost-sum , volume[i]);  \r\n            for(int j = max_cost ; j >= bound ; j--){ \r\n                if( dp[j] < dp[j-volume[i]] + value[i]){  \r\n                    dp[j] = dp[j-volume[i]] + value[i];  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"Max experience: %d\\n\",dp[max_cost]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":655,
"code":"\n#include <cstdio>  \r\n#include<iostream>  \r\n#include<string.h>  \r\nusing namespace std;      \r\nint a[10000],b[10000];  \r\nint main()  \r\n{  \r\n    int t,i,j;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        string s;  \r\n        cin>>s;  \r\n        int n=s.size();  \r\n        if(n==1)  \r\n        {  \r\n            cout<<1<<endl;  \r\n            continue;  \r\n        }  \r\n        int up=0;  \r\n        int cnt=1;  \r\n        int tt;  \r\n        int flag=0;  \r\n        memset(a,0,sizeof(a));  \r\n        memset(b,0,sizeof(b));  \r\n        a[0]=1;  \r\n        b[0]=1;  \r\n        for(i=1;i<n;i++)  \r\n        {  \r\n            if(flag==0)  \r\n            {  \r\n                for(j=0;j<cnt;j++)  \r\n                {  \r\n                    tt=a[j]+b[j]+up;  \r\n                    a[j]=tt%10;  \r\n                    up=tt\/10;  \r\n                }  \r\n                if(up)  \r\n                {  \r\n                    a[cnt]=up;  \r\n                    up=0;     \r\n                    cnt++;  \r\n                }  \r\n                flag=1;  \r\n            }  \r\n            else  \r\n            {  \r\n                for(j=0;j<cnt;j++)  \r\n                {  \r\n                    tt=a[j]+b[j]+up;  \r\n                    b[j]=tt%10;  \r\n                    up=tt\/10;  \r\n                }  \r\n                if(up)  \r\n                {  \r\n                    b[cnt]=up;  \r\n                    up=0;   \r\n                    cnt++;  \r\n                }  \r\n                flag=0;  \r\n            }  \r\n        }  \r\n        if(flag==0)  \r\n        {  \r\n            for(i=cnt-1;i>=0;--i)  \r\n                cout<<b[i];  \r\n            cout<<endl;  \r\n        }  \r\n        else  \r\n        {  \r\n            for(i=cnt-1;i>=0;--i)  \r\n                cout<<a[i];  \r\n            cout<<endl;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":658,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar str[1005];  \r\nint main()  \r\n{  \r\n    int k,i,len;  \r\n    while(~scanf(\"%s%d\",str,&k))  \r\n    {  \r\n        len=strlen(str);  \r\n        k=k%len;  \r\n        for(i=len-k;str[i]!='\\0';i++)  \r\n            printf(\"%c\",str[i]);  \r\n        for(i=0;i<len-k;i++)  \r\n            printf(\"%c\",str[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":659,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int s,a,b,c;  \r\n    int t=1;  \r\n    scanf(\"%d\",&s);  \r\n    while(s--)  \r\n    {  \r\n        scanf(\"%d%d%d\",&a,&b,&c);  \r\n        printf(\"Case #%d:\\n\",t++);  \r\n        if(a+b>c&&a+c>b&&b+c>a)  \r\n        {  \r\n            printf(\"YE\");  \r\n            if(a==b||a==c||b==c)  \r\n                printf(\" YE\");  \r\n            if(a==b&&a==c)  \r\n                printf(\" YE\");  \r\n        }     \r\n        else  \r\n            printf(\"NO\");  \r\n        printf(\"\\n\");  \r\n\r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":660,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\n#include<math.h>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n\r\n        while(t--)\r\n        {\r\n            double h,angel,devil,boss[110];\r\n            int a,d,b,i;\r\n            scanf(\"%lf%d%d%d\",&h,&a,&d,&b);\r\n            for(i=0;i<a;i++)\r\n            {\r\n                scanf(\"%lf\",&angel);\r\n                h+=(angel\/2.0);\r\n            }\r\n            for(i=0;i<d;i++)\r\n            {\r\n                scanf(\"%lf\",&devil);\r\n                h-=(devil\/2.0);\r\n            }\r\n            for(i=0;i<b;i++)\r\n            {\r\n                scanf(\"%lf\",&boss[i]);\r\n            }\r\n            sort(boss,boss+b);\r\n            for(i=0;i<b;i++)\r\n            {\r\n                if(h>=boss[i]\/2.0)\r\n                h+=(boss[i]\/2.0);\r\n                else\r\n                {\r\n                    h=-1;\r\n                    break;\r\n                }\r\n\r\n            }\r\n            if(h>=0)\r\n            printf(\"Win\\n\");\r\n            else\r\n            printf(\"Lose\\n\");\r\n        }\r\n\r\n    return 0;\r\n}"
},
{
"pid":661,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar str[1005];  \r\nint dp[1005],len;  \r\nint fun(int t)  \r\n{  \r\n    int i,j,a,b;  \r\n    memset(dp,0,sizeof(dp));  \r\n    for(i=0;i<t;i++)  \r\n    {  \r\n        a=0;  \r\n        for(j=t;j<len;j++)  \r\n        {  \r\n            b=dp[j+1];  \r\n            if(str[i]==str[j])  \r\n                dp[j+1]=a+1;  \r\n            else if(dp[j]>dp[j+1])  \r\n                dp[j+1]=dp[j];  \r\n            a=b;  \r\n        }  \r\n    }  \r\n    return dp[len];  \r\n}  \r\nint main()  \r\n{  \r\n    int T,i,max,t;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%s\",str);  \r\n        len=strlen(str);  \r\n        max=fun(len\/2);  \r\n        if(max==len\/2)  \r\n        {  \r\n            printf(\"%d\\n\",len-2*max);  \r\n            continue;  \r\n        }  \r\n        for(i=max;i+max<len;i++)  \r\n        {  \r\n            t=fun(i);  \r\n            if(t>max)  \r\n                max=t;  \r\n        }  \r\n        printf(\"%d\\n\",len-2*max);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":662,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(scanf(\"%d\",&n)&&n)  \r\n    {  \r\n        printf(\"%d\\n\",n\/2);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":663,
"code":"\n#include <stdio.h>   \r\nint main(){  \r\n    int a, b, c, j, k, count = 0;  \r\n    char s[15];  \r\n    while(~scanf(\"%s\", s)){  \r\n        j = sscanf(s, \"%d+%d=%d\", &a, &b, &c);  \r\n        k = sscanf(s, \"%d-%d=%d\", &a, &b, &c);  \r\n        if(j == 3 && a + b == c) ++count;  \r\n        else if(k == 3 && a - b == c) ++count;  \r\n    }  \r\n    printf(\"%d\\n\", count);   \r\n    return 0;  \r\n}"
},
{
"pid":664,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nchar str[105];  \r\n\r\nint main(){  \r\n    int c, len, a, i;  \r\n    while(scanf(\"%s\", str), str[0] != '0'){  \r\n        len = strlen(str);  \r\n        if(len == 1){  \r\n            printf(\"0\\n\");  \r\n            continue;  \r\n        }  \r\n        c = str[len - 1] - '0';  \r\n        str[len - 1] = '\\0';  \r\n        if(len < 10){                      \r\n            sscanf(str, \"%d\", &a);  \r\n            a -= c * 5;  \r\n            printf(\"%d\\n\", a % 17 ? 0 : 1);  \r\n            continue;  \r\n        }  \r\n        for(i = a = 0; i != len - 1; ++i){  \r\n            a = (a * 10 + str[i] - '0') % 17;  \r\n        }  \r\n        c = c * 5 % 17;  \r\n        printf(\"%d\\n\", (a - c) % 17 ? 0 : 1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":665,
"code":"\n#include<cstdio>  \r\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cmath>  \r\nusing namespace std;  \r\nconst double PI=acos(-1); \r\nconst double eps=1e-6;  \r\ndouble fun1(double x,double vx,double s,double r,double l)  \r\n{  \r\n    double c=2*(l-2*r);  \r\n    if(vx==0) return x;  \r\n    double t1=c\/vx;  \r\n    while(s-t1>=0+eps) s-=t1;  \r\n    double len,tt;  \r\n    if(s==0+eps) x=x;  \r\n    else  \r\n    {  \r\n        len=l-r-x;  \r\n        tt=len\/vx;  \r\n        if(s-tt<=eps) x=x+vx*s;  \r\n        else  \r\n        {  \r\n            s=s-tt;  \r\n            len=l-2*r;  \r\n            tt=len\/vx;  \r\n            if(s-tt<=eps) x=l-r-vx*s;  \r\n            else  \r\n            {  \r\n                s-=tt;  \r\n                len=x-r;  \r\n                tt=len\/vx;  \r\n                if(s-tt<=eps) x=r+vx*s;  \r\n            }  \r\n        }  \r\n    }  \r\n    return x;  \r\n}  \r\ndouble fun2(double x,double vx,double s,double r,double l)  \r\n{  \r\n    if(vx==0) return x;  \r\n    double c=2*(l-2*r);  \r\n    double tt=c\/vx;  \r\n    while(s-tt>=0+eps) s-=tt;  \r\n    double len;  \r\n    if(s==0+eps) x=x;  \r\n    else  \r\n    {  \r\n        len=x-r;  \r\n        tt=len\/vx;  \r\n        if(s-tt<=eps) x=x-vx*s;  \r\n        else  \r\n        {  \r\n            s=s-tt;  \r\n            len=l-2*r;  \r\n            tt=len\/vx;  \r\n            if(s-tt<=eps) x=r+vx*s;  \r\n            else  \r\n            {  \r\n                s-=tt;  \r\n                len=l-r-x;  \r\n                tt=len\/vx;  \r\n                if(s-tt<=eps) x=l-r-vx*s;  \r\n            }  \r\n        }  \r\n    }  \r\n    return x;  \r\n}  \r\nint main()  \r\n{  \r\n    double l,w,x,y,r,a,v,s;  \r\n    while(~scanf(\"%lf%lf%lf%lf%lf%lf%lf%lf\",&l,&w,&x,&y,&r,&a,&v,&s))  \r\n    {  \r\n        if(l<=0) break;  \r\n        double a1=(a\/180)*PI;  \r\n        double vx=v*cos(a1);  \r\n        double vy=v*sin(a1);  \r\n        double xx,yy;  \r\n        if(a>=0&&a<=90)  \r\n        {  \r\n            xx=fun1(x,vx,s,r,l);  \r\n            yy=fun1(y,vy,s,r,w);  \r\n        }  \r\n        else if(a>90&&a<=180)  \r\n        {  \r\n            vx=vx<0?-vx:vx; vy=vy<0?-vy:vy;  \r\n            yy=fun1(y,vy,s,r,w);  \r\n            xx=fun2(x,vx,s,r,l);  \r\n        }  \r\n        else if(a>180&&a<=270)  \r\n        {  \r\n            vx=vx<0?-vx:vx; vy=vy<0?-vy:vy;  \r\n            xx=fun2(x,vx,s,r,l);  \r\n            yy=fun2(y,vy,s,r,w);  \r\n        }  \r\n        else  \r\n        {  \r\n            vx=vx<0?-vx:vx; vy=vy<0?-vy:vy;  \r\n            xx=fun1(x,vx,s,r,l);  \r\n            yy=fun2(y,vy,s,r,w);  \r\n        }  \r\n        printf(\"%.2lf %.2lf\\n\",xx,yy);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":666,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<math.h>  \r\ndouble c[15];  \r\nint main()  \r\n{  \r\n    int t;  \r\n    while(scanf(\"%d\",&t)!=EOF,t)  \r\n    {  \r\n        int i,j;  \r\n        double l,r,ans=0,f,mid;  \r\n        for(i=0;i<=t;i++)  \r\n        {  \r\n            scanf(\"%lf\",&c[i]);  \r\n        }  \r\n        c[0]*=-1.0;  \r\n        l=-1.0;  \r\n        r=1e6;  \r\n        while(fabs(c[0]-ans)>1e-7)  \r\n        {  \r\n            ans=0.0;  \r\n            f=1.0;  \r\n            mid=(l+r)\/2;  \r\n            for(j=1;j<=t;j++)  \r\n            {  \r\n                f=f\/(1+mid);  \r\n                ans+=c[j]*f;  \r\n            }  \r\n            if(ans>c[0])  \r\n                l=mid;  \r\n            else  \r\n                r=mid;  \r\n        }  \r\n        printf(\"%.2lf\\n\",mid);  \r\n    }  \r\n}"
},
{
"pid":667,
"code":"\n#include <cstdio>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nint r,c;\r\nchar a[20][20];\r\nint used[20][20];\r\nint ans[100];\r\nint ansl;\r\nint aa[100];\r\nint zhan[100][2];\r\nint used1[20][20];\r\nint neigh[4][2]={{0,1},{1,0},{0,-1},{-1,0}};\r\nint z;\r\n\r\nvoid search(int x,int y,int l)\r\n{\r\n\tint i,j,top,bottom,xx,yy;\r\n \tif ((l>ansl)||((l==ansl)&&(z==1)))\r\n \t{\r\n  \t\tmemcpy(ans,aa,sizeof(ans));\r\n  \t\tansl=l;\r\n  \t\tz=0;\r\n \t}\r\n \tmemset(used1,0,sizeof(used1));\r\n \tused1[x][y]=1;\r\n \ttop=0;bottom=1;\r\n \tzhan[0][0]=x;\r\n \tzhan[0][1]=y;\r\n \twhile (top<bottom)\r\n \t{\r\n  \t\tfor (i=0;i<4;i++)\r\n  \t\t{\r\n   \t\t\txx=zhan[top][0]+neigh[i][0];\r\n   \t\t\tyy=zhan[top][1]+neigh[i][1];\r\n   \t\t\tif ((xx>=0)&&(xx<r)&&(yy>=0)&&(yy<c)&&(a[xx][yy]!='#')&&(used[xx][yy]==0)&&(used1[xx][yy]==0))\r\n   \t\t\t{\r\n    \t\t\tzhan[bottom][0]=xx;\r\n    \t\t\tzhan[bottom][1]=yy;\r\n    \t\t\tused1[xx][yy]=1;\r\n    \t\t\tbottom++;\r\n   \t\t\t}\r\n  \t\t}\r\n  \t\ttop++;\r\n \t}\r\n \tif (l+top-1<ansl) return;\r\n \tif ((l+top-1==ansl)&&(z==-1)) return;\r\n \tfor (i=0;i<4;i++)\r\n \t{\r\n  \t\txx=x+neigh[i][0];\r\n  \t\tyy=y+neigh[i][1];\r\n  \t\tif ((xx>=0)&&(xx<r)&&(yy>=0)&&(yy<c)&&(a[xx][yy]!='#')&&(used[xx][yy]==0))\r\n  \t\t{\r\n   \t\t\taa[l]=a[xx][yy]-'0';\r\n   \t\t\tused[xx][yy]=1;\r\n   \t\t\tif (z!=0)\r\n    \t\t\tsearch(xx,yy,l+1);\r\n   \t\t\telse\r\n    \t\t\tif (l>=ansl)\r\n    \t\t\t{\r\n     \t\t\t\tz=1;\r\n     \t\t\t\tsearch(xx,yy,l+1);\r\n     \t\t\t\tz=0;\r\n    \t\t\t}\r\n    \t\t\telse\r\n    \t\t\t{\r\n     \t\t\t\tif (aa[l]>ans[l])\r\n     \t\t\t\t{\r\n      \t\t\t\t\tz=1;\r\n      \t\t\t\t\tsearch(xx,yy,l+1);\r\n      \t\t\t\t\tz=0;\r\n     \t\t\t\t}\r\n     \t\t\t\telse if (aa[l]==ans[l])\r\n     \t\t\t\t{\r\n      \t\t\t\t\tz=0;\r\n      \t\t\t\t\tsearch(xx,yy,l+1);\r\n      \t\t\t\t\tz=0;\r\n     \t\t\t\t}\t\r\n     \t\t\t\telse\r\n     \t\t\t\t{\r\n      \t\t\t\t\tz=-1;\r\n      \t\t\t\t\tsearch(xx,yy,l+1);\r\n      \t\t\t\t\tz=0;\r\n     \t\t\t\t}\r\n    \t\t\t}\r\n   \t\t\t\tused[xx][yy]=0;\r\n  \t\t }\r\n \t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint i,j;\r\n \twhile (1)\r\n \t{\r\n  \t\tscanf(\"%d%d\",&r,&c);\r\n  \t\tif ((r==0)&&(c==0)) break;\r\n  \t\tfor (i=0;i<r;i++)\r\n   \t\t\tscanf(\"%s\",a[i]);\r\n  \t\tmemset(ans,0,sizeof(ans));\r\n  \t\tans[0]=-1;\r\n  \t\tansl=1;\r\n  \t\tmemset(aa,0,sizeof(aa));\r\n  \t\tfor (i=0;i<r;i++)\r\n   \t\t\tfor (j=0;j<c;j++)\r\n    \t\t\tif (a[i][j]!='#')\r\n    \t\t\t{\r\n     \t\t\t\tused[i][j]=1;\r\n     \t\t\t\taa[0]=a[i][j]-'0';\r\n     \t\t\t\tif (a[i][j]-'0'>ans[0])\r\n     \t\t\t\t{\r\n      \t\t\t\t\tz=1;\r\n      \t\t\t\t\tsearch(i,j,1);\r\n     \t\t\t\t}\r\n     \t\t\t\telse if (a[i][j]-'0'==ans[0])\r\n     \t\t\t\t{\r\n      \t\t\t\t\tz=0;\r\n      \t\t\t\t\tsearch(i,j,1);\r\n     \t\t\t\t}\r\n     \t\t\t\telse\r\n     \t\t\t\t{\r\n      \t\t\t\t\tz=-1;\r\n      \t\t\t\t\tsearch(i,j,1);\r\n     \t\t\t\t}\r\n     \t\t\t\tused[i][j]=0;\r\n    \t\t\t}\r\n  \tfor (i=0;i<ansl;i++)\r\n   \t\tprintf(\"%d\",ans[i]);\r\n  \tprintf(\"\\n\");\r\n \t}\r\n \treturn 0;\r\n}"
},
{
"pid":668,
"code":"\n#include<cstdio>\r\n#include<cmath>\r\n#include<vector>\r\nusing namespace std;\r\n\r\n#define MAX(a,b) ((a) > (b) ? (a) : (b))\r\n#define MIN(a,b) ((a) < (b) ? (a) : (b))\r\n#define inf 1000000000\r\n\r\ndouble d[205][205];\r\ndouble v[205][205],u[205][205];\r\n\r\nint main()\r\n{\r\n\tint i,j,k,tests,cs=0,n,m;\r\n\twhile(scanf(\"%d%d\",&n,&m)==2)\r\n\t{\r\n\t\tif(!n && !m) break;\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t\tfor(j=1;j<=n;j++)\r\n\t\t\t\td[i][j]=d[j][i]=v[i][j]=v[j][i]=inf;\r\n\t\tfor(i=0;i<m;i++)\r\n\t\t{\r\n\t\t\tint a,b;\r\n\t\t\tdouble vv,tt;\r\n\t\t\tscanf(\"%d%d%lf%lf\",&a,&b,&vv,&tt);\r\n\t\t\td[a][b]=d[b][a]=vv;\r\n\t\t\tv[a][b]=v[b][a]=vv;\r\n\t\t\tu[a][b]=u[b][a]=tt;\r\n\t\t}\r\n\t\tfor(k=1;k<=n;k++)\r\n\t\t\tfor(i=1;i<=n;i++)\r\n\t\t\t\tfor(j=1;j<=n;j++)\r\n\t\t\t\t\td[i][j]=MIN(d[i][j],d[i][k]+d[k][j]);\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t\td[i][i]=0.0;\r\n\t\tdouble ans=d[1][n];\r\n\t\tif(ans==inf)\r\n\t\t{\r\n\t\t\tputs(\"-1.000\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t\tfor(j=1;j<=n;j++)\r\n\t\t\t{\r\n\t\t\t\tif(i==j || v[i][j]==inf) continue;\r\n\t\t\t\tdouble lo=0.0,hi=10.0;\r\n\t\t\t\tdouble t1=d[1][i];\r\n\t\t\t\twhile(hi-lo>1e-6)\r\n\t\t\t\t{\r\n\t\t\t\t\tdouble left = (2.0*lo+hi)\/3.0;\r\n\t\t\t\t\tdouble right = (lo+2.0*hi)\/3.0;\r\n\t\t\t\t\tdouble l1= t1+left + v[i][j]*pow(u[i][j],-t1-left) + d[j][n];\r\n\t\t\t\t\tdouble l2= t1+right + v[i][j]*pow(u[i][j],-t1-right) + d[j][n];\r\n\t\t\t\t\tif(l1<l2)\r\n\t\t\t\t\t\thi=right;\t\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tlo=left;\r\n\t\t\t\t\tans=MIN(ans,MIN(l1,l2));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tprintf(\"%.3lf\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":669,
"code":"\n#include<iostream>\r\n#include<stdio.h>\r\nusing namespace std;\r\ntypedef int I;\r\n#define X(A,B) (A[B[0]][B[1]][B[2]][B[3]][B[4]][B[5]])\r\ndouble cache[7][7][7][7][7][7];\r\nbool vis[7][7][7][7][7][7];\r\ndouble win(int h[6])\r\n{ if(X(vis,h)) return X(cache,h);\r\n  X(vis,h)=true;\r\n  X(cache,h)=0.;\r\n  I mx=0;\r\n  for(I i=0;i<6;i++)mx=max(mx,h[i]);\r\n  I i=0,hh[6];\r\n  for(I j=0;j<mx;j++)\r\n  { for(I d=0;d<2;d++)\r\n    {i=0+5*d;\r\n      double loss=0.;\r\n      for(I p=1;p<=3;p++)\r\n       { for(I k=0;k<6;k++)hh[k]=h[k];\r\n        I pp=p;\r\n        I k=i;\r\n        while(pp)\r\n        { if(k<0||k>5)break;\r\n          if(hh[k]>j)hh[k]--,pp--;\r\n          k+=1-2*d;\r\n        }\r\n        loss+=win(hh);\r\n      }\r\n      loss=(1-loss\/3.);\r\n      if(loss>X(cache,h))X(cache,h)=loss;\r\n    }\r\n  }\r\n  return X(cache,h);\r\n}\r\nint main()\r\n{ \r\n\tI n;\r\n  while(scanf(\"%d\",&n)==1&&n)\r\n  { I h[6]={0};\r\n    for(I i=0;i<n;i++)scanf(\"%d\",&h[i]);\r\n    printf(\"%.6lf\\n\",win(h));\r\n  }\r\n  return 0;\r\n}"
},
{
"pid":670,
"code":"\n#include <stdio.h>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\ntypedef long long ll;  \r\nconst ll mod=987654321;  \r\n\r\nll A[2][2],B[2][2],T[2][2];  \r\n\r\nvoid pow(int n)  \r\n{  \r\n    if(n==0)  \r\n    {  \r\n        for(int i=0;i<2;i++)  \r\n            for(int j=0;j<2;j++)  \r\n                B[i][j]=(i==j);  \r\n\r\n        return;  \r\n    }  \r\n    if(n&1)  \r\n    {  \r\n        pow(n-1);  \r\n        for(int i=0;i<2;i++)  \r\n            for(int j=0;j<2;j++)  \r\n            {  \r\n                T[i][j]=0;  \r\n                    for(int k=0;k<2;k++)  \r\n                        T[i][j]=(T[i][j]+A[i][k]*B[k][j])%mod;  \r\n            }  \r\n        for(int i=0;i<2;i++)  \r\n            for(int j=0;j<2;j++)  \r\n            {  \r\n                B[i][j]=T[i][j];  \r\n            }  \r\n\r\n    }  \r\n    else  \r\n    {  \r\n        pow(n\/2);  \r\n        for(int i=0;i<2;i++)  \r\n            for(int j=0;j<2;j++)  \r\n            {  \r\n                T[i][j]=0;  \r\n                    for(int k=0;k<2;k++)  \r\n                        T[i][j]=(T[i][j]+B[i][k]*B[k][j])%mod;  \r\n            }  \r\n        for(int i=0;i<2;i++)  \r\n            for(int j=0;j<2;j++)  \r\n            {  \r\n                B[i][j]=T[i][j];  \r\n            }  \r\n\r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n  int n;  \r\n  A[0][0]=1;    \r\n  A[0][1]=1;  \r\n  A[1][0]=1;    \r\n  A[1][1]=0;  \r\n  while (scanf(\"%d\", &n) == 1 && n)  \r\n  {  \r\n    ll ans=0;  \r\n    if(n&1) ans=0;  \r\n    else if(n<4) ans=0;  \r\n    else  \r\n    {  \r\n        pow(n-4);  \r\n        ans=B[0][0]-n\/2+1;  \r\n        ans%=mod;  \r\n        if(ans<0)ans+=mod;  \r\n    }  \r\n    printf(\"%lld\\n\",ans);  \r\n  }  \r\n\r\n  return 0;  \r\n}"
},
{
"pid":673,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int t,n,m;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        int a[101]={0},x,i;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&x);  \r\n            a[x]++;    \r\n        }  \r\n        for(i=0;i<=m;i++)  \r\n        {  \r\n            while(a[i]--)  \r\n            {  \r\n                printf(\"%d \",i);  \r\n            }  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":674,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<vector>  \r\n#include<cstring>  \r\nusing namespace std;  \r\n#define M 500  \r\n#define INF 9999999  \r\nvector<int> adj[M];  \r\nint f[M][M],vex[M];  \r\nint n,p,ans;  \r\nint min(int a,int b)  \r\n{  \r\n    return a>b?b:a;  \r\n}  \r\nint DP(int u)  \r\n{  \r\n    vex[u]=1;  \r\n    int i,j,k,v,len=adj[u].size();  \r\n    for(i=0;i<len;i++)  \r\n    {  \r\n        v=adj[u][i];  \r\n        vex[u]+=DP(v);  \r\n    }  \r\n    f[u][1]=len;  \r\n    for(i=0;i<len;i++)  \r\n    {  \r\n        v=adj[u][i];  \r\n        for(k=vex[u];k>=1;k--)  \r\n        {  \r\n            for(j=1;(j<k)&&(j<=vex[v]);j++)  \r\n                f[u][k]=min(f[u][k],f[u][k-j]+f[v][j]-1);  \r\n        }  \r\n    }  \r\n    if(vex[u]>=p)  \r\n        ans=min(ans,f[u][p]+(u!=1));  \r\n    return vex[u];  \r\n}  \r\nint main()  \r\n{  \r\n    int T,i,a,b,count=1;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        for(i=0;i<M;i++)  \r\n            adj[i].clear();  \r\n        scanf(\"%d%d\",&n,&p);  \r\n        for(i=0;i<n-1;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            adj[a].push_back(b);  \r\n        }  \r\n        ans=INF;  \r\n        memset(f,INF,sizeof(f));  \r\n        DP(1);  \r\n        printf(\"case #%d: %d\\n\",count++,ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":675,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nstruct SHIP\r\n{\r\n    char name[15];\r\n    char id[10];\r\n}ship[110];\r\nint main()\r\n{\r\n    int n,i;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        for(i=0;i<n;i++)\r\n        {\r\n            fflush(stdin);\r\n            scanf(\"%s %s\",ship[i].name,ship[i].id);\r\n        }\r\n        for(i=0;i<n;i++)\r\n        {\r\n            if(strcmp(ship[i].id,\"rat\")==0)\r\n            printf(\"%s\\n\",ship[i].name);\r\n        }\r\n        for(i=0;i<n;i++)\r\n        {\r\n            if(strcmp(ship[i].id,\"woman\")==0||strcmp(ship[i].id,\"child\")==0)\r\n            printf(\"%s\\n\",ship[i].name);\r\n        }\r\n        for(i=0;i<n;i++)\r\n        {\r\n            if(strcmp(ship[i].id,\"man\")==0)\r\n            printf(\"%s\\n\",ship[i].name);\r\n        }\r\n        for(i=0;i<n;i++)\r\n        {\r\n            if(strcmp(ship[i].id,\"captain\")==0)\r\n            printf(\"%s\\n\",ship[i].name);\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":676,
"code":"\n#include<stdio.h>  \r\nlong long fun(long long n,long long p,long long mm)  \r\n{  \r\n    long long result;  \r\n    if(p==1)  \r\n        return n;  \r\n    result=fun(n,p\/2,mm);  \r\n    if(p%2==1)  \r\n        return (((result*result)%mm)*n)%mm;  \r\n    else  \r\n        return (result*result)%mm;  \r\n}  \r\nint main()  \r\n{  \r\n    int T,i,j;  \r\n    long long n,p,m,mm;  \r\n    scanf(\"%lld\",&T);  \r\n    for(i=1;i<=T;i++)  \r\n    {  \r\n        scanf(\"%lld%lld%lld\",&n,&p,&m);  \r\n        mm=1;  \r\n        for(j=1;j<=m;j++)  \r\n            mm*=10;  \r\n        printf(\"Case #%d: %lld\\n\",i,fun(n,p,mm));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":677,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\n#include<cstdio>  \r\n#include<cstdlib>  \r\n#include<cstring>  \r\n#include<cmath>  \r\n#include<string>  \r\n#include<queue>  \r\n#include<stack>  \r\n#include<map>  \r\n#include<vector>  \r\n#include<algorithm>  \r\n\r\n#define INS 1<<30  \r\n#define CLR(arr,v) memset(arr,v,sizeof(arr))  \r\n\r\n#define MaxV 3000  \r\n#define MaxE 100000  \r\n\r\nclass MaxFlow{  \r\npublic:  \r\n    void Clear(){  \r\n        CLR(h,-1); CLR(cnt,0); CLR(vis,0);  \r\n        flag = false;  \r\n        pos = top = head = total = maxflow = 0;  \r\n    }  \r\n    void add(int u,int v,int flow){  \r\n        num[pos] = v;  \r\n        sur[pos] = flow;  \r\n        next[pos] = h[u];  \r\n        h[u] = pos++;  \r\n\r\n        num[pos] = u;  \r\n        sur[pos] = 0;  \r\n        next[pos] = h[v];  \r\n        h[v] = pos++;  \r\n    }  \r\n    int GetMaxFlow(int s,int t){  \r\n        init(t);  \r\n        stk[top] = s;  \r\n        while(!flag){  \r\n            minres = INS;  \r\n            if(top < 0) top = 0;  \r\n            if(!dfs(stk[top],-1,t,minres)) continue;  \r\n            maxflow += minres;  \r\n            while(dis != -1){  \r\n                sur[dis] -= minres;  \r\n                sur[dis^1] += minres;  \r\n                dis = pre_e[dis];  \r\n            }  \r\n            top = 0;  \r\n        }  \r\n        return maxflow;  \r\n    }  \r\nprivate:  \r\n    int h[MaxV],num[MaxE],sur[MaxE],next[MaxE],gap[MaxV],cnt[MaxV],pre_e[MaxE],stk[MaxV],que[MaxV];  \r\n    int pos,top,head,total,maxflow,minres,dis;  \r\n    bool vis[MaxV],flag;  \r\n    void init(int n){  \r\n        que[total++] = n;  \r\n        vis[n] = true;  \r\n        while(head < total){  \r\n            int p = que[head++];  \r\n            if(head >= MaxV) head -= MaxV;  \r\n            for(int i = h[p]; i != -1 ;i = next[i]){  \r\n                if(!vis[ num[i] ]){  \r\n                    vis[ num[i] ] = true;  \r\n                    gap[ num[i] ] = gap[p] + 1;  \r\n                    cnt[ gap[ num[i] ] ]++;  \r\n                    que[total++] = num[i];  \r\n                    if(total >= MaxV) total -= MaxV;  \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n    bool dfs(int p,int father,int n,int &minres){  \r\n        int m = minres;  \r\n        for(int i = h[p]; i != -1 ;i = next[i]){  \r\n            if(sur[i] > 0 && gap[p] - gap[ num[i] ] == 1){  \r\n                minres = min(minres,sur[i]);  \r\n                pre_e[i] = father;  \r\n                if(num[i] != n) stk[++top] = num[i];  \r\n                if(num[i] == n || dfs(num[i],i,n,minres)) {  \r\n                    if(num[i] == n) dis = i;  \r\n                    return true;  \r\n                }  \r\n                minres = m;  \r\n            }  \r\n        }  \r\n        cnt[ gap[p] ]--;  \r\n        cnt[ gap[p] + 1]++;  \r\n        top--;  \r\n        if(cnt[ gap[p] ] == 0) flag = true;  \r\n        gap[p] += 1;  \r\n        return false;  \r\n    }  \r\n}T;  \r\n\r\nint main()  \r\n{     \r\n    int t;  \r\n    scanf(\"%d\",&t);  \r\n    int cnt = 0;  \r\n    while (t--)  \r\n          {  \r\n          int n,m,p;  \r\n          scanf(\"%d%d%d\",&n,&m,&p);  \r\n\r\n          int N = n + 1;  \r\n          T.Clear();  \r\n\r\n          int x;  \r\n          for (int i = 1; i <= p; ++ i)  \r\n               scanf(\"%d\",&x),T.add(0,x,INS);  \r\n\r\n          for (int i = 1; i <= m; ++ i)  \r\n              {  \r\n              int u,v;  \r\n              scanf(\"%d%d\",&u,&v);       \r\n              T.add(u,v,1);  \r\n              T.add(v,u,1);  \r\n              }  \r\n\r\n          T.add(n,N,INS);  \r\n\r\n          printf(\"Case #%d: %d\\n\",++cnt,T.GetMaxFlow(0,N));  \r\n          }  \r\n    return 0;  \r\n}"
},
{
"pid":678,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<algorithm>\r\n#include<string.h>\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n  int n,i,k;\r\n  while(~scanf(\"%d %d\",&n,&k))\r\n  {\r\n    int a[110000],s=0;\r\n    for(i=0;i<n;i++)\r\n    scanf(\"%d\",&a[i]);\r\n    sort(a,a+n);\r\n    for(i=0;i<k;i++)\r\n    s+=a[i];\r\n    printf(\"%d\\n\",s);\r\n  }\r\n  return 0;\r\n}"
},
{
"pid":679,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<vector>  \r\n#include<cstring>  \r\nusing namespace std;  \r\n#define MAX 1005  \r\n#define INF 9999999  \r\nvector<int> adj[MAX];  \r\nint dp[MAX],visit[MAX];  \r\nint weight[MAX];  \r\nint Min(int a,int b)  \r\n{  \r\n    return a>b?b:a;  \r\n}  \r\nvoid DFS(int u)  \r\n{  \r\n    if(visit[u])  \r\n        return;  \r\n    int len=adj[u].size(),v;  \r\n    if(len==0)  \r\n    {  \r\n        dp[u]=weight[u];  \r\n        return;  \r\n    }  \r\n    for(int i=0;i<len;i++)  \r\n    {  \r\n        v=adj[u][i];  \r\n        DFS(v);  \r\n        visit[v]=1;  \r\n        dp[u]=Min(dp[u],dp[v]+weight[u]);  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int T,i,count=1;  \r\n    int n,m,p,a,b;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d%d\",&n,&m,&p);  \r\n        for(i=0;i<=n;i++)  \r\n            adj[i].clear();  \r\n        for(i=1;i<=n;i++)  \r\n            scanf(\"%d\",&weight[i]);  \r\n        for(i=1;i<=m;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            adj[a].push_back(b);  \r\n        }  \r\n        memset(visit,0,sizeof(visit));  \r\n        for(i=0;i<=n;i++)  \r\n            dp[i]=INF;  \r\n        DFS(p);  \r\n        printf(\"Case #%d: %d\\n\",count++,dp[p]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":680,
"code":"\n#include<stdio.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int N = 1005;  \r\nint a[N], Max, sum, n, m;  \r\n\r\nbool judge(int x)  \r\n{  \r\n    int s = 0, cnt = 0;  \r\n    for(int i = 0; i < n; i++)  \r\n    {  \r\n        if(a[i] > x)  \r\n            return false;  \r\n        if(s + a[i] > x)  \r\n        {  \r\n            cnt++;  \r\n            s = a[i];  \r\n            if(cnt > m - 1)  \r\n                return false;  \r\n        }  \r\n        else  \r\n            s += a[i];  \r\n    }  \r\n    return true;  \r\n}  \r\n\r\nint get_ans()  \r\n{  \r\n    int l = Max, r = sum;  \r\n    while(l <= r)  \r\n    {  \r\n        int mid = (l + r) \/ 2;  \r\n        if(judge(mid))  \r\n            r = mid - 1;  \r\n        else  \r\n            l = mid + 1;  \r\n    }  \r\n    return l;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        sum = 0, Max = 0;  \r\n        for(int i = 0; i < n; i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n            sum += a[i];  \r\n            Max = max(Max, a[i]);  \r\n        }  \r\n        printf(\"%d\\n\",get_ans());  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":682,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int T,m,i,n;  \r\n    char str[55];  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        scanf(\"%s%d\",str,&m);  \r\n        m=m%n;  \r\n        for(i=m;i<n;i++)  \r\n            printf(\"%c\",str[i]);  \r\n        for(i=0;i<m;i++)  \r\n            printf(\"%c\",str[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":683,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int T,i,j,len,n,m,L,b;  \r\n    int num[55],a[55];  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&num[i]);  \r\n        }  \r\n        scanf(\"%d%d\",&m,&L);  \r\n        len=n;  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n            scanf(\"%d\",&b);  \r\n            a[i]=0;  \r\n            if(len<=b)  \r\n                continue;  \r\n            if(len>b+L)  \r\n                len=b+L;  \r\n            for(j=b;j<len;j++)  \r\n                a[i]+=num[j];  \r\n            len=b;  \r\n        }  \r\n        for(i=0;i<m;i++)  \r\n            printf(\"%d \",a[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":684,
"code":"\n#include<iostream>\r\nusing namespace std;\r\n#define Max 500\r\nint main()\r\n{\r\n\tint i,n,N,flg;\r\n\tchar Tiles[2][Max];\r\n\tcin>>n;\r\n\twhile(n--)\r\n\t{\r\n\t\tcin>>N;\r\n\t\tfor(i = 0; i < 2; i++)\r\n\t\t{\r\n\t\t\tfor(int j = 0; j < N; j++)\r\n\t\t\t{\r\n\t\t\t\tcin>>Tiles[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(i=0;i<=N-1;i++)\r\n\t\t{\r\n\t\t\tflg=1;\r\n\t\t\tif(Tiles[0][0]== 'W' || Tiles[0][N-1] == 'W')\r\n\t\t\t{\r\n\t\t\t\tflg=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\tif(Tiles[0][i]=='W' && Tiles[1][i]=='W')\r\n\t\t\t{\r\n\t\t\t\tflg=0;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(flg==1)\r\n\t\tcout<<\"YES\"<<endl;\r\n\t\telse\r\n\t\tcout<<\"NO\"<<endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":685,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stdlib.h>   \r\nstruct node  \r\n{  \r\n    int cnt;  \r\n    struct node *next[80]; \r\n};  \r\nstruct node *root;\r\nstruct node* build()  \r\n{   \r\n    struct node *p=(node *)malloc(sizeof(node));  \r\n    p->cnt=0;   \r\n    for(int i=0;i<80;i++)  \r\n    {  \r\n        p->next[i]=NULL;\r\n    }  \r\n    return p;  \r\n}  \r\nint insert(char*s)  \r\n{  \r\n    struct node *p=root;  \r\n    int len=strlen(s);  \r\n    for(int i=0;i<len;i++)  \r\n    {  \r\n        if(p->next[s[i]-'+']!=NULL)  \r\n             p=p->next[s[i]-'+'];  \r\n        else  \r\n        {  \r\n            p->next[s[i]-'+']=build();  \r\n            p=p->next[s[i]-'+'];  \r\n        }  \r\n    }  \r\n    return p->cnt++;  \r\n}  \r\nint search(char *s)  \r\n{  \r\n    int len=strlen(s);  \r\n    struct node *p=root;  \r\n    for(int i=0;i<len;i++)  \r\n    {  \r\n        if(p->next[s[i]-'+']!=NULL)  \r\n           p=p->next[s[i]-'+'];  \r\n        else return 0;  \r\n    }  \r\n    return p->cnt;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,m,t,i;  \r\n    char s1[20],s2[20];  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        root=build();\r\n        scanf(\"%d%d\",&n,&m);  \r\n        getchar();  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            gets(s1);  \r\n            insert(s1);  \r\n        }  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n            gets(s2);  \r\n            printf(\"%d\\n\",search(s2));  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":686,
"code":"\n#include<stdio.h>  \r\nconst int MAX=10e10;  \r\nlong long  eular(long long n)  \r\n{  \r\n    long long  ret=1,i;  \r\n    for(i=2; i*i<=n; i++)  \r\n    {  \r\n        if(n%i==0)  \r\n\r\n        {  \r\n            n\/=i,ret*=i-1;  \r\n            while(n%i==0)  \r\n                n\/=i,ret*=i;  \r\n        }  \r\n    }  \r\n    if(n>1)  \r\n        ret*=n-1;  \r\n    return ret;  \r\n\r\n}  \r\n\r\nint main()  \r\n{  \r\n    int t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        long long  m;  \r\n        scanf(\"%lld\",&m);  \r\n        printf(\"%lld\\n\",eular(m));  \r\n    }  \r\n}"
},
{
"pid":687,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<cmath>\r\n#define N 1505\r\nusing namespace std;\r\nstruct node\r\n{\r\n int x,y;\r\n} digt[N];\r\nint xx[N];\r\nint yy[N];\r\nint lx,ly;\r\nint n,k;\r\nint getx(int x)\r\n{\r\n   return int(lower_bound(xx,xx+lx,x)-xx);\r\n}\r\nint gety(int y)\r\n{\r\n    return int(lower_bound(yy,yy+ly,y)-yy);\r\n}\r\nint dp[N][N];\r\nvoid init()\r\n{\r\n    memset(dp,0,sizeof(dp));\r\n    for(int i=0; i<n; i++)\r\n    {\r\n        int x1=getx(digt[i].x);\r\n        int y1=gety(digt[i].y);\r\n        dp[x1][y1]++;\r\n    }\r\n\r\n    for(int i=1; i<ly; i++)\r\n        dp[0][i]=dp[0][i-1]+dp[0][i];\r\n    for(int i=1; i<lx; i++)\r\n        dp[i][0]=dp[i-1][0]+dp[i][0];\r\n    for(int i=1; i<lx; i++)\r\n        for(int j=1; j<ly; j++)\r\n            dp[i][j]=dp[i-1][j]+dp[i][j-1]-dp[i-1][j-1]+dp[i][j];\r\n}\r\nint nextx[N],nexty[N];\r\nbool solve(int len)\r\n{\r\n    int t=0;\r\n    for(int i=0;i<lx;i++)\r\n    {\r\n        for(;t<lx;t++)\r\n            if(xx[i]+len<xx[t])break;\r\n\r\n        nextx[i]=t-1;\r\n    }\r\n    t=0;\r\n    for(int i=0;i<lx;i++)\r\n    {\r\n        for(;t<lx;t++)\r\n            if(yy[i]+len<yy[t])break;\r\n        nexty[i]=t-1;\r\n    }\r\n\r\n    int x1,y1;\r\n    for(int i=0;i<lx;i++)\r\n        for(int j=0;j<ly;j++)\r\n        {\r\n            x1=nextx[i];\r\n            y1=nexty[j];\r\n\r\n            int ll=0,rr=0,lr=0;\r\n            if(i>0)ll=dp[i-1][y1];\r\n            if(j>0)rr=dp[x1][j-1];\r\n            if(i>0&&j>0)\r\n                lr=dp[i-1][j-1];\r\n\r\n            if(dp[x1][y1]-ll-rr+lr>=k)return true;\r\n\r\n        }\r\n    return false;\r\n}\r\nint main()\r\n{\r\n    int test=1;\r\n    while(scanf(\"%d%d\",&n,&k)!=EOF)\r\n    {\r\n\r\n        for(int i=0; i<n; i++)\r\n        {\r\n            scanf(\"%d%d\",&digt[i].x,&digt[i].y);\r\n            xx[i]=digt[i].x;\r\n            yy[i]=digt[i].y;\r\n        }\r\n        sort(xx,xx+n);\r\n        sort(yy,yy+n);\r\n        lx=unique(xx,xx+n)-xx;\r\n        ly=unique(yy,yy+n)-yy;\r\n        init();\r\n        int l=0,r=2000005;\r\n        while(l<r)\r\n        {\r\n            int  mid=(l+r)>>1;\r\n            if(solve(mid))r=mid;\r\n            else l=mid+1;\r\n        }\r\n        printf(\"Case %d: %d\\n\",test++,l);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":688,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\ntypedef long long LL;  \r\nconst LL mod = 20090531;  \r\nLL x,y;  \r\nLL euler(LL p)\r\n{  \r\n    LL res = p;  \r\n    for(LL i = 2;i <= sqrt(p);i++)  \r\n    {  \r\n        if(p%i==0)  \r\n        {  \r\n            while(p%i==0) p\/=i;  \r\n            res = res\/i*(i-1);  \r\n        }  \r\n    }  \r\n    if(p > 1) res = res \/ p * (p-1);  \r\n    return res%mod;  \r\n}  \r\nLL fast_pow(LL a,LL b) \r\n{  \r\n    LL res = 1;  \r\n    while(b)  \r\n    {  \r\n        if(b&1) res = (res * a) % mod;  \r\n        a = (a * a) % mod;  \r\n        b >>= 1;  \r\n    }  \r\n    return res;  \r\n}  \r\nvoid edgcd(LL a,LL b) \r\n{  \r\n    if(b == 0)  \r\n    {x = 1;y = 0;return;}  \r\n    edgcd(b,a%b);  \r\n    LL temp = x;  \r\n    x = y;y = temp - a\/b*y;  \r\n}  \r\nvoid solve(LL m)  \r\n{  \r\n    LL res = 0;  \r\n    for(LL i = 1;i <= sqrt(m);i++)  \r\n    {  \r\n        if(m%i==0)  \r\n        {  \r\n            if(m\/i != i) res = (res + euler(i)*fast_pow(m,m\/i-1))%mod;  \r\n            res = (res + euler(m\/i)*fast_pow(m,i-1))%mod;  \r\n        }  \r\n    }  \r\n    if(m&1)  \r\n    {  \r\n        res = (fast_pow(m,(m+1)\/2) + res) % mod;  \r\n        edgcd(2,mod);  \r\n    }  \r\n    else  \r\n    {  \r\n        res = (fast_pow(m,m\/2+1) + fast_pow(m,m\/2) + 2 * res) % mod;  \r\n        edgcd(4,mod);  \r\n    }  \r\n    while(x < 0) x = (x + mod) % mod;  \r\n    printf(\"%lld\\n\",x * res % mod);  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    LL m;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        scanf(\"%lld\",&m);  \r\n        solve(m);  \r\n    }  \r\n}"
},
{
"pid":692,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\n#include<queue>  \r\nusing namespace std;  \r\nconst int N = 1010;  \r\nint step[N][N];  \r\nint que[N*N][2];  \r\nint head, tail;  \r\n\r\nvoid bfs(int n)  \r\n{  \r\n    int x, y, nx, ny;  \r\n    memset(step, 0, sizeof(step));  \r\n    step[0][1] = 0;  \r\n    que[0][0] = 0;  \r\n    que[0][1] = 1;  \r\n    head = 0;  \r\n    tail = 1;  \r\n    while(head < tail)  \r\n    {  \r\n        x = que[head][0];  \r\n        y = que[head++][1];  \r\n        if((x == n - 1 && y  == n - 2) || (x == n - 2 && y == n - 1))  \r\n            return ;  \r\n        int mmax = max(x, y);  \r\n        int mmin = min(x, y);  \r\n        x = mmin;  \r\n        y = mmax;  \r\n        if(x - 1 > 0) \r\n        {  \r\n            nx = x - 1;  \r\n            ny = y;  \r\n            if(!step[nx][ny])  \r\n            {  \r\n                step[nx][ny] = step[x][y] + 1;  \r\n                que[tail][0] = nx;  \r\n                que[tail++][1] = ny;  \r\n            }  \r\n        }  \r\n        if(x + 1 < n && x + 1 != y)  \r\n        {  \r\n            nx = x + 1;  \r\n            ny = y;  \r\n            if(!step[nx][ny])  \r\n            {  \r\n                step[nx][ny] = step[x][y] + 1;  \r\n                que[tail][0] = nx;  \r\n                que[tail++][1] = ny;  \r\n            }  \r\n        }  \r\n        if(y - 1 > 0 && y - 1 != x)   \r\n        {  \r\n            nx = x;  \r\n            ny = y - 1;  \r\n            if(!step[nx][ny])  \r\n            {  \r\n                step[nx][ny] = step[x][y] + 1;  \r\n                que[tail][0] = nx;  \r\n                que[tail++][1] = ny;  \r\n            }  \r\n        }  \r\n        if(y + 1 < n)  \r\n        {  \r\n            nx = x;  \r\n            ny = y + 1;  \r\n            if(!step[nx][ny])  \r\n            {  \r\n                step[nx][ny] = step[x][y] + 1;  \r\n                que[tail][0] = nx;  \r\n                que[tail++][1] = ny;  \r\n            }  \r\n        }  \r\n        if(y * 2 - x < n) \r\n        {  \r\n            nx = y;  \r\n            ny = y * 2 - x;  \r\n            if(!step[nx][ny])  \r\n            {  \r\n                step[nx][ny] = step[x][y] + 1;  \r\n                que[tail][0] = nx;  \r\n                que[tail++][1] = ny;  \r\n            }  \r\n        }  \r\n        if(x * 2 - y >= 0) \r\n        {  \r\n            nx = x * 2 - y;  \r\n            ny = x;  \r\n            if(!step[nx][ny])  \r\n            {  \r\n                step[nx][ny] = step[x][y] + 1;  \r\n                que[tail][0] = nx;  \r\n                que[tail++][1] = ny;  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int T, n;  \r\n    bfs(1005);  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        if(n == 2)  \r\n            printf(\"0\\n\");  \r\n        else  \r\n            printf(\"%d\\n\", step[n-2][n-1]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":693,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<queue>  \r\n#include<vector>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int  maxn = 5000;  \r\nconst int inf = 0x3f3f3f3f;  \r\nstruct Edge  \r\n{  \r\n    int from, to, cap, flow, cost;  \r\n    Edge(int u, int v, int c, int f, int s)  \r\n        : from(u), to(v), cap(c), flow(f), cost(s) {}  \r\n};  \r\nstruct MCMF  \r\n{  \r\n    int n, m, s, t;  \r\n    vector<int> G[maxn];  \r\n    vector<Edge> edges;  \r\n    bool inq[maxn];  \r\n    int d[maxn], p[maxn], a[maxn];  \r\n    void inin(int n)  \r\n    {  \r\n        this->n = n;  \r\n        for(int i = 0; i <= n; i++)  \r\n            G[i].clear();  \r\n        edges.clear();  \r\n    }  \r\n    void AddEdge(int from, int to, int cap, int cost)  \r\n    {  \r\n        edges.push_back(Edge(from, to, cap, 0, cost));  \r\n        edges.push_back(Edge(to, from, 0, 0, -cost));  \r\n        m = edges.size();  \r\n        G[from].push_back(m-2);  \r\n        G[to].push_back(m-1);  \r\n    }  \r\n    bool spfa(int& flow, int& cost)  \r\n    {  \r\n        memset(inq, false, sizeof(inq));  \r\n        memset(d, 0x3f, sizeof(d));  \r\n        d[s] = 0, p[s] = 0, a[s] = inf;  \r\n        queue<int> Q;  \r\n        Q.push(s);  \r\n        inq[s] = true;  \r\n        while(!Q.empty())  \r\n        {  \r\n            int x = Q.front();  \r\n            Q.pop();  \r\n            inq[x] = false;  \r\n            for(int i = 0; i < G[x].size(); i++)  \r\n            {  \r\n                Edge& e = edges[G[x][i]];  \r\n                if(e.cap>e.flow && d[e.to]>d[x]+e.cost)  \r\n                {  \r\n                    d[e.to] = d[x] + e.cost;  \r\n                    p[e.to] = G[x][i];  \r\n                    a[e.to] = min(a[x], e.cap-e.flow);  \r\n                    if(!inq[e.to])  \r\n                    {  \r\n                        Q.push(e.to);  \r\n                        inq[e.to] = true;  \r\n                    }  \r\n                }  \r\n            }  \r\n        }  \r\n        if(d[t] == inf)  \r\n            return false;  \r\n        flow += a[t];  \r\n        cost += d[t] * a[t];  \r\n        int u = t;  \r\n        while(u != s)  \r\n        {  \r\n            edges[p[u]].flow += a[t];  \r\n            edges[p[u]^1].flow -= a[t];  \r\n            u = edges[p[u]].from;  \r\n        }  \r\n        return true;  \r\n    }  \r\n    int min_cost(int s, int t)  \r\n    {  \r\n        this->s = s;  \r\n        this->t = t;  \r\n        int flow = 0, cost = 0;  \r\n        while(spfa(flow, cost));  \r\n        return cost;  \r\n    }  \r\n};  \r\nint main()  \r\n{  \r\n    MCMF solve;  \r\n    int T, m, n;  \r\n    scanf(\"%d\", &T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d\", &m, &n);  \r\n        int k = n\/m+1;  \r\n        int s = 0, t = 2*n+1;  \r\n        solve.inin(t);  \r\n        for(int i = 1; i <= n; i++)  \r\n            solve.AddEdge(s, i, 1, 0);  \r\n        for(int i =  1; i <= n; i++)  \r\n        {  \r\n            for(int j = 1; j <= n; j++)  \r\n            {  \r\n                int a;  \r\n                scanf(\"%d\", &a);  \r\n                if(j <= k) \r\n                solve.AddEdge(i, j+n, 1, a);  \r\n            }  \r\n            solve.AddEdge(i+n, t, m, 0);  \r\n        }  \r\n        printf(\"%d\\n\", solve.min_cost(s, t));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":695,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<string>  \r\n#include<iostream>  \r\nusing namespace std;  \r\nint num[10000];  \r\nstring a[10000];  \r\nint vis[10000];  \r\nint cmp(string a,string b)  \r\n{  \r\n    string c;  \r\n    for(int i=0; i<a.length(); i++)  \r\n    {  \r\n        if(a[i]=='('||a[i]==')')  \r\n        {  \r\n            if(c==b)  \r\n                return 1;  \r\n            c.clear();  \r\n        }  \r\n        else c+=a[i];  \r\n    }  \r\n    if(c==b)  \r\n        return 1;  \r\n    return 0;  \r\n}  \r\nint main()  \r\n{  \r\n    string b;  \r\n    string s;  \r\n    string ans;  \r\n    memset(num,0,sizeof(num));  \r\n    int t;  \r\n    scanf(\"%d\",&t);  \r\n    getchar();  \r\n    for(int i=1; i<=t; i++)  \r\n    {  \r\n        getline(cin,s);  \r\n        getline(cin,a[i]);  \r\n        getline(cin,ans);  \r\n        if(ans[0]=='T')  \r\n            num[i]=1;  \r\n        else if(ans[0]=='F')  \r\n            num[i]=2;  \r\n    }  \r\n    int z;  \r\n    scanf(\"%d\",&z);  \r\n    getchar();  \r\n    for(int i=1; i<=z; i++)  \r\n    {  \r\n        int res=0;  \r\n        for(int j=1; j<=t; j++)  \r\n        {  \r\n            getline(cin,b);  \r\n            string c,d;  \r\n            memset(vis,0,sizeof(vis));  \r\n            if(num[j]==1)  \r\n            {  \r\n                int p,q;  \r\n                p=q=0;  \r\n                int flag=0;  \r\n                while(!flag)  \r\n                {  \r\n                    for(; p<a[j].length(); p++)  \r\n                    {  \r\n                        if(a[j][p]=='|')  \r\n                            break;  \r\n                        c+=a[j][p];  \r\n                    }  \r\n                    p++;  \r\n                    for(; q<b.length(); q++)  \r\n                    {  \r\n                        if(b[q]=='|')  \r\n                            break;  \r\n                        d+=b[q];  \r\n                    }  \r\n                    q++;  \r\n                    if(cmp(c,d))  \r\n                        res++;  \r\n                    c.clear();  \r\n                    d.clear();  \r\n                    int e=a[j].length();  \r\n                    int f=b.length();  \r\n                    if(p>=a[j].length()&&q>=b.length())  \r\n                        flag=1;  \r\n                }  \r\n            }  \r\n            else if(num[j]==2)  \r\n            {  \r\n                int q;  \r\n                q=0;  \r\n                while(q<b.length())  \r\n                {  \r\n                    d.clear();  \r\n                    for(; q<b.length(); q++)  \r\n                    {  \r\n                        if(b[q]=='|')  \r\n                            break;  \r\n                        d+=b[q];  \r\n                    }  \r\n                    q++;  \r\n                    int p=0;  \r\n                    while(p<a[j].length())  \r\n                    {  \r\n                        c.clear();  \r\n                        for(; p<a[j].length(); p++)  \r\n                        {  \r\n                            if(a[j][p]=='|')  \r\n                                break;  \r\n                            c+=a[j][p];  \r\n                        }  \r\n                        p++;  \r\n                        if(vis[p])  \r\n                            continue;  \r\n                        if(cmp(c,d))  \r\n                            res++,vis[p]=1;  \r\n                    }  \r\n                    int aa=b.length();  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",res);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":696,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nchar a[105][35];\r\nint b[105];\r\nint main()\r\n{\r\n \tint s;\r\n \tscanf(\"%d\",&s);\r\n \twhile(s--)\r\n \t{\r\n  \t\tint n,i,j,sum=0;\r\n  \t\tscanf(\"%d\",&n);\r\n  \t\tscanf(\"%s %d\",a[0],&b[0]);\r\n  \t\tfor(i=1;i<n;i++)\r\n  \t\t{\r\n   \t\t\tscanf(\"%s %d\",a[i],&b[i]);\r\n   \t\t\tfor(j=0;j<i;j++)\r\n   \t\t\t{\r\n    \t\t\tif(strcmp(a[i],a[j])==0)\r\n    \t\t\t{\r\n     \t\t\t\tif(b[i]>b[j])\r\n\t\t\t\t    {\r\n      \t\t\t\t\tb[j]=b[i];\r\n      \t\t\t\t\tsum++;\r\n     \t\t\t\t}\r\n     \t\t\t\tbreak;\r\n    \t\t\t}\r\n   \t\t\t}\r\n  \t\t}\r\n   \t\tprintf(\"%d\\n\",sum);\r\n  \t}\r\n  \treturn 0;\r\n}"
},
{
"pid":697,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<vector>  \r\n#include<algorithm>  \r\n#define N 100005  \r\nusing namespace std;  \r\nvector<int> vec[N];  \r\nint vis[N],dp[N],MAX;  \r\nvoid dfs(int x)  \r\n{  \r\n    vis[x]=1;  \r\n    for(int i=0;i<vec[x].size();i++)  \r\n    {  \r\n        int y=vec[x][i];  \r\n        if(vis[y])  \r\n           continue;  \r\n        dfs(y);  \r\n        if(dp[y]>0)  \r\n           dp[x]+=dp[y];  \r\n        MAX=max(dp[x],MAX);  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int t,n,i,a,b;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        memset(vis,0,sizeof(vis));  \r\n        memset(vec,0,sizeof(vec));  \r\n        scanf(\"%d\",&n);  \r\n        MAX=-999999;  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%d\",&dp[i]);  \r\n            MAX=max(dp[i],MAX);  \r\n        }  \r\n        for(i=1;i<n;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            vec[a].push_back(b);  \r\n            vec[b].push_back(a);  \r\n        }  \r\n        dfs(1);  \r\n        printf(\"%d\\n\",MAX);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":698,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    int i;  \r\n    int a[15010];  \r\n    a[0]=0,a[1]=2,a[2]=3;  \r\n    for(i=3;i<15010;i++)  \r\n        a[i]=(a[i-1]+a[i-2])%10000;  \r\n    int n;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        int m;  \r\n        scanf(\"%d\",&m);  \r\n        printf(\"%d\\n\",a[m%15000]%10000);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":699,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    long long N,a,sum;  \r\n    scanf(\"%lld\",&N);  \r\n    while(N--)  \r\n    {  \r\n        scanf(\"%lld\",&a);  \r\n        printf(\"%lld\\n\",9*a*a\/2-7*a\/2+1);  \r\n    }  \r\n}"
},
{
"pid":702,
"code":"\n#include<iostream>\r\n#include<cstring>\r\n#include<algorithm>\r\n#include<cstdio>\r\n#include<string>\r\nusing namespace std;\r\n#define clr(arr,v) memset(arr,v,sizeof(arr))\r\nint cnt[30] ,father[30];\r\nbool flag[30], flag1[30];\r\nint   ans;\r\nstruct node \r\n{\r\n\tchar str[150];\r\n\tchar x,y;\r\n\tint len;\r\n\r\n}letter[20];\r\nint find(int x )\r\n{\r\n\treturn father[x]== -1 ? x : father[x]=find(father[x]);\r\n}\r\nvoid join(int x,int y)\r\n{\r\n\tint a=find(x);\r\n\tint b=find(y);\r\n\tif(a==b)\r\n\t\treturn ;\r\n\telse\r\n\t\tfather[a]=b;\r\n}\r\n void solve(int x,int n)\r\n{\r\n\t if(x==n)\r\n\t {\r\n\t\t int in=0, out=0, len=0;\r\n\t\t clr(flag1,false);\r\n\t\t clr(cnt,0);\r\n\t\t clr(father,-1);\r\n\t\tfor(int i=0; i<n; i++)\r\n\t\t{\r\n\t\t\tif(flag[i])\r\n\t\t\t{\r\n\t\t\t\tlen+=letter[i].len;\r\n\t\t\t\tint hx=letter[i].x-'A';\r\n\t\t\t\tint hy=letter[i].y-'A';\r\n\t\t\t\tcnt[hx]++;\r\n\t\t\t\tcnt[hy]--;\r\n\t\t\t\tflag1[hx]=true;\r\n\t\t\t\tflag1[hy]=true;\r\n\t\t\t\tjoin(hx,hy);\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=0; i<=26;i++)\r\n\t\t{\r\n\t\t\tif(cnt[i]>0) in+=cnt[i];\r\n\t\t\tif(cnt[i]<0) out+=cnt[i];\r\n\t\t}\r\n       int temp=0;\r\n\t   for(int i=0;i<=26;i++)\r\n\t   {\r\n\t\t   if(flag1[i]&&father[i]==-1)\r\n\t\t\t   temp++;\r\n\t   }\r\n\t   if(in<=1&&out<=1&&temp==1)\r\n\t\t   ans=max(ans,len);\r\n\t\t   return ;\r\n\t }\r\n\t flag[x]=true;\r\n\t solve(x+1,n);\r\n\t flag[x]=false;\r\n\t solve(x+1,n);\r\n}\r\nint main()\r\n{\r\n\tint T , n;\r\n\tcin>>T;\r\n\twhile(T--)\r\n\t{\r\n\t\tclr(letter,0);\r\n\t\tclr(flag,false);\r\n\t    ans=0;\r\n\t\tcin>>n;\r\n\t\tfor(int i=0; i<n;i++)\r\n\t\t{\r\n\t\t\tcin>>letter[i].str;\r\n\t\t\tletter[i].x=letter[i].str[0];\r\n\t\t\tletter[i].len=strlen(letter[i].str);\r\n\t\t\tletter[i].y=letter[i].str[letter[i].len-1];\r\n\t\t}\t\r\n\t\tsolve(0,n);\r\n\t\tcout<<ans<<endl;\r\n\t}\r\n\treturn 0; \r\n}"
},
{
"pid":703,
"code":"\n#include<stdio.h>\r\nint main(){\r\n    int T,x;\r\n    scanf(\"%d\",&T);\r\n    while(T--){\r\n        scanf(\"%d\",&x);\r\n        printf(\"%d\\n\",(x*x)\/4);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":706,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cmath>\r\n#include <string.h>\r\n#define PI acos(-1.0)\r\nusing namespace std;\r\ndouble ffabs(double x){return x>0?x:-x;}\r\nint main()\r\n{\r\n\tint T;\r\n\tdouble n, x1, x2, y1, y2, h, a, b, c, A, B, x0, xx,ans;\r\n\tscanf(\"%d\", &T);\r\n\twhile (T--)\r\n\t{\r\n\t    scanf(\"%lf%lf%lf%lf%lf%lf\", &x1, &y1, &x2, &y2, &n, &h);\r\n\t    if (y2>=y1) {printf(\"Impossible\\n\");continue;}\r\n\t    if (x1==x2) {printf(\"%.3lf\\n\", x1);continue;}\r\n\t    a=(y1-y2)\/(x1-x2);\r\n\t    b=y1-a*x1;\r\n\t    if (h<=0)\r\n\t    {\r\n\t        x0=-b\/a;\r\n\t        printf(\"%.3lf\\n\", x0);continue;\r\n\t    }\r\n\t    x0=((h-b)\/a);\r\n\t    a=fabs(a);\r\n\t    A=sin(atan(1\/a));\r\n\t    B=tan(asin(A\/n));\r\n\t    xx=fabs(B*h);\r\n\t    if (x1>x2)\r\n            ans=x0-xx;\r\n        else\r\n            ans=x0+xx;\r\n\t    printf(\"%.3lf\\n\", ans);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":707,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\n#include<math.h>\r\nusing namespace std;\r\nstruct AC\r\n{\r\n    char id[25];\r\n    int num;\r\n    int time;\r\n}ac[110];\r\nbool cmp(AC a,AC b)\r\n{\r\n    return a.num!=b.num?a.num>b.num:a.time!=b.time?a.time<b.time:strcmp(a.id,b.id)<0;\r\n}\r\nint main()\r\n{\r\n    int t,n,i;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n            scanf(\"%s%d%d\",ac[i].id,&ac[i].num,&ac[i].time);\r\n        sort(ac,ac+n,cmp);\r\n        printf(\"%s\\n\",ac[0].id);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":708,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<math.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint dp[10005]={0,1,2,3,4,5,0,0,0};  \r\nint main()  \r\n{  \r\n    int n,i,j;  \r\n    for(i=6;i<10005;i++)  \r\n    {  \r\n        dp[i]=dp[i-1]+1;  \r\n        for(j=2;j*j<=i;j++)  \r\n        {  \r\n            if(i%j==0)  \r\n            {  \r\n                dp[i]=min(dp[i],dp[j]+dp[i\/j]);  \r\n            }  \r\n        }  \r\n    }  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        printf(\"%d\\n\",dp[n]);  \r\n    }  \r\n}"
},
{
"pid":709,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int n,m,t,i,w,j;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%d %d\",&t,&m);\r\n        w=0;\r\n        int*a=new int[m-t+2];\r\n        int*p=new int[m+1];\r\n        a[0]=0;\r\n        a[1]=0;\r\n        for(i=1;i<=m;i++)\r\n        {\r\n            scanf(\"%d\",&p[i]);\r\n        }\r\n        for(i=1;i<=m-t+1;i++)\r\n        {\r\n            for(j=0;j<t;j++)\r\n            {\r\n                a[i]+=p[i+j];\r\n            }\r\n        }\r\n        for(i=1;i<=m-t+1;i++)\r\n        {\r\n            if(a[i]>a[w])\r\n            {\r\n                w=i;\r\n            }\r\n        }\r\n        printf(\"%d\\n\",w);\r\n    }\r\n}"
},
{
"pid":710,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#include<math.h>\r\nstruct node\r\n{\r\n\tdouble left;\r\n\tdouble right;\r\n}num[105];\r\nint cmp(const void *a,const void *b)\r\n{\r\n\treturn (((struct node *)a)->left>(((struct node *)b)->left)?1:-1);\r\n}\r\nint main()\r\n{\r\n\tint T,x,y,i,j,count,n,R;\r\n\tdouble len,max;\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--)\r\n\t{\r\n\t\tscanf(\"%d%d\",&n,&R);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tscanf(\"%d%d\",&x,&y);\r\n\t\t\tlen=sqrt(R*R-y*y);\r\n\t\t\tnum[i].left=x-len;\r\n\t\t\tnum[i].right=x+len;\r\n\t\t}\r\n\t\tqsort(num,n,sizeof(num[0]),cmp);\r\n\t\tmax=num[0].right;\r\n\t\tcount=1;\r\n\t\tfor(i=1;i<n;i++)\r\n\t\t{\r\n\t\t\tif(num[i].left>max)\r\n\t\t\t{\r\n\t\t\t\tmax=num[i].right;\r\n\t\t\t\tcount++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t\tif(num[i].right<max)\r\n\t\t\t\tmax=num[i].right;\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",count);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":711,
"code":"\n#include<stdio.h>  \r\n#include<algorithm>  \r\n#define INF 0x3fffffff  \r\nusing namespace std;  \r\n\r\nconst int N = 5005;  \r\nstruct edge  \r\n{  \r\n    int x;  \r\n    int y;  \r\n    int v;  \r\n}e[N];  \r\nint father[N];  \r\n\r\nvoid Init(int n)  \r\n{  \r\n    for(int i = 1; i <= n; i++)  \r\n        father[i] = i;  \r\n}  \r\n\r\nbool comp(edge e1, edge e2)  \r\n{  \r\n    return e1.v > e2.v;  \r\n}  \r\n\r\nint Find(int x)  \r\n{  \r\n    if(x != father[x])  \r\n        father[x] = Find(father[x]);  \r\n    return father[x];  \r\n}  \r\n\r\nvoid Union(int a, int b)  \r\n{  \r\n    int p = Find(a);  \r\n    int q = Find(b);  \r\n    if(p > q)  \r\n        father[p] = q;  \r\n    else  \r\n        father[q] = p;  \r\n}  \r\n\r\nint gcd(int a, int b)  \r\n{  \r\n    while(b != 0)  \r\n    {  \r\n        int r = a % b;  \r\n        a = b;  \r\n        b = r;  \r\n    }  \r\n    return a;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int T, n, m, i, j, s, t, aa, bb;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        for(i = 0; i < m; i++)  \r\n            scanf(\"%d%d%d\",&e[i].x, &e[i].y, &e[i].v);  \r\n        scanf(\"%d%d\",&s,&t);  \r\n        sort(e, e+m, comp);  \r\n        double rate = INF*1.0;  \r\n        for(i = 0; i < m; i++)  \r\n        {  \r\n            Init(n);  \r\n            for(j = i; j < m; j++) \r\n            {  \r\n                if(Find(e[j].x) != Find(e[j].y))  \r\n                    Union(e[j].x, e[j].y);  \r\n                if(Find(s) == Find(t))  \r\n                    break;  \r\n            }  \r\n            if(j == m) break;  \r\n            int v1 = e[i].v, v2 = e[j].v;  \r\n            if(v1*1.0 \/ v2 < rate) \r\n            {  \r\n                aa = v1, bb = v2; \r\n                rate = v1*1.0 \/ v2;  \r\n            }  \r\n        }  \r\n        if(rate == INF)  \r\n            printf(\"IMPOSSIBLE\\n\");  \r\n        else if(aa % bb == 0)  \r\n            printf(\"%d\\n\",aa\/bb);  \r\n        else  \r\n            printf(\"%d\/%d\\n\",aa\/gcd(aa,bb), bb\/gcd(aa,bb));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":712,
"code":"\n#include <cstdio>\r\n#include <iostream>\r\n#include <cstring>\r\n\r\nusing namespace std;\r\n\r\nint max(int a, int b)\r\n{\r\n    return a > b ? a : b;\r\n}\r\n\r\nint main()\r\n{\r\n    int T, m, n;\r\n    int dp[105][55][55], map[55][55];\r\n\r\n    scanf(\"%d\", &T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d%d\", &m, &n);\r\n        for(int i = 1; i <= m; ++i)\r\n            for(int j = 1; j <= n; ++j)\r\n                scanf(\"%d\", &map[i][j]);\r\n        memset(dp, 0, sizeof(dp));\r\n\r\n        int step = m+n-2;\r\n        for(int i = 1; i < step; ++i)\r\n        {\r\n            int t = i+2 > m ? m : i+2;\r\n            for(int j = 1; j <= t; ++j)\r\n            {\r\n                for(int k = j+1; k <= t; ++k)\r\n                    dp[i][j][k] = max(dp[i-1][j-1][k-1], max(dp[i-1][j][k], max(dp[i-1][j-1][k], dp[i-1][j][k-1])))+map[j][i+2-j]+map[k][i+2-k];\r\n            }\r\n        }\r\n        dp[step][m][m] = max(dp[step-1][m-1][m], dp[step-1][m][m-1])+map[1][1]+map[m][n];\r\n        printf(\"%d\\n\", dp[step][m][m]);\r\n    }\r\n}"
},
{
"pid":714,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nint a[15];  \r\n\r\nvoid move(int bot, int top, int n){  \r\n    while(n--){  \r\n        int t = a[top], tt;  \r\n        for(int i = bot; i <= top; ++i){  \r\n            tt = a[i];  \r\n            a[i] = t;  \r\n            t = tt;  \r\n        }  \r\n    }  \r\n}  \r\n\r\nint main(){  \r\n    int t, n, bot, top;  \r\n    scanf(\"%d\", &t);  \r\n    while(t--){  \r\n        scanf(\"%d\", &n);  \r\n        for(int i = 1; i <= n; ++i) a[i] = i;  \r\n        top = bot = n;  \r\n        for(int i = n; i >= 1; --i){  \r\n            move(bot, top, i % (top - bot + 1));  \r\n            --bot;  \r\n        }  \r\n        for(int i = 1; i <= n; ++i)  \r\n            printf(\"%d \", a[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":715,
"code":"\n#include <iostream>  \r\n#include <cstring>  \r\nusing namespace std;  \r\nint n,m;  \r\nlong long int f[111][111][2];  \r\nvoid init()  \r\n{  \r\n    memset(f,0,sizeof(f));  \r\n    int i,j;  \r\n    for(i=1;i<=100;i++)  \r\n        f[i][i+1][1]=1;  \r\n    f[0][1][0]=1;  \r\n    f[0][1][1]=1;  \r\n    for(i=2;i<=100;i++)  \r\n    {  \r\n        f[0][i][0]=f[0][i-1][0]+f[0][i-1][1];  \r\n        f[0][i][1]=f[0][i-1][0];  \r\n    }  \r\n    for(i=1;i<=100;i++)  \r\n        for(j=i+2;j<=100;j++)  \r\n        {  \r\n            f[i][j][0]=f[i][j-1][1]+f[i][j-1][0];  \r\n            f[i][j][1]=f[i][j-1][0]+f[i-1][j-1][1];  \r\n        }  \r\n}  \r\nint main()  \r\n{  \r\n    init();  \r\n    int T;  \r\n    cin>>T;  \r\n    while(T--)  \r\n    {  \r\n        while(cin>>n>>m)  \r\n            cout<<f[m][n][0]+f[m][n][1]<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":716,
"code":"\n#include<stdio.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint dp[1005], time[1005];  \r\nint main()  \r\n{  \r\n    int T, n, m, i, j;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        int a;  \r\n        scanf(\"%d%d\",&n, &m);  \r\n        time[0] = 0;  \r\n        for(i = 1; i <= n; i++)  \r\n        {  \r\n            scanf(\"%d\",&a);  \r\n            time[i] = time[i-1] + a;  \r\n        }  \r\n        for(i = 1; i <= n; i++)  \r\n        {  \r\n            dp[i] = time[i] + m;  \r\n            for(j = 1; j < i; j++)  \r\n                dp[i] = min(dp[i], dp[i-j] + dp[j] + m);  \r\n        }  \r\n        printf(\"%d\\n\",dp[n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":718,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <queue>  \r\n#include <stack>  \r\n#include <algorithm>  \r\n#include <cmath>  \r\n#include <map>  \r\n#define LL long long  \r\n#define DB double  \r\n\r\nusing namespace std;  \r\nconst DB EPS = 1e-8;  \r\nconst DB PI = acos(-1.0);  \r\nstruct cpoint{  \r\n    DB x,y,R;  \r\n    void get(){scanf(\"%lf%lf\",&x,&y);}  \r\n    void out(){cout<<x<<\" \"<<y<<endl;}  \r\n};  \r\nstruct cvector{  \r\n    DB x,y;  \r\n    cvector(DB a=0,DB b=0){x=a;y=b;}  \r\n};  \r\nstruct csegment{  \r\n    cpoint st,en;  \r\n    csegment(cpoint a,cpoint b){st=a;en=b;}  \r\n    csegment(){}  \r\n};  \r\ncvector operator-(cpoint a,cpoint b)  \r\n{  \r\n    return cvector(a.x-b.x,a.y-b.y);  \r\n}  \r\ncpoint operator+(cpoint a,cvector b)  \r\n{  \r\n    a.x+=b.x;a.y+=b.y;  \r\n    return a;  \r\n}  \r\nDB dot(cvector a,cvector b)  \r\n{  \r\n    return a.x*b.x+a.y*b.y;  \r\n}  \r\nDB length(cvector a)  \r\n{  \r\n    return sqrt(a.x*a.x+a.y*a.y);  \r\n}  \r\nDB alph;  \r\ncpoint O,M,P,A,B;  \r\nvoid in()  \r\n{  \r\n    O.get();M.get();  \r\n    scanf(\"%lf%lf\",&alph,&O.R);  \r\n    P.get();scanf(\"%lf\",&P.R);  \r\n}  \r\nDB get_angl(cpoint a,cpoint b,cpoint p)  \r\n{  \r\n    return acos(dot(a-p,b-p)\/(length(a-p)*length(b-p)));  \r\n}  \r\ncpoint p2seg(cpoint p,csegment s){  \r\n    cpoint ret=s.st;  \r\n    double len = length(s.en-s.st);  \r\n    double t1=dot((p-s.st),(s.en-s.st))\/len;\r\n     if(t1>-EPS&&t1<len+EPS){ \r\n        cvector v = s.en-s.st;  \r\n        ret.x+=v.x*t1\/len;ret.y+=v.y*t1\/len;  \r\n        return ret;  \r\n    }  \r\n    if(t1<0) return s.st;  \r\n    else return s.en;  \r\n}  \r\nDB dist(cpoint a,cpoint b)  \r\n{  \r\n    return length(a-b);  \r\n}  \r\ncvector rotation(cvector a,double alpha){  \r\n    cvector p;  \r\n    p.x = a.x*cos(alpha)-a.y*sin(alpha);  \r\n    p.y = a.y*cos(alpha)+a.x*sin(alpha);  \r\n    return p;  \r\n}  \r\ncvector unit(cvector t)  \r\n{  \r\n    DB l = length(t);  \r\n    t.x\/=l;t.y\/=l;  \r\n    return t;  \r\n}  \r\nvoid get_AB(DB ag)  \r\n{  \r\n    cvector tmp = unit(M-O);  \r\n    tmp.x*=O.R;tmp.y*=O.R;  \r\n    A = O+rotation(tmp,ag);  \r\n    B = O+rotation(tmp,-ag);  \r\n}  \r\nvoid solve()  \r\n{  \r\n    DB angl = get_angl(M,P,O);  \r\n    DB ag = alph*PI\/180\/2;  \r\n    get_AB(ag);  \r\n    if(angl>ag)  \r\n    {  \r\n        cpoint tmp1 = p2seg(P,csegment(O,B));  \r\n        cpoint tmp2 = p2seg(P,csegment(O,A));  \r\n        DB d = min(dist(tmp1,P),dist(tmp2,P));  \r\n        if(d<P.R+EPS)  \r\n        {  \r\n            printf(\"1\\n\");  \r\n        }else  \r\n        {  \r\n            printf(\"0\\n\");  \r\n        }  \r\n    }else  \r\n    {  \r\n        DB d = dist(O,P);  \r\n        if(d<O.R+P.R+EPS)  \r\n        {  \r\n            printf(\"1\\n\");  \r\n        }else  \r\n        {  \r\n            printf(\"0\\n\");  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int cas;scanf(\"%d\",&cas);  \r\n    while(cas--)  \r\n    {  \r\n        in();  \r\n        solve();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":720,
"code":"\n#include <stdio.h>  \r\n#include <algorithm>  \r\n\r\nusing namespace std;  \r\n\r\nconst int N = 5e3 + 5;  \r\n\r\nstruct Int{  \r\n    int a,b,w;  \r\n    bool operator < (const Int& S) const{  \r\n        return b < S.b || b == S.b && a < S.a;  \r\n    }  \r\n}A[N];  \r\n\r\nint find(int j)  \r\n{  \r\n    int l = 1 , r = j;  \r\n    while(l < r)  \r\n    {  \r\n        int mid = (l + r) \/ 2;  \r\n        if(A[mid].b <= A[j].a)  \r\n            l = mid + 1;  \r\n        else  \r\n            r = mid;  \r\n    }  \r\n    return r - 1;  \r\n}  \r\n\r\nint dp[N];  \r\n\r\nint main()  \r\n{  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        for(int i=1;i<=n;i++)  \r\n            scanf(\"%d%d%d\",&A[i].a,&A[i].b,&A[i].w);  \r\n        sort(A+1,A+1+n);  \r\n        dp[0] = 0;  \r\n        for(int i=1;i<=n;i++){  \r\n            dp[i] = max(dp[i-1],dp[find(i)]+A[i].w);  \r\n        }  \r\n        printf(\"%d\\n\",dp[n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":721,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int n,t,m,len1,len2;  \r\n    char s1[5],s2[5],ch;  \r\n    scanf(\"%d\",&t);  \r\n    getchar();  \r\n    while(t--)  \r\n    {  \r\n       scanf(\"%c\",&ch);  \r\n       getchar();  \r\n       scanf(\"%s %s\",s1,s2);  \r\n       len1=strlen(s1);  \r\n       len2=strlen(s2);  \r\n       if(len1==3) m=10;  \r\n       else if(len1==2)  \r\n       {  \r\n           if(s1[0]>='2'&&s1[0]<='9')  \r\n              m=s1[0]-'0';  \r\n           else if(s1[0]=='A')  m=1;  \r\n           else if(s1[0]=='J')  m=11;  \r\n           else if(s1[0]=='Q')  m=12;  \r\n           else if(s1[0]=='K')  m=13;  \r\n       }  \r\n       if(len2==3) n=10;  \r\n       else if(len2==2)  \r\n       {  \r\n           if(s2[0]>='2'&&s2[0]<='9')  \r\n              n=s2[0]-'0';  \r\n           else if(s2[0]=='A')  n=1;  \r\n           else if(s2[0]=='J')  n=11;  \r\n           else if(s2[0]=='Q')  n=12;  \r\n           else if(s2[0]=='K')  n=13;  \r\n       }  \r\n       int flag=1;  \r\n       if(len1==3&&len2==3)  \r\n       {  \r\n           if(s1[2]==ch&&s2[2]==ch)  \r\n           {  \r\n              if(m<=n) flag=0;  \r\n           }  \r\n           else if(s1[2]!=ch&&s2[2]==ch)  \r\n              flag=0;  \r\n           else if(s1[2]!=ch&&s2[2]!=ch)  \r\n           {  \r\n               if(m<=n)  flag=0;  \r\n           }  \r\n       }  \r\n       else if(len1==3&&len2==2)  \r\n       {  \r\n           if(s1[2]==ch&&s2[1]==ch)  \r\n           {  \r\n               if(m<=n) flag=0;  \r\n           }  \r\n           else if(s1[2]!=ch&&s2[1]==ch)  \r\n             flag=0;  \r\n           else if(s1[2]!=ch&&s2[1]!=ch)  \r\n           {  \r\n              if(m<=n)  flag=0;  \r\n           }  \r\n       }  \r\n       else if(len1==2&&len2==3)  \r\n       {  \r\n           if(s1[1]==ch&&s2[2]==ch)  \r\n           {  \r\n               if(m<=n) flag=0;  \r\n           }  \r\n           else if(s1[1]!=ch&&s2[2]==ch)  \r\n             flag=0;  \r\n           else if(s1[1]!=ch&&s2[2]!=ch)  \r\n           {  \r\n               if(m<=n) flag=0;  \r\n           }  \r\n       }  \r\n       else if(len1==2&&len2==2)  \r\n       {  \r\n           if(s1[1]==ch&&s2[1]==ch)  \r\n           {  \r\n               if(m<=n)  flag=0;  \r\n           }  \r\n           else if(s1[1]!=ch&&s2[1]==ch)  \r\n             flag=0;  \r\n           else if(s1[1]!=ch&&s2[1]!=ch)  \r\n           {  \r\n               if(m<=n) flag=0;  \r\n           }  \r\n       }  \r\n       if(flag)  printf(\"YES\\n\");  \r\n       else  printf(\"NO\\n\");  \r\n       getchar();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":722,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nint arr[10][10], count;  \r\nbool visrow[10][10], viscol[10][10], vissqu[10][10], ok;  \r\nstruct Node{  \r\n    int x, y;  \r\n} tar[82];  \r\n\r\nint getsqunum(int i, int j){      \r\n    return i \/ 3 * 3 + j \/ 3; \r\n}  \r\n\r\nvoid print(){  \r\n    for(int i = 0; i < 9; ++i)  \r\n        for(int j = 0; j < 9; ++j)  \r\n            if(j != 8) printf(\"%d \", arr[i][j]);  \r\n            else printf(\"%d\\n\", arr[i][j]);   \r\n}  \r\n\r\nbool check(int i, int j, int k){  \r\n    int t = getsqunum(i, j);  \r\n    if(visrow[i][k] || viscol[j][k] || vissqu[t][k]) return 0;  \r\n    return 1;  \r\n}  \r\n\r\nvoid DFS(int k){  \r\n    if(k == count){ ok = 1; print(); return; }  \r\n    int t = getsqunum(tar[k].x, tar[k].y);  \r\n    for(int i = 1; i < 10; ++i){  \r\n        if(check(tar[k].x, tar[k].y, i)){  \r\n            visrow[tar[k].x][i] = 1;  \r\n            viscol[tar[k].y][i] = 1;  \r\n            vissqu[t][i] = 1;  \r\n            arr[tar[k].x][tar[k].y] = i;  \r\n\r\n            DFS(k + 1);  \r\n            if(ok) return;  \r\n\r\n            arr[tar[k].x][tar[k].y] = 0;  \r\n            visrow[tar[k].x][i] = 0;  \r\n            viscol[tar[k].y][i] = 0;  \r\n            vissqu[t][i] = 0;  \r\n        }  \r\n    }  \r\n}  \r\n\r\nint main(){  \r\n    int n; scanf(\"%d\", &n);  \r\n    while(n--){  \r\n        memset(viscol, 0, sizeof(viscol));  \r\n        memset(visrow, 0, sizeof(visrow));  \r\n        memset(vissqu, 0, sizeof(vissqu));  \r\n        count = 0;  \r\n        for(int i = 0; i < 9; ++i)  \r\n            for(int j = 0; j < 9; ++j){  \r\n                scanf(\"%d\", &arr[i][j]);  \r\n                if(arr[i][j]){  \r\n                    visrow[i][arr[i][j]] = 1;  \r\n                    viscol[j][arr[i][j]] = 1;  \r\n                    vissqu[getsqunum(i, j)][arr[i][j]] = 1;  \r\n                }else{  \r\n                    tar[count].x = i;  \r\n                    tar[count++].y = j;  \r\n                }  \r\n            }  \r\n        ok = 0; DFS(0);   \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":723,
"code":"\n#include <iostream>\r\nusing namespace std;\r\ntypedef long long lld;\r\nstruct matrix{\r\n\tlld x11;\r\n\tlld x12;\r\n\tlld x21;\r\n\tlld x22;\r\n};\r\nlld a,b,n,m;\r\nmatrix Pow(matrix& src, lld k);\r\nmatrix Mul(matrix& lhs, matrix& rhs);\r\nbool Handle();\r\nint main(){\r\n\twhile(Handle()){\r\n\t}\r\n}\r\n\r\nbool Handle(){\r\n\tif(!(cin>>a>>b>>n>>m)){\r\n\t\treturn false;\r\n\t}\t\r\n\tmatrix base= {2*a,1,b-a*a,0};\r\n\tbase.x11%= m;\r\n\tbase.x12%= m;\r\n\tbase.x21%= m;\r\n\tbase.x22%= m;\r\n\tmatrix exp= Pow(base,n);\r\n\tlld S0= 2,S1= 2*a;\r\n\tcout<<((S1*exp.x12+S0*exp.x22)%m+m)%m<<endl;\r\n\treturn true;\r\n}\r\n\r\nmatrix Pow(matrix& src, lld k){\r\n\tif(k == 1){\r\n\t\treturn src;\r\n\t}\t\r\n\tmatrix base= Pow(src,k>>1);\r\n\tmatrix exp= Mul(base,base);\r\n\tif(k&1){\r\n\t\treturn Mul(exp,src);\r\n\t}else{\r\n\t\treturn exp;\r\n\t}\r\n}\r\nmatrix Mul(matrix& lhs, matrix& rhs){\r\n\tmatrix result= {lhs.x11*rhs.x11+lhs.x12*rhs.x21,\r\n\tlhs.x11*rhs.x12+lhs.x12*rhs.x22,\r\n\tlhs.x21*rhs.x11+lhs.x22*rhs.x21,\r\n\tlhs.x21*rhs.x12+lhs.x22*rhs.x22};\r\n\tresult.x11%=m;\r\n\tresult.x12%=m;\r\n\tresult.x21%=m;\r\n\tresult.x22%=m;\r\n\treturn result;\r\n}"
},
{
"pid":728,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <queue>\r\n#include <cstring>\r\nusing namespace std;\r\n\r\nconst int maxn=110;\r\nconst int oo=0x3fffffff;\r\nint S[maxn], C[maxn];\r\nint mp[maxn], visit[maxn][3*maxn];\r\nint map[maxn][maxn], cap[maxn][maxn], dis[maxn][3*maxn];\r\nint n, m, V, T, st, sd, ss, dd;\r\n\r\nstruct node\r\n{\r\n    int u, t;\r\n};\r\n\r\nvoid floyd()\r\n{\r\n    ss=n, dd=n+1, S[dd]=0;\r\n    for(int k=0; k<n; k++)\r\n        for(int i=0; i<n; i++)\r\n            for(int j=0; j<n; j++)\r\n                if(map[i][j]>map[i][k]+map[k][j]) map[i][j]=map[i][k]+map[k][j];\r\n\r\n    for(int i=0; i<n; i++)\r\n        for(int j=i+1; j<n; j++)\r\n        {\r\n            if(map[i][j]!=oo)\r\n            {\r\n                if(S[i]<S[j]) cap[i][j]=map[i][j]+C[j];\r\n                if(S[j]<S[i]) cap[j][i]=map[i][j]+C[i];\r\n            }\r\n        }\r\n    cap[ss][st]=C[st];\r\n    for(int i=0; i<n; i++)\r\n        if(i!=st&&map[st][i]!=oo) cap[ss][i]=map[st][i]+C[i];\r\n    for(int i=0; i<n; i++)\r\n        if(i!=sd&&map[i][sd]!=oo) cap[i][dd]=map[i][sd];\r\n\r\n}\r\n\r\nint spfa()\r\n{\r\n    queue<node>q;\r\n    for(int i=0; i<=n+1; i++)\r\n        for(int j=0; j<=V; j++) dis[i][j]=-oo, visit[i][j]=0;\r\n    node s, p;\r\n    s.u=ss, s.t=0;\r\n    q.push(s);\r\n    dis[ss][0]=0;\r\n    visit[ss][0]=1;\r\n    while(!q.empty())\r\n    {\r\n        p=q.front();\r\n        q.pop();\r\n        visit[p.u][p.t]=0;\r\n        for(int i=0; i<=n+1; i++)\r\n        {\r\n            if(p.u!=i&&cap[p.u][i]!=oo)\r\n            {\r\n                int tp=p.t+cap[p.u][i];\r\n                if(tp<=V&&dis[i][tp]<dis[p.u][p.t]+S[i])\r\n                {\r\n                    dis[i][tp]=dis[p.u][p.t]+S[i];\r\n                    s.u=i, s.t=tp;\r\n                    if(!visit[s.u][s.t]) visit[s.u][s.t]=1,q.push(s);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    int maxx=0;\r\n    for(int i=0; i<=V; i++)\r\n    {\r\n        maxx=max(maxx,dis[sd][i]);\r\n        maxx=max(maxx,dis[dd][i]);\r\n    }\r\n    return maxx;\r\n}\r\n\r\nint main()\r\n{\r\n    cin >> T;\r\n    for(int tcase=1; tcase<=T; tcase++)\r\n    {\r\n        scanf(\"%d%d%d%d%d\",&n,&m,&V,&st,&sd);\r\n        for(int i=0; i<=n+1; i++)\r\n            for(int j=0; j<=n+1; j++)\r\n            {\r\n                  map[i][j]=oo, cap[i][j]=oo;\r\n                  if(i==j) map[i][j]=cap[i][j]=0;\r\n            }\r\n        for(int i=0; i<n; i++) scanf(\"%d\",C+i);\r\n        for(int i=0; i<n; i++) scanf(\"%d\",S+i);\r\n        while(m--)\r\n        {\r\n            int u, v, val;\r\n            scanf(\"%d%d%d\",&u,&v,&val);\r\n            map[u][v]=min(map[u][v],val);\r\n            map[v][u]=min(map[v][u],val);\r\n        }\r\n        floyd();\r\n        int ans=spfa();\r\n        printf(\"Case #%d:\\n%d\\n\",tcase,ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":729,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <queue>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int N,M;\r\n\r\n    while(scanf(\"%d%d\",&M,&N)!=EOF)\r\n    {\r\n        printf(\"%d\\n\",(M+(M-(N-1)\/2)+1)*(N-1)\/4+(M+(M-(N+1)\/2)+1)*(N+1)\/4);\r\n    }\r\n\r\n    return 0;\r\n}"
},
{
"pid":732,
"code":"\n#include <iostream>\r\n#include <cassert>\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <vector>\r\n#include <map>\r\nusing namespace std;\r\n#define inf 9e99\r\n#define eps 1e-9\r\n#define x first\r\n#define y second\r\n#define pb push_back\r\n#define sz(a) int(a.size())\r\n#define rep(i,a,b) for(int i=a;i<=b;i++)\r\ntemplate<class T> inline void gmin(T&a,T b) {if(a>b)a=b;}\r\ntemplate<class T> inline T sqr(T a) {return a*a;}\r\n\r\n#define N 20020\r\nvector<int> to[N],len[N];\r\nint col[N],n;\r\ndouble sum[N],L;\r\n#define is_leaf(x) sz(to[x])==1 && sum[to[x][0]]<sum[x]\r\n\r\nvoid pre_dfs(int x) {\r\n\trep(i,0,sz(to[x])-1) {\r\n\t\tint y=to[x][i];\r\n\t\tif (sum[y]<0) {\r\n\t\t\tcol[y]=x==1?y:col[x];\r\n\t\t\tsum[y]=sum[x]+len[x][i];\r\n\t\t\tpre_dfs(y);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nvector<int> path,tmp[N];\r\ndouble dp1[N],ans1[N];\r\ndouble dp2[N],ans2[N];\r\n\r\ndouble Y1(int j) {return dp1[j]+sqrt(dp1[j])+sqr(sum[j])+2.0*sum[j]*L;}\r\ndouble Y2(int j) {return dp2[j]+sqrt(dp2[j])+sqr(sum[j])-2.0*sum[j]*L;}\r\ndouble slope1(int j,int k) {return (Y1(j)-Y1(k))\/(sum[j]-sum[k]);}\r\ndouble slope2(int j,int k) {return (Y2(j)-Y2(k))\/(sum[j]-sum[k]);}\r\ndouble calc(double Ej,double sum) {return Ej+sqrt(Ej)+sum*sum;}\r\n\r\nstruct Queue {\r\n\tmap<double,int> q;\r\n\tvoid clear() {q.clear();}\r\n\tint size() {return q.size();}\r\n\tint front() {return sz(q)?q.begin()->y:0;}\r\n\tint front2() {return sz(q)?(++q.begin())->y:0;}\r\n\tint back() {return sz(q)?q.rbegin()->y:0;}\r\n\tint back2() {return sz(q)?(++q.rbegin())->y:0;}\r\n\tvoid pop_front() {q.erase(q.begin());}\r\n\tvoid pop_back() {q.erase(--q.end());}\r\n\tvoid insert(int x,int y) {q[x]=y;}\r\n\r\n\tvoid merge(Queue *b) {\r\n\t\twhile (b->size()) {\r\n\t\t\tint cur=b->front();\r\n\t\t\tb->pop_front();\r\n\t\t\tif (q.find(sum[cur])!=q.end()) {\r\n\t\t\t\tint j=cur,k=q[sum[cur]];\r\n\t\t\t\tif (Y2(j)>=Y2(k)) continue;\r\n\t\t\t}\r\n\t\t\tq[sum[cur]]=cur;\r\n\t\t\tif (sz(q)<=2) continue;\r\n\r\n\t\t\tmap<double,int>::iterator i=q.find(sum[cur]),l1,l2,r1,r2;\r\n\t\t\tif (i!=q.begin() && i!=(--q.end())) {\r\n\t\t\t\tl1=i, l1--;\r\n\t\t\t\tr1=i, r1++;\r\n\t\t\t\tif (slope2(l1->y,i->y)>=slope2(i->y,r1->y)) {\r\n\t\t\t\t\tq.erase(i);\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twhile (i!=q.begin() && i!=(++q.begin())) {\r\n\t\t\t\tl1=i, l1--;\r\n\t\t\t\tl2=l1, l2--;\r\n\t\t\t\tif (slope2(l2->y,l1->y)<=slope2(l1->y,i->y)) break;\r\n\t\t\t\tq.erase(l1);\r\n\t\t\t}\r\n\t\t\twhile (i!=(--q.end()) && i!=(--(--q.end()))) {\r\n\t\t\t\tr1=i, r1++;\r\n\t\t\t\tr2=r1, r2++;\r\n\t\t\t\tif (slope2(i->y,r1->y)<=slope2(r1->y,r2->y)) break;\r\n\t\t\t\tq.erase(r1);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} q1,*q2[N];\r\n\r\nvoid first_run(int x) {\r\n\trep(i,0,sz(to[x])-1) {\r\n\t\tint y=to[x][i];\r\n\t\tif (sum[y]<=sum[x]) continue;\r\n\t\tpath.pb(y);\r\n\r\n\t\ttmp[x].clear();\r\n\t\twhile (sz(q1)>=2 && slope1(q1.front(),q1.front2())<=2.0*sum[y] ) {\r\n\t\t\ttmp[x].pb(q1.front());\r\n\t\t\tq1.pop_front();\r\n\t\t}\r\n\t\tdp1[y]=calc(dp1[q1.front()],sum[y]-sum[q1.front()]-L);\r\n\r\n\t\twhile (sz(q1)>=2 && slope1(q1.back2(),q1.back())>=slope1(q1.back(),y) ) {\r\n\t\t\ttmp[x].pb(q1.back());\r\n\t\t\tq1.pop_back();\r\n\t\t}\r\n\t\tq1.insert(sum[y],y);\r\n\r\n\t\tfirst_run(y);\r\n\r\n\t\tq1.pop_back();\r\n\t\trep(i,0,sz(tmp[x])-1)\r\n\t\t\tq1.insert(sum[tmp[x][i]],tmp[x][i]);\r\n\t\tpath.pop_back();\r\n\t}\r\n\tif (is_leaf(x)) {\r\n\t\tgmin(ans1[col[x]],dp1[x]);\r\n\t}\r\n}\r\n\r\nvoid merge(Queue *&a,Queue *&b) {\r\n\tif (b->size() < a->size()) {\r\n\t\ta->merge(b);\r\n\t} else {\r\n\t\tb->merge(a);\r\n\t\ta=b;\r\n\t}\r\n}\r\n\r\ndouble get_val(Queue *q,int x) {\r\n\twhile (q->size()>=2 && slope2(q->back(),q->back2())>=2.0*sum[x]) q->pop_back();\r\n\tdp2[x]=calc(dp2[q->back()],sum[q->back()]-sum[x]-L);\r\n\twhile (q->size()>=2 && slope2(q->front2(),q->front())<=slope2(q->front(),x) ) q->pop_front();\r\n\treturn dp2[x];\r\n}\r\n\r\nvoid second_run(int x) {\r\n\tq2[x]=new Queue;\r\n\trep(i,0,sz(to[x])-1){\r\n\t\tint y=to[x][i];\r\n\t\tif (sum[y]<=sum[x]) continue;\r\n\t\tsecond_run(y);\r\n\t\tif (x==1) {\r\n\t\t\tgmin(ans2[y],get_val(q2[y],x));\r\n\t\t} else {\r\n\t\t\tmerge(q2[x],q2[y]);\r\n\t\t}\r\n\t}\r\n\tif (x!=1) {\r\n\t\tdp2[x]=is_leaf(x)?0:get_val(q2[x],x);\r\n\t\tq2[x]->insert(sum[x],x);\r\n\t}\r\n}\r\n\r\ndouble get_answer() {\r\n\tvector<int> part;\r\n\trep(i,2,n) if (col[i]==i) part.pb(i);\r\n\r\n\tdouble min1=inf,min2=inf;\r\n\tint pos1;\r\n\trep(i,0,sz(part)-1) {\r\n\t\tif (min1>ans2[part[i]]) {\r\n\t\t\tmin2=min1;\r\n\t\t\tmin1=ans2[part[i]];\r\n\t\t\tpos1=i;\r\n\t\t} else\r\n\t\tif (min2>ans2[part[i]]) {\r\n\t\t\tmin2=ans2[part[i]];\r\n\t\t}\r\n\t}\r\n\tdouble res=inf;\r\n\trep(i,0,sz(part)-1)\r\n\t\tgmin(res,ans1[part[i]]+(pos1==i?min2:min1));\r\n\treturn res;\r\n}\r\n\r\nint main() {\r\n\r\n\twhile (~scanf(\"%d%lf\",&n,&L)) {\r\n\t\trep(i,1,n) {\r\n\t\t\tto[i].clear();\r\n\t\t\tlen[i].clear();\r\n\t\t}\r\n\t\trep(i,1,n-1) {\r\n\t\t\tint u,v,w;\r\n\t\t\tscanf(\"%d%d%d\",&u,&v,&w);\r\n\t\t\tto[u].pb(v);\r\n\t\t\tto[v].pb(u);\r\n\t\t\tlen[u].pb(w);\r\n\t\t\tlen[v].pb(w);\r\n\t\t}\r\n\t\tif (sz(to[1])<2) {\r\n\t\t\tputs(\"-1\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\r\n\t\tfill(sum+2,sum+n+1,-1);\r\n\t\tpre_dfs(1);\r\n\r\n\t\tfill(dp1+2,dp1+n+1,inf);\r\n\t\tfill(dp2+1,dp2+n+1,inf);\r\n\t\tfill(ans1,ans1+n+1,inf);\r\n\t\tfill(ans2,ans2+n+1,inf);\r\n\r\n\t\tpath.clear();\r\n\t\tpath.pb(1);\r\n\t\tq1.clear();\r\n\t\tq1.insert(0,1);\r\n\r\n\t\tfirst_run(1);\r\n\t\tsecond_run(1);\r\n\t\tprintf(\"%.2lf\\n\",get_answer());\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":733,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n\r\nchar str[7];  \r\n\r\nbool Judge(int a){  \r\n    int i = 0;  \r\n    while(a){  \r\n        str[i++] = a % 10 + '0';  \r\n        if(str[i-1] > '6') return 0;  \r\n        a \/= 10;  \r\n    }  \r\n    while(i < 6) str[i++] = '0';  \r\n    str[i] = '\\0';  \r\n    for(i = 1; i != 6; ++i){  \r\n        if(str[i] == str[i+1] && str[i] == str[i-1]) return 0;  \r\n        if(abs(str[i] - str[i-1]) > 4) return 0;  \r\n    }  \r\n    return 1;  \r\n}  \r\n\r\nint main(){  \r\n    int t, a, b, i;  \r\n    scanf(\"%d\", &t);  \r\n    while(t--){  \r\n        scanf(\"%d%d\", &a, &b);  \r\n        for(i = a; i <= b; ++i)  \r\n            if(Judge(i)) printf(\"%06d\\n\", i);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":734,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int i,j,n,m,a[20][20],vis[20][20],ans;  \r\n    scanf(\"%d\",&m);  \r\n    while(m--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        memset(a,0,sizeof(a));  \r\n        memset(vis,0,sizeof(vis));  \r\n        i=1;\r\n        j=(n+1)\/2;\r\n        ans=1;\r\n        while(ans<=n*n) \r\n        {  \r\n            a[i][j]=ans;\r\n            vis[i][j]=1; \r\n            if(i==1&&j!=n) \r\n            {  \r\n                i=n;  \r\n                j=j+1;  \r\n            }  \r\n            else if(j==n&&i!=1) \r\n            {  \r\n                i=i-1;  \r\n                j=1;  \r\n            }  \r\n            else if(j!=n&&!vis[i-1][j+1])  \r\n            {  \r\n                  i=i-1;  \r\n                  j=j+1;\r\n            }  \r\n            else if(i!=n&&j!=n&&vis[i-1][j+1])  \r\n                i=i+1;   \r\n            else if(i==1&&j==n) \r\n                i=i+1;  \r\n            ans++;  \r\n        }  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            for(j=1;j<=n;j++)  \r\n                printf(\"%4d\",a[i][j]);  \r\n            printf(\"\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":737,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <cstdlib>\r\n#include <vector>\r\n#include <climits>\r\n#include <algorithm>\r\n#include <cmath>\r\n#define LL long long\r\nusing namespace std;\r\nint d[210],dp[210][210],sum[210];\r\nint main() {\r\n    int i,j,n,k,v,add;\r\n    while(~scanf(\"%d\",&n)) {\r\n        memset(dp,0,sizeof(dp));\r\n        for(add = i = 0; i < n; i++) {\r\n            scanf(\"%d\",d+i);\r\n            add += d[i];\r\n            sum[i] = add;\r\n        }\r\n        for(v = 1; v  <  n; v++) {\r\n            for(i = 0; i < n-v; i++) {\r\n                j = i+v;\r\n                dp[i][j] = INT_MAX;\r\n                add = sum[j] - (i?sum[i-1]:0);\r\n                for(k = i; k < j; k++) {\r\n                    dp[i][j] = min(dp[i][j],dp[i][k]+dp[k+1][j]+add);\r\n                }\r\n            }\r\n        }\r\n        printf(\"%d\\n\",dp[0][n-1]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":738,
"code":"\n#include <string.h>\r\n#include <stdio.h>\r\n#include <algorithm>\r\n#include <iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n    int y,m,d;\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        scanf(\"%d%d%d\",&y,&m,&d);\r\n        if( (d+m)%2 == 0 || (m == 9 && d == 30) || (m == 11 && d == 30) )\r\n            printf(\"YES\\n\");\r\n        else printf(\"NO\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":739,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n  int day;  \r\n  while(scanf(\"%d\",&day)!=EOF)  \r\n  {  \r\n      int max=0,s,sum=0,x,y;  \r\n      scanf(\"%d\",&x);  \r\n      day--;  \r\n      while(day--)  \r\n      {  \r\n         scanf(\"%d\",&y);  \r\n         s=y-x;\r\n         sum<0?sum=s:sum+=s;\r\n         max<sum?max=sum:sum=sum;\r\n         x=y; \r\n      }  \r\n      printf(\"%d\\n\",max);\r\n  }  \r\n    return 0;  \r\n}"
},
{
"pid":740,
"code":"\n#include<iostream>\r\n#include<algorithm>\r\n#include<cmath>\r\nusing namespace std;\r\nconst int N=10010;\r\nconst int M=0X7ffffff;\r\nint foot[N],cost[6][6],dp[N][6][6];\r\nvoid fun()\r\n{\r\n        for(int i=0;i<5;i++) for(int j=0;j<5;j++) cost[i][j]=M;\r\n        cost[0][1]=cost[0][2]=cost[0][3]=cost[0][4]=2;\r\n        cost[1][2]=cost[2][1]=cost[2][3]=cost[3][2]=cost[3][4]=cost[4][3]=cost[4][1]=cost[1][4]=3;\r\n        cost[1][3]=cost[3][1]=cost[2][4]=cost[4][2]=4;\r\n        cost[1][1]=cost[2][2]=cost[3][3]=cost[4][4]=1;\r\n}\r\nint main()\r\n{\r\n    int k,x,i,j,ans,y,n;\r\n    fun();\r\n    while(1)\r\n    { ans=0;\r\n        for( i=1; i<N; i++)\r\n        {\r\n            cin>>x;\r\n            if(x==0)\r\n                break;\r\n              else foot[i]=x;\r\n        }\r\n          n=i;\r\n            if(i==1)\r\n                 break;\r\n            else\r\n            {\r\n                for(i=0;i<=n;i++)\r\n                   for(j=0;j<5;j++)\r\n                       for(k=0;k<5;k++)\r\n                           dp[i][j][k]=M;          \r\n                              dp[0][0][0]=0; ans=M;\r\n                for(i=1;i<n;i++)                     \r\n                  {\r\n                        for(j=0;j<5;j++)             \r\n                        {\r\n                            if(j==foot[i]) continue; \r\n                             x=y=M;\r\n                            for(k=0;k<5;k++)         \r\n                            {\r\n                               if(k!=j || k+j==0)\r\n                               x=min(x,dp[i-1][k][j]+cost[k][foot[i]]);\r\n                            }\r\n                            for(k=0;k<5;k++)        \r\n                            {\r\n                                if(k!=j||k+j==0)\r\n                                y=min(y,dp[i-1][j][k]+cost[k][foot[i]]);\r\n                            }\r\n                            dp[i][j][foot[i]]=dp[i][foot[i]][j]=min(x,y);\r\n                            ans=min(ans,dp[n-1][j][foot[i]]);\r\n                        }\r\n                   }\r\n            cout<<ans<<endl;\r\n            }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":741,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nlong long c[60][60];  \r\nvoid fun(long long n)  \r\n{  \r\n    long long i,j;  \r\n    for(i=0;i<=n;i++)  \r\n    {  \r\n        for(j=0;j<=i;j++)  \r\n        {  \r\n            if(j==0||j==n)  \r\n                c[i][j]=1;  \r\n            else  \r\n                c[i][j]=c[i-1][j-1]+c[i-1][j];  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    long long n,i,sum;  \r\n    while(~scanf(\"%lld\",&n))  \r\n    {  \r\n        sum=0;  \r\n        memset(c,0,sizeof(c));  \r\n        fun(n);  \r\n        for(i=2;i<=n;i++)  \r\n        {  \r\n            sum=sum+c[n][i]*(i-1);  \r\n        }  \r\n        printf(\"%lld\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":742,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int inf = 0x7f7f7f7f;  \r\nconst int maxn = 1e6 + 10;  \r\nint dp[maxn], a[maxn], b[maxn];  \r\nint main()  \r\n{  \r\n    int T, n, m, ans;  \r\n    scanf(\"%d\", &T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d\", &m, &n);  \r\n        memset(dp, 0, sizeof(dp));  \r\n        memset(b, 0, sizeof(b));  \r\n        dp[0] = b[0] = 0;  \r\n        for(int i = 1; i <= n; i++)  \r\n            scanf(\"%d\", &a[i]);  \r\n        for(int i = 1; i <= m; i++)  \r\n        {  \r\n            ans = -inf;  \r\n            for(int j = i; j <= n; j++)  \r\n            {  \r\n                dp[j] = max(dp[j-1]+a[j], b[j-1]+a[j]);  \r\n                b[j-1] = ans;  \r\n                ans = max(dp[j], ans);  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\", ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":743,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nint s[2010][2010];  \r\nvoid fun()  \r\n{  \r\n    int i,j;  \r\n    for(i = 1; i <= 2000; i++)  \r\n    {  \r\n        for(j = 1; j <= 2000;j++)  \r\n        {  \r\n            if(i == j)  \r\n                s[i][j] = 1;  \r\n            else if(i == 1)  \r\n                s[i][j] = j % 1009;  \r\n            else  \r\n                s[i][j] = (s[i][j-1]+s[i-1][j-1])%1009;  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int m,n;  \r\n    fun();  \r\n    while(scanf(\"%d%d\",&m,&n) && m+n)  \r\n    {  \r\n        printf(\"%d\\n\",s[m][n]);  \r\n    }  \r\n}"
},
{
"pid":744,
"code":"\n#include <cstdio>\r\n\r\nusing namespace std;\r\n\r\nint main()\r\n{\r\n\r\n    long long a, b;\r\n    while (~scanf(\"%lld %lld\", &a, &b))\r\n    {\r\n\r\n        long long x = a ^ b;\r\n        int c = 0;\r\n        while (x)\r\n        {\r\n            c++;\r\n            x >>= 1;\r\n        }\r\n        long long res = 1;\r\n        for (int i = 0; i < c; i++)\r\n        {\r\n            res *= 2;\r\n        }\r\n        printf(\"%lld\\n\", res - 1);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":745,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#include <cstring>\r\nusing namespace std;\r\nconst long long INF = 999999999999999;\r\nconst int N = 50000 + 10;\r\nint a[N];\r\nlong long min_num, max_num;\r\nint main()\r\n{\r\n    int n;\r\n    while (~scanf(\"%d\", &n))\r\n    {\r\n        min_num = INF;\r\n        max_num = -INF;\r\n        long long t1 = 0, t2 = 0;\r\n        long long sum = 0;\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%lld\", &a[i]);\r\n            sum += a[i];\r\n            if (t1 > 0)\r\n                t1 += a[i];\r\n            else\r\n                t1 = a[i];\r\n            if (t1 > max_num)\r\n                max_num = t1;\r\n            if (t2 < 0)\r\n                t2 += a[i];\r\n            else\r\n                t2 = a[i];\r\n            if (t2 < min_num)\r\n                min_num = t2;\r\n        }\r\n        if (max_num < sum - min_num)\r\n            max_num = sum - min_num;\r\n        printf(\"%lld\\n\", max_num);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":746,
"code":"\n#include <cmath>    \r\n#include <cstdio>    \r\n#include <cstring>    \r\n#include <iostream>    \r\n#include <algorithm>    \r\n\r\nusing namespace std;  \r\n\r\nlong long dp[22][22];  \r\nlong long a[22][22];   \r\nchar str[22];  \r\n\r\nint main()  \r\n{  \r\n    int len, t, m;  \r\n    scanf(\"%d\", &t);  \r\n    while (t--)  \r\n    {  \r\n        scanf(\"%s%d\", str, &m);  \r\n        len = strlen(str);  \r\n        m--;   \r\n        memset (a, 0, sizeof(a));   \r\n        memset (dp, 0, sizeof(dp));  \r\n        for (int i = 0; i < len; i++)         \r\n        {  \r\n            a[i][i] = str[i] - '0';  \r\n            for (int j = i + 1; j < len; j++)  \r\n            {  \r\n                a[i][j] = a[i][j - 1] * 10 + str[j] - '0';  \r\n            }  \r\n        }  \r\n        for (int i = 0; i < len; i++)  \r\n        {  \r\n            dp[i][0] = a[0][i];  \r\n        }  \r\n        for (int j = 1; j <= m; j++)  \r\n        {  \r\n            for (int i = j; i < len; i++)  \r\n            {  \r\n                for (int k = 0; k < i; k++)  \r\n                {  \r\n                    dp[i][j] = max(dp[i][j], dp[k][j - 1] * a[k + 1][i]);  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%lld\\n\", dp[len - 1][m]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":747,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\n#define MAXN 100001  \r\n#define MIN(a,b) (a<b?a:b)  \r\n#define MAX(a,b) (a>b?a:b)  \r\nstruct NODE{  \r\n    int a, b, c;  \r\n}p[51];  \r\nint ans, ch, dp[MAXN];  \r\n\r\nint in()  \r\n{  \r\n    while((ch = getchar()) < '0' || '9' < ch);  \r\n    ans = ch-'0';  \r\n    while((ch = getchar()) >= '0' && '9' >= ch) ans = ans*10+ch-'0';  \r\n    return ans;  \r\n}  \r\ninline bool cmp(const NODE& a, const NODE& b){return b.c*a.b>a.c*b.b;}  \r\nint main()  \r\n{  \r\n    int m, n;  \r\n    while(~scanf(\"%d %d%*c\", &m, &n))  \r\n    {  \r\n        int ans = 0;  \r\n        for (int i = 0; i < n; i++)  \r\n        {  \r\n            p[i].a = in();  \r\n            p[i].b = in();  \r\n            p[i].c = in();  \r\n        }  \r\n        sort(p,p+n,cmp);  \r\n        memset(dp,0,sizeof(dp));  \r\n        for (int i = 0; i < n; i++)  \r\n        {  \r\n            for (int j = MIN(m,p[i].a\/p[i].b); j >= p[i].c; j--)\/\/剪枝,T<=A\/B && T <= M  \r\n                dp[j] = MAX(dp[j], dp[j-p[i].c]+p[i].a-j*p[i].b);  \r\n        }  \r\n        for (int i = 0; i <= m; i++)  \r\n            ans = max(ans,dp[i]);  \r\n        printf(\"%d\\n\", ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":749,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint h ;  \r\nchar s[1005] ;  \r\nint dp[1005] ;  \r\nint check(int rt,int le) \r\n{  \r\n    while(le<=rt)  \r\n    {  \r\n        if(s[le++]!=s[rt--])  \r\n            return 0 ;  \r\n    }  \r\n    return 1 ;  \r\n}  \r\nint main()  \r\n{  \r\n    int i,j ;  \r\n    while(scanf(\"%s\",s+1)!=EOF)  \r\n    {  \r\n        memset(dp,0,sizeof(dp)) ;  \r\n        h=strlen(s+1) ;  \r\n        for(i=1 ;i<=h ;i++)  \r\n        {  \r\n            dp[i]=i ;  \r\n            for(j=1 ;j<=i ;j++)  \r\n              if(s[i]==s[j]&&check(i,j))  \r\n              {  \r\n                  dp[i]=dp[i] < dp[j-1]+1 ? dp[i] : dp[j-1]+1 ;  \r\n                  break ;   \r\n              }  \r\n        }  \r\n        printf(\"%d\\n\",dp[h]) ;  \r\n    }  \r\n    return 0 ;  \r\n}"
},
{
"pid":750,
"code":"\n#include <iostream>\r\n#define M 1000000009\r\nusing namespace std;\r\nint main()\r\n{\r\n\tlong long l,c,s,n,m,k,i,j,q[14]={2,1024,336286278,914695985,70380895,666029465,971593913,270218841,638263386,777343757};\r\n\twhile(cin>>n>>m>>k&&!cin.eof())\r\n\t{\r\n\t\ts=1;\r\n\t\tc=n-m;\r\n\t\tn=n-c*k;\r\n\t\tif(n<1) s=m;\r\n\t\telse{\r\n\t\t\tl=n\/k;\r\n\t\t\tfor(i=0;l;i++)\r\n\t\t\t{\r\n\t\t\t\tfor(j=0;j<l%10;j++)\r\n\t\t\t\t\ts=s*q[i]%M;\r\n\t\t\t\tl\/=10;\r\n\t\t\t}\r\n\t\t\ts=((s-1)*2*k+n-n\/k*k+c*k-c)%M;\r\n\t\t}\r\n\t\tcout<<s<<endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":751,
"code":"\n#include<cstdio>  \r\nconst int N=10005;  \r\nconst int M=100005;  \r\nint n,m,father[N];  \r\nstruct Rode  \r\n{  \r\n    int a,b;  \r\n}rode[M];  \r\nvoid Init()  \r\n{  \r\n    for(int i=0;i<n;i++)  \r\n    father[i]=i;  \r\n}  \r\nint find(int x)  \r\n{  \r\n    if(x!=father[x])  \r\n    father[x]=find(father[x]);  \r\n    return father[x];  \r\n}  \r\nvoid Union(int a,int b)  \r\n{  \r\n    int x=find(a);  \r\n    int y=find(b);  \r\n    if(x!=y)  \r\n    father[x]=y;  \r\n}  \r\nint main()  \r\n{  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        Init();  \r\n        int num=n,i;  \r\n        for(i=0;i<m;i++)  \r\n        scanf(\"%d%d\",&rode[i].a,&rode[i].b);  \r\n        int stack[M],top=0;  \r\n        for(i=m-1;i>=0;i--)  \r\n        {  \r\n            int a=find(rode[i].a);  \r\n            int b=find(rode[i].b);  \r\n            if(a!=b) stack[top++]=num--;  \r\n            else stack[top++]=num;  \r\n            Union(rode[i].a,rode[i].b);  \r\n        }  \r\n        for(i=m-1;i>=0;i--)  \r\n        printf(\"%d\\n\",stack[i]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":752,
"code":"\n#include<stdio.h>  \r\nchar str[10005];  \r\nint main()  \r\n{  \r\n    int i,count[26],num;  \r\n    while(~scanf(\"%s\",str))  \r\n    {  \r\n        for(i=0;i<26;i++)  \r\n            count[i]=0;  \r\n        num=0;  \r\n        for(i=0;str[i]!='\\0';i++)  \r\n        {  \r\n            count[str[i]-'a']++;  \r\n        }  \r\n        for(i=0;i<26;i++)  \r\n        {  \r\n            if(count[i]%2==1)  \r\n                num++;  \r\n        }  \r\n        if(num<=2)  \r\n            printf(\"Yes\\n\");  \r\n        else  \r\n        {  \r\n            printf(\"%s\\n\",num%2==1?\"No\":\"Yes\");  \r\n        }  \r\n\r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":753,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<math.h>  \r\nconst int M=1e6+5;  \r\nint num[M];  \r\nint add[M];  \r\n\r\nint main()  \r\n{  \r\n    int n,m;  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        memset(add,0,sizeof(add));  \r\n        for(int i=1; i<=n; i++)  \r\n            scanf(\"%d\",&num[i]);  \r\n        while(m--)  \r\n        {  \r\n            int t ;  \r\n            scanf(\"%d\",&t);  \r\n            if(t==1)  \r\n            {  \r\n                int x,y;  \r\n                scanf(\"%d%d\",&x,&y);  \r\n                add[x]+=y;  \r\n            }  \r\n            else  \r\n            {  \r\n                int j;  \r\n                scanf(\"%d\",&j);  \r\n                int res=num[j];  \r\n                int s=(int)sqrt((double)j);  \r\n                for(int i=1; i<=s; i++)  \r\n                    if(j%i==0)  \r\n                        res+=add[i]+add[j\/i];  \r\n                if(s*s==j)  \r\n                    res-=add[s];  \r\n                printf(\"%d\\n\",res);  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":754,
"code":"\n#include <stdio.h>  \r\n#include <queue>  \r\nusing namespace std;  \r\ntypedef struct  \r\n{  \r\n    int rich,num;  \r\n}node;  \r\nqueue<node> s1;  \r\npriority_queue<int,vector<int>,less<int> >s2;\r\nint main()  \r\n{  \r\n    node t,v;  \r\n    int n,m,x;  \r\n    while(scanf(\"%d %d\",&n,&m)!=EOF)  \r\n    {  \r\n        while(!s1.empty())\r\n        s1.pop();  \r\n        while(!s2.empty()) \r\n        s2.pop();  \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&x);  \r\n            t.rich=x;  \r\n            t.num=i;  \r\n            s1.push(t);  \r\n            s2.push(x);  \r\n        }  \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            v=s1.front();  \r\n            if(v.rich==s2.top())  \r\n            s2.pop();  \r\n            else  \r\n            {  \r\n                while(v.rich!=s2.top())  \r\n                s1.push(v),s1.pop(),v=s1.front();  \r\n                s2.pop();  \r\n            }  \r\n            if(v.num==m)  \r\n            {  \r\n                s1.pop();  \r\n                break;  \r\n            }  \r\n            else  \r\n            s1.pop();  \r\n        }  \r\n        printf(\"%d\\n\",n-s2.size());  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":755,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint n;  \r\nint map[10000];  \r\nint f1(){  \r\n    int ans=0,cnm=1;  \r\n    for(int i=0;i<n-1;i++)  \r\n    {  \r\n        if(map[i]>map[i+1]&&cnm==1)  \r\n        cnm=0;  \r\n        if(map[i]<map[i+1]&&cnm==0)  \r\n        cnm=1,ans++;  \r\n    }  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        for(int i=0;i<n;i++)  \r\n        scanf(\"%d\",&map[i]);  \r\n        printf(\"%d\\n\",f1());  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":756,
"code":"\n#include <iostream>  \r\n#include <string.h>  \r\n#include <string>  \r\nusing namespace std;  \r\nvoid build(int n,char* s1,char* s2,char* s)  \r\n{  \r\n    if(n<=0) return ;  \r\n    int p=strchr(s2,s1[n-1])-s2;  \r\n    build(p,s1,s2,s+1);  \r\n    build(n-p-1,s1+p,s2+p+1,s+p+1);  \r\n    s[0]=s1[n-1];  \r\n}  \r\nint main(void)  \r\n{  \r\n    int n;  \r\n    char s1[50],s2[50],ans[50];  \r\n    while(cin>>s1>>s2)  \r\n    {  \r\n\r\n        n=strlen(s1);  \r\n        build(n,s1,s2,ans);  \r\n        ans[n]='\\0';  \r\n        cout<<ans<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":757,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<queue>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nstruct node  \r\n{  \r\n    int day;  \r\n    int gk;  \r\n}pre[2000];  \r\nbool cmp(node a,node b)  \r\n{  \r\n    if(a.day<b.day)  \r\n    return true;  \r\n    if(a.day==b.day&&a.gk<b.gk)  \r\n    return true;  \r\n    else  \r\n    return false;  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    int sum;  \r\n    priority_queue<int,vector<int>,greater<int> >s;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        while(!s.empty())  \r\n        s.pop();  \r\n        for(int i=0;i<n;i++)  \r\n        scanf(\"%d%d\",&pre[i].day,&pre[i].gk);  \r\n        sort(pre,pre+n,cmp);  \r\n        sum=0;  \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            if(s.size()<pre[i].day)  \r\n            s.push(pre[i].gk);  \r\n            else  \r\n            {  \r\n                int x=s.top();  \r\n                if(x<pre[i].gk)  \r\n                {  \r\n                s.pop();  \r\n                s.push(pre[i].gk);  \r\n                sum+=x;}  \r\n                else  \r\n                sum+=pre[i].gk;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":758,
"code":"\n#include <stdio.h>\r\nint main()\r\n{\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--)\r\n    {\r\n        int n,m,i,j,k;\r\n        int c1[12],c2[12];\r\n        scanf(\"%d %d\",&m,&n);\r\n        if(m<n)\r\n        n=m;\r\n        for(i=0;i<=m;i++)\r\n        {\r\n            c1[i]=1;\r\n            c2[i]=0;\r\n        }\r\n        for(i=2;i<=n;i++)\r\n        {\r\n            for(j=0;j<=m;j++)\r\n            for(k=0;k+j<=m;k+=i)\r\n            {\r\n                c2[k+j]+=c1[j];\r\n            }\r\n            for(j=0;j<=m;j++)\r\n            {\r\n                c1[j]=c2[j];\r\n                c2[j]=0;\r\n            }          \r\n        }\r\n        printf(\"%d\\n\",c1[m]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":759,
"code":"\n#include <iostream>\r\n#include<cstring>\r\nusing namespace std;\r\nint a[100010];\r\nchar str[100010];\r\nint main()\r\n{\r\n    int i,n;\r\n    while(cin>>str>>n)\r\n    {\r\n        int t=0,sum = 0;\r\n        int len = strlen(str);\r\n        for(i=0;i<len;i++)\r\n        {\r\n            a[t++] = str[i]-'0';\r\n        }\r\n        for(i=0;i<t;i++)\r\n        {\r\n            sum = sum * 10 + a[i];\r\n            sum %= n;\r\n        }\r\n        cout<<sum<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":760,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#define MAXN 100010  \r\nint ans, ch, s[MAXN], vis[MAXN];  \r\nint in()  \r\n{  \r\n    while((ch = getchar())< '0' || '9' < ch);  \r\n    ans = ch-'0';  \r\n    while((ch = getchar()) >= '0' && '9' >= ch) ans = ans*10+ch-'0';  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,m;  \r\n    while(~scanf(\"%d %d%*c\", &n, &m))  \r\n    {  \r\n        int len = 0, b, ans = 0;  \r\n        memset(vis,-1,sizeof(vis));  \r\n        for (int i = 0; i < n; i++)  \r\n            vis[in()] = i;  \r\n        for (int i = 0; i < m; i++)  \r\n        {  \r\n            if (~vis[b=in()])  \r\n                s[len++] = vis[b];  \r\n        }  \r\n        vis[0] = 0;  \r\n        for (int i = 0; i < len; i++)  \r\n        {  \r\n            if (s[i] > vis[ans])  \r\n                vis[++ans] = s[i];  \r\n            else  \r\n            {  \r\n                int l = 1, r = ans, mid;  \r\n                while(l <= r)  \r\n                {  \r\n                    mid = (l+r)>>1;  \r\n                    if (vis[mid] >= s[i])  \r\n                        r = mid-1;  \r\n                    else  \r\n                        l = mid+1;  \r\n                }  \r\n                vis[l] = s[i];  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\", ans+1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":762,
"code":"\n#include <cstdio>  \r\n\r\nint fac[20];  \r\nvoid Div(int n) {  \r\n    int k = 0;  \r\n    for(int i = 2; i * i <= n; ++i){  \r\n        if(n % i == 0) fac[++k] = i;  \r\n        while(n % i == 0) n \/= i;  \r\n    }  \r\n    if(n > 1) fac[++k] = n;  \r\n    fac[0] = k;  \r\n}  \r\nint que[1<<10];  \r\nint Count(int n, int m) {  \r\n    int g = 0, sum = n;  \r\n    que[++g] = 1;  \r\n    for(int i = 1; i <= fac[0]; ++i){  \r\n        int t = g;  \r\n        for(int j = 1; j <= g; ++j){  \r\n            que[++t] = que[j] * fac[i] * -1;  \r\n            sum += n \/ que[t];  \r\n        }  \r\n        g = t;  \r\n    }  \r\n    return sum;  \r\n}   \r\nint Binary_search(int m, int K){  \r\n    int l = 1, r = 2000000000, mid;  \r\n    while(l <= r){  \r\n        mid = (l + r) >> 1;  \r\n        if(Count(mid, m) >= K) r = mid - 1;  \r\n        else l = mid + 1;  \r\n    }  \r\n    return l;  \r\n}  \r\nint main()  \r\n{  \r\n    int m, K;  \r\n    while(scanf(\"%d%d\", &m, &K) != EOF)  \r\n    {  \r\n        Div(m);  \r\n        int ans = Binary_search(m, K);  \r\n        printf(\"%d\\n\", ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":763,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\n#define N 10010  \r\nusing namespace std;  \r\nint a[N];  \r\nint l[N];  \r\nint r[N];  \r\nint dp[N];  \r\nint main()  \r\n{  \r\n    int n,i,j,k;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        memset(dp,0x3f3f3f,sizeof(dp));  \r\n        for(i=0;i<n;i++)  \r\n            scanf(\"%d\",&a[i]);  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            k=lower_bound(dp,dp+n,a[i])-dp;  \r\n            dp[k]=a[i];  \r\n            l[i]=k+1;  \r\n        }  \r\n        memset(dp,0x3f3f3f,sizeof(dp));  \r\n        for(i=n-1;i>=0;i--)  \r\n        {  \r\n            k=lower_bound(dp,dp+n,a[i])-dp;  \r\n            dp[k]=a[i];  \r\n            r[i]=k+1;  \r\n        }  \r\n        int ans=0;  \r\n        for(i=0;i<n;i++)  \r\n            ans=max(ans,min(l[i],r[i]));  \r\n        printf(\"%d\\n\",2*ans-1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":764,
"code":"\n#include <iostream>\r\n#include <cstring>\r\nusing namespace std;\r\nint dp[1001][26][26], a[1001][26], c[1001], Max[1001];\r\nint main(){\r\n    char s[1001];\r\n    int i, j, t, k, l, ans;\r\n    cin>>t;\r\n    while(t--){\r\n        cin>>l>>s;\r\n        int len = strlen(s) \/ l;\r\n        for(i = 0; i < len; ++i){\r\n            Max[i] = c[i] = 0;\r\n            for(j = 0; j < 26; ++j){\r\n                a[i][j] = 0;\r\n                for(k = 0; k < 26; ++k)\r\n                    dp[i][j][k] = 0;\r\n            }\r\n        }\r\n        for(i = 0; i < len; ++i){\r\n            for(j = 0; j < l; ++j)\r\n                a[i][s[i * l + j] - 'a'] = 1;\r\n            for(j = 0; j < 26; ++j)\r\n                if(a[i][j]) c[i]++;\r\n        }\r\n        for(i = 1; i < len; ++i){\r\n            for(j = 0; j < 26; ++j){ \r\n                for(k = 0; k < 26; ++k){ \r\n                    if((c[i] == 1 || j != k) && a[i][j] && a[i][k]){\r\n                        if(a[i-1][j]){\r\n                            int temp = 0;\r\n                            for(int x = 0; x < 26; ++x)\r\n                                if(a[i-1][x]) temp = max(temp, dp[i-1][x][j]);\r\n                            dp[i][j][k] = temp + 1;\r\n                        }\r\n                        else\r\n                            dp[i][j][k] = Max[i-1];\r\n                        Max[i] = max(Max[i], dp[i][j][k]);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        ans = 0;\r\n        for(i = 0;  i < len; ++i) ans += c[i];\r\n        ans -= Max[len-1];\r\n        cout<<ans<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":765,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\n#include <vector>  \r\n#include <queue>  \r\n#define Max_N 1100  \r\n#define inf 0x3f3f3f3f  \r\nusing namespace std;  \r\nstruct Edge{  \r\n    int to,flow,rev;  \r\n};  \r\nint n;  \r\nint v[Max_N];  \r\nint dp[Max_N];  \r\nint level[Max_N];  \r\nint iter[Max_N];  \r\nvector<Edge> g[Max_N];  \r\nvoid init(){  \r\n    memset(dp,0,sizeof(dp));  \r\n    for(int i=0;i<Max_N;i++)  \r\n        g[i].clear();  \r\n}  \r\nint find_max(int a,int b){  \r\n    return a>b?a:b;  \r\n}  \r\nint find_min(int a,int b){  \r\n    return a>b?b:a;  \r\n}  \r\nvoid add_edge(int from,int to,int cap){  \r\n    g[from].push_back((Edge){to,cap,g[to].size()});  \r\n    g[to].push_back((Edge){from,0,g[from].size()-1});  \r\n}  \r\nvoid bfs(int s)  \r\n{  \r\n    memset(level,-1,sizeof(level));  \r\n    queue<int> que;  \r\n    level[s]=0;  \r\n    que.push(s);  \r\n    while(!que.empty())  \r\n    {  \r\n        int v=que.front();que.pop();  \r\n        for(int i=0;i<g[v].size();i++)  \r\n        {  \r\n            Edge &e=g[v][i];  \r\n            if(e.flow>0&&level[e.to]<0)  \r\n            {  \r\n                level[e.to]=level[v]+1;  \r\n                que.push(e.to);  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\nint dfs(int v,int t,int f)  \r\n{  \r\n    if(v==t) return f;  \r\n    for(int &i=iter[v];i<g[v].size();i++)  \r\n    {  \r\n        Edge &e=g[v][i];  \r\n        if(e.flow>0&&level[v]<level[e.to])  \r\n        {  \r\n            int d=dfs(e.to,t,find_min(f,e.flow));  \r\n            if(d>0)  \r\n            {  \r\n                e.flow-=d;  \r\n                g[e.to][e.rev].flow+=d;  \r\n                return d;  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}  \r\nint max_flow(int s,int t)  \r\n{  \r\n    int flow=0;  \r\n    while(true)  \r\n    {  \r\n        bfs(s);  \r\n        if(level[t]<0) return flow;  \r\n        memset(iter,0,sizeof(iter));  \r\n        int f;  \r\n        while((f=dfs(s,t,inf))>0)  \r\n            flow+=f;  \r\n    }  \r\n    return 0;  \r\n}  \r\nint main()  \r\n{  \r\n    int i,j;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        init();  \r\n        int len=0;  \r\n        int S=0,T=2*n+1;  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%d\",&v[i]);  \r\n            for(j=i-1;j>0;j--)  \r\n                if(v[i]>v[j])  \r\n                    dp[i]=find_max(dp[i],dp[j]+1);  \r\n            len=find_max(len,dp[i]);  \r\n            for(j=i-1;j>0;j--)  \r\n            {  \r\n                if(v[i]>v[j]&&dp[i]-dp[j]==1)  \r\n                {  \r\n                    add_edge(j*2,i*2-1,1);  \r\n                }  \r\n            }  \r\n            add_edge(i*2-1,i*2,1);  \r\n        }  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            if(dp[i]==0)  \r\n                add_edge(S,i*2-1,1);  \r\n            if(dp[i]==len)  \r\n                add_edge(i*2,T,1);  \r\n        }  \r\n        ++len;  \r\n        int max=max_flow(S,T);  \r\n        printf(\"%d\\n\",len);  \r\n        printf(\"%d\\n\",max);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":766,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tlong long m,i,j,n,s1,s2,s3,s4;\r\n\tfor(j=0,i=1;i<=1000000;i++)\r\n\t{   \r\n\t\ts2=s4=m=0;\r\n\t\tn=i;\r\n\t\twhile(n)\r\n\t\t{\r\n\t\t\tm=m*10+n%10;\r\n\t\t\tn\/=10;\r\n\t\t}\r\n\t\tif(m==i)\r\n\t\t{\r\n    \t\ts1=i*i;\r\n    \t\ts3=s1*i; \r\n    \t\tn=s1;\r\n    \t\ts2=0;\r\n    \t\twhile(n)\r\n\t\t\t{\r\n   \t\t\t\ts2=s2*10+n%10;\r\n   \t\t\t\tn\/=10;\r\n\t\t\t}\r\n   \t\t\tif(s2==s1)\r\n\t\t\t{\r\n  \t\t\t\tn=s3;\r\n  \t\t\t\ts4=0;\r\n  \t\t\t\twhile(n)\r\n  \t\t\t\t{\r\n\t\t\t\t\ts4=s4*10+n%10;\r\n\t\t\t\t\tn\/=10;\r\n  \t\t\t\t}\r\n   \t\t\t\tif(s3==s4)\r\n\t\t\t\t{\r\n \t\t\t\t\tprintf(\"%d \",i);\r\n \t\t\t\t\tj++;\r\n\t\t\t\t}\r\n  \t\t\t\tif(j==5)\r\n  \t\t\t\t{\r\n \t\t\t\t\tprintf(\"\\n\");\r\n \t\t\t\t\tj=0;\r\n  \t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tprintf(\"\\n\");\r\n\treturn 0;\r\n}"
},
{
"pid":767,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,T,i,sum,flag=0;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        sum=n+1;  \r\n        flag=1;  \r\n        for(i=2;i*i<=n;i++)  \r\n        {  \r\n            if(n%i==0)  \r\n            {  \r\n                flag=0;  \r\n                if(i*i==n)  \r\n                    sum+=i;  \r\n                else  \r\n                {  \r\n                    sum+=n\/i;  \r\n                    sum+=i;  \r\n                }  \r\n            }  \r\n        }  \r\n        if(flag)  \r\n            printf(\"Yes\\n\");  \r\n        else  \r\n            printf(\"No %d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":768,
"code":"\n#include<stdio.h>\r\nchar a[55];\r\nint main()\r\n{\r\n\tint k,i,j;\r\n\twhile(scanf(\"%s%d\",a,&k)!=EOF)\r\n\t{\r\n\t\tfor(i=0;a[i]!='\\0';i++)\r\n\t\t{\r\n\t\t\tfor(j=0;j<26;j++)\r\n\t\t\t\tif(a[i]-65==(j+k)%26)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\"%c\",j+65);\r\n\t\t\t\t\tbreak;\t\r\n\t\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":769,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n\r\nchar ch[50],str[100];  \r\n\r\nvoid translate(int k)  \r\n{  \r\n    int i;  \r\n    for(i=0;i<26;++i) \r\n        ch[i*k%26]=i+'A'; \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int k,i,len;  \r\n    while(scanf(\"%s%d\",str,&k)!=EOF)  \r\n    {  \r\n        translate(k); \r\n\r\n        len=strlen(str);  \r\n        for(i=0;i<len;++i)  \r\n            str[i]=ch[str[i]-'A'];  \r\n\r\n        printf(\"%s\\n\",str);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":770,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{               \r\n    char s[105];  \r\n    int k1,k2;  \r\n    while(~scanf(\"%s%d%d\",s,&k1,&k2))  \r\n    {  \r\n        int l=strlen(s);  \r\n        for(int i=0;i<l;i++)  \r\n            s[i]=s[i]-'A';  \r\n        for(int i=0;i<l;i++)  \r\n        {  \r\n            for(int j=0;;j++)  \r\n            {  \r\n                int b=j*26+s[i];  \r\n                if(b-k2<0)  \r\n                    continue;  \r\n                if((b-k2)%k1==0)  \r\n                    {printf(\"%c\",(b-k2)\/k1+'A');break;}  \r\n                if((b-k2)\/k1>26)  \r\n                    break;  \r\n            }  \r\n        }  \r\n        puts(\"\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":771,
"code":"\n#include<stdio.h>\r\nchar a[100],b[100];\r\nint main()\r\n{\r\n\tint i,j,t;\r\n\twhile(scanf(\"%s\",a)!=EOF)\r\n\t{\r\n\t\tgetchar();\r\n\t\tgets(b);\r\n\t\tj=0;\r\n\t\tfor(i=0;b[i]!='\\0';i++)\r\n\t\t{\r\n\t\t\tif(a[j]=='\\0')\r\n\t\t\t\tj=0;\r\n\t\t\tt=b[i]+a[j++]-48;\r\n\t\t\tif(t>122)\r\n\t\t\t\tt=t%122+31;\r\n\t\t\tprintf(\"%c\",t);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":772,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int n;  \r\n    scanf(\"%d\",&n);  \r\n    getchar();  \r\n    while(n--)  \r\n    {  \r\n        char ans[100];  \r\n        gets(ans);  \r\n        int len=strlen(ans);  \r\n        int i,j,k;  \r\n        for(i=0;i<len;i++)  \r\n        {  \r\n            for(j=i+1;j<len;j++)  \r\n            {  \r\n                if(ans[j]==' ')  \r\n                    break;    \r\n            }     \r\n            if(j-i>3)  \r\n            {  \r\n                if(ans[i]>'Z')  \r\n                    ans[i]-=32;  \r\n                printf(\"%c\",ans[i]);      \r\n            }  \r\n            else if(j-i==3)  \r\n            {  \r\n                string cmp=\"\";  \r\n                for(k=i;k<3+i;k++)  \r\n                {  \r\n                    if(ans[k]<'a')  \r\n                        ans[k]+=32;  \r\n                    cmp+=ans[k];      \r\n                }  \r\n                if(cmp!=\"for\"&&cmp!=\"and\"&&cmp!=\"the\")\r\n                {  \r\n                    if(cmp[0]>'Z')  \r\n                        cmp[0]-=32;  \r\n                    printf(\"%c\",cmp[0]);      \r\n                }  \r\n            }  \r\n            i=j;  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":773,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\nint main()  \r\n{  \r\n    double n,p,x;  \r\n    while(scanf(\"%lf%lf\",&n,&p),n+p)  \r\n    {  \r\n        printf(\"%.0lf\\n\",pow(p,1.0\/n));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":775,
"code":"\n#include <cstdio>  \r\n#include <cmath>  \r\n\r\nint s[1005],t[1005];  \r\nint main()  \r\n{  \r\n    int a,b;  \r\n    s[0]=1,s[1]=0;  \r\n    t[0]=0,t[1]=1;  \r\n    while(~scanf(\"%d%d\",&a,&b))  \r\n    {  \r\n        if(a+b<0&&a==b)  \r\n            break;  \r\n        int x,k=2;  \r\n        while(b)  \r\n        {  \r\n            s[k]=s[k-2]-a\/b*s[k-1];  \r\n            t[k]=t[k-2]-a\/b*t[k-1];  \r\n            x=a%b;  \r\n            a=b;  \r\n            b=x;  \r\n            k++;  \r\n        }  \r\n        printf(\"%d %d\\n\",s[k-2],t[k-2]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":776,
"code":"\n#include<iostream>  \r\n#include<algorithm>  \r\n#include<cmath>  \r\nusing namespace std;  \r\nint main() {  \r\n  int n;  \r\n  int a[100005];  \r\n  while (cin >> n) {  \r\n    for (int i = 0; i < n; i++)   \r\n      cin >> a[i];  \r\n    sort (a, a + n);   \r\n    int k;  \r\n    int f = 0, p = 0;  \r\n    int ans = n;   \r\n   for (int i = 0; i < n; i++) {  \r\n     while (p < n && a[p] <= a[i] * 2) p++;  \r\n     ans = min(ans, n + i - p);  \r\n   }   \r\n    cout << ans << endl;  \r\n  }  \r\n}"
},
{
"pid":777,
"code":"\n#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\nint table[10][7] =\r\n{{1,1,1,0,1,1,1}, \r\n{0,0,1,0,0,1,0}, \r\n{1,0,1,1,1,0,1}, \r\n{1,0,1,1,0,1,1}, \r\n{0,1,1,1,0,1,0}, \r\n{1,1,0,1,0,1,1}, \r\n{1,1,0,1,1,1,1}, \r\n{1,0,1,0,0,1,0},\r\n{1,1,1,1,1,1,1}, \r\n{1,1,1,1,0,1,1}, \r\n};\r\nint N, M;\r\nchar str[100];\r\nint main(){\r\n\tint T, i, j, k;\r\n\twhile (scanf(\"%d%s\", &M, str), M || str[0]!='0'){\r\n\t\tfor (i=0; str[i]; i++){\r\n\t\t\tif (i!=0)\r\n\t\t\t\tputchar(' ');\r\n\t\t\tint digit = str[i] - '0';\r\n\t\t\tputchar(' ');\r\n\t\t\tfor (j=0; j<M; j++){\r\n\t\t\t\tputchar(table[digit][0]?'-':' ');\r\n\t\t\t}\r\n\t\t\tputchar(' ');\r\n\t\t}\r\n\t\tputchar('\\n');\r\n\t\tfor (k=0; k<M; k++){\r\n\t\t\tfor (i=0; str[i]; i++){\r\n\t\t\t\tif (i!=0)\r\n\t\t\t\t\tputchar(' ');\r\n\t\t\t\tint digit = str[i] - '0';\r\n\t\t\t\tputchar(table[digit][1]?'|':' ');\r\n\t\t\t\tfor (j=0; j<M; j++){\r\n\t\t\t\t\tputchar(' ');\r\n\t\t\t\t}\r\n\t\t\t\tputchar(table[digit][2]?'|':' ');\r\n\t\t\t}\r\n\t\t\tputchar('\\n');\r\n\t\t}\r\n\t\tfor (i=0; str[i]; i++){\r\n\t\t\tif (i!=0)\r\n\t\t\t\tputchar(' ');\r\n\t\t\tint digit = str[i] - '0';\r\n\t\t\tputchar(' ');\r\n\t\t\tfor (j=0; j<M; j++){\r\n\t\t\t\tputchar(table[digit][3]?'-':' ');\r\n\t\t\t}\r\n\t\t\tputchar(' ');\r\n\t\t}\r\n\t\tputchar('\\n');\r\n\t\tfor (k=0; k<M; k++){\r\n\t\t\tfor (i=0; str[i]; i++){\r\n\t\t\t\tif (i!=0)\r\n\t\t\t\t\tputchar(' ');\r\n\t\t\t\tint digit = str[i] - '0';\r\n\t\t\t\tputchar(table[digit][4]?'|':' ');\r\n\t\t\t\tfor (j=0; j<M; j++){\r\n\t\t\t\t\tputchar(' ');\r\n\t\t\t\t}\r\n\t\t\t\tputchar(table[digit][5]?'|':' ');\r\n\t\t\t}\r\n\t\t\tputchar('\\n');\r\n\t\t}\r\n\t\tfor (i=0; str[i]; i++){\r\n\t\t\tif (i!=0)\r\n\t\t\t\tputchar(' ');\r\n\t\t\tint digit = str[i] - '0';\r\n\t\t\tputchar(' ');\r\n\t\t\tfor (j=0; j<M; j++){\r\n\t\t\t\tputchar(table[digit][6]?'-':' ');\r\n\t\t\t}\r\n\t\t\tputchar(' ');\r\n\t\t}\r\n\t\tputchar('\\n');\r\n\t\tputchar('\\n');\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":779,
"code":"\n#include<cstdio>\r\nint main(){\r\n    int n,k;\r\n    while(scanf(\"%d%d\",&n,&k) == 2){\r\n        printf(\"%d\\n\",n<k?2:n*2\/k+(n*2%k>0));\r\n    }    \r\n    return 0;\r\n}"
},
{
"pid":781,
"code":"\n#include <stdio.h>\r\n#include <string.h>\r\nint arr[32];\r\nint ok;\r\n\r\nint intToString(int n, int jinzhi){\r\n\tint i = 0;\r\n\twhile(n){\r\n\t\tarr[i++] = n % jinzhi;\r\n\t\tn \/= jinzhi;\r\n\t}\r\n\tint left = 0, right = i - 1;\r\n\twhile(left < right){\r\n\t\tif(arr[left++] != arr[right--])\r\n\t\t\treturn 0;\r\n\t}\r\n\treturn 1;\r\n}\r\n\r\nvoid proceed(int n){\r\n\tint i;\r\n\tfor(i = 2; i <= 16; ++i){\r\n\t\tif(intToString(n, i)){\r\n\t\t\tif(!ok){\r\n\t\t\t\tprintf(\"number %d is palindrom in basis\", n);\r\n\t\t\t\tok = 1;\r\n\t\t\t}\r\n\t\t\tprintf(\" %d\", i);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nint main(){\r\n\tint n;\r\n\twhile(scanf(\"%d\", &n), n){\r\n\t\tok = 0; proceed(n);\r\n\t\tif(!ok) printf(\"number %d is not a palindrom\", n);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":782,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int n,m,p,i,t;\r\n    while(scanf(\"%d%d%d\",&n,&m,&p)!=EOF)\r\n    {\r\n        t=m;\r\n        for(i=1;i<p;i++)\r\n        {\r\n            t*=m;\r\n            t%=7;\r\n        }\r\n        if(t+n<=7)\r\n         printf(\"%d\\n\",t+n);\r\n         else\r\n         printf(\"%d\\n\",(t+n)%7);\r\n     }\r\n     return 0;\r\n}"
},
{
"pid":783,
"code":"\n#include <stdio.h>\r\nint gcd(int a,int b){\r\n\treturn b?gcd(b,a%b):a;\r\n}\r\nint main(){\r\n\tint T,a,b,c;\r\n\twhile (scanf(\"%d%d%d\",&a,&b,&c)!=EOF){\r\n\t\tif (c%gcd(a,b)==0)\r\n\t\t\tprintf(\"YES\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"NO\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":784,
"code":"\n#include<stdio.h>\r\nint a[100],b[100];\r\nint main()\r\n{\r\n\tint n,m,sum=0,i,j;\r\n\tscanf(\"%d%d\",&n,&m);\r\n\tfor(i=0;i<n;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\tfor(i=0;i<m;i++)\r\n\t\tscanf(\"%d\",&b[i]);\r\n\tfor(i=0;i<n;i++)\r\n\t\tfor(j=0;j<m;j++)\r\n\t\t\tsum+=a[i]*b[j];\r\n\tprintf(\"%d\\n\",sum);\r\n}"
},
{
"pid":785,
"code":"\n#include<iostream>  \r\n#include<cmath>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nint main() {  \r\n  double a, b, s;  \r\n  while (cin >> a >> b && (a || b)) {  \r\n    double len = sqrt(a * a + 9 * b * b);  \r\n    printf (\"%.0lf\\n\", len);  \r\n  }  \r\n}"
},
{
"pid":786,
"code":"\n#include<iostream>  \r\n#include<string>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int n;  \r\n    string a,b;  \r\n    cin>>n;  \r\n    while (n--)  \r\n    {  \r\n        int sum1=0,sum2=0;  \r\n        cin>>a>>b;  \r\n        if (a!=b)  \r\n            cout<<\"NO\"<<endl;  \r\n        else  \r\n        {  \r\n            for (string::size_type i=0;i!=a.size();i++)  \r\n            {  \r\n                if (i%2)  \r\n                    sum1+=a[i]-'0';  \r\n                    else  \r\n                        sum2+=a[i]-'0';  \r\n            }  \r\n            if ((sum1-sum2)%11==0)  \r\n                cout<<\"YES\"<<endl;  \r\n            else  \r\n                cout<<\"NO\"<<endl;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":787,
"code":"\n#include <string>  \r\n#include <vector>  \r\n#include <iostream>  \r\n#include <set>  \r\n#include<cstring>  \r\n#include <map>  \r\n#include <math.h>  \r\nusing namespace std;  \r\nint MOD=1000000007;  \r\nint a[120];  \r\nint run(int n)  \r\n{  \r\n    int i ,j;  \r\n    long long dp[120];  \r\n    int last[120];  \r\n    for(i = 0; i < 120; i++)  \r\n    dp[i] = last[i] = 0;  \r\n    for(i = 1; i <= n; i++)  \r\n    {  \r\n        dp[i] = (2* dp[i-1]) % MOD;  \r\n        if(last[a[i-1]] == 0)  \r\n        dp[i] = dp[i] + 1;  \r\n        else  \r\n        dp[i] = (dp[i] - dp[last[a[i-1]]-1] + MOD) % MOD;  \r\n        last[a[i-1]] = i;  \r\n    }  \r\n    return dp[n] % MOD;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,i,j;  \r\n    while(cin>>n)  \r\n    {  \r\n        memset(a,0,sizeof(a));  \r\n        for(i = 0; i < n; i++)  \r\n        cin>>a[i];  \r\n        cout<<run(n)<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":788,
"code":"\n#include<stdio.h>  \r\nint g[120] ;  \r\nint gcd(int x,int y) \r\n{  \r\n    int t ;  \r\n    while(y)  \r\n    {  \r\n        t=x%y ;  \r\n        x=y ;  \r\n        y=t ;  \r\n    }  \r\n    return x ;  \r\n}  \r\nint main()  \r\n{  \r\n    int i,n,max,x,num ;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        max=0 ;  \r\n        for(i=0 ;i<n ;i++)  \r\n        {  \r\n            scanf(\"%d\",&g[i]) ;  \r\n            max=max < g[i] ? g[i] : max ;  \r\n        }  \r\n        x=g[0] ;  \r\n        for(i=1 ;i<n ;i++)  \r\n              x=gcd(x,g[i]) ;  \r\n        num=max\/x-n ;  \r\n        printf(\"%s\\n\",num&1 ? \"Alice\" : \"Bob\") ;\r\n    }  \r\n    return 0 ;  \r\n}"
},
{
"pid":790,
"code":"\n#include<stdio.h>  \r\n#define N 1005  \r\nint father[N],rank[N];  \r\nvoid Init()  \r\n{  \r\n    for(int i=1;i<=N;i++)  \r\n    {  \r\n        father[i]=i;  \r\n        rank[i]=1;  \r\n    }  \r\n}  \r\nint Find_Father(int x)  \r\n{  \r\n    if(x!=father[x])  \r\n    father[x]=Find_Father(father[x]);  \r\n    return father[x];  \r\n}  \r\nvoid Union(int a,int b)  \r\n{  \r\n    int x=Find_Father(a);  \r\n    int y=Find_Father(b);  \r\n    if(x==y) return;  \r\n    if(rank[x]>rank[y])  \r\n    {  \r\n        rank[x]+=rank[y];  \r\n        father[y]=x;  \r\n    }  \r\n    else  \r\n    {  \r\n        rank[y]+=rank[x];  \r\n        father[x]=y;  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        Init();  \r\n        int a,b;  \r\n        for(int i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            Union(a,b);  \r\n        }  \r\n        int MAX=0;  \r\n        for(int i=1;i<=N;i++)  \r\n        if(rank[i]>MAX) MAX=rank[i];  \r\n        printf(\"%d\\n\",MAX);  \r\n    }  \r\n}"
},
{
"pid":791,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint a[10];  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(~scanf(\"%d\", &n))  \r\n    {  \r\n        int Min = 0x3f3f3f3f;  \r\n        for(int i = 1; i < 10; i++)  \r\n        {  \r\n            scanf(\"%d\", &a[i]);  \r\n            Min = min(Min, a[i]);  \r\n        }  \r\n        if(n < Min)  \r\n        {  \r\n            puts(\"-1\");  \r\n            continue;  \r\n        }  \r\n        for(int i = n\/Min-1; i >= 0; i--)  \r\n        {  \r\n            for(int j = 9; j > 0; j--)  \r\n            {  \r\n                if(n>=a[j] && (n-a[j])\/Min>=i)  \r\n                {  \r\n                    printf(\"%d\", j);  \r\n                    n -= a[j];  \r\n                    break;  \r\n                }  \r\n            }  \r\n        }  \r\n        puts(\"\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":793,
"code":"\n#include<stdio.h>\r\nint a[1000005];\r\nint main()\r\n{\r\n    int n,i,k;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        k=0;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            if(a[i]==i)\r\n             k=1;\r\n        }\r\n        if(k) printf(\"Yes\\n\");\r\n        else printf(\"No\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":794,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\nint main()  \r\n{  \r\n    long long n,m,y,x;  \r\n    scanf(\"%lld %lld\",&n,&m);  \r\n    for(x=sqrt(2*m);x>=1;x--)  \r\n    {  \r\n        if(2*m%x==0)  \r\n        {  \r\n            y=2*m\/x;  \r\n            if((x+y-1)%2==0)  \r\n            printf(\"[%lld,%lld]\\n\",(y-x+1)\/2,(x+y-1)\/2);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":800,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint a[1010];\r\nint cmp(const void *a,const void *b)\r\n{\r\n\treturn *(int *)a-*(int *)b;\r\n}\r\nint main()\r\n{\r\n\tint n,i;\r\n\twhile(scanf(\"%d\",&n)!=EOF)\r\n\t{\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\tqsort(a,n,sizeof(a[0]),cmp);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t\tprintf(\"%c \",a[i]%26+65);\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":801,
"code":"\n#include <stdio.h>  \r\n#include <queue>  \r\n#include <string.h>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nstruct node  \r\n{  \r\n    char ch,code[100];  \r\n    int val,left,right,fa,num;  \r\n    friend bool operator<(node a, node b)  \r\n    {  \r\n        if(a.val>b.val) return true;  \r\n        if(a.val==b.val&&a.ch>b.ch) return true;  \r\n        return false;  \r\n    }  \r\n}tree[200];  \r\nint N;    \r\nchar str[100];   \r\nbool cmp(node a,node b)  \r\n{  \r\n    return a.num<b.num;  \r\n}  \r\nvoid dfs(int t,int q)  \r\n{  \r\n    if(t<N)  \r\n    {    \r\n        str[q]='\\0';  \r\n        strcpy(tree[t].code,str);   \r\n        return ;  \r\n    } \r\n    else  \r\n    {  \r\n        if(tree[t].left!=-1)  \r\n        {  \r\n            str[q]='0';  \r\n            q++;  \r\n            dfs(tree[t].left,q);   \r\n            q--;  \r\n        }\r\n        if(tree[t].right!=-1)  \r\n        {  \r\n            str[q]='1';  \r\n            q++;  \r\n            dfs(tree[t].right,q);  \r\n            q--;  \r\n        }\r\n    } \r\n}\r\nint main()  \r\n{  \r\n    priority_queue<node>s;  \r\n    int n;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        if(n==0)  \r\n        continue;   \r\n        memset(str,0,sizeof(str));  \r\n        memset(tree,0,sizeof(tree));   \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            getchar();  \r\n            node temp;  \r\n            scanf(\"%c %d\",&temp.ch,&temp.val);  \r\n            temp.left=temp.right=temp.fa=-1;  \r\n            temp.num=i;  \r\n            s.push(temp);  \r\n        }  \r\n        N=n;  \r\n        int t=0;   \r\n        while(s.size()>1)  \r\n        {  \r\n            node temp1,temp2,temp3;  \r\n            temp1=s.top();s.pop();  \r\n            temp2=s.top();s.pop();  \r\n            temp3.val=temp1.val+temp2.val;  \r\n            temp3.ch=temp1.ch;  \r\n            temp3.left=temp1.num;  \r\n            temp3.right=temp2.num;  \r\n            temp3.fa=0;  \r\n            temp1.fa=temp2.fa=temp3.num=n++;  \r\n            tree[t++]=temp1;  \r\n            tree[t++]=temp2;  \r\n            s.push(temp3);  \r\n        }     \r\n        tree[t++]=s.top();  \r\n        s.pop();  \r\n        sort(tree,tree+t,cmp);   \r\n        dfs(t-1,0);   \r\n        for(int i=0;i<N;i++)  \r\n        printf(\"%c:%s\\n\",tree[i].ch,tree[i].code);  \r\n    }  \r\n}"
},
{
"pid":802,
"code":"\n#include <iostream>\r\n#include <cstdlib>\r\n#include <cstdio>\r\n#include <cstring>\r\nusing namespace std;\r\nconst int MAX = 100000;\r\nchar map[28] = \"000000000111111111222222222\";\r\nint main()\r\n{  \r\n    int ks[3];\r\n    char instr[MAX],instr2[MAX];\r\n    int outstr[MAX];\r\n\r\n    int sum = 0;\r\n    for(int i = 0; i < 3; i++)\r\n    {\r\n        cin>>ks[i];\r\n        sum += ks[i];\r\n    }\r\n\r\n    while(sum)\r\n    {\r\n\r\n        cin.get();\r\n        cin>>instr;\r\n\r\n        char ch;\r\n        int length = strlen(instr);\r\n        for(int i = 0; i < 3; i++)\r\n        {\r\n\r\n            int k = 0;\r\n            for(int j = 0; j < length; j++)\r\n            {\r\n                ch = instr[j];\r\n                if(ch == '_') ch = ch - '_' + 'z' + 1;\r\n\r\n                if(i == (map[ch - 'a'] - '0'))\r\n                {\r\n                    outstr[k++] = j;\r\n                }                \r\n            }\r\n\r\n            if(k)\r\n            {\r\n                instr2[outstr[((0 + ks[i]) % k)]] = instr[outstr[0]];\r\n                for(int j = 0; j < k; j++)\r\n                {\r\n                    instr2[outstr[j]] = instr[outstr[(j - ks[i] + k*ks[i]) % k]];\r\n                }\r\n            }\r\n            instr2[length] = '\\0';\r\n        }\r\n\r\n        cout<<instr2<<endl;\r\n\r\n        sum = 0;\r\n        for(int i = 0; i < 3; i++)\r\n        {\r\n            cin>>ks[i];\r\n            sum += ks[i];\r\n        }\r\n    }\r\n\r\n    return 0;\r\n}"
},
{
"pid":803,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#define ll long long  \r\n#define N 110000  \r\nint main() {  \r\n   ll i,sum,b,k,len,f[N];  \r\n   char s[N],st[3];  \r\n   while(scanf(\"%s%s%lld\",s,st,&b)!=EOF) {  \r\n     if(strcmp(st,\"\/\")==0) {  \r\n        sum=0;len=0;  \r\n        for(i=0;s[i];i++) {  \r\n            sum=sum*10+s[i]-'0';  \r\n             f[len++]=sum\/b;  \r\n             sum=sum%b;  \r\n        }  \r\n        k=0;  \r\n        for(i=0;i<len;i++) {  \r\n            if(k)  \r\n            printf(\"%lld\",f[i]);  \r\n            else if(f[i]){  \r\n                k=1;  \r\n                printf(\"%lld\",f[i]);  \r\n            }  \r\n        }  \r\n        if(k==0)  \r\n            printf(\"0\");  \r\n        printf(\"\\n\");  \r\n     }  \r\n     else {  \r\n        sum=0;  \r\n        for(i=0;s[i];i++) {  \r\n            sum=sum*10+s[i]-'0';  \r\n            sum=sum%b;  \r\n        }  \r\n        printf(\"%lld\\n\",sum);  \r\n     }  \r\n   }  \r\n\treturn 0;  \r\n}"
},
{
"pid":804,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    int n, i, a[1002], m;  \r\n    while(~scanf(\"%d\", &n) && n)  \r\n    {  \r\n        for(i = 0; i < n; i++)  \r\n            scanf(\"%d\", &a[i]);  \r\n        scanf(\"%d\", &m);  \r\n        if(n<m)  \r\n        {  \r\n            printf(\"0\\n\");  \r\n            continue;  \r\n        }  \r\n        int low = 0, high = 2000000, mid, ans;  \r\n        while(low <= high)   \r\n        {  \r\n            mid = (low + high) \/ 2; \r\n            int sum = 0;  \r\n            for(i = 0; i < n; i++)  \r\n            {  \r\n                if(a[i] > mid) \r\n                    sum += mid;  \r\n                else  \r\n                    sum += a[i];  \r\n            }  \r\n            if(sum >= mid * m)  \r\n            {  \r\n                low = mid + 1;  \r\n                ans = mid; \r\n            }  \r\n            else  \r\n                high = mid - 1;  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":806,
"code":"\n#include <stdio.h>\r\nint main()\r\n{\r\n    int a,b,c,n;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        char d[12];\r\n        scanf(\"%s\",d);\r\n\t\tif(d[0] =='S'){\r\n        \tscanf(\"%d%d%d\",&a,&b,&c);\r\n        \tprintf(\"%d\\n\",a+b+c);\r\n        }\r\n        else\r\n        {\r\n            scanf(\"%d%d\",&a,&b);\r\n            printf(\"%d\\n\",a+b);\r\n        }\r\n    }   \r\n\treturn 0;\r\n}"
},
{
"pid":807,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<map>  \r\n#include<iterator>  \r\nusing namespace std;  \r\nstruct KILL  \r\n{  \r\n  int killed;  \r\n  int pret; \r\n  int frequent;  \r\n  KILL()  \r\n  {  \r\n   killed=0;  \r\n   pret=-1000;  \r\n   frequent=0;  \r\n  }  \r\n  void died()  \r\n  {  \r\n    killed=0;  \r\n    frequent=0;  \r\n    pret=-1000;  \r\n  }  \r\n  void chenghao(const char* name,const int cur)  \r\n  {  \r\n    if(cur-pret <= 10)  \r\n    {  \r\n      pret=cur;  \r\n      frequent++;  \r\n    }  \r\n    else           \r\n    {  \r\n      pret=cur;  \r\n      frequent=1;   \r\n    }          \r\n    if(frequent == 2)  \r\n        printf(\"%s has Double Kill\\n\",name);                   \r\n    else if(frequent == 3)  \r\n        printf(\"%s has Triple Kill\\n\",name);                 \r\n    else if(frequent == 4)  \r\n        printf(\"%s has Ultra Kill\\n\",name);        \r\n    else if(frequent >= 5)  \r\n        printf(\"%s has Rampage\\n\",name);  \r\n    killed++;  \r\n    if(killed ==3)  \r\n        printf(\"%s is Killing Spree\\n\", name);  \r\n    else if(killed == 4)           \r\n        printf(\"%s is Dominating\\n\", name);         \r\n    else if (killed == 5)           \r\n        printf(\"%s is Mega Kill\\n\", name);  \r\n    else if (killed == 6)  \r\n        printf(\"%s is Unstoppable\\n\", name);  \r\n    else if (killed == 7)  \r\n        printf(\"%s is Wicked Sick\\n\", name);  \r\n    else if (killed == 8)  \r\n        printf(\"%s is M-m-m-m...onster Kill\\n\", name);  \r\n    else if (killed == 9)  \r\n        printf(\"%s is Godlike\\n\", name);  \r\n    else if (killed >= 10)  \r\n        printf(\"%s is Beyond Godlike\\n\", name);  \r\n  }  \r\n};  \r\nint main()  \r\n{  \r\n  int t,n,i,m,s;  \r\n  char name1[100],name2[100];  \r\n  while(~scanf(\"%d\",&t))  \r\n  {  \r\n    while(t--)  \r\n    {  \r\n      map<string,KILL>player;  \r\n      scanf(\"%d\",&n);   \r\n      bool thefirst=true;  \r\n      while(n--)  \r\n      {  \r\n        scanf(\"%s kill %s in %d:%d\", name1, name2, &m, &s);  \r\n          int cur=m*60+s;  \r\n        if(!strcmp(name1,name2)) \r\n          {  \r\n            player[name1].died();  \r\n          }     \r\n        else  \r\n        {  \r\n         if(thefirst)  \r\n         {  \r\n          printf(\"%s has First Blood\\n\",name1);  \r\n          thefirst=false;  \r\n         }  \r\n          player[name2].died();  \r\n          player[name1].chenghao(name1,cur);   \r\n        }  \r\n      }  \r\n    }  \r\n  }  \r\n  return 0;  \r\n}"
},
{
"pid":808,
"code":"\n#include<cstdio>  \r\n#include<cstdlib>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nstruct Node{  \r\n    int w,x;   \r\n}A[1010];  \r\nint dp[10010];  \r\nbool cmp(Node a,Node b){\r\n    return a.x-a.w>b.x-b.w;  \r\n}  \r\nint MAX(int a,int b){  \r\n    return a>b?a:b;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,l,i,j,k;  \r\n    while(scanf(\"%d%d\",&n,&l)!=EOF){  \r\n        for(i=0;i<n;++i){  \r\n            scanf(\"%d%d\",&A[i].w,&A[i].x);  \r\n        }  \r\n        sort(A,A+n,cmp);  \r\n        memset(dp,0,sizeof(dp));  \r\n        int ans=0;  \r\n        for(i=0;i<n;++i){  \r\n            for(j=l;j>=A[i].w;--j){  \r\n                if(l-j>=A[i].x-A[i].w){ \r\n                    dp[j]=MAX(dp[j],dp[j-A[i].w]+A[i].w);  \r\n                    ans=MAX(dp[j],ans);  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":809,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmp(const void *a,const void *b)\r\n{\r\n    return *(int *)a-*(int *)b;\r\n}\r\nint main()\r\n{\r\n    int s,a[7];\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        int i;\r\n        double sum=0.0;\r\n        for(i=0;i<7;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        qsort(a,7,sizeof(a[0]),cmp);\r\n        sum+=(a[0]+a[6]+a[3]);\r\n        printf(\"%.2lf\\n\",sum\/3);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":810,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint ac[1000],fun[1000];  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        memset(ac,0,sizeof(ac));  \r\n        memset(fun,0,sizeof(fun));  \r\n        for(i=0; i<n; i++)  \r\n            scanf(\"%d\",&ac[i]);  \r\n        for(i=0; i<n; i++)  \r\n            scanf(\"%d\",&fun[i]);  \r\n        sort(ac,ac+n);  \r\n        sort(fun,fun+n);  \r\n        if(n%2)  \r\n            printf(\"NO\\n\");  \r\n        else  \r\n        {  \r\n            int cnt=0;  \r\n            for(i=0; i<n\/2; i++)  \r\n                if(ac[i]>fun[n\/2+i])  \r\n                    cnt++;  \r\n            for(i=0; i<n\/2; i++)  \r\n                if(ac[n\/2+i]>fun[i])  \r\n                    cnt++;  \r\n            if(n\/2==cnt)  \r\n                printf(\"YES\\n\");  \r\n            else  \r\n                printf(\"NO\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":811,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nint cmp1(int a,int b,int c)\r\n{\r\n\tif(a<b)\r\n\ta=b;\r\n\tif(a<c)         \r\n\ta=c;\r\n\treturn a;\r\n}\r\nint cmp2(int a,int b,int c)\r\n{\r\n\tif(a>b)\r\n\ta=b;\r\n\tif(a>c)         \r\n\ta=c;\r\n\treturn a;\r\n}\r\nbool cmp3(int a,int b)\r\n{\r\n\treturn a>b;         \r\n\r\n}\r\nint main()\r\n{\r\n\tint n,m,j,i,l,s;\r\n\tint a[10100],b[10100];\r\n\twhile(scanf(\"%d\",&n)!=EOF)\r\n\t{\r\n\t\ts=1;\r\n\t\tmemset(a,0,sizeof(a));    \r\n\t\tmemset(b,0,sizeof(b));\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t\tscanf(\"%d\",&a[i]);\t\t\r\n\t\tfor(i=1;i<=n;i++)\r\n\t\t{\r\n\t\t    if((i%3==0)&&(s%2!=0))    \r\n\t\t    {\r\n\t\t    \tb[s]=cmp1(a[i],a[i-1],a[i-2]);\r\n\t\t    \ts++;\r\n\t\t    }\r\n\t\t\telse if((i%3==0)&&(s%2==0)) \r\n\t\t\t{\t\t\t\r\n\t\t\t\tb[s]=cmp2(a[i-2],a[i-1],a[i]);\r\n\t\t\t\ts++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsort(b,b+s,cmp3);\r\n\t\tprintf(\"%d\\n\",b[0]); \r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":812,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int n,a[33];\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        int i,k,sum=0,t,m;\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d\",&m);\r\n            k=0;\r\n            t=m;\r\n            while(t)\r\n            {\r\n                if(t&1) k++;\r\n                t>>=1;\r\n            }\r\n            if(k%2==0&&k)\r\n            sum+=m;\r\n        }\r\n        k=0;\r\n        while(sum)\r\n        {\r\n            a[k++]=sum%2;\r\n            sum\/=2;\r\n        }\r\n        if(k)\r\n        {\r\n          for(i=k-1;i>=0;i--)\r\n          printf(\"%d\",a[i]);\r\n        }\r\n        else printf(\"0\");\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":813,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int n,k;  \r\n    while(cin>>n>>k,n,k)  \r\n    {  \r\n        int i,j,temp=0;  \r\n        for(i=1;i<n\/2+1;++i)   \r\n        {  \r\n            if(i*(n-i)==k)    \r\n            {  \r\n                temp=1;  \r\n                break;  \r\n            }  \r\n        }  \r\n        if(temp)  \r\n            cout<<\"YES\"<<endl;  \r\n        else  \r\n            cout<<\"NO\"<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":814,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#define Max(a,b) a>b?a:b  \r\nint a[3010];  \r\nint dp[3010];  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(scanf(\"%d\",&n)&&n!=-1)  \r\n    {  \r\n        int i,j,max=0;        \r\n        for(i=0;i<n;i++)  \r\n            scanf(\"%d\",&a[i]);  \r\n        memset(dp,0,sizeof(dp));  \r\n        for(i=n-1;i>=0;i--)  \r\n        {  \r\n            for(j=i;j<n;j++)  \r\n                if(a[i]<a[j])  \r\n                    dp[i]=Max(dp[i],dp[j]+1);  \r\n            if(dp[i]>max)  \r\n                max=dp[i];  \r\n        }  \r\n        printf(\"%d\\n\",max+1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":815,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int s;\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        double x1,x2,x3,y1,y2,y3,a,b,c;\r\n        scanf(\"%lf%lf%lf%lf%lf%lf\",&x1,&y1,&x2,&y2,&x3,&y3);\r\n        a=sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\r\n        b=sqrt((x3-x2)*(x3-x2)+(y3-y2)*(y3-y2));\r\n        c=sqrt((x3-x1)*(x3-x1)+(y3-y1)*(y3-y1));\r\n        if(a+b>c&&a+c>b&&b+c>a)\r\n        printf(\"%.3lf\\n\",(sqrt((a+b+c)*(a+b-c)*(a+c-b)*(b+c-a)))\/4);\r\n        else\r\n        printf(\"Can not form a triangle.\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":816,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n\r\nusing namespace std;  \r\n\r\nint main()  \r\n{  \r\n    int i, flag;  \r\n    char s[15];  \r\n    while(~scanf(\"%s\", s))  \r\n    {  \r\n        if(!((s[0] >= 'a' && s[0] <= 'z') || s[0] == '_' || (s[0] >= 'A' && s[0] <= 'Z')))  \r\n        {  \r\n            printf(\"No\\n\");  \r\n        }  \r\n        else  \r\n        {  \r\n            flag = 1;  \r\n            for(i = 1; s[i]; i++)  \r\n            {  \r\n                if(!((s[i] >= 'a' && s[i] <= 'z') || s[i] == '_' || (s[i] >= 'A' && s[i] <= 'Z')  \r\n                   || (s[i] >= '0' && s[i] <= '9')))  \r\n                   {  \r\n                    flag = 0;  \r\n                    break ;  \r\n                   }  \r\n            }  \r\n            if(flag == 0)  \r\n            {  \r\n                printf(\"No\\n\");  \r\n            }  \r\n            else  \r\n            {  \r\n                printf(\"Yes\\n\");  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":817,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nchar a[100][100];\r\nint main()\r\n{\r\n\tint n,i;\r\n\tscanf(\"%d\",&n);\r\n\tgetchar();\r\n\tfor(i=0;i<n;i++)\r\n\t\tgets(a[i]);\r\n\tfor(i=0;i<n;i++)\r\n\t\tprintf(\"%c\",a[i][0]);\r\n\tprintf(\"\\n\");\r\n\treturn 0;\r\n}"
},
{
"pid":818,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int t, n, m, i = 0;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d%d\",&m,&n);  \r\n        printf(\"# %d:\\n\",++i);  \r\n        if(m*n%2!=0)  \r\n            printf(\"%d.41\\n\",m*n);  \r\n    else  \r\n            printf(\"%d.00\\n\",m*n);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":819,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar s[1005];  \r\nint main()  \r\n{  \r\n    int c,t,i;  \r\n    while(~scanf(\"%s\",s))  \r\n    {  \r\n        int len;            \r\n\t\tint cnt=0;            \r\n\t\tint y=0;  \r\n        len=strlen(s);  \r\n        c=0;  \r\n        for(i=0;i<len;i++)  \r\n            if(s[i]=='c')  \r\n            c++;  \r\n        if(c==0)  \r\n            printf(\"%d\\n\",len-1);  \r\n        else if(c%2)  \r\n            printf(\"0\\n\");  \r\n        else if(c%2==0)  \r\n        {  \r\n\r\n            for(i=0;i<len;i++)  \r\n            {  \r\n                if(s[i]=='c')  \r\n                    y++;  \r\n                if(y==c\/2)  \r\n                {  \r\n                    t=i;  \r\n                    break;  \r\n                }  \r\n            }  \r\n            for(i=t;i<len;i++)  \r\n            {  \r\n                if(s[i]=='.')  \r\n                    cnt++;  \r\n                if(s[i+1]=='c')  \r\n                    break;  \r\n            }  \r\n            printf(\"%d\\n\",cnt+1);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":820,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nchar a[205];\r\nint main()\r\n{\r\n    int n,i,j,t[4],k,m;\r\n    while(scanf(\"%s\",a)!=EOF)\r\n    {\r\n        n=strlen(a);\r\n        i=0;\r\n      while(1)\r\n      {\r\n            t[0]=t[1]=t[2]=t[3]=0;\r\n            for(;i<n;i++)\r\n            if((i==0||a[i-1]=='f'||a[i-1]=='w')&&a[i]=='w') t[0]++;\r\n            else\r\n   \t\t\t{\r\n    \t\t\tbreak;\r\n   \t\t\t}\r\n            for(;i<n;i++)\r\n            if((i==0||a[i-1]=='w'||a[i-1]=='o')&&a[i]=='o') t[1]++;\r\n            else\r\n\t\t\t{\r\n    \t\t\tbreak;\r\n   \t\t\t}\r\n            for(;i<n;i++)\r\n            if((i==0||a[i-1]=='l'||a[i-1]=='o')&&a[i]=='l') t[2]++;\r\n            else\r\n    \t\t{\r\n    \t\t\tbreak;\r\n   \t\t\t}\r\n            for(;i<n;i++)\r\n            if((i==0||a[i-1]=='l'||a[i-1]=='f')&&a[i]=='f') t[3]++;\r\n\t\t   \telse\r\n    \t\t{\r\n    \t\t\tbreak;\r\n   \t\t\t}\r\n            k=t[0];\r\n            for(j=1;j<4;j++)\r\n            if(k!=t[j]) break;\r\n            if(j!=4)\r\n            {\r\n                printf(\"INVALID\\n\");\r\n                break;\r\n            }\r\n            if(i==n&&j==4)\r\n            {\r\n                printf(\"VALID\\n\");\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":821,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n\r\nint comp ( const void *a, const void *b )  \r\n{  \r\n    return * ( int * ) a - * ( int * ) b;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int i,m;  \r\n    int a[510];  \r\n    int P=0,Q=0;  \r\n    scanf(\"%d\",&m);  \r\n    for (i=0; i<m; i++)  \r\n    {  \r\n        scanf(\"%d\",&a[i]);  \r\n    }  \r\n    qsort(a,m,sizeof(int),comp);  \r\n    for (i=0; i<m; i+=2)  \r\n    {  \r\n        P += a[i];  \r\n    }  \r\n    for (i=1; i<m; i+=2)  \r\n    {  \r\n        Q += a[i];  \r\n    }  \r\n    printf(\"%d\\n\",P>Q?P-Q:Q-P);  \r\n    return 0;  \r\n}"
},
{
"pid":822,
"code":"\n#include <stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int n,i,j;  \r\n    scanf(\"%d\",&n);  \r\n    for (i=0; i<n; i++)  \r\n    {  \r\n        for (j=0; j<n; j++)  \r\n        {  \r\n            printf(\"*\");  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n}"
},
{
"pid":823,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nint insert(int dp[],int k,int x)  \r\n{  \r\n    int i;  \r\n    for(i=k;i>=0;i--)  \r\n    {  \r\n        if(dp[i]<x)  \r\n        {  \r\n            dp[i+1]=x;  \r\n            if(k==i)  \r\n            {  \r\n                return 1;  \r\n            }  \r\n            else  \r\n            {  \r\n                return 0;  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int n,i,j,head,tail;  \r\n    int seq[55],dp1[30],dp2[30];  \r\n    dp1[0]=-0xffffff;dp2[0]=-0xffffff;  \r\n    while(scanf(\"%d\",&n)&&n)  \r\n    {  \r\n        head=0;tail=0;  \r\n        for(i=0;i<n;i++)  \r\n            scanf(\"%d\",&seq[i]);  \r\n        if(n<=2)  \r\n        {  \r\n            printf(\"1\\n\");  \r\n            continue;  \r\n        }  \r\n        for(i=0,j=n-1;i<=j;i++,j--)  \r\n        {  \r\n            if(i==j)  \r\n            {  \r\n                if(insert(dp1,head,seq[i])==1)  \r\n                    head++;  \r\n                break;  \r\n            }  \r\n            while(insert(dp1,head,seq[i])!=1)  \r\n            {  \r\n                i++;  \r\n                if(i>=j)  \r\n                    break;  \r\n            }  \r\n            if(i>j)  \r\n                break;  \r\n            else if(i<j)  \r\n                head++;  \r\n            else  \r\n                i--;  \r\n            while(insert(dp2,tail,seq[j])!=1)  \r\n            {  \r\n                j--;  \r\n                if(i>=j)  \r\n                    break;  \r\n            }  \r\n            if(i>j)  \r\n                break;  \r\n            else if(i<j)  \r\n                tail++;  \r\n            else  \r\n                j++;  \r\n        }  \r\n        if(dp1[head]>dp2[tail])  \r\n        {  \r\n            if(head>tail)  \r\n                printf(\"%d\\n\",tail*2+1);  \r\n            else  \r\n                printf(\"%d\\n\",head*2-1);  \r\n        }  \r\n        else if(dp1[head]==dp2[tail])  \r\n        {  \r\n            if(head>=tail)  \r\n                printf(\"%d\\n\",tail*2-1);  \r\n            else  \r\n                printf(\"%d\\n\",head*2-1);  \r\n        }  \r\n        else  \r\n        {  \r\n            if(head>=tail)  \r\n                printf(\"%d\\n\",tail*2-1);  \r\n            else  \r\n                printf(\"%d\\n\",head*2+1);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":824,
"code":"\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n\r\nstruct Node{  \r\n    int x, y;  \r\n    double rate;  \r\n};  \r\n\r\nint cmp(const void *a, const void *b){  \r\n    if ((*(Node *)b).rate - (*(Node *)a).rate < 0)  \r\n        return -1;  \r\n}  \r\n\r\nint main(){  \r\n    int m, n, i;  \r\n    double s;  \r\n    while(scanf(\"%d%d\", &m, &n), m != -1 || n != -1){  \r\n        Node *a = (Node *)malloc(sizeof(Node) * n);  \r\n        for(i = 0; i != n; ++i){  \r\n            scanf(\"%d%d\", &a[i].x, &a[i].y);  \r\n            a[i].rate = a[i].x * 1.0 \/ a[i].y;  \r\n        }  \r\n        qsort(a, n, sizeof(Node), cmp);  \r\n        for(i = s = 0; m > 0 && i < n; ++i){  \r\n            if(a[i].y <= m){  \r\n                s += a[i].x;  \r\n                m -= a[i].y;  \r\n            }else{  \r\n                s += m * a[i].rate;  \r\n                break;  \r\n            }  \r\n        }  \r\n        printf(\"%.3lf\\n\", s);  \r\n        free(a);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":826,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint a[12];\r\nint  main()\r\n{\r\n    int s,n,t;\r\n    char c,d[7];\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        int i,j;\r\n        memset(a,0,sizeof(a));\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n        {\r\n            scanf(\"%d %c %s\",&t,&c,d);\r\n            if(d[0]=='A')\r\n              a[c-65]=1;\r\n            else if(d[0]=='W'&&a[c-65]!=1)\r\n                a[c-65]=2;\r\n        }\r\n        printf(\"Accept: \");\r\n        for(i=0;i<12;i++)\r\n        if(a[i]==1) printf(\"%c\",i+65);\r\n        printf(\"\\n\");\r\n        printf(\"Wrong: \");\r\n        for(i=0;i<12;i++)\r\n        if(a[i]==2) printf(\"%c\",i+65);\r\n        printf(\"\\n\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":827,
"code":"\n#include<stdio.h>\r\nint b[102];\r\nint main()\r\n{\r\n    char a;\r\n    int n,i;\r\n    while(scanf(\"%c\",&a)!=EOF)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n            scanf(\"%d\",&b[i]);\r\n            getchar();\r\n            if(a=='0')\r\n            for(i=0;i<n;i++)\r\n            printf(\"%4o\",b[i]);\r\n            else\r\n            for(i=0;i<n;i++)\r\n            printf(\"%4X\",b[i]);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":828,
"code":"\n#include<iostream>\r\n#include<cmath>\r\n#include<cstring>\r\n#include<cstdio>\r\n#include<algorithm>\r\n#include<queue>\r\n#include<vector>\r\n#include<cctype>\r\n#include<set>\r\n#include<map>\r\ntypedef long long ll;\r\n\r\nusing namespace std;\r\nconst int maxn = 1e6+5;\r\nconst int inf = 0x3f3f3f3f;\r\nconst int INF = 0xfffffff;\r\nconst ll mod = 1e9+7;\r\nll fact[maxn];\r\nll save[1000], z, a, b, n;\r\nint bitlen;\r\nint isgood(int x) {\r\n    for(; x; x\/=10) {\r\n        if(x%10 != a && x%10 != b) {\r\n            return 0;\r\n        }\r\n    }\r\n    return 1;\r\n}\r\n\r\nll ext_gcd(ll a,ll b,ll &x,ll &y)\r\n{\r\n    if(b==0) {\r\n        x = 1, y = 0; return a;\r\n    }\r\n    ll d = ext_gcd(b,a%b,x,y);\r\n    ll t = x; x = y;\r\n    y = t-a\/b*y;\r\n    return d;\r\n}\r\nll Pow(ll a,ll b)\r\n{\r\n    ll ans=1;\r\n    while(b)\r\n    {\r\n        if(b&1)\r\n        {\r\n            b--;\r\n            ans=(ans*a)%mod;\r\n        }\r\n        else\r\n        {\r\n            b\/=2;\r\n            a=(a*a)%mod;\r\n        }\r\n    }\r\n    return ans;\r\n}\r\nll inv_mod(ll a)  \r\n{\r\n    ll x, y, d;\r\n    d = ext_gcd(a, mod, x, y);\r\n    while(x<0) { x+=mod; }\r\n    return x;\r\n}\r\nll Multi(ll x0)\r\n{\r\n    return ((fact[n]%mod)*Pow(fact[x0]*fact[n-x0]%mod,mod-2))%mod;\r\n}\r\n\r\nint main()\r\n{\r\n    ll x, y, gcd, x0, y0, ans;\r\n    fact[0] = 1;\r\n    for(ll i = 1; i <= 1000000; i++){\r\n        fact[i] = fact[i-1]*i%mod;\r\n    }\r\n    while(scanf(\"%lld%lld%lld\",&a,&b,&n)!=EOF)\r\n    {\r\n        ll s = n*b;\r\n        z = ans = 0;\r\n        gcd = ext_gcd(a,b,x,y);\r\n            for(ll i = 0; i <= n; i++){\r\n                if(isgood(a*i+b*(n-i))){\r\n                    ans = (ans+Multi(i))%mod;\r\n                }\r\n            }\r\n        cout<<ans<<endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":829,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nchar a[105];\r\nint main()\r\n{   \r\n    while(scanf(\"%s\",a)!=EOF)\r\n    {\r\n        int n,b=0,i,j,t1=0,t2=0,k=0,count1,count2,sum=0;\r\n        n=strlen(a);\r\n        for(i=0;i<n;i++)\r\n        if(a[i]=='0') sum++;\r\n        else if(a[i]!='-')break;\r\n        for(;i<n;i++)\r\n        if(a[i]!='0'&&a[i]!='-')\r\n        {\r\n            t1=i;\r\n            break;\r\n        }\r\n        for(;i<n;i++)\r\n        if(a[i]=='.')\r\n        {\r\n            t2=i;\r\n            break;\r\n        }\r\n        for(j=1;i+j<n;j++)\r\n        if(j==4) break;\r\n        else b=b*10+a[i+j]-'0';\r\n        b=(b+5)\/10;\r\n        if(a[0]=='-') k=1;\r\n        if(k) printf(\"(\");\r\n        if(t2==0)\r\n        {\r\n            if(sum==n&&a[0]!='-') printf(\"0\");\r\n            else if(sum==n-1&&a[0]=='-') printf(\"0\");\r\n            else\r\n            {\r\n              j=n-t1;\r\n              j%=3;\r\n              count1=count2=0;\r\n              for(i=t1;i<n;i++)\r\n             {\r\n                printf(\"%c\",a[i]);\r\n                count1++;\r\n                if(count1==j&&count2==0&&i!=n-1)\r\n                {\r\n                    printf(\",\");\r\n                    count1=0;\r\n                    count2=1;\r\n                }\r\n                if(count1==3&&i!=n-1)\r\n                {\r\n                    printf(\",\");\r\n                    count1=0;\r\n                }\r\n              }\r\n            }\r\n            printf(\".00\");\r\n        }\r\n        else\r\n        {\r\n            if(t1==t2) printf(\"0\");\r\n            else\r\n            {\r\n              j=t2-t1;\r\n              j%=3;\r\n              count1=count2=0;\r\n              for(i=t1;i<t2;i++)\r\n             {\r\n                printf(\"%c\",a[i]);\r\n                count1++;\r\n                if(count1==j&&count2==0&&i!=t2-1)\r\n                {\r\n                    printf(\",\");\r\n                    count1=0;\r\n                    count2=1;\r\n                }\r\n                if(count1==3&&i!=t2-1)\r\n                {\r\n                    printf(\",\");\r\n                    count1=0;\r\n                }\r\n              }\r\n            }\r\n            printf(\".\");\r\n            if(n-t2>2)\r\n            {\r\n                printf(\"%c%c\",a[t2+1],a[t2+2]);\r\n            }\r\n            else if(n-1==t2) printf(\"00\");\r\n            else\r\n            {\r\n                j=n-t2;\r\n                for(i=t2+1;i<n;i++)\r\n                printf(\"%c\",a[i]);\r\n                for(i=0;i<j-1;i++)\r\n                printf(\"0\");\r\n            }\r\n        }\r\n        if(k) printf(\")\");\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":830,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n    int s;\r\n    double x1,x2,y1,y2,a1,a2;\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        double x,y;\r\n        scanf(\"%lf%lf%lf%lf\",&x1,&y1,&a1,&a2);\r\n        x=x1*a2-y1*a1;\r\n        y=y1*a2+x1*a1;\r\n          printf(\"%.2lf %.2lf\\n\",x,y);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":831,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,i,a[100];  \r\n    int k,j,sum;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        sum=0;  \r\n        k=n%5;  \r\n        j=n\/5;  \r\n        for(i=0;i<n;i++)  \r\n        scanf(\"%d\",&a[i]);  \r\n        if(j==0)  \r\n        {  \r\n            for(i=0;i<n;i++)  \r\n            sum+=a[i];  \r\n            printf(\"%d\\n\",sum+n);  \r\n        }  \r\n        else   \r\n        {  \r\n            for(i=0;i<n;i++)  \r\n            sum+=a[i];  \r\n            sum=sum+n+j*5;  \r\n            printf(\"%d\\n\",sum);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":832,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nconst int maxn = 15;\r\nint dp[1<<maxn];\r\nint sa[maxn][maxn];\r\nint main()\r\n{\r\n    int n;\r\n    while(~scanf(\"%d\", &n))\r\n    {\r\n        for(int i = 0; i < n; i++)\r\n            for(int j = 0; j < n; j++)\r\n                scanf(\"%d\", &sa[i][j]);\r\n        memset(dp, 0, sizeof(dp));\r\n        int ans = 0;\r\n        for(int st =(1<<n)-1; st >= 1; st--)\r\n        {\r\n            for(int i = 0; i < n; i++)\r\n                if((st&(1<<i)) == 0)\r\n                {\r\n                    int temp = -1;\r\n                    for(int j = 0; j < n; j++)\r\n                    {\r\n                        if(st & (1<<j))\r\n                            temp = max(temp, sa[j][i]);\r\n                    }\r\n                    dp[st] = max(dp[st], dp[st|(1<<i)]+temp);\r\n                }\r\n            ans = max(ans, dp[st]);\r\n        }\r\n        printf(\"%d\\n\", ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":833,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        if(n>2)  \r\n        printf(\"Yougth\\n\");  \r\n        else  \r\n        printf(\"Hrdv\\n\");  \r\n    }  \r\n}"
},
{
"pid":834,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nint main() {  \r\n    int n, i, j,a[55],b[4] ,*p;  \r\n    while(scanf(\"%d\", &n) == 1) {  \r\n        for(i = 1; i <= n; ++i)  \r\n            scanf(\"%d\", &a[i]);  \r\n        for(j = b[3] = 0; j < 3; ++j) {  \r\n            p = max_element(a + 1, a + n + 1);  \r\n            b[j] = p - a; b[3] += *p; *p = 0;  \r\n        }  \r\n        sort(b, b + 3);  \r\n        for(i = 0; i < 4; ++i)  \r\n            if(i == 3) printf(\"%d\\n\", b[3]);  \r\n            else printf(\"%d \", b[i]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":835,
"code":"\n#include <stdio.h>  \r\nint main()  \r\n{  \r\n    char str[205];  \r\n    char key[6]=\"CAmEm\";  \r\n    while(~scanf(\"%s\",str))  \r\n    {  \r\n        int k=0;  \r\n        bool flag=false;  \r\n        for(int i=0;i<str[i]!='\\0';i++)  \r\n        {  \r\n            if(str[i]!=key[k++])  \r\n            {  \r\n                flag=true;  \r\n                break;  \r\n            }  \r\n            if(k==5)  \r\n            k=0;  \r\n        }  \r\n        if(flag)  \r\n        printf(\"NO\\n\");  \r\n        else  \r\n        printf(\"YES\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":836,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int T,n,i,j;  \r\n    char ch[80][80];  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            for(j=0;j<n;j++)  \r\n            if(j+i<n)  \r\n            printf(\"*\");  \r\n            printf(\"\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":837,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint a[261900];\r\nint main()\r\n{\r\n    int n;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        int i,t=0;\r\n        memset(a,0,sizeof(a));\r\n        for(i=0;;i++)\r\n        {\r\n            if(t==n+1) break;\r\n            if(a[i]==0)\r\n            {\r\n                printf(\"(%d,%d)\",i,i+t);\r\n                a[i]=1;\r\n                a[i+t]=1;\r\n                t++;\r\n            }\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":838,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tdouble x,y;\r\n\twhile(scanf(\"%lf%lf\",&x,&y)!=EOF)\r\n\t\tif(x==0.0&&y==0.0)\r\n\t\t\tprintf(\"0.00\\n\");\r\n\t\telse if(x==0.0)\r\n\t\t\tprintf(\"%.2lf\\n\",y);\r\n\t\telse if(y==0.0)\r\n\t\t\tprintf(\"%.2lf\\n\",x);\r\n\t\telse\r\n\t\t\tprintf(\"%.2lf\\n\",x*y\/(x+y));\r\n\treturn 0;\r\n}"
},
{
"pid":839,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stdlib.h>  \r\nint cmp(const void *a,const void *b)  \r\n{  \r\n    return *(int *)a-*(int *)b;  \r\n}  \r\nint main()  \r\n{  \r\n    int T,N,i,j,k,a[20],b[20],c[100];  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        memset(a,0,sizeof(a));  \r\n        memset(b,0,sizeof(b));  \r\n        scanf(\"%d\",&N);  \r\n        for(i=0;i<N;i++)  \r\n        scanf(\"%d\",&a[i]);  \r\n        for(i=0;i<N;i++)  \r\n        scanf(\"%d\",&b[i]);  \r\n        for(j=0,i=0;i<N;i++) \r\n        {  \r\n            if(a[i]!=-1)  \r\n            c[j]=a[i];  \r\n            else continue;  \r\n\r\n            for(k=0;k<N;k++)  \r\n            {  \r\n                if(a[k]==c[j])  \r\n                a[k]=-1;  \r\n                if(b[k]==c[j])  \r\n                b[k]=-1;  \r\n            }  \r\n            j+=1;  \r\n        }  \r\n        for(i=0;i<N;i++)  \r\n        {  \r\n            if(b[i]!=-1)  \r\n            c[j]=b[i];  \r\n            else continue;  \r\n\r\n            for(k=0;k<N;k++)  \r\n            {  \r\n                if(b[k]==c[j])  \r\n                b[k]=-1;  \r\n            }  \r\n            j+=1;  \r\n        }  \r\n        qsort(c,j,sizeof(c[0]),cmp);  \r\n        for(i=0;i<j;i++)  \r\n        {  \r\n            printf(\"%d\",c[i]);  \r\n            if(i!=j-1)  \r\n            printf(\" \");  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":840,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint cmp(const void *a,const void *b)\r\n{\r\n    return *(int *)a-*(int *)b;\r\n}\r\nint main()\r\n{\r\n    int s,a[7];\r\n    char b[10];\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        int i;\r\n        for(i=0;i<7;i++)\r\n        scanf(\"%d\",&a[i]);\r\n        scanf(\"%s\",b);\r\n        qsort(a,7,sizeof(a[0]),cmp);\r\n        if(b[0]=='M') printf(\"%d\\n\",a[0]);\r\n        else if(b[0]=='T'&&b[1]=='u') printf(\"%d\\n\",a[1]);\r\n        else if(b[0]=='W') printf(\"%d\\n\",a[2]);\r\n        else if(b[0]=='T'&&b[1]=='h') printf(\"%d\\n\",a[3]);\r\n        else if(b[0]=='F') printf(\"%d\\n\",a[4]);\r\n        else if(b[0]=='S'&&b[1]=='a') printf(\"%d\\n\",a[5]);\r\n        else printf(\"%d\\n\",a[6]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":841,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\n#include <cmath>  \r\nusing namespace std;  \r\n\r\nint main(){  \r\n    double n;  \r\n    while(~scanf(\"%lf\",&n)){  \r\n        double x=n*log10((double)n);  \r\n        double y=x-(long long)x;\r\n        printf(\"%d\\n\",(int)powf(10.0,y));                       \r\n    }      \r\n    return 0;  \r\n}"
},
{
"pid":842,
"code":"\n#include <stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    int a,b,i;  \r\n    while (~scanf(\"%d%d\",&a,&b) && a||b)  \r\n    {  \r\n        a = a*100;  \r\n        for (i=0; i<100; i++)  \r\n        {  \r\n            if ((a+i) % b == 0)  \r\n            {  \r\n                if (i <10)  \r\n                {  \r\n                    printf(\"0%d \",i);  \r\n                }  \r\n                else  \r\n                {  \r\n                    printf(\"%d \",i);  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n}"
},
{
"pid":844,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int m,n,j,k,sum;  \r\n    while(~scanf(\"%d %d\",&m,&n))  \r\n    {  \r\n        sum=0;  \r\n        if(m==0&&n==0)  \r\n        return 0;  \r\n        j=0;  \r\n        k=0;  \r\n        while(m!=0)  \r\n        {  \r\n        j=j*10+m%10;  \r\n        m=m\/10;    \r\n        }  \r\n        while(n!=0)  \r\n        {  \r\n        k=k*10+n%10;  \r\n        n=n\/10;   \r\n        }  \r\n        sum=j+k;  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":845,
"code":"\n#include<stdio.h>  \r\nint main ( )  \r\n{  \r\n    int a[105] = { 0 } , b[105] = { 0 } , ch[105] = { 0 } , i , j , m = 0 , n;  \r\n    while ( scanf ( \"%d%d\" , &i , &j ) )  \r\n    {  \r\n        if ( i == 0 && j == 0 )  \r\n            break;  \r\n        else  \r\n        {  \r\n            ch[i] += j;  \r\n            if ( b[i] == 0 )  \r\n            {  \r\n                a[m] = i;  \r\n                m++;  \r\n            }  \r\n            b[i] = 1;  \r\n        }  \r\n    }  \r\n    for ( i = 0; i<100; i++ )  \r\n    {  \r\n        if ( a[i] != 0 )  \r\n            printf ( \"%d %d\\n\" , a[i] , ch[a[i]] );  \r\n    }  \r\n}"
},
{
"pid":846,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint s,n,m,key;\r\n\tscanf(\"%d\",&s);\r\n\twhile(s--)\r\n\t{\r\n\t\tint low,top,t,k=0;\r\n\t\tscanf(\"%d%d%d\",&n,&m,&key);\r\n\t\tlow=n;\r\n\t\ttop=m;\r\n\t\twhile(top>=low)\r\n\t\t{\r\n\t\t\tt=(low+top)\/2;\r\n\t\t\tk++;\r\n\t\t\tif(t==key) break;\r\n\t\t\telse if(t>key) \r\n\t\t\ttop=t;\r\n\t\t\telse low=t+1;\r\n\t\t}\r\n\t\tif(k%2!=0) printf(\"Win\\n\");\r\n        else printf(\"Lose\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":847,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#define N 100005  \r\nlong long num[N];  \r\nstruct node  \r\n{  \r\n    long long max,t1,min,t2;      \r\n}c[N];  \r\nint main()  \r\n{  \r\n    long long t,n,temp,mark1,mark2;  \r\n    scanf(\"%lld\",&t);  \r\n    while(t--)  \r\n    {  \r\n        memset(num,0,sizeof(num));  \r\n        memset(&c,0,sizeof(&c));  \r\n        scanf(\"%lld\",&n);  \r\n        temp=-150005;  \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%lld\",&num[i]);  \r\n            if(temp<num[i])  \r\n            temp=num[i],mark1=i+1;  \r\n            c[i].max=temp;  \r\n            c[i].t1=mark1;  \r\n        }  \r\n        temp=150005;  \r\n        for(int i=n-1;i>=0;i--)  \r\n        {  \r\n            if(num[i]<=temp)  \r\n            temp=num[i],mark2=i+1;  \r\n            c[i].min=temp;  \r\n            c[i].t2=mark2;  \r\n        }  \r\n        temp=-150005*2;  \r\n        for(int i=0;i<n-1;i++)  \r\n        {  \r\n            if(temp<c[i].max-c[i+1].min)  \r\n            temp=c[i].max-c[i+1].min,mark1=c[i].t1,mark2=c[i+1].t2;  \r\n        }  \r\n        printf(\"%lld %lld %lld\\n\",temp,mark1,mark2);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":848,
"code":"\n#include <iostream>  \r\n#include <string.h>  \r\nusing namespace std;  \r\n\r\nconst int N=100;  \r\nstruct Node {  \r\n    char  date;  \r\n    Node *left,*right;  \r\n    Node (){  \r\n        left=NULL;  \r\n        right=NULL;  \r\n    }  \r\n};  \r\nvoid BuildBinaryTree(Node *& root,char *preorder,char *midorder,int len) {  \r\n    if(len==0) {  \r\n        root = NULL;\r\n        return ;  \r\n    }  \r\n\r\n    root = new Node();\r\n    root->date=preorder[0];  \r\n    char *rootplace=strchr(midorder,root->date); \r\n\r\n    int leftlen=strlen(midorder)-strlen(rootplace);  \r\n    int rightlen=len-leftlen-1;  \r\n    BuildBinaryTree(root->left,preorder+1,midorder,leftlen);  \r\n    BuildBinaryTree(root->right,preorder+leftlen+1,rootplace+1,rightlen);  \r\n}  \r\n\r\nvoid PostOrder(Node *root){  \r\n    if(root==NULL) return ;  \r\n    PostOrder(root->left);  \r\n    PostOrder(root->right);  \r\n    cout<<root->date;  \r\n}  \r\n\r\nint main(){  \r\n    char preorder[N],midorder[N];  \r\n    while(cin >> preorder >> midorder){  \r\n        Node *root=NULL;  \r\n        BuildBinaryTree(root,preorder,midorder,strlen(preorder));  \r\n        PostOrder(root);  \r\n        cout << endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":849,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\n#include <vector>  \r\n#define Maxsize 110  \r\n#define INF 0x3f3f3f3f  \r\nint n,m;  \r\nint dist[Maxsize];  \r\nint g[Maxsize][Maxsize];  \r\nint mincost[Maxsize][Maxsize];  \r\nint pre[Maxsize];  \r\nbool used[Maxsize][Maxsize];  \r\nbool vis[Maxsize];  \r\nvoid init()  \r\n{  \r\n    memset(g,0x3f,sizeof(g));  \r\n    memset(dist,0x3f,sizeof(dist));  \r\n    memset(mincost,0x3f,sizeof(mincost));  \r\n    memset(used,0,sizeof(used));  \r\n    memset(vis,0,sizeof(vis));  \r\n    for(int i=0;i<=n;i++)  \r\n        mincost[i][i]=0;  \r\n}  \r\nvoid addedge(int a,int b,int c)  \r\n{  \r\n    if(c<g[a][b])  \r\n    {  \r\n        g[a][b]=c;  \r\n        g[b][a]=c;  \r\n    }  \r\n}  \r\nint findmin(int x,int y)  \r\n{  \r\n    return x>y?y:x;  \r\n}  \r\nvoid findtree()  \r\n{  \r\n    int u;  \r\n    dist[1]=0;  \r\n    pre[1]=0;  \r\n    for(;;)  \r\n    {  \r\n        int min=INF;  \r\n        for(int i=1;i<=n;++i)  \r\n            if(min>dist[i]&&!vis[i])  \r\n            {  \r\n                min=dist[i];  \r\n                u=i;  \r\n            }  \r\n        if(min==INF)  \r\n            break;  \r\n        vis[u]=1;  \r\n        int v=pre[u];  \r\n        used[u][v]=used[v][u]=1;  \r\n        mincost[u][v]=mincost[v][u]=g[u][v];  \r\n        for(v=1;v<=n;v++)  \r\n            if(!vis[v]&&dist[v]>g[u][v])  \r\n            {  \r\n                pre[v]=u;  \r\n                dist[v]=g[u][v];  \r\n            }  \r\n    }  \r\n}  \r\nvoid findmincostload()  \r\n{  \r\n    for(int k=1;k<=n;k++)  \r\n        for(int i=1;i<=n;i++)  \r\n            for(int j=1;j<=n;j++)  \r\n                mincost[i][j]=findmin(mincost[i][j],mincost[i][k]+mincost[k][j]);   \r\n}  \r\nint solve()  \r\n{  \r\n    int res=INF;  \r\n    findtree();  \r\n    findmincostload();  \r\n    for(int i=1;i<=n;i++)  \r\n        for(int j=i+1;j<=n;j++)  \r\n            if(used[i][j]==0)  \r\n                res=findmin(res,mincost[i][j]+g[i][j]);  \r\n    return res;  \r\n}  \r\nint main()  \r\n{  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        init();  \r\n        int a,b,c;  \r\n        for(int i=0;i<m;++i)  \r\n        {  \r\n            scanf(\"%d%d%d\",&a,&b,&c);  \r\n            addedge(a,b,c);  \r\n        }  \r\n        int t=solve();  \r\n        if(t==INF)  \r\n            printf(\"It's impossible.\\n\");  \r\n        else printf(\"%d\\n\",t);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":851,
"code":"\n#include<iostream>\r\n#include<stack>\r\n#include<string>\r\n#include<cstring>\r\nusing namespace std;\r\nint main()\r\n{\r\n\tstring s;\r\n\tint p[1100];\r\n\tchar q[1100];\r\n\twhile(cin>>s){\r\n\t\tint k,ok=1;\r\n\t\tstring res;\r\n\t\tstack<char> sta;\r\n\t\tmemset(p,0,sizeof(p));\r\n\t\tfor(int i=0;i!=s.size();++i){\r\n\t\t\tq[i]=s[i];\r\n\t\t\tfor(int j=i+1;j!=s.size();++j){\r\n\t\t\t\tif(s[i]<s[j]) {\r\n\t\t\t\t\tp[i]=1;\r\n\t\t\t\t\tif(q[i]<s[j]) q[i]=s[j];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i=0;i!=s.size();++i){\r\n\t\t\tif(p[i]){\r\n\t\t\twhile(sta.size()&&q[i]<=sta.top()){\r\n\t\t\tres+=sta.top();\r\n\t\t\tsta.pop();\r\n\t\t\t}\r\n\t\t\tsta.push(s[i]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\twhile(sta.size()&&s[i]<=sta.top()){\r\n\t\t\t\t\tres+=sta.top();\r\n\t\t\t\t\tsta.pop();\r\n\t\t\t\t}\r\n\t\t\t\tres+=s[i];\r\n\t\t\t}\r\n\t\t}\r\n\t\twhile(sta.size()){\r\n\t\t\tres+=sta.top();\r\n\t\t\tsta.pop();\r\n\t\t}\r\n\t\tcout<<res<<endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":852,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#define MAX 1001  \r\nint a[MAX][MAX];  \r\n\r\nint main(){  \r\n    int t, n, max, count, i, j;  \r\n    scanf(\"%d\", &t);  \r\n    while(t--){  \r\n        scanf(\"%d\", &n);  \r\n        max = (1 + n) * n \/ 2;  \r\n        count = 0;  \r\n        a[i = 1][j = 1] = ++count;  \r\n        while(count < max){  \r\n            while(j < n - i + 1){  \r\n                if(a[i][j + 1] == 0)  \r\n                    a[i][++j] = ++count;  \r\n                else break;  \r\n            }   \r\n            while(j > 1){  \r\n                if(a[i + 1][j - 1] == 0)  \r\n                    a[++i][--j] = ++count;  \r\n                else break;  \r\n            }   \r\n            while(i > 1){  \r\n                if(a[i - 1][j] == 0)  \r\n                    a[--i][j] = ++count ;  \r\n                else break;  \r\n            }  \r\n        }  \r\n        for(i = 1; i <= n; ++i){  \r\n            for(j = 1; j <= n - i + 1; ++j)  \r\n                printf(\"%d \", a[i][j]);  \r\n            printf(\"\\n\");  \r\n        }  \r\n        if(t) printf(\"\\n\");  \r\n        memset(a, 0, sizeof(a));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":853,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int N = 8e4 + 10;  \r\nint sta[N], pos[N];  \r\nint main()  \r\n{  \r\n    int n, i, a;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        int top = 0;  \r\n        scanf(\"%d\",&a);  \r\n        sta[++top] = a;  \r\n        pos[top] = 1;  \r\n        int ans = 0;  \r\n        for(i = 2; i <= n; i++)  \r\n        {  \r\n            scanf(\"%d\",&a);  \r\n            while(top > 0 && sta[top] <= a)  \r\n            {  \r\n                ans += i - pos[top] - 1;   \r\n                top--;  \r\n            }  \r\n            sta[++top] = a;  \r\n            pos[top] = i;  \r\n        }  \r\n        top--; \r\n        while(top > 0)  \r\n        {  \r\n            ans += n - pos[top];  \r\n            top--;  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":854,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint col[10005],row[10005];  \r\n\r\nint main()  \r\n{  \r\n    int t,n,m,i,j,x,y;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--){  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        memset(row,0,sizeof(row));  \r\n        memset(col,0,sizeof(col));  \r\n        i = j = x = y = 1;    \r\n        while(x<=n && y<=m){    \r\n            if(n-i+1 < m-j+1 ){ j=j+(n-i+1);  i=n+1; } \r\n            else if(n-i+1 > m-j+1 ){ i = i+(m-j+1);  j=m+1;}  \r\n            else {  i = n+1; j = m+1;   } \r\n            if(i>n) {  \r\n                i = 1;  \r\n                if(j<=m){    \r\n                    if(row[j])  break;  \r\n                    row[j] = 1; y++;  \r\n                }else {row[1] = 1;y++;}               \r\n            }  \r\n            if(j>m) {   \r\n                j = 1;  \r\n                if(i<=n){  \r\n                    if(col[i]) break;  \r\n                    col[i] = 1;x++;  \r\n                }else {col[1]=1;x++;}  \r\n            }     \r\n        }  \r\n        if(x ==n+1 && y == m+1) puts(\"Possible\");   \r\n        else puts(\"Impossible\");  \r\n    }   \r\n    return 0;  \r\n}"
},
{
"pid":858,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<iostream>  \r\nusing namespace std;  \r\nint a[1005][1005];  \r\nint c[1005];   \r\nint main()  \r\n{  \r\n    int n, i, j, k;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        memset(c,0,sizeof(c));  \r\n        for(i = 1; i <= n; i++)  \r\n        {  \r\n            for(j = 1; j <= n; j++)  \r\n            {  \r\n                scanf(\"%d\",&a[i][j]);  \r\n                if(a[i][j])  \r\n                    c[i] = j;  \r\n            }  \r\n        }  \r\n        int ans = 0; \r\n        for(i = 1; i <= n; i++) \r\n        {  \r\n            int pos = 0;  \r\n            for(j = i; j <= n; j++)  \r\n            {  \r\n                if(c[j] <= i)  \r\n                {  \r\n                    pos = j;  \r\n                    break;  \r\n                }  \r\n            }  \r\n            for(k = pos; k > i; k--)  \r\n            {  \r\n                swap(c[k],c[k-1]);  \r\n                ans++;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":860,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nlong long dp[10005],w[105],t;  \r\nint v[105],n,i,j,sumv;  \r\nint main()  \r\n{  \r\n    while(scanf(\"%d%lld\",&n,&t)!=EOF)  \r\n    {  \r\n        memset(dp,0x3f,sizeof(dp));  \r\n        dp[0]=0;  \r\n        sumv=0;  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%lld%d\",&w[i],&v[i]);  \r\n            sumv+=v[i];  \r\n        }  \r\n        for(i=1;i<=n;i++)  \r\n            for(j=sumv;j>=v[i];j--)  \r\n                dp[j]=dp[j]<(dp[j-v[i]]+w[i])?dp[j]:(dp[j-v[i]]+w[i]);  \r\n        for(i=sumv;i>=0;i--)  \r\n            if(dp[i]<=t)  \r\n                break;  \r\n        printf(\"%d\\n\",i);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":864,
"code":"\n#include <stdio.h>  \r\n\r\nint main(){  \r\n    unsigned long long t, n, a, b, d, i, j, oka;  \r\n    scanf(\"%lld\", &t);  \r\n    while(t--){  \r\n        scanf(\"%lld\", &n);  \r\n        oka = b = d = 0;  \r\n        a = i = 1;  \r\n        for(j = 1; j <= 32; ++j){  \r\n            if(n & i){  \r\n                if(!oka) oka = 1;  \r\n                ++d;  \r\n                b = 0;  \r\n            }else{  \r\n                if(!oka) ++a; \r\n                ++b;  \r\n            }  \r\n            i <<= 1;  \r\n        }  \r\n        printf(\"%lld %lld %lld %lld\\n\", a, b, a - 1, d);          \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":865,
"code":"\n#include <stdio.h>  \r\n\r\nint main()  \r\n{  \r\n    long long n;  \r\n    int case_times=1;  \r\n    while((scanf(\"%lld\",&n))!=EOF)  \r\n    {  \r\n        long long sum=1;  \r\n        if(n>1)  \r\n        {  \r\n            long long i,temp=n,times;  \r\n            int flag=0;  \r\n            for(i=2;i*i<=temp;i++)  \r\n            {  \r\n                flag=times=0;  \r\n                while(n%i==0)  \r\n                {  \r\n                    flag=1;  \r\n                    times++;  \r\n                    n\/=i;  \r\n                }  \r\n                if(flag==1)  \r\n                    sum=sum*(1+times)*(2+times)\/2;  \r\n            }  \r\n        }  \r\n        if(n>1)  \r\n            sum=sum*3;  \r\n        printf(\"Case %d: %lld\\n\",case_times++,sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":869,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\n#include<cstdio>  \r\n#include<cmath>  \r\n#include<cstdlib>  \r\nconst double PI=acos(-1);  \r\n\r\nint main()  \r\n{  \r\n    double rate,thita,sa,sb,ss,sleft,sright;  \r\n    double low,high,l,r;  \r\n    while(cin>>r>>rate)  \r\n    {  \r\n      ss=r*r*PI;  \r\n      low = 0.0000001,high = 2*r;  \r\n      while(low<=high)  \r\n      {  \r\n         l=(low+high)\/2;  \r\n         thita = asin(l\/2\/r);  \r\n         sb=r*r\/2.0*sin(2*thita);  \r\n         sa = r*r*thita;  \r\n         sleft = sa - sb;  \r\n         sright = ss - sleft;  \r\n         if(sleft>=sright*rate)  \r\n             high = l-0.00001;  \r\n         else low = l+0.00001;  \r\n      }  \r\n      printf(\"%0.2f\\n\",l);  \r\n    }  \r\n return 0;  \r\n}"
},
{
"pid":870,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nbool alpha[26];  \r\nint main()  \r\n{  \r\n    int n,i,flag;  \r\n    char s[5];  \r\n    while(scanf(\"%d\",&n)==1)  \r\n    {  \r\n        memset(alpha,false,sizeof(alpha));  \r\n        alpha[0]=true;  \r\n        flag=0;  \r\n        if(n==-1)  \r\n            break;  \r\n        while(n--)  \r\n        {  \r\n            scanf(\"%s\",s);  \r\n            if(alpha[s[2]-'a'])  \r\n                alpha[s[0]-'a']=true;  \r\n            else  \r\n                alpha[s[0]-'a']=false;  \r\n        }  \r\n        for(i=0;i<26;i++)  \r\n        {  \r\n            if(alpha[i])  \r\n            {  \r\n                flag=1;  \r\n                printf(\"%c \",'a'+i);  \r\n            }  \r\n        }  \r\n        if(!flag)  \r\n            printf(\"none\");  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":871,
"code":"\n#include <iostream>  \r\n#include <algorithm>  \r\n#include <string>  \r\n#include <vector>  \r\nusing namespace std;  \r\n\r\nstruct Node{  \r\n    int num, sco;  \r\n    string name;  \r\n};  \r\n\r\nbool cmp(Node a, Node b){  \r\n    return a.sco > b.sco;  \r\n}  \r\n\r\nint main(){  \r\n    int t, n;  \r\n    Node stu;  \r\n    cin >> t;  \r\n    while(t--){  \r\n        cin >> n;  \r\n        vector<Node> vec;  \r\n        while(n--){  \r\n            cin >> stu.num >> stu.name >> stu.sco;  \r\n            vec.push_back(stu);  \r\n        }  \r\n        stable_sort(vec.begin(), vec.end(), cmp);  \r\n        for(int i = 0; i != vec.size(); ++i)  \r\n            cout << vec[i].num << ' ' << vec[i].name << ' ' << vec[i].sco << endl;  \r\n        vec.clear();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":872,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,m;\r\n\twhile(scanf(\"%d%d\",&n,&m)!=EOF)\r\n\t{\r\n\t\tint t,i,j,a[10];\r\n\t\tdouble sum;\r\n\t\tfor(i=0;i<m;i++)\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(i=0;i<m;i++)\r\n\t\t{\r\n\t\t\tt=n;\r\n\t\t\tsum=1.0;\r\n\t\t\tfor(j=0;j<a[i];j++)\r\n\t\t\t{\r\n\t\t\t\tsum*=t;\r\n\t\t\t\tt--;\r\n\t\t\t}\r\n\t\t\tfor(j=1;j<=a[i];j++)\r\n\t\t\t\tsum\/=j;\r\n\t\t\tn-=a[i];\r\n\t\t\tprintf(\"%.0lf \",sum);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":873,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\nint a[1005];  \r\nint main() {  \r\n  int m, n;  \r\n  while (cin >> m >> n) {  \r\n    long long sum = 0, max = 0, h = 1;  \r\n    int b, e;  \r\n    for (int i = 0; i < m; i++) {  \r\n      cin >> a[i];  \r\n    }  \r\n    for (int i = 0; i < m; i++) {  \r\n      for (int j = i; j < i + n; j++) {  \r\n        sum += a[j % m];  \r\n      }  \r\n      if (sum > max) {  \r\n        max = sum;  \r\n        b = i + 1;  \r\n        e = (i + n - 1) % m + 1;  \r\n      }  \r\n      sum = 0;  \r\n    }  \r\n    cout << max << \" \" << b << \" \" << e << endl;  \r\n  }  \r\n}"
},
{
"pid":874,
"code":"\n#include<cstdio>  \r\nint main()  \r\n{  \r\n    int n,m,i;  \r\n    while(scanf(\"%d%d\",&m,&n)!=EOF)  \r\n    {  \r\n        for(i=1;i<=n;++i)  \r\n        {  \r\n            if(i%4==1&&i!=1)  \r\n                m+=6;  \r\n            else  \r\n                m+=1;  \r\n        }  \r\n        printf(\"%d\\n\",m);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":875,
"code":"\n#include<stdio.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\ntypedef long long LL;  \r\nLL fib[100];  \r\nvoid get_fib()  \r\n{  \r\n    fib[0] = 1; fib[1] = 1;  \r\n    for(int i = 2; i <= 90; i++)  \r\n        fib[i] = fib[i-1] + fib[i-2];  \r\n}  \r\nint main()  \r\n{  \r\n    get_fib();  \r\n    LL x, y, m;  \r\n    while(~scanf(\"%lld%lld%lld\",&x, &y, &m))  \r\n    {  \r\n        LL temp, i, sum = 0;  \r\n        if(x >= m || y >= m)  \r\n        {  \r\n            printf(\"0\\n\");  \r\n            continue;  \r\n        }  \r\n        if(x > y) swap(x,y);  \r\n        if(x <= 0 && y <= 0)  \r\n        {  \r\n            if(y >= m)  printf(\"0\\n\");  \r\n            else  printf(\"-1\\n\");  \r\n            continue;  \r\n        }  \r\n        if(x < 0 && y > 0)  \r\n        {  \r\n            sum = (-x) \/ y + 1;  \r\n            x += sum * y;  \r\n        }\r\n        if(x > y) swap(x,y);  \r\n        for(i = 1; i <= 90; i++)  \r\n        {  \r\n            temp = fib[i]*y + fib[i-1]*x;  \r\n            if(temp >= m)  \r\n                break;  \r\n        }  \r\n        printf(\"%lld\\n\",sum + i);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":878,
"code":"\n#include<stdio.h>  \r\n#include<stdlib.h>  \r\nint gcd(int a,int b)  \r\n{  \r\n    if(b==0)  \r\n        return a;  \r\n    else  \r\n        return gcd(b,a%b);  \r\n}  \r\nint main()  \r\n{  \r\n    int N;  \r\n    scanf(\"%d\",&N);  \r\n    while(N--)  \r\n    {  \r\n        int x1,x2,y1,y2;  \r\n        scanf(\"%d%d%d%d\",&x1,&y1,&x2,&y2);  \r\n        int x,y,z,i,j,temp;  \r\n        x=x2-x1;  \r\n        y=y2-y1;  \r\n        if(x==0)  \r\n            y=1;  \r\n        else if(y==0)  \r\n            x=1;  \r\n        else  \r\n        {  \r\n            z=gcd(abs(x),abs(y));  \r\n            x=x\/z;  \r\n            y=y\/z;  \r\n        }  \r\n        while(x1!=x2||y1!=y2)  \r\n        {  \r\n            printf(\"(%d,%d),\",x1,y1);  \r\n            x1=x1+x;  \r\n            y1=y1+y;  \r\n        }  \r\n        printf(\"(%d,%d)\\n\",x1,y1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":879,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int s;\r\n    scanf(\"%d\",&s);\r\n    while(s--)\r\n    {\r\n        long long n;\r\n        scanf(\"%lld\",&n);\r\n        printf(\"%lld %lld\\n\",n*n*n,(n+1)*(n+1)*(n+1));\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":880,
"code":"\n#include<stdio.h>\r\nint a[52][52];\r\nint main()\r\n{\r\n\tint s;\r\n\tscanf(\"%d\",&s);\r\n\twhile(s--)\r\n\t{\r\n\t\tint n,i,j,t=1;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<=2*n;i++)\r\n\t\t\tfor(j=0;j<=2*n;j++)\r\n\t\t\t\ta[i][j]=0;\r\n\t\tfor(i=0;i<=n;i++)\r\n\t\t\ta[i][n]=t++;\r\n\t\tt--;\r\n\t\tfor(i=n+1;i<=2*n;i++)\r\n\t\t\ta[i][n]=--t;\r\n\t\tfor(i=0;i<=2*n;i++)\r\n\t\t{\r\n\t\t\tt=a[i][n];\r\n\t\t\tfor(j=n-1;j>=0&&t>0;j--)\r\n\t\t\t\ta[i][j]=--t;\r\n\t\t\tt=a[i][n];\r\n\t\t\tfor(j=n+1;j<=2*n&&t>0;j++)\r\n\t\t\t\ta[i][j]=--t;\r\n\t\t}\r\n\t\tfor(i=0;i<=2*n;i++)\r\n\t\t{\r\n\t\t\tfor(j=0;j<=2*n;j++)\r\n\t\t\t\tif(a[i][j]>0)\r\n\t\t\t\t\tprintf(\"%c\",a[i][j]+64);\r\n\t\t\t\telse\r\n\t\t\t\t\tprintf(\" \");\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":881,
"code":"\n#include<stdio.h>  \r\nint gcd(int a,int b)  \r\n{  \r\n    int t;  \r\n    if(a<b)  \r\n    {  \r\n        t=a;  \r\n        a=b;  \r\n        b=t;  \r\n    }  \r\n    if(b==0)  \r\n        return a;  \r\n    else  \r\n        return gcd(b,a%b);  \r\n}  \r\nint main()  \r\n{  \r\n    int a,b,g,t;  \r\n    while(scanf(\"%d%d\",&a,&b)!=EOF)\r\n    {  \r\n        g=gcd(a,b);  \r\n        scanf(\"%d\",&t);  \r\n        while(t--)  \r\n        {  \r\n            int l,r,i,w=0;  \r\n            scanf(\"%d%d\",&l,&r);  \r\n            if(r>g)  \r\n                r=g;  \r\n            for(i=r;i>=l;i--)  \r\n            {  \r\n                if(g%i==0)  \r\n                {  \r\n                    w=1;  \r\n                    break;  \r\n                }  \r\n            }  \r\n            if(w)  \r\n                printf(\"%d\\n\",i);  \r\n            else  \r\n                printf(\"-1\\n\");  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":882,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint a[100];  \r\nint main()  \r\n{  \r\n    int t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        int n,k,i=0,j;  \r\n        memset(a,0,sizeof(a));  \r\n        scanf(\"%d%d\",&n,&k);  \r\n        while(n)  \r\n        {  \r\n            a[i++]=n%k;  \r\n            n\/=k;  \r\n        }  \r\n        for(j=i-1;j>0;j--)  \r\n            printf(\"%d\",a[j]);  \r\n        printf(\"%d\\n\",a[j]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":886,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<cmath>  \r\nint main()  \r\n{  \r\n    int a,b,t;  \r\n    double p=(1.0+(sqrt(5.0)))\/2;\r\n    while(scanf(\"%d%d\",&a,&b)&&a!=0||b!=0)  \r\n    {  \r\n        if(a>b)  \r\n        {  \r\n            t=a;  \r\n            a=b;  \r\n            b=t;  \r\n        }  \r\n        int s=b-a;  \r\n        int k=floor(s*p);  \r\n        if(k==a)\r\n           printf(\"0\\n\");  \r\n        else  \r\n        {  \r\n            printf(\"1\\n\");  \r\n            if(a-k==b-(k+s)&&a>=k) \r\n                printf(\"%d %d\\n\",k,k+s);  \r\n            for(int i=0; ;i++)  \r\n            {  \r\n                int temp=i*p;  \r\n                if(temp>=b)  \r\n                   break;  \r\n                if(b>temp+i&&a==temp)\r\n                    printf(\"%d %d\\n\",temp,temp+i);  \r\n                else if(a==temp+i)\r\n                    printf(\"%d %d\\n\",temp,temp+i);  \r\n                else if(b==temp+i&&a>temp)\r\n                    printf(\"%d %d\\n\",temp,temp+i);  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":887,
"code":"\n#include<iostream>\r\n#include<string>\r\n#include <cstdio>\r\n#include <cmath>\r\n#include<vector>\r\n#include<algorithm>\r\n#include<sstream>\r\n#include<cstdlib>\r\nusing namespace std;\r\ntypedef long long ll;\r\nbool comp(ll a,ll b){\r\n\treturn a>b;\r\n}\r\nint main()\r\n{\r\n\tint n;\r\n\tll L,ai;\r\n\tvector<ll> buf;\r\n\twhile(cin>>L>>n)\r\n\t{\r\n\t \tfor(int i=0;i<n;i++)\r\n\t \t{\r\n\t \t\tcin>>ai;\r\n\t \t\tbuf.push_back(ai);\r\n\t \t}\r\n\t \tsort(buf.begin(),buf.end(),comp);\r\n\t \tint min=0;\r\n\t \tll sum=0;\r\n\t \tfor(vector<ll>::size_type i=0;i!=buf.size()&&sum<L;i++)\r\n\t \t{\r\n\t \t\tif(sum+buf[i]<L){\r\n\t\t \t\tsum+=buf[i];\r\n\t\t \t\tmin++;\r\n\t\t \t}\r\n\t\t \telse {\r\n\t \t\t\tsum=L;\r\n\t \t\t\tmin++;\r\n\t \t\t}\r\n\t \t}\r\n\t \tif(sum<L)cout<<\"impossible\"<<endl;\r\n\t \telse cout<<min<<endl;\r\n\t \tbuf.clear();\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":888,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int T,n,a,i,result,count;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        result=0;  \r\n        count=0;  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%d\",&a);  \r\n            result=result^a;  \r\n            if(a>1)  \r\n                count++;  \r\n        }  \r\n        if((count&&result)||(!count&&!result))  \r\n            printf(\"Yougth\\n\");  \r\n        else  \r\n            printf(\"Hrdv\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":889,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nint main()\r\n{\r\n\tchar a[7];\r\n\twhile(gets(a)!=NULL)\r\n\t{\r\n\t\tdouble s; \r\n\t\tint i,x1,x2,y1,y2;\r\n\t\tx1=x2=y1=y2=0;\r\n\t\tfor(i=0;i<7;i+=2)\r\n\t\t{\r\n \t\t\tif(a[i]=='E')\r\n\t\t\t\tx1+=1;\r\n \t\t\telse if(a[i]=='W')\r\n\t\t\t\tx1-=1;\r\n \t\t\telse if(a[i]=='N')\r\n\t\t\t\ty1+=1;\r\n  \t\t\telse y1-=1;\r\n\t\t}\r\n\t\tgets(a);\r\n\t\tfor(i=0;i<7;i+=2)\r\n\t\t{\r\n \t\t\tif(a[i]=='E')\r\n\t\t\t\tx2+=1;\r\n \t\t\telse if(a[i]=='W')\r\n\t\t\t\tx2-=1;\r\n \t\t\telse if(a[i]=='N')\r\n\t\t\t\ty2+=1;\r\n  \t\t\telse y2-=1;\r\n\t\t}\r\n\t\ts=sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));\r\n\t\tprintf(\"%.2lf\\n\",s);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":890,
"code":"\n#include<iostream>\r\nusing namespace std;\r\nint main() {\r\n\tint t,m,n;\r\n\tfor(cin>>t;t;t--) {\r\n\t\tcin >> m >> n;\r\n\t\tint k = 1 << n;\r\n\t\tm < k ? cout << \"Yes\" << endl : cout << \"No\" << endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":891,
"code":"\n#include<iostream>  \r\n#include<algorithm>  \r\n#include<cstring>  \r\n#include<cstdlib>  \r\nusing namespace std;  \r\nstruct node{  \r\n    int x, y;  \r\n};  \r\nnode l[105];  \r\nbool comp(const node& a, const node &b){  \r\n    if (a.y != b.y){  \r\n        return a.y<b.y;  \r\n    }  \r\n    else return a.x>b.x;  \r\n}  \r\nint main(){  \r\n    int N;  \r\n    while (cin >> N){  \r\n        memset(l, 0, sizeof(l));  \r\n        for (int i = 0; i<N; i++){  \r\n            int a, b; cin >> a >> b;  \r\n            l[i].x = a, l[i].y = b;  \r\n        }  \r\n        sort(l, l + N, comp);  \r\n        int cont=l[0].y,sum=1;  \r\n        for(int i=1;i<N;i++){  \r\n            if(l[i].x>cont){  \r\n                cont=l[i].y;  \r\n                sum++;  \r\n            }  \r\n        }   \r\n        cout<<sum<<endl;  \r\n    }  \r\n}"
},
{
"pid":892,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint N,n,count;\r\n\tchar name[20];\r\n\tscanf(\"%d\",&N);\r\n\twhile(N --)\r\n\t{\r\n\t\tcount = 0;\r\n\t\tdouble sum = 0;\r\n\t\tdouble money,size;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i = 0;i < n;i ++)\r\n\t\t{\r\n\t\t\tscanf(\"%s\",name);\r\n\t\t\tscanf(\"%lf %lf\",&money,&size);\r\n\t\t\tif(!((size>300)||(money>5)||(money<1.5)))\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%s\\n\",name);\r\n\t\t\t\tsum = sum + money;\r\n\t\t\t\tcount ++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(count == 0)\r\n\t\t{\r\n\t\t\tprintf(\"-1\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tprintf(\"%.1lf\\n\",sum);\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":893,
"code":"\n#include<stdio.h>\r\nint main(){\r\n\tint num;\r\n\tscanf(\"%d\",&num);\r\n\twhile(num--){\r\n\t\tint a[7][7];\r\n\t\tfor(int i=0;i<7;i++){\r\n\t\t\tfor(int j=0;j<7;j++){\r\n\t\t\t\tscanf(\"%d\",&a[i][j]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tint count =0;\r\n\t\tfor(int i=1;i<=5;i++){\r\n\t\tfor(int j=1;j<=5;j++){\r\n\t\t\tif((a[i][j]==1)&&(a[i-1][j]==1)&&(a[i+1][j]==1)&&(a[i][j-1]==1)&&(a[i][j+1]==1)){ count++; }\r\n\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",count);\r\n\t}\r\n}"
},
{
"pid":895,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\n#define Max_V 110  \r\n#define mod 10007  \r\nint n,m;  \r\nint indeg[Max_V];  \r\nint g[Max_V][Max_V];  \r\nint dp[Max_V];  \r\nbool vis[Max_V];  \r\nvoid init()  \r\n{  \r\n    memset(indeg,0,sizeof(indeg));  \r\n    memset(g,0,sizeof(g));  \r\n    memset(dp,0,sizeof(dp));  \r\n    memset(vis,0,sizeof(vis));  \r\n}  \r\nint main()  \r\n{  \r\n    int i;  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        init();  \r\n        int u,v;  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&u,&v);  \r\n            g[u][v]++;  \r\n            indeg[v]++;  \r\n        }  \r\n        dp[1]=1;  \r\n        while(true)  \r\n        {  \r\n            for(u=1;u<=n;u++)\r\n                if(!indeg[u]&&!vis[u])  \r\n                    break;  \r\n            if(u>=n)  \r\n                break;  \r\n            vis[u]=1;\r\n            for(v=1;v<=n;v++)  \r\n                if(g[u][v])  \r\n                {  \r\n                    dp[v]+=dp[u]*g[u][v]; \r\n                    dp[v]%=mod;  \r\n                    indeg[v]-=g[u][v];\r\n                }  \r\n        }  \r\n        printf(\"%d\\n\",dp[n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":897,
"code":"\n#include <cstdio>  \r\n#include <cmath>  \r\n#include <cstring>  \r\n#include <string>  \r\n#include <algorithm>  \r\n#include <iostream>  \r\nusing namespace std;  \r\n\r\nlong double a[100],b[105];  \r\nvoid read()  \r\n{  \r\n    a[1]=9,a[2]=18,a[0]=0;  \r\n    for(int i=3;i<22;i++)  \r\n        a[i]=pow(10,i-1)+8;  \r\n}  \r\nstring to_string(long long x)  \r\n{  \r\n    string ans;  \r\n    while(x)  \r\n    {  \r\n        ans+=(x%10+'0');  \r\n        x\/=10;  \r\n    }  \r\n    reverse(ans.begin(),ans.end());  \r\n    return ans;  \r\n}  \r\nlong double solve(string x,long long y)    \r\n{  \r\n    if(x.size()<=2)  \r\n        return b[y];  \r\n    long double ans=0;  \r\n    ans+=a[x.size()-1];  \r\n    ans+=(x[0]-'0'-1)*pow(10,(x.size()-2));  \r\n    long long cmp=0;  \r\n    for(int i=1;i<x.size()-1;i++)  \r\n        cmp=cmp*10+(x[i]-'0');  \r\n    ans+=cmp;  \r\n    if(x[x.size()-1]>=x[0])  \r\n        ans++;  \r\n    return ans;  \r\n}  \r\nvoid isit()  \r\n{  \r\n    b[0]=0;  \r\n    memset(b,0,sizeof(b));  \r\n    for(int i=1;i<=100;i++)  \r\n    {  \r\n        int en=i%10,k=i\/10,wei=1;  \r\n        while(k)  \r\n        {  \r\n            k\/=10;  \r\n            wei*=10;  \r\n        }  \r\n        if(i\/wei==en)  \r\n            b[i]=b[i-1]+1;  \r\n        else  \r\n            b[i]=b[i-1];  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    long long x,y;  \r\n    isit();  \r\n    read();  \r\n    while(~scanf(\"%lld%lld\",&x,&y))  \r\n    {  \r\n        string st,se;  \r\n        st=to_string(x-1),se=to_string(y);  \r\n        long double ans_x=solve(st,x-1),ans_y=solve(se,y);  \r\n        double sum=(double)(ans_y-ans_x)\/(double)(y-x+1);  \r\n        printf(\"%.3lf\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":899,
"code":"\n#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n\tdouble s,pi,r,h,v;\r\n\twhile(scanf(\"%lf\",&s)!=EOF)\r\n\t{\r\n\t\tpi=acos(-1);\r\n\t\tr=sqrt(s\/(4*pi));\r\n\t\th=sqrt(s*s-2*pi*r*r*s)\/(pi*r);\r\n\t\tv=pi*r*r*h\/3;\r\n\t\tprintf(\"%.2f %.2f %.2f\\n\",v,h,r);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":901,
"code":"\n#include<stdio.h>\r\nint a[30];\r\nint main()\r\n{\r\n    int n,i,sum;\r\n    a[1]=a[2]=1;\r\n    for(i=3;i<30;i++)\r\n            a[i]=a[i-1]+a[i-2];\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        sum=2;\r\n        for(i=3; ;i++)\r\n        {\r\n            sum+=a[i];\r\n            if(sum>=n)\r\n            break;\r\n        }\r\n        if(sum==n) printf(\"%d\\n\",i);\r\n        else printf(\"%d\\n\",i-1);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":902,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nlong long int g[100005],f[100005],a[100005] ;\r\nint main()  \r\n{  \r\n    long long int i,n,m,mod ;  \r\n    while(scanf(\"%lld%lld%lld\",&n,&m,&mod)!=EOF)  \r\n    {  \r\n        g[0]=1 ;g[n+1]=1 ;f[0]=1 ;f[n+1]=1 ;  \r\n        for(i=1 ;i<=n ;i++)  \r\n        {  \r\n            scanf(\"%lld\",&g[i]) ;  \r\n            f[i]=(g[i]*f[i-1])%mod ;  \r\n        }  \r\n        for(i=n-1 ;i>=1 ;i--)  \r\n            g[i]=(g[i+1]*g[i])%mod ;  \r\n        long long int r=0,x ;  \r\n        while(m--)  \r\n        {  \r\n            scanf(\"%lld\",&x) ;  \r\n            a[r++]=(g[x+1]*f[x-1])%mod ;  \r\n        }  \r\n        for(i=0 ;i<r ;i++)  \r\n         if(!i)  \r\n                printf(\"%lld\",a[i]) ;  \r\n         else   printf(\" %lld\",a[i]) ;  \r\n                printf(\"\\n\") ;  \r\n     }  \r\n    return 0 ;  \r\n}"
},
{
"pid":904,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nstruct score  \r\n{  \r\n    char name[11];  \r\n    int sco;  \r\n}a[10005];  \r\nbool comp(score a1,score a2)  \r\n{  \r\n    return a1.sco < a2.sco;  \r\n}  \r\nint Binary_search(int l, int r, int k)  \r\n{  \r\n    while(l < r)  \r\n    {  \r\n        int mid = (l + r) \/ 2;  \r\n        if(a[mid].sco > k)  \r\n            r = mid;  \r\n        else if(a[mid].sco < k)  \r\n            l = mid+1;  \r\n        else  \r\n        {  \r\n            if(a[mid].sco == a[mid - 1].sco)  \r\n                r = mid;  \r\n            else  \r\n                return mid;  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int t, n, m, i, k;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        for(i = 0; i < n; i++)  \r\n            scanf(\"%s%d\",a[i].name,&a[i].sco);  \r\n        stable_sort(a,a+n,comp);  \r\n        for(i = 0; i < m; i++)  \r\n        {  \r\n            scanf(\"%d\",&k);  \r\n            int p = Binary_search(0,n,k);  \r\n            printf(\"%s\\n\",a[p].name);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":905,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    char str[105],ch[110],s;  \r\n    int T,i,j,left,right;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%s\",str);  \r\n        s='9';  \r\n        for(i=0;str[i]!='\\0';i++)  \r\n        {  \r\n            if((str[i]!='0')&&str[i]<=s)  \r\n            {  \r\n                s=str[i];  \r\n                j=i;  \r\n            }  \r\n        }  \r\n        left=53;  \r\n        right=52;  \r\n        ch[left]='9';  \r\n        for(i=0;str[i]!='\\0';i++)  \r\n        {  \r\n            if(i>=j)  \r\n                break;  \r\n            if(str[i]<=ch[left])  \r\n            {  \r\n                left--;  \r\n                ch[left]=str[i];  \r\n            }  \r\n            else  \r\n            {  \r\n                right++;  \r\n                ch[right]=str[i];  \r\n            }  \r\n        }  \r\n        printf(\"%c\",s);  \r\n        for(i=left;i<=right;i++)  \r\n            printf(\"%c\",ch[i]);  \r\n        for(i=j+1;str[i]!='\\0';i++)  \r\n            printf(\"%c\",str[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":906,
"code":"\n#include<stdio.h>\r\nint a[31][31];\r\nint main()\r\n{\r\n\tint n,i,j;\r\n\twhile(scanf(\"%d\",&n)!=EOF)\r\n\t{\r\n\t\tfor(i=0;i<n;i++)\r\n\t\tfor(j=0;j<=i;j++)\r\n\t\t{\r\n\t\t\tif(j==0)\r\n\t\t\t\ta[i][j]=1;\r\n\t\t\telse if(j==i)\r\n\t\t\t\ta[i][j]=1;\r\n\t\t\telse\r\n\t\t\t\ta[i][j]=a[i-1][j-1]+a[i-1][j];\r\n\t\t}\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tfor(j=0;j<=i;j++)\r\n\t\t\t\tprintf(\"%d \",a[i][j]);\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":910,
"code":"\n#include <iostream>\r\n#include <string>\r\n#include <map>\r\n#include <vector>\r\nusing namespace std;\r\n\r\nint main(){\r\n\tmap<string,bool> hash;\r\n\tstring key;\r\n\twhile(cin>>key){\r\n\t\thash[key]= true;\r\n\t}\r\n\tmap<string,bool>::iterator it= hash.begin();\r\n\twhile(it!= hash.end()){\r\n\t\tcout<<it->first<<' ';\r\n\t\t++it;\r\n\t}\t\r\n\tcout<<endl<<hash.size()<<endl;\r\n}"
},
{
"pid":911,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint s;\r\n\tscanf(\"%d\",&s);\r\n\twhile(s--)\r\n\t{\r\n\t\tlong long  n,a,b;\r\n\t\tscanf(\"%lld\",&n);\r\n\t\ta=n\/5+n\/6+n\/8;\r\n\t\tb=n\/30+n\/24+n\/40-n\/120;\r\n\t\tprintf(\"%lld\\n\",n-a+b);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":912,
"code":"\n#include <stdio.h>\r\nint main()\r\n{\r\n\tlong long a[21];\r\n\tint i,n;\r\n\ta[1]=0;\r\n\ta[2]=1;\r\n\twhile(scanf(\"%d\",&n)!=EOF)\r\n\t{\r\n\t\tfor(i=3;i<n+1;i++)\r\n\t\t{a[i]=(i-1)*(a[i-1]+a[i-2]);}\r\n\t\tprintf(\"%lld\\n\",a[n]);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":913,
"code":"\n#include <iostream>\r\n#include <string.h>\r\n#include <cmath>\r\nusing namespace std;\r\n#define maxn 1010\r\nint a[maxn];\r\nint sg[maxn];\r\nvoid fun1(){\r\n    int vis[maxn];\r\n    int a[maxn];\r\n    a[1]=1;a[2]=2;\r\n    for(int i=3;i<maxn;i++)\r\n        a[i]=a[i-1]+a[i-2];\r\n    sg[0]=0;\r\n    for(int i=1;i<maxn;i++){\r\n        memset(vis,0,sizeof(vis));\r\n        for(int j=1;a[j]<=i;j++){vis[sg[i-a[j]]]=1;}\r\n        for(int j=0;;j++){\r\n            if(!vis[j]){\r\n               sg[i]=j;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n\r\nint fun(int i,int n){\r\n    if(n==1) return i%3;\r\n    else if(n==2){\r\n            if(i==0)\r\n             return 0;\r\n        return sg[i];\r\n    }else if(n==3){\r\n        return i;\r\n    }else if(n==4){\r\n        if(i==0)\r\n          return 0;\r\n        if(i==1 || i==2)\r\n            return i;\r\n        else\r\n            return ((i-2)\/6)*3+(i-2)%6-1;\r\n    }else if(n==5){\r\n        return (i)%2;\r\n    }else{\r\n        return (i)%(n+1);\r\n    }\r\n}\r\nint main(){\r\n    fun1();\r\n    int n;\r\n    while(cin>>n,n){\r\n        for(int i=0;i<n;i++){\r\n            cin>>a[i];\r\n        }\r\n        int sum=0;\r\n        for(int i=0;i<n;i++){\r\n            sum^=fun(a[i],i+1);\r\n        }\r\n        if(sum)cout<<\"Yougth\"<<endl;\r\n        else cout<<\"Hrdv\"<<endl;\r\n    }\r\n\treturn 0;\r\n}"
},
{
"pid":914,
"code":"\n#include<stdio.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n#define eps 1e-4  \r\nconst int N = 10005;  \r\ndouble w[N], v[N], x[N], max_ave;  \r\nint n, k;  \r\n\r\nbool judge(double a)  \r\n{  \r\n    for(int i = 0; i < n; i++)  \r\n        x[i] = v[i] - a * w[i];   \r\n    sort(x, x+n);  \r\n    double sum = 0;  \r\n    for(int i = 0; i < k; i++)  \r\n        sum += x[n-1-i];  \r\n    return sum >= 0 ? true : false;  \r\n}  \r\n\r\ndouble get_ans()  \r\n{  \r\n    double l = 0, r = max_ave;  \r\n    while(r - l > eps)  \r\n    {  \r\n        double mid = (l + r) \/ 2;  \r\n        if(judge(mid))  \r\n            l = mid;  \r\n        else  \r\n            r = mid;  \r\n    }  \r\n    return l;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    while(~scanf(\"%d%d\",&n,&k))  \r\n    {  \r\n        max_ave = 0;  \r\n        for(int i = 0; i < n; i++)  \r\n        {  \r\n            scanf(\"%lf%lf\",&w[i],&v[i]);  \r\n            double tmp = v[i] \/ w[i];  \r\n            max_ave = max(max_ave, tmp);  \r\n        }  \r\n        printf(\"%.2lf\\n\",get_ans());  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":915,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar ch1[5005],ch2[5005];  \r\nint visit[5005];  \r\nint main()  \r\n{  \r\n    int i,j,count,sum,len;  \r\n    while(~scanf(\"%s%s\",ch1,ch2))  \r\n    {  \r\n        memset(visit,0,sizeof(visit));  \r\n        sum=0;  \r\n        for(i=0;ch2[i];i++)  \r\n        {  \r\n            count=0;  \r\n            for(j=0;ch1[j];j++)  \r\n            {  \r\n                if(!visit[j])  \r\n                {  \r\n                    if(ch1[j]!=ch2[i])  \r\n                    {  \r\n                        count++;  \r\n                    }  \r\n                    else  \r\n                    {  \r\n                        visit[j]=1;  \r\n                        break;  \r\n                    }  \r\n                }  \r\n            }  \r\n            sum+=count;  \r\n        }  \r\n        len=strlen(ch1);  \r\n        for(i=0;i<len;i++)  \r\n        {  \r\n            if(!visit[i])  \r\n            {  \r\n                printf(\"-1\\n\");  \r\n                break;  \r\n            }  \r\n        }  \r\n        if(i>=len)  \r\n            printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":916,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nint a[101],b[101];\r\nint cmp(const void *a,const void *b)\r\n{\r\n\treturn *(int *)b-*(int *)a;\r\n}\r\nint main()\r\n{\r\n\tint n,i;\r\n\twhile(scanf(\"%d\",&n)!=EOF)\r\n\t{\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&b[i]);\r\n\t\tqsort(a,n,sizeof(a[0]),cmp);\r\n\t\tqsort(b,n,sizeof(b[0]),cmp);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tprintf(\"%d \",a[i]);\r\n\t\t\tprintf(\"%d \",b[i]);\r\n\t\t}\r\n\t\tprintf(\"\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":918,
"code":"\n#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n\tint a,sum=0,c;\r\n\tcin>>c;\r\n\twhile(c--)\r\n\t{\r\n\t\tcin>>a;\r\n\t\tint b=1+a;\r\n\t\tsum=(a\/2)*b+a%((a+1)\/2)+a%2;\r\n\t\tcout<<sum<<endl;\r\n\t}\r\n}"
},
{
"pid":919,
"code":"\n#include <iostream>\r\n#include <string.h>\r\nusing namespace std;\r\n\r\nbool Match(char *str1 , char * str2)\r\n{\r\n\tint table[26] = {0};\r\n\tint i;\r\n\tfor(i=0;str1[i]!='\\0';i++)\r\n\t\t++table[str1[i]-'A'];\r\n\tfor(i=0;str2[i]!='\\0';i++)\r\n\t\t--table[str2[i]-'A'];\r\n\tfor(i=0;i<26;i++)\r\n\t\tif(table[i] != 0)\r\n\t\t\treturn false;\r\n\treturn true;\r\n}\r\n\r\nint main()\r\n{\r\n\tchar str1[2001] , str2[2001];\r\n\tint length , i , j , count;\r\n\twhile(cin>>str1>>str2)\r\n\t{\r\n\t\tif(!Match(str1 , str2))\r\n\t\t{\r\n\t\t\tcout<<\"-1\"<<endl;\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tlength = strlen(str1) ;\r\n\t\tcount = 0 ;\r\n\t\ti = j = length -1 ;\r\n\t\twhile(i>=0)\r\n\t\t{\r\n\t\t\tif(str1[i] == str2[j])\r\n\t\t\t{\r\n\t\t\t\t--j;\r\n\t\t\t\t++count;\r\n\t\t\t}\r\n\t\t\t--i;\r\n\t\t}\r\n\t\tcout<<length - count <<endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":920,
"code":"\n#include<cstdio>  \r\n#include<algorithm>  \r\n#include<vector>  \r\nusing namespace std;  \r\nconst int N = 5e2 + 10;  \r\nint father[N], deg[N];  \r\nvector<int> vec[N];  \r\n\r\nvoid Initial(int n) \r\n{  \r\n    for(int i = 1; i <= n; i++)  \r\n        father[i] = i, deg[i] = 0;  \r\n}  \r\n\r\nint Find(int x)  \r\n{  \r\n    if(father[x] != x)  \r\n        father[x] = Find(father[x]);  \r\n    return father[x];  \r\n}  \r\n\r\nvoid Union(int a, int b)  \r\n{  \r\n    int p = Find(a);  \r\n    int q = Find(b);  \r\n    if(p != q)  \r\n        father[p] = q;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int n, m, i, j, cas = 1;  \r\n    while(~scanf(\"%d%d\",&n,&m) && (n+m))  \r\n    {  \r\n        Initial(n); \r\n        int u, v;  \r\n        for(i = 0; i < m; i++)  \r\n        {  \r\n            scanf(\"%d%d\",&u,&v);  \r\n            deg[u]++;  \r\n            deg[v]++;  \r\n            Union(u,v);  \r\n        }  \r\n        for(i = 1; i <= n; i++)  \r\n        {  \r\n            vec[i].clear(); \r\n            if(Find(i) == i)  \r\n            {  \r\n                for(j = 1; j <= n; j++)  \r\n                {  \r\n                    if(Find(j) == Find(i))  \r\n                        vec[i].push_back(j);  \r\n                }  \r\n            }  \r\n        }\r\n        int ans = 0;  \r\n        for(i = 1; i <= n; i++)  \r\n        {  \r\n            int cnt = vec[i].size();  \r\n            if(cnt == 0)  \r\n                continue;  \r\n            int sum = 0;  \r\n            for(j = 0; j < cnt; j++)  \r\n            {  \r\n                sum += deg[vec[i][j]];  \r\n            } \r\n            if(sum == cnt * 2 - 2)  \r\n                ans++;  \r\n        }  \r\n        printf(\"Case %d: \",cas++);  \r\n        if(ans == 0)  \r\n            printf(\"No Trees.\\n\");  \r\n        else if(ans == 1)  \r\n            printf(\"There is one tree.\\n\");  \r\n        else  \r\n            printf(\"A forest of %d trees.\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":921,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint n,i,k1,k2;\r\n\twhile(scanf(\"%d\",&n)&&n)\r\n\t{\r\n\t\tdouble sum=0.0,s;\r\n\t\tfor(k1=1,i=0;i<n;i++)\r\n\t\t\tsum+=1.0\/(k1++);\r\n\t\tk1=2;\r\n\t\tk2=n;\r\n\t\ts=sum;\r\n\t\tfor(i=1;i<n\/2;i++)\r\n\t\t{\r\n\t\t\ts=s+1.0\/(k1++)-1.0\/(k2--);\r\n\t\t\tsum=sum+s;\r\n\t\t}\r\n\t\tif(n!=1)\r\n\t\t{\r\n \t\t\tsum*=2;\r\n \t\t\tif(n%2!=0)\r\n \t\t\t{\r\n\t\t\t\tfor(k1=1,i=n\/2;i<n;i++)\r\n\t\t\t\t\tsum+=1.0\/(k1++);\r\n\t\t\t\tfor(k1=2,i=n\/2-1;i>=0;i--)\r\n\t\t\t\t\tsum+=1.0\/(k1++);\r\n \t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%.2lf\\n\",sum);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":923,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint f[1005][105];  \r\nvoid init()  \r\n{  \r\n    memset(f,0,sizeof(f));  \r\n    f[0][1]=1;  \r\n    f[1][1]=1;  \r\n    f[2][1]=2;  \r\n    f[3][1]=4;  \r\n\r\n    for(int i=4;i<=1000;i++)  \r\n    {  \r\n        int add=0;  \r\n        for(int j=1;j<=100;j++)  \r\n        {  \r\n            f[i][j]=f[i-1][j]+f[i-2][j]+f[i-4][j]+add;  \r\n            add=f[i][j]\/10000;  \r\n            f[i][j]%=10000;  \r\n            if(add==0&&f[i][j]==0)break;  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    init();  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        int k=100;  \r\n        while(!f[n][k])k--;  \r\n        printf(\"%d\",f[n][k--]);  \r\n        for(;k>0;k--)  \r\n        {  \r\n            printf(\"%04d\",f[n][k]);  \r\n        }  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":925,
"code":"\n#include<stdio.h>    \r\n#include<string.h>    \r\n#include<stdlib.h>    \r\n#include<iostream>    \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint pre[100010],a[100010];  \r\nstruct road  \r\n{  \r\n    int x,y,d;  \r\n}s[100010];  \r\nvoid lol(int n)  \r\n{  \r\n    int i;  \r\n    for(i=0;i<=n;i++)  \r\n        pre[i]=i;  \r\n}  \r\nint cmp(road a,road b)  \r\n{  \r\n    return a.d>b.d;  \r\n}  \r\nint find(int x)  \r\n{  \r\n    if(x==pre[x])  \r\n    return pre[x];  \r\n    return pre[x]=find(pre[x]);  \r\n}  \r\nint main()  \r\n{  \r\n    int n,m;  \r\n    int i;  \r\n    while(scanf(\"%d%d\",&n,&m)!=EOF)  \r\n    {  \r\n        lol(n);  \r\n        for(i=0;i<m;i++)  \r\n        scanf(\"%d%d%d\",&s[i].x,&s[i].y,&s[i].d);  \r\n        sort(s,s+m,cmp);\r\n        int num=0,day=0;  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n           int fx=find(s[i].x);  \r\n            int fy=find(s[i].y);  \r\n            if(fx!=fy)  \r\n            {  \r\n                pre[fx]=fy;  \r\n                a[day++]=s[i].d;  \r\n            }  \r\n        }  \r\n          num=unique(a,a+day)-a;\r\n          printf(\"%d\\n\",num);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":926,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint gcd(int a,int b)  \r\n{  \r\n    if(b==0)  \r\n        return a;  \r\n    return gcd(b,a%b);  \r\n}  \r\nint main()  \r\n{  \r\n    int a,b,t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        int c,d,e,r1,r2;  \r\n        scanf(\"%d%d\",&a,&b);  \r\n        c=a*(100-b)+100*(100-a);  \r\n        d=a*(100-b);  \r\n        e=10000-a*100;  \r\n        r1=gcd(d,c);  \r\n        r2=gcd(e,c);  \r\n        printf(\"%d\/%d %d\/%d\\n\",d\/r1,c\/r1,e\/r2,c\/r2);  \r\n    }  \r\n}"
},
{
"pid":927,
"code":"\n#include <stdio.h> \r\n#include <stdlib.h>  \r\n#include <string.h>  \r\nint N, P, a[25];  \r\n\r\nint Mcmp(const void *_a, const void *_b)  \r\n{  \r\n\tint * a =  (int *)_a;  \r\n\tint *b = (int *)_b;  \r\n\treturn *a-*b;  \r\n}  \r\n\r\nint dfs(int s, int sum)  \r\n{  \r\n\tif(sum == P)  \r\n\t\treturn 1;  \r\n\tif(s == N ||(P>0&&a[s] > P)||(sum>0&&sum > P))  \r\n\t\treturn 0;  \r\n \tif(dfs(s+1, sum+a[s]))  \r\n    \treturn 1;  \r\n\telse  \r\n    \treturn dfs(s+1, sum);  \r\n}  \r\n\r\nint main(int argc, char *argv[]) {  \r\n\tint i;  \r\n\twhile(scanf(\"%d\", &N) != EOF)  \r\n\t{  \r\n\t\tfor(i = 0; i < N; i++)  \r\n\t\t\tscanf(\"%d\", &a[i]);  \r\n\t\tscanf(\"%d\", &P);  \r\n\t\tqsort(a, N, sizeof(int), Mcmp);  \r\n\t\tif(dfs(0, 0))  \r\n\t\t\tprintf(\"Of course,I can!\\n\");  \r\n\t\telse  \r\n\t\t\tprintf(\"Sorry,I can't!\\n\");  \r\n\t}  \r\n\treturn 0;  \r\n}"
},
{
"pid":928,
"code":"\n#include <cstdio>  \r\n#include <cmath>  \r\nconst int mod = 9901;  \r\n\r\nint Pow(int a, int n) { \r\n    int res = 1;  \r\n    a %= mod;  \r\n    while(n) {  \r\n        if(n&1) res = res * a % mod;  \r\n        a = a * a % mod;  \r\n        n >>= 1;  \r\n    }  \r\n    return res;  \r\n}  \r\n\r\nint get_sum(int a, int n) {  \r\n    if(n == 0) return 1;  \r\n    if(n&1) return get_sum(a, n \/ 2) * (Pow(a, (n \/ 2 + 1)) + 1) % mod;  \r\n    else return (get_sum(a, n \/ 2 - 1) * (Pow(a, n \/ 2) + 1) + Pow(a, n)) % mod;  \r\n}  \r\n\r\nint main() {  \r\n    int a, b;  \r\n    while(~scanf(\"%d%d\", &a, &b)) {  \r\n        int ans = 1;  \r\n        int m = (int)sqrt(a + 0.5);  \r\n        for(int i = 2; i <= m; ++i) {  \r\n            if(a % i == 0) {  \r\n                int k = 0;  \r\n                while(a % i == 0) {  \r\n                    k++;  \r\n                    a \/= i;  \r\n                }  \r\n                ans = ans * get_sum(i, k * b) % mod;  \r\n            }  \r\n        }  \r\n        if(a > 1) ans = ans * get_sum(a, b) % mod;  \r\n        printf(\"%d\\n\", ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":929,
"code":"\n#include <queue>  \r\n#include <string>  \r\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nconst int N = 5005;  \r\nbool vis[N];  \r\nstring ans;  \r\nint a[17],pre[N],ansAt[N],n,m,c;  \r\nint ctoi(char c)  \r\n{  \r\n    return c >= '0' && c <= '9' ? c - '0' : c - 'A' + 10;  \r\n}  \r\nchar itoc(int i)  \r\n{  \r\n    return i <= 9 ? i + '0' : i + 'A' - 10;  \r\n}  \r\nbool bfs()  \r\n{  \r\n    queue<int> q;  \r\n    q.push(0);  \r\n    while(!q.empty())  \r\n    {  \r\n        int cur = q.front();q.pop();  \r\n        for(int i=0;i<m;i++)  \r\n        {  \r\n            int nxt = (cur * c + a[i]) % n;  \r\n            if(cur == 0 && a[i] == 0 || vis[nxt])  \r\n                       continue;  \r\n            vis[nxt] = true;  \r\n            ansAt[nxt] = a[i];  \r\n            pre[nxt] = cur;  \r\n            if(nxt == 0)  \r\n                      return true;  \r\n            q.push(nxt);  \r\n        }  \r\n    }  \r\n    return false;  \r\n}  \r\n\r\nbool check()  \r\n{  \r\n    ans = \"\";  \r\n    int p = 0;  \r\n    do  \r\n    {  \r\n        ans += itoc(ansAt[p]);  \r\n        p = pre[p];  \r\n    }while(p);  \r\n    return (int)ans.size() <= 500;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int T;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        memset(vis,false,sizeof(vis));  \r\n        scanf(\"%d%d%d\",&n,&c,&m);  \r\n        for(int i=0;i<m;i++)  \r\n        {  \r\n            char num[3];  \r\n            scanf(\"%s\",num);  \r\n            a[i] = ctoi(num[0]);  \r\n        }  \r\n        sort(a,a+m);  \r\n        if(n == 0)  \r\n        {  \r\n            puts(a[0] == 0 ? \"0\" : \"So Sorry.\");  \r\n            continue;  \r\n        }  \r\n        if(bfs() && check())  \r\n        {  \r\n            for(int i=(int)ans.size()-1;i>=0;i--)  \r\n                putchar(ans[i]);  \r\n            puts(\"\");  \r\n        }  \r\n        else  \r\n            puts(\"So Sorry.\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":930,
"code":"\n#include<stdio.h>  \r\nlong long change(long long n)  \r\n{  \r\n    int a[20];  \r\n    int k=0,i;  \r\n    long long res;  \r\n    while(n!=0)  \r\n    {  \r\n        k++;  \r\n        a[k]=n%10;  \r\n        n\/=10;  \r\n    }      \r\n    res=0;  \r\n    for(i=1;i<=k;i++)  \r\n    {  \r\n        res*=10;  \r\n        res+=a[i];  \r\n    }  \r\n    return res;      \r\n}   \r\nint main()  \r\n{  \r\n    int i,cnt;  \r\n    long long n,result[100];  \r\n    while(scanf(\"%lld\",&n)!=EOF)  \r\n    {  \r\n        cnt=0;  \r\n        result[0]=n;  \r\n        while(n!=change(n))  \r\n        {  \r\n            n=n+change(n);  \r\n            result[++cnt]=n;  \r\n        }      \r\n        printf(\"%d\\n\",cnt);  \r\n        for(i=0;i<cnt;i++)  \r\n            printf(\"%lld--->\",result[i]);  \r\n        printf(\"%lld\\n\",result[cnt]);  \r\n    }      \r\n    return 0;  \r\n}"
},
{
"pid":931,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\n#include <stack>  \r\n#define Maxsize 300  \r\n#define inf 0x3f3f3f3f  \r\nusing namespace std;  \r\nstack<int> sta;  \r\nint g[Maxsize][Maxsize];  \r\nint cost[Maxsize];  \r\nint pre[Maxsize][Maxsize];  \r\nint n;  \r\nint s1[Maxsize];  \r\nint s2[Maxsize];  \r\nint intcmp(int *a,int *b)  \r\n{\r\n    int len1=0;  \r\n    int len2=0;  \r\n    for(len1=0;a[len1]!=-1;len1++);  \r\n    for(len2=0;b[len2]!=-1;len2++);  \r\n    for(int i=len1-1,j=len2-1;i>=0&&j>=0;i--,j--)  \r\n    {  \r\n        if(a[i]<b[j])  \r\n            return 1;  \r\n        else if(a[i]>b[i])  \r\n            return -1;  \r\n    }  \r\n    return 0;  \r\n}  \r\nvoid floyed()  \r\n{  \r\n    int i,j,k;  \r\n    for(i=1;i<=n;i++)  \r\n        for(j=1;j<=n;j++)  \r\n        {  \r\n            pre[i][j]=i;  \r\n            if(g[i][j]==-1)  \r\n            {  \r\n                g[i][j]=inf;  \r\n            }  \r\n        }  \r\n    for(k=1;k<=n;k++)  \r\n        for(i=1;i<=n;i++)  \r\n            for(j=1;j<=n;j++)  \r\n            {\r\n                if(g[i][j]>g[i][k]+g[k][j]+cost[k])  \r\n                {  \r\n                    g[i][j]=g[i][k]+g[k][j]+cost[k];  \r\n                    int p,q;  \r\n                    p=k;q=j;  \r\n                    do  \r\n                    {  \r\n                        pre[i][q]=pre[p][q];  \r\n                        q=pre[p][q];  \r\n                    }while(q!=p);  \r\n                }  \r\n                else if(g[i][j]==g[i][k]+g[k][j]+cost[k])  \r\n                {  \r\n                    int f=i,t=k;  \r\n                    int loc=0;  \r\n                    do  \r\n                    {\r\n                        s1[loc++]=t;  \r\n                        t=pre[f][t];  \r\n                    }while(f!=t);  \r\n                    s1[loc]=-1;  \r\n                    int F=i,T=j;  \r\n                    loc=0;  \r\n                    do  \r\n                    {\r\n                        s2[loc++]=T;  \r\n                        T=pre[F][T];  \r\n                    }while(F!=T);  \r\n                    s2[loc]=-1;  \r\n                    if(intcmp(s1,s2)>0)  \r\n                    {  \r\n                        int p,q;  \r\n                        p=k;q=j;  \r\n                        do  \r\n                        {  \r\n                            pre[i][q]=pre[p][q];  \r\n                            q=pre[p][q];  \r\n                        }while(q!=p);  \r\n                    }  \r\n                }  \r\n            }  \r\n    for(i=1;i<=n;i++)  \r\n        for(j=1;j<=n;j++)  \r\n            if(g[i][j]==inf)  \r\n                g[i][j]=-1;  \r\n}  \r\nvoid print_ans(int a,int b)  \r\n{  \r\n    printf(\"From %d to %d :\\n\",a,b);  \r\n    printf(\"Path: \");  \r\n    int i=a,j=b;  \r\n    while(i!=j)  \r\n    {  \r\n        sta.push(j);  \r\n        j=pre[i][j];  \r\n    }  \r\n    printf(\"%d\", i);  \r\n    while(!sta.empty())  \r\n    {  \r\n        printf(\"-->%d\",sta.top());  \r\n        sta.pop();  \r\n    }  \r\n    printf(\"\\nTotal cost : %d\\n\",g[a][b]);  \r\n    printf(\"\\n\");  \r\n}  \r\nint main()  \r\n{  \r\n    int i,j;  \r\n    int m;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        for(i=1;i<=n;i++)  \r\n            for(j=1;j<=n;j++)  \r\n                scanf(\"%d\",&g[i][j]);  \r\n        for(i=1;i<=n;i++)  \r\n            scanf(\"%d\",&cost[i]);  \r\n        floyed();  \r\n        scanf(\"%d\",&m);  \r\n        int a,b;  \r\n        while(m--)  \r\n        {  \r\n            scanf(\"%d%d\",&a,&b);  \r\n            print_ans(a,b);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":932,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#define Maxsize 20  \r\n#define FindMin(a,b) a>b?b:a  \r\n#define INF 999999999  \r\nint g[Maxsize][Maxsize];  \r\nint degree[Maxsize];  \r\nint count;  \r\nint v[Maxsize];  \r\nint ans;  \r\nint T;  \r\nvoid dfs(int u,int value)  \r\n{  \r\n    int i,j;  \r\n    if(u==T)  \r\n    {  \r\n        ans=FindMin(value,ans);  \r\n    }  \r\n    for(i=0;i<count;i++)  \r\n    {  \r\n        if(!((u>>i)&1))  \r\n        {  \r\n            for(j=i+1;j<count;j++)  \r\n                if(!((u>>j)&1))  \r\n                {  \r\n                    int next=u;  \r\n                    next=next|(1<<i);  \r\n                    next=next|(1<<j);  \r\n                    dfs(next,value+g[v[i]][v[j]]);  \r\n                }  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int n,m;  \r\n    int u,e,l;  \r\n    int i,j,k;  \r\n    int sum=0;  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        memset(degree,0,sizeof(degree));  \r\n        for(i=0;i<=n;i++)  \r\n            for(j=0;j<=n;j++)  \r\n                g[i][j]=INF;  \r\n        sum=0;  \r\n        while(m--)  \r\n        {  \r\n            scanf(\"%d%d%d\",&u,&e,&l);  \r\n            sum+=l;  \r\n            degree[u]++;degree[e]++;  \r\n            g[u][e]=g[e][u]=FindMin(g[u][e],l);  \r\n        }  \r\n        for(k=1;k<=n;k++)  \r\n            for(i=1;i<=n;i++)  \r\n                for(j=1;j<=n;j++)  \r\n                    g[i][j]=FindMin(g[i][j],g[i][k]+g[k][j]);  \r\n        count=0;  \r\n        for(i=1;i<=n;i++)  \r\n            if(degree[i]&1)  \r\n                v[count++]=i;  \r\n        T=0;  \r\n        for(i=0;i<count;i++)  \r\n        {  \r\n            T=(T<<1)|1;  \r\n        }  \r\n        ans=INF;  \r\n        dfs(0,0);  \r\n\r\n        printf(\"%d\\n\",sum+ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":933,
"code":"\n#include<cstdio>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\ntypedef long long LL;  \r\nconst int N = 1e5 + 10;  \r\nLL s[N], p[N], v[N];  \r\nint main()  \r\n{  \r\n    int t, m, n, i, k;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d%d\",&n,&m);  \r\n        for(i = 0; i < n; i++)  \r\n            scanf(\"%lld%lld\",&s[i],&p[i]);  \r\n        for(i = n-1; i >= 0; i--)  \r\n        {  \r\n            if(i == n-1)  \r\n                v[i] = s[i] * p[i];  \r\n            else  \r\n                v[i] = min(v[i+1], s[i] * p[i]);  \r\n        }  \r\n        while(m--)  \r\n        {  \r\n            scanf(\"%d\",&k);  \r\n            int a = upper_bound(s, s+n, k) - s;  \r\n            LL ans = k * p[a-1];  \r\n            if(a < n)  \r\n                ans = min(ans, v[a]);  \r\n            printf(\"%lld\\n\",ans);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":934,
"code":"\n#include<stdio.h>\r\n#include<iostream>\r\n#include<cstring>\r\n#include<map>\r\nusing namespace std;\r\n#define maxn 500500\r\nint a[500500];\r\nint dp[maxn][20];\r\nint mm[maxn];\r\nint val[maxn];\r\nvoid initrmp(int n)\r\n{\r\n    mm[0]=-1;\r\n    for(int i=1;i<=n;i++)\r\n    {\r\n        mm[i]=((i&(i-1))==0)?mm[i-1]+1:mm[i-1];\r\n        dp[i][0]=val[i];\r\n    }\r\n    for(int j = 1;j<=mm[n];j++)\r\n        for(int i=1;i+(1<<j)-1<=n;i++)\r\n            dp[i][j]=max(dp[i][j-1],dp[i+(1<<(j-1))][j-1]);\r\n}\r\nint query(int l,int r)\r\n{\r\n    int k = mm[r-l+1];\r\n    return max(dp[l][k],dp[r-(1<<k)+1][k]);\r\n}\r\nmap<int,int> H;\r\nint main()\r\n{\r\n    int n;\r\n    while(scanf(\"%d\",&n)!=EOF)\r\n    {\r\n        memset(mm,0,sizeof(mm));\r\n        memset(val,0,sizeof(val));\r\n        memset(dp,0,sizeof(dp));\r\n        memset(a,0,sizeof(a));\r\n        H.clear();\r\n        for(int i=1;i<=n;i++)\r\n            scanf(\"%d\",&a[i]);\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            val[i]=H[a[i]];\r\n            H[a[i]]=i;\r\n        }\r\n        initrmp(n);\r\n        int m;scanf(\"%d\",&m);\r\n        while(m--)\r\n        {\r\n            int l ,r;\r\n            scanf(\"%d%d\",&l,&r);\r\n            int p = query(l,r);\r\n            if(p<l)printf(\"OK\\n\");\r\n            else printf(\"%d\\n\",a[p]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n}"
},
{
"pid":935,
"code":"\n#include <stdio.h>\r\n#include <math.h>\r\nint main()\r\n{\r\n\tint t, n, i;\r\n\tscanf(\"%d\", &t);\r\n\twhile (t--) {\r\n\t\tscanf(\"%d\", &n);\r\n\t\tfor (i = (int) sqrt(n); i >= 1; i--)\r\n\t\t\tif (n % i == 0 && (n \/ i - i) % 2 == 0 && (n \/ i - i) != 0) {\r\n\t\t\t\tprintf(\"%d\\n\", (n \/ i - i) \/ 2);\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\tif (i == 0) printf(\"-1\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":936,
"code":"\n#include<iostream>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\n#include<stdio.h>  \r\n#include<cmath>  \r\nusing namespace std;  \r\n#define PI 3.1415926  \r\nint main()  \r\n{  \r\n    double A,H,sum,c,dis,d;  \r\n    while(~scanf(\"%lf%lf\",&A,&H))  \r\n    {  \r\n        d=sqrt(A*A+H*H); \r\n        c=A\/d*2*PI;  \r\n        sum=sqrt(d*d*5\/4-d*d*cos(A\/d*2*PI))+d\/2;\r\n        dis=2*d;  \r\n        if(c>=PI)  \r\n        printf(\"%.2lf\\n\",dis);  \r\n        else  \r\n        printf(\"%.2lf\\n\",sum);  \r\n    }  \r\n}"
},
{
"pid":939,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\nusing namespace std;\r\n#define N 100000010\r\n\r\nunsigned int prime[6000000], p[6000000], T, num;\r\nunsigned int flag[3126000];\r\n\r\nvoid slove(int n) {\r\n    unsigned int res = 1;\r\n    int i, t1, t2;\r\n    for(i = 0; i <= num && prime[i] * prime[i] <= n; ++i) {\r\n        t1 = prime[i];\r\n        t2 = prime[i] * prime[i];\r\n        while(t2 \/ t1 == prime[i] && t2 <= n)\r\n        {\r\n            t1 *= prime[i];\r\n            t2 *= prime[i];\r\n        }\r\n        res *= (t1 \/ prime[i]);\r\n    }\r\n    int t = upper_bound(prime, prime+num, n) - prime - 1;\r\n    res *= p[t];\r\n    printf(\"%u\\n\", res);\r\n}\r\nvoid initPrime() {\r\n    int i, j;\r\n    p[num=0] = prime[0] = 2;\r\n    for(i = 3; i < N; i += 2) {\r\n        if( !(flag[i\/32]&(1<<(i%32))) ) {\r\n            prime[++num] = i;\r\n            p[num] = i * p[num-1];\r\n            for(j = i * 3; j < N; j += i * 2)\r\n                flag[j\/32] |= 1<<(j%32);\r\n        }\r\n    }\r\n}\r\n\r\nint main() {\r\n    initPrime();\r\n    prime[++num] = 100000003;\r\n    scanf(\"%d\", &T);; int i, n;\r\n    for(i = 0; i < T; ++i) {\r\n        scanf(\"%d\", &n);\r\n        slove(n);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":940,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\nint min(int a,int b)\r\n{return a>b?b:a;}\r\nint main()\r\n{\r\n\tint i,k;\r\n\tint dparr[2000];\r\n\tdparr[0]=0;\r\n\tdparr[1]=1;\r\n\tdparr[2]=2;\r\n\tdparr[3]=3;\r\n\tfor(i=4;i<=1000;i++)\r\n\t{\r\n\t\tint j = sqrt(i);\r\n\t\tdparr[i]=i;\r\n\t\tif(j*j==i)\r\n\t\t\tdparr[i]=1;\r\n\t\telse\r\n\t\tfor(k=1;k<=j;k++)\r\n\t\t\tdparr[i]=min(dparr[i],dparr[k*k]+dparr[i-(k*k)]);\r\n\t}\r\n\tint t;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tscanf(\"%d\",&i);\r\n\t\tprintf(\"%d\\n\",dparr[i]);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":941,
"code":"\n#include <iostream>\r\n#include <cstring>\r\n#include <cstdio>\r\n#include <algorithm>\r\n#define MAX 400007\r\n\r\nusing namespace std;\r\n\r\ntypedef long long LL;\r\nLL a,b,dp[MAX];\r\nint k;\r\n\r\nLL gcd ( LL a , LL b )\r\n{\r\n    return b==0?a:gcd(b,a%b);\r\n}\r\n\r\nLL solve ( LL a , LL b )\r\n{\r\n    memset ( dp, 0x3f , sizeof ( dp ) );\r\n    dp[a] = 0;\r\n    for ( int i = a ; i > b ; i-- )\r\n    {\r\n        dp[i-1] = min( dp[i]+1 , dp[i-1] );\r\n        for ( int j = 2 ; j <= k ; j++ )\r\n            dp[i-i%j] = min ( dp[i-i%j] , dp[i]+1 );\r\n    }\r\n    return dp[b];\r\n}\r\n\r\nint main ( )\r\n{\r\n    while ( ~scanf ( \"%lld%lld%d\" , &a , &b , &k ) )\r\n    {\r\n        LL lcm = 2;\r\n        for ( int i = 3; i <= k ; i++ )\r\n        {\r\n            int d = gcd ( i , lcm );\r\n            lcm *= i;\r\n            lcm \/= d;\r\n        }\r\n        LL ans;\r\n        if ( a\/lcm == b\/lcm )\r\n            ans = solve ( a%lcm , b%lcm );\r\n        else \r\n            ans = solve ( a%lcm , 0 ) + (a\/lcm-b\/lcm-1)*solve ( lcm , 0 ) + solve ( lcm , b%lcm );\r\n        printf ( \"%lld\\n\" , ans );\r\n    }\r\n}"
},
{
"pid":944,
"code":"\n#include<stdio.h>\r\nint a[1000005]={0};\r\nint main()\r\n{\r\n\tint i,j,n,s;\r\n \ta[1]=1;\r\n \tfor(i=2;i<1000005;i++)\r\n  \t\tfor(j=i+i;j<1000005;j+=i)\r\n   \t\t\ta[j]=1;\r\n  \tscanf(\"%d\",&s);\r\n  \twhile(s--)\r\n  \t{\r\n   \t\tscanf(\"%d\",&n);\r\n   \t\tif(n==0) printf(\"6\\n\");\r\n   \t\telse\r\n   \t\t{\r\n     \t\tfor(i=n;;i++)\r\n    \t\t\tif(!a[i])\r\n    \t\t\t{\r\n     \t\t\t\tprintf(\"%d\\n\",i);\r\n     \t\t\t\tbreak;\r\n    \t\t\t}\r\n   \t\t}\r\n  \t}\r\n  \treturn 0;\r\n}"
},
{
"pid":946,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\n#include<set>  \r\nusing namespace std;  \r\nset <int> s;  \r\nset <int>::iterator it,p;  \r\nint main()  \r\n{  \r\n    int T,n,a;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        scanf(\"%d\",&a);  \r\n        s.insert(a);  \r\n        long long sum=a;  \r\n        for(int i=1; i<n; i++)  \r\n        {  \r\n            scanf(\"%d\",&a);  \r\n            it = s.end();  \r\n            it  --;  \r\n            if(*it < a) sum += a - *it, s.insert(a); \r\n            else  \r\n            {  \r\n                it = s.lower_bound(a);  \r\n                if(*it==*s.begin())  sum += *it - a, s.insert(a);\r\n                else  \r\n                {  \r\n                    long long x=*it-a;  \r\n                    long long y=a-*(--it);  \r\n                    sum+=x>y?y:x;  \r\n                    s.insert(a);  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%lld\\n\\n\",sum);  \r\n        s.clear();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":947,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stdlib.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\ntypedef long long LL;  \r\nLL a[100005],c[55];  \r\nstruct node  \r\n{  \r\n    int sum;  \r\n    node *next[2];  \r\n};  \r\nstruct node *root;  \r\nstruct node *build()  \r\n{  \r\n    struct node *p;  \r\n    p=(struct node *)malloc(sizeof(struct node));  \r\n    for(int i=0; i<2; i++)  \r\n    {  \r\n        p->next[i]=NULL;  \r\n    }  \r\n    return p;  \r\n}  \r\nvoid solve(LL s)  \r\n{  \r\n    memset(c,0,sizeof(c));  \r\n    int num = 50;  \r\n    while(s)  \r\n    {  \r\n        c[num--] = s%2;  \r\n        s\/=2;  \r\n    }  \r\n}  \r\nvoid insert(LL s)  \r\n{  \r\n    solve(s);  \r\n    struct node *p;  \r\n    p=root;  \r\n    for(int i=0; i<=50; i++)  \r\n    {  \r\n        if(p->next[c[i]]==NULL)  \r\n            p->next[c[i]]=build();  \r\n        p=p->next[c[i]];  \r\n    }  \r\n}  \r\nLL find(LL s)  \r\n{  \r\n    solve(s);  \r\n    struct node *p;  \r\n    p=root;  \r\n    LL sum = 0;  \r\n    for(int i=0; i<=50; i++)  \r\n    {  \r\n        if(p->next[!c[i]]==NULL)\r\n        {  \r\n            sum = sum * 2;  \r\n            p=p->next[c[i]];  \r\n        }  \r\n        else  \r\n        {  \r\n            sum = sum * 2 + 1;  \r\n            p=p->next[!c[i]];  \r\n        }  \r\n    }  \r\n    return sum;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        root=build();  \r\n        LL ans = 0;  \r\n        for(i=0; i<n; i++)  \r\n        {  \r\n            scanf(\"%lld\",&a[i]);  \r\n            insert(a[i]);  \r\n        }  \r\n        for(i = 0; i < n; i++)  \r\n            ans = max(find(a[i]),ans);  \r\n        printf(\"%lld\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":948,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<stdlib.h>  \r\nint a[100005];  \r\nint cmp(const void *a,const void *b)  \r\n{  \r\n    return *(int *)a-*(int *)b;  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        int i,j,temp=0;  \r\n        for(i=0;i<n;i++)  \r\n            scanf(\"%d\",&a[i]);  \r\n        qsort(a,n,sizeof(a[0]),cmp);  \r\n        for(i=a[n-1];i>=1;i--)  \r\n        {  \r\n            temp=0;  \r\n            for(j=n-1;j>=0;j--)  \r\n            {  \r\n                if(a[j]%i==0)  \r\n                    temp++;  \r\n                if(temp==2)  \r\n                    break;  \r\n            }  \r\n            if(temp==2)  \r\n            {  \r\n                printf(\"%d\\n\",i);  \r\n                break;  \r\n            }  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":949,
"code":"\n#include<stdio.h>  \r\nint main(){  \r\n    long long a,b,c,d,e,f;  \r\n    while(scanf(\"%lld%lld%lld%lld%lld%lld\",&a,&b,&c,&d,&e,&f)!=EOF){  \r\n        if(a*c*e*b*d*f==0){  \r\n        if(d==0)printf(\"Hermione\");  \r\n        else{  \r\n            if(c==0)printf(\"Ron\");  \r\n            else{  \r\n                if(b==0)printf(\"Hermione\");  \r\n                else{  \r\n                    if(a==0)printf(\"Ron\");  \r\n                    else{  \r\n                        if(f==0)printf(\"Hermione\");  \r\n                        else{  \r\n                            if(e==0)printf(\"Ron\");  \r\n                        }  \r\n                    }  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"\\n\");  \r\n        }  \r\n        else{  \r\n        printf(\"%s\\n\",a*c*e>=b*d*f?\"Hermione\":\"Ron\");}  \r\n    }  \r\n    return 0;   \r\n}"
},
{
"pid":951,
"code":"\n#include <stdio.h>\r\n\r\nint main()\r\n{\r\n    int x, y, movx, movy;\r\n    while(scanf(\"%d%d%d%d\", &x, &movx, &y, &movy) != EOF)\r\n    {\r\n        if((x > y ? x-y : y-x) <= movx)\r\n        {\r\n            printf(\"Ciel\\n\");\r\n        }\r\n        else if(movx == movy)\r\n        {\r\n            printf(\"Draw\\n\");\r\n        }\r\n        else\r\n        {\r\n            if(movx > movy)\r\n            {\r\n                if(movx > 2*movy)   \r\n                {\r\n                    printf(\"Ciel\\n\");\r\n                }\r\n                else\r\n                {\r\n                    printf(\"Draw\\n\");\r\n                }\r\n            }\r\n            else\r\n            {\r\n                if(movy > 2*movx)    \r\n                {\r\n                    printf(\"Liss\\n\");\r\n                }\r\n                else\r\n                {\r\n                    printf(\"Draw\\n\");\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":952,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<math.h>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\n#define MAXN 1010  \r\n#define fab(a) (a)>0?(a):(-a)  \r\n#define INF 0xfffffff  \r\n#define LL long long  \r\n#define mem(x) memset(x,0,sizeof(x))  \r\nusing namespace std;  \r\nstruct  s  \r\n{  \r\n    double x,y;  \r\n}list[MAXN];  \r\ndouble area(s a,s b,s c)  \r\n{  \r\n    return (a.x-c.x)*(b.y-c.y)-(b.x-c.x)*(a.y-c.y);  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    int i,j,k;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        for(i=0;i<n;i++)  \r\n        scanf(\"%lf%lf\",&list[i].x,&list[i].y);  \r\n        double ans=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            for(j=0;j<n;j++)  \r\n            {  \r\n                if(i==j)  \r\n                continue;  \r\n                double M1=0,M2=0;  \r\n                for(k=0;k<n;k++)  \r\n                {  \r\n                    if(k==i||k==j)  \r\n                    continue;  \r\n                    double a=list[i].y-list[j].y,b=list[j].x-list[i].x,c=list[i].x*list[j].y-list[j].x*list[i].y;  \r\n                    double temp;  \r\n                    temp=a*list[k].x+b*list[k].y+c;  \r\n                    if(temp>0)  \r\n                    {  \r\n                        M1=max(fab(area(list[i],list[j],list[k])\/2),M1);  \r\n                    }  \r\n                    else if(temp<0)  \r\n                    {  \r\n                        M2=max(fab(area(list[i],list[j],list[k])\/2),M2);  \r\n                    }  \r\n                }  \r\n                if(M1==0||M2==0)\r\n                continue;  \r\n                ans=max(ans,M1+M2);  \r\n            }  \r\n        }  \r\n        printf(\"%.6lf\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":953,
"code":"\n#include<iostream>\r\n#include<cstring>\r\n#include<cstdio>\r\nusing namespace std;\r\nchar a[1000010];\r\nint main()\r\n{   while(scanf(\"%s\",&a)!=EOF)\r\n     {  long j,i,Pos=0,ans=0,len=strlen(a);\r\n        for(i=0;i<len;i++)\r\n        { if(a[i]=='(') Pos++;\r\n          if(a[i]==')'&&Pos){ans+=2; Pos--;}\r\n        }\r\n        printf(\"%ld\\n\",ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":954,
"code":"\n#include <cstdio>  \r\n\r\nint n, ans;  \r\n\r\nint main()  \r\n{  \r\n    while (~scanf(\"%d\", &n)) {  \r\n        ans = 0;  \r\n        while (n != 0) {  \r\n            ans += n \/ 2;  \r\n            n \/= 2;  \r\n        }  \r\n        printf(\"%d\\n\", ans + 1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":955,
"code":"\n#include<stdio.h>  \r\nlong long  shuru()  \r\n{  \r\n    long long  num=0;bool f=0;  \r\n    while(1)  \r\n    {  \r\n        char b=getchar();  \r\n        if(b=='-')  \r\n        {f=1;continue;}  \r\n        if(b==10||b==' ')  \r\n            return f==0?num:-num;  \r\n        num=num*10+(b-'0');  \r\n    }  \r\n}  \r\nlong long  a;  \r\nint main()  \r\n{  \r\n    long long  n,T;  \r\n    scanf(\"%lld\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%lld\",&n);long long  x=0;getchar();  \r\n        long long  sum=0;  \r\n        long long f;  \r\n        long long xf=n;  \r\n        f=n-2;x=0;  \r\n        for(long long  i=0;i<n;i++)  \r\n        {  \r\n            a=shuru();  \r\n            sum+=a*xf;  \r\n            if(!x&&f<0) x=1;  \r\n            xf=xf+f;  \r\n            f-=2;  \r\n        }  \r\n        printf(\"%lld\\n\",sum);  \r\n    }  \r\n}"
},
{
"pid":958,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<math.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint a[1001000];  \r\nint main()  \r\n{  \r\n    int T;    \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        int n;  \r\n        int i,j,k;  \r\n        scanf(\"%d\",&n);  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n        }  \r\n        long long ans=0;  \r\n        int zuobiao1;  \r\n        int zuobiao2;  \r\n        int cnm=1;  \r\n        for(j=0;j<n-1;)  \r\n        {  \r\n            if(a[j]>a[j+1])  \r\n            {  \r\n                int max=0;  \r\n                long long he=0;  \r\n                int zuobiao;  \r\n                for(k=j+1;k<n;k++)  \r\n                {  \r\n                    if(a[j]-a[k]>0)  \r\n                    he+=a[j]-a[k];  \r\n                    if(a[j]-a[k]<=0)  \r\n                    {  \r\n                        zuobiao=k;  \r\n                        break;    \r\n                    }     \r\n                }  \r\n                if(k==n)  \r\n                {  \r\n                    cnm=0;  \r\n                    zuobiao1=j;  \r\n                    zuobiao2=n-1;  \r\n                    break;  \r\n                }  \r\n                else  \r\n                {  \r\n                    ans+=he;  \r\n                }  \r\n                j=zuobiao;  \r\n            }  \r\n            else  \r\n            {  \r\n                j++;  \r\n            }     \r\n        }  \r\n        if(cnm==0)  \r\n        {  \r\n            int p;  \r\n            int k;  \r\n            for(p=zuobiao2;p>zuobiao1;)  \r\n            {  \r\n                if(a[p]>a[p-1])  \r\n                {  \r\n                    long long he1=0;  \r\n                    int zz;  \r\n                    int zuo;  \r\n                    for(k=p-1;k>=zuobiao1;k--)  \r\n                    {         \r\n                        if(a[p]-a[k]>0)  \r\n                        {  \r\n                            he1+=a[p]-a[k];  \r\n                        }  \r\n                        if(a[p]-a[k]<=0)  \r\n                        {  \r\n                            zuo=k;  \r\n                            break;  \r\n                        }  \r\n                    }  \r\n                    ans+=he1;  \r\n                    p=zuo;  \r\n                }  \r\n                else  \r\n                {  \r\n                    p--;  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%lld\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":961,
"code":"\n#include <map>\r\n#include <set>\r\n#include <queue>\r\n#include <stack>\r\n#include <vector>\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <cstdlib>\r\n#include <cstring>\r\n#include <iostream>\r\n#include <algorithm>\r\nusing namespace std;\r\n\r\nconst double pi = acos(-1.0);\r\nconst int inf = 0x3f3f3f3f;\r\nconst double eps = 1e-15;\r\ntypedef long long LL;\r\ntypedef pair <int, int> PLL;\r\n\r\nconst int N = 100100;\r\nint arr[N];\r\nint ans[N];\r\nstruct node\r\n{\r\n    int l, r, val;\r\n}tree[N << 2];\r\n\r\nvoid build(int p, int l, int r)\r\n{\r\n    tree[p].l = l;\r\n    tree[p].r = r;\r\n    if (l == r)\r\n    {\r\n        tree[p].val = arr[l];\r\n        return;\r\n    }\r\n    int mid = (l + r) >> 1;\r\n    build(p << 1, l, mid);\r\n    build(p << 1 | 1, mid + 1, r);\r\n    tree[p].val = min(tree[p << 1].val, tree[p << 1 | 1].val);\r\n}\r\n\r\nint query(int p, int l, int r, int lim)\r\n{\r\n    if (tree[p].l == tree[p].r)\r\n    {\r\n        return tree[p].val < lim ? tree[p].l : -1;\r\n    }\r\n    int mid = (tree[p].l + tree[p].r) >> 1;\r\n    if (l > mid && tree[p << 1 | 1].val < lim)\r\n    {\r\n        int j = query(p << 1 | 1, l, r, lim);\r\n        if (j != -1)\r\n        {\r\n            return j;\r\n        }\r\n    }\r\n    if (r <= mid && tree[p << 1].val < lim)\r\n    {\r\n        int j = query(p << 1, l, r, lim);\r\n        if (j != -1)\r\n        {\r\n            return j;\r\n        }\r\n    }\r\n    if (l <= mid && r > mid && tree[p << 1 | 1].val < lim)\r\n    {\r\n        int j = query(p << 1 | 1, mid + 1, r, lim);\r\n        if (j != -1)\r\n        {\r\n            return j;\r\n        }\r\n    }\r\n    if (l <= mid && r > mid && tree[p << 1].val < lim)\r\n    {\r\n        int j = query(p << 1, l, mid, lim);\r\n        if (j != -1)\r\n        {\r\n            return j;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n\r\nint main()\r\n{\r\n    int n;\r\n    while (~scanf(\"%d\", &n))\r\n    {\r\n        for (int i = 1; i <= n; ++i)\r\n        {\r\n            scanf(\"%d\", &arr[i]);\r\n        }\r\n        build(1, 1, n);\r\n        for (int i = 1; i < n; ++i)\r\n        {\r\n            int j = query(1, i + 1, n, arr[i]);\r\n            if (j == -1)\r\n            {\r\n                ans[i] = -1;\r\n            }\r\n            else\r\n            {\r\n                ans[i] = j - i - 1;\r\n            }\r\n        }\r\n        ans[n] = -1;\r\n        printf(\"%d\", ans[1]);\r\n        for (int i = 2; i <= n; ++i)\r\n        {\r\n            printf(\" %d\", ans[i]);\r\n        }\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":962,
"code":"\n#include<cstdio>\r\nint m, x, y, ans = 1, fa[100005];\r\nint find(int x){return fa[x] ? fa[x] = find(fa[x]) : x;}\r\nint main()\r\n{\r\n\tscanf(\"%*d%d\", &m);\r\n\tfor (int i = 0; i < m; i++)\r\n\t{\r\n\t\tscanf(\"%d%d\", &x, &y);\r\n\t\tif (find(x) == find(y)) ans = ans * 2 % 1000000009;\r\n\t\telse fa[find(x)] = find(y);\r\n\t\tprintf(\"%d\\n\", ans - 1);\r\n\t}\r\n}"
},
{
"pid":964,
"code":"\n#include<cstdio>\r\nmain()\r\n{\r\n\tint n, i;\r\n\tscanf(\"%d\", &n);\r\n\tfor(i = 0; i < n; ++i)\r\n\t\tputchar('a' + i % 4);\r\n}"
},
{
"pid":965,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <math.h>  \r\n#include <iostream>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nconst double eps=1e-6; \r\ndouble x,y,c;  \r\ndouble fun(double w)  \r\n{  \r\n    return 1-c\/sqrt(x*x-w*w)-c\/sqrt(y*y-w*w);  \r\n}  \r\nint main()  \r\n{  \r\n    while(~scanf(\"%lf%lf%lf\",&x,&y,&c))  \r\n    {  \r\n        double left=0,mid,right=x;  \r\n        while(right-left>eps)  \r\n        {  \r\n            mid=(left+right)\/2;  \r\n            if(fun(mid)>0)  \r\n                left=mid;  \r\n            else right=mid;  \r\n        }  \r\n        printf(\"%.3lf\\n\",mid);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":966,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\nstruct\r\n{\r\n\tint x,y;\r\n}mp[1005];\r\nint cmp(const void *a,const void *b)\r\n{\r\n\treturn *(int *)a-*(int *)b;\r\n}\r\nvoid swith(int i)\r\n{\r\n \tint t;\r\n \tt=mp[i].y;\r\n \tmp[i].y=mp[i].x;\r\n \tmp[i].x=t;\r\n}\r\nint main()\r\n{\r\n \tint n,s=1;\r\n \twhile(scanf(\"%d\",&n)!=EOF)\r\n \t{\r\n  \t\tint i,t,sum=1;\r\n  \t\tfor(i=0;i<n;i++)\r\n  \t\t{\r\n    \t\tscanf(\"%d%d\",&mp[i].y,&mp[i].x);\r\n    \t\tif(mp[i].y>mp[i].x)\r\n     \t\t\tswith(i);\r\n  \t\t}\r\n  \t\tqsort(mp,n,sizeof(mp[0]),cmp);\r\n  \t\tt=mp[0].x;\r\n  \t\tfor(i=1;i<n;i++)\r\n   \t\t\tif(t<mp[i].y)\r\n   \t\t\t{\r\n    \t\t\tt=mp[i].x;\r\n    \t\t\tsum++;\r\n   \t\t\t}\r\n   \t\tprintf(\"Case %d:\\n%d.\\n\",s++,sum);\r\n \t}\r\n \treturn 0;\r\n}"
},
{
"pid":967,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <string>  \r\n#include <cmath>  \r\n#include <iomanip>  \r\n#include <ctime>  \r\n#include <climits>  \r\n#include <cstdlib>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\n#include <queue>  \r\n#include <vector>  \r\n#include <set>  \r\n#include <map>  \r\nusing namespace std;  \r\ntypedef long long ll;  \r\nconst double pi = acos(-1.0);  \r\nconst double e = exp(1.0);  \r\nconst double eps = 1e-8;  \r\nconst int maxlen = 100005;  \r\nchar str[maxlen];  \r\n\r\nbool compare(int x1, int y1, int x2, int y2);   \r\nint main()  \r\n{  \r\n    ios::sync_with_stdio(false);  \r\n    while (~scanf(\"%s\", str))  \r\n    {  \r\n        int len = strlen(str);  \r\n        int ans=0, end1=len-2, end2=len-1;  \r\n        while (end2 >= 0)  \r\n        {  \r\n            while (end1>=0 && (str[end1+1]=='0'||  \r\n                !compare(0, end1, end1+1, end2)))  \r\n                end1--; \r\n            if (end1 == -1)  \r\n                break; \r\n            ans++; \r\n            end2 = end1;  \r\n            end1--;  \r\n        }  \r\n        ans++; \r\n        printf(\"%d\\n\", ans);  \r\n    }  \r\n    return 0;  \r\n}  \r\n\r\nbool compare(int x1, int y1, int x2, int y2)  \r\n{  \r\n    int len1 = y1-x1+1;  \r\n    int len2 = y2-x2+1;  \r\n    if (len1 > len2)  \r\n        return 1;  \r\n    if (len2 > len1)  \r\n        return 0;  \r\n    for (int i=0; i<len1; ++i)  \r\n    {  \r\n        if (str[x1+i] > str[x2+i])  \r\n            return 1;  \r\n        else if (str[x1+i] < str[x2+i])  \r\n            return 0;  \r\n    }  \r\n    return 1;\r\n}"
},
{
"pid":969,
"code":"\n#include<stdio.h>\r\n#include<math.h>\r\n#define eps 1e-10\r\ndouble fun(double x, double y)\r\n{\r\n\treturn 6 * pow(x, 7) + 8 * pow(x, 6) + 7 * pow(x , 3) + 5 * x * x - x * y;\r\n}\r\ndouble fundao(double x, double y)\r\n{\r\n\treturn 42 * pow(x, 6) + 48 * pow(x, 5) + 21 * x * x + 10 * x - y;\r\n}\r\nint main(void)\r\n{\r\n\tint T;\r\n\tscanf(\"%d\", &T);\r\n\twhile(T --)\r\n\t{\r\n\t\tdouble y;\r\n\t\tdouble a, b, c, d, e;\r\n\t\tscanf(\"%lf\", &y);\r\n\t\tif(y <= 0)\r\n\t\t{\r\n\t\t\tprintf(\"%.4lf\\n\", fun(0, y));\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\ta = 0;\r\n\t\tb = 100;\r\n\t\tc = fundao(0, y);\r\n\t\td = fundao(100, y);\r\n\t\tif(c * d >= 0)\r\n\t\t\tprintf(\"%.4lf\", fun(100, y));\r\n\t\twhile(b - a > eps)\r\n\t\t{\r\n\t\t\te = (a + b) \/ 2;\r\n\t\t\tif(fabs(fundao(e, y)) < eps)\r\n\t\t\t\tbreak;\r\n\t\t\telse if((fundao(e, y)) * c < 0)\r\n\t\t\t{\r\n\t\t\t\td = fundao(e, y);\r\n\t\t\t\tb = e;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tc = fundao(e, y);\r\n\t\t\t\ta = e;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%.4lf\\n\", fun(e,y));\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":970,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\nint a[110];  \r\nbool ans[11000];  \r\nint main()  \r\n{  \r\n    int k,n;  \r\n    while(~scanf(\"%d%d\",&n,&k))  \r\n    {  \r\n        for(int i=0;i<k;i++)  \r\n            scanf(\"%d\",&a[i]);  \r\n        memset(ans,false,sizeof(ans));  \r\n        for(int i=1;i<=n;i++)  \r\n        {  \r\n            for(int j=0;j<k;j++)  \r\n            {  \r\n                ans[i] |= a[j]<=i&&!ans[i-a[j]];  \r\n            }  \r\n        }  \r\n        printf(ans[n]?\"Wa,Yougth is Best!\\n\":\"Oh，Sorry！Yougth Lost!\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":971,
"code":"\n#include<stdio.h>  \r\nint max(int m,int n);  \r\nint min(int m,int n);  \r\nint d[90000];  \r\nint main()  \r\n{  \r\n    int N,L,i,maxT,minT;  \r\n    while(scanf(\"%d%d\",&N,&L)!=-1)  \r\n    {  \r\n        i=0,maxT=0,minT=0;  \r\n        while(i<N)  \r\n        {  \r\n            scanf(\"%d\",&d[i]);  \r\n            i++;  \r\n        }  \r\n        for(i=0;i<N;i++)  \r\n        {  \r\n            maxT=max(maxT,max(d[i],L-d[i]));  \r\n            minT=max(minT,min(d[i],L-d[i]));  \r\n\r\n        }  \r\n        printf(\"The minimum time is: %d\\nThe maximum time is: %d\\n\\n\",minT,maxT);  \r\n    }  \r\n\r\n    return 0;  \r\n}  \r\nint max(int m,int n)  \r\n{  \r\n    return m>n?m:n;  \r\n}  \r\nint min(int m,int n)  \r\n{  \r\n    return m<n?m:n;  \r\n}"
},
{
"pid":972,
"code":"\n#include<stdio.h>  \r\nint gcd(int xx,int x)  \r\n{  \r\n    int t;  \r\n    while(x)  \r\n    {  \r\n        t=xx%x;xx=x;x=t;  \r\n    }  \r\n    return xx;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int a[3];  \r\n    while(~scanf(\"%d%d%d\",&a[0],&a[1],&a[2]))  \r\n    {  \r\n        int n=0;  \r\n        if(a[0]) n++; if(a[1]) n++; if(a[2]) n++;  \r\n        int cnt =1 , i=0;  \r\n        while(i<3)  \r\n        {  \r\n\r\n             if(a[i]) cnt=cnt*a[i]\/gcd(cnt,a[i]);  \r\n            i++;  \r\n        }  \r\n        printf(\"%d\\n\",cnt*n);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":973,
"code":"\n#include <iostream>  \r\n#include<cstdio>  \r\n#include <cstdlib>  \r\n#include <queue>  \r\n#include <vector>  \r\nusing namespace std;  \r\n\r\nconst int MAXN=505;  \r\nconst int INF=0x7FFFFFFF;  \r\n\r\nstruct edge  \r\n{  \r\n    int to;  \r\n    double weight;  \r\n};  \r\n\r\nvector<edge> adjmap[MAXN]; \r\nbool in_queue[MAXN]; \r\nint in_sum[MAXN];\r\ndouble dist[MAXN]; \r\nint nodesum; \r\nint edgesum; \r\n\r\nbool SPFA(int source)  \r\n{  \r\n    queue<int> dq;  \r\n    int i,j,x,to;  \r\n    for(i=1;i<=nodesum;i++)  \r\n    {  \r\n        in_sum[i]=0;  \r\n        in_queue[i]=false;  \r\n        dist[i]=0;  \r\n    }  \r\n    dq.push(source);  \r\n    in_sum[source]++;  \r\n    dist[source]=1.0;  \r\n    in_queue[source]=true;  \r\n\r\n    while(!dq.empty())  \r\n    {  \r\n        x=dq.front();  \r\n        dq.pop();  \r\n        in_queue[x]=false;  \r\n        for(i=0;i<adjmap[x].size();i++)  \r\n        {  \r\n            double f=adjmap[x][i].weight;  \r\n            to=adjmap[x][i].to;  \r\n            if(dist[to]-dist[x]*f<0.01)  \r\n            {  \r\n                dist[to]=dist[x]*f;  \r\n                if(!in_queue[to])  \r\n                {  \r\n                    dq.push(to);  \r\n                    in_queue[to]=true;  \r\n                    if(++in_sum[to]>=nodesum) return true;  \r\n\r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n    return false;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int n,i,s,e;  \r\n    double w;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--){  \r\n    edge temp;  \r\n    scanf(\"%d%d\",&nodesum,&edgesum);  \r\n    for(i=1;i<=nodesum;i++)  \r\n    adjmap[i].clear();\r\n    for(i=1;i<=edgesum;i++)  \r\n    {  \r\n        scanf(\"%d%lf%d\",&s,&w,&e);  \r\n        temp.to=e;  \r\n        temp.weight=w;  \r\n        adjmap[s].push_back(temp);  \r\n    }  \r\n    if(SPFA(1))  \r\n    cout<<\"Yes\"<<endl;  \r\n    else   \r\n    cout<<\"No\"<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":974,
"code":"\n#include <stdio.h>\r\n#include <iostream>\r\nusing namespace std;\r\nint n;\r\nint src[2000][2000];\r\n\r\nint main(){\r\n\twhile(scanf(\"%d\",&n)!=EOF){\r\n\t\tfor(int i= 0; i< n; ++i){\r\n\t\t\tfor(int j= 0; j< n; ++j){\r\n\t\t\t\tcin>>src[i][j];\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(int i= 0; i< n; ++i){\r\n\t\t\tfor(int j= 0; j< n; ++j){\r\n\t\t\t\tprintf(\"%.8f \",(src[i][j]+src[j][i])*0.5);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t\tfor(int i= 0; i< n; ++i){\r\n\t\t\tfor(int j= 0; j< n; ++j){\r\n\t\t\t\tprintf(\"%.8f \",(src[i][j]-src[j][i])*0.5);\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n}"
},
{
"pid":975,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#define MAX 1000010  \r\nint s1[MAX],s2[MAX];  \r\nchar ch[20];  \r\n\r\nvoid int_string(int x)   \r\n{  \r\n    int i=0;  \r\n    while(x)  \r\n    {  \r\n        ch[i++] = x % 10 + '0';  \r\n        x \/= 10;  \r\n    }  \r\n    ch[i]='\\0';  \r\n}  \r\n\r\nint judge()  \r\n{  \r\n    if(strstr(ch,\"125\"))  \r\n        return 2;  \r\n    if(strchr(ch,'1')&&strchr(ch,'2')&&strchr(ch,'5'))  \r\n        return 1;  \r\n    return 0;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int i,j,k;         \r\n    for(i=125;i<MAX;++i)  \r\n    {  \r\n        int_string(i);  \r\n        k=judge();  \r\n        if(k==2)  \r\n        {  \r\n            s1[i]=s1[i-1]+1;  \r\n            s2[i]=s2[i-1]+1;  \r\n        }  \r\n        else if(k==1)  \r\n        {  \r\n            s1[i]=s1[i-1]+1;  \r\n            s2[i]=s2[i-1];  \r\n        }  \r\n        else  \r\n        {  \r\n            s1[i]=s1[i-1];  \r\n            s2[i]=s2[i-1];  \r\n        }  \r\n    }  \r\n    int a,b,temp=1;  \r\n     while(scanf(\"%d%d\",&a,&b)==2)  \r\n     {  \r\n        printf(\"Case %d:%d %d\\n\", temp++, s1[b] - s1[a - 1],s2[b] - s2[a - 1]);  \r\n     }  \r\n     return 0;  \r\n}"
},
{
"pid":977,
"code":"\n#include<stdio.h>\r\n#include<iostream>\r\nusing namespace std;\r\nint main()\r\n{\r\n    long long n;\r\n    while(scanf(\"%lld\",&n)!=EOF)\r\n    {\r\n        if(n<=2)\r\n        cout<<n<<endl;\r\n        else\r\n        {\r\n            if(n%2!=0)\r\n           cout<<n*(n-1)*(n-2)<<endl; \r\n            else if(n%3!=0)\r\n            cout<<n*(n-1)*(n-3)<<endl;\r\n            else cout<<(n-1)*(n-2)*(n-3)<<endl;\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":980,
"code":"\n#include <stdio.h>  \r\nlong long a[1001]= {0},b[1001]={0};  \r\nconst int NUM=1000000007;  \r\nint main()  \r\n{  \r\n    int i,n;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        b[1]=1;  \r\n        for (i=2; i<=n; i++)  \r\n            b[i]=(b[i-1]*2%NUM);  \r\n        a[1]=1;  \r\n        a[2]=6;  \r\n        for (i=3; i<=n; i++)  \r\n            a[i]=(2*a[i-1]+b[i]+4*a[i-2])%NUM;  \r\n        long long sum=4*a[n];  \r\n        for (i=2; i<n; i++)  \r\n        {  \r\n            sum+=((8*b[n-i]*a[i-1])%NUM+(8*a[n-i]*b[i-1])%NUM)%NUM;  \r\n            sum %= NUM;  \r\n        }  \r\n        if(n==1)  sum=2 ;  \r\n        printf(\"%lld\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":981,
"code":"\n#include <stdio.h>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\n\r\nstruct KK{  \r\n    int S;  \r\n    int E;  \r\n    int L;  \r\n}road[100010];  \r\nint C[10010],father[10010];  \r\n\r\nint cmp(KK x,KK y){  \r\n    return x.L<y.L;  \r\n}  \r\nint findfather(int x){  \r\n    if(x!=father[x])  \r\n        father[x]=findfather(father[x]);  \r\n    return father[x];  \r\n}  \r\n\r\nint main(){  \r\n    int N,M;  \r\n    while(~scanf(\"%d%d\",&N,&M)){  \r\n        int s,min=100000,t;  \r\n        for(int i=1;i<=N;i++){  \r\n            scanf(\"%d\",&C[i]);  \r\n            if(min>C[i])  \r\n            min=C[i];  \r\n        }  \r\n        for(int i=1;i<=M;i++){  \r\n            scanf(\"%d%d%d\",&road[i].S,&road[i].E,&t);  \r\n            road[i].L=2*t+C[road[i].E]+C[road[i].S];  \r\n        }  \r\n        sort(road+1,road+M+1,cmp);  \r\n        int result=0;  \r\n        for(int i=1;i<=N;i++)  \r\n            father[i]=i;  \r\n        for(int i=1;i<=M;i++){  \r\n            int x=findfather(road[i].S);  \r\n            int y=findfather(road[i].E);  \r\n            if(x!=y){  \r\n\r\n                result+=road[i].L;  \r\n                father[x]=y;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",min+result);  \r\n\r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":982,
"code":"\n#include<stdio.h>  \r\nlong long ans[1000005];  \r\nint main()  \r\n{  \r\n    ans[1] = ans[2] = ans[3] = 0;  \r\n    for(long long x = 4; x <= 1000000; x++)  \r\n        ans[x] = ans[x-1] + ((x-1)*(x-2)\/2 - (x-1)\/2) \/ 2;  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        if(n < 1) break;  \r\n        printf(\"%lld\\n\",ans[n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":983,
"code":"\n#include <iostream>\r\n#include <stdio.h>\r\nusing namespace std;\r\nint val[250000];\r\nint maxseq(int a, int b) \r\n{\r\n    int global = 0, local = 0;\r\n    for(int i = a; i < b; i ++) {\r\n        local = max(val[i], local+val[i]);\r\n        global = max(local, global);\r\n    }\r\n    return global;\r\n}\r\nint minindex(int n) {\r\n    int global = 0x7f7f7f7f, local = 0x7f7f7f7f;\r\n    for(int i = 0; i < n; i ++) {\r\n        local = min(local+val[i], val[i]);\r\n        if(local < global) {\r\n            global = local;\r\n        }\r\n    }\r\n    return global;\r\n}\r\nint main() {\r\n    int n;\r\n    while(scanf(\"%d\", &n) != EOF) {\r\n        bool hh = false;\r\n        int rev = 0;\r\n        for(int i = 0; i < n; i ++) {\r\n            scanf(\"%d\", &val[i]);\r\n            if(val[i] < 0) hh = true;\r\n                 rev += val[i];\r\n        }\r\n        if(!hh)\r\n        {\r\n            cout << rev << endl;\r\n            continue;\r\n        }\r\n        int num1 = maxseq(0, n);\r\n        int num2 = minindex(n);\r\n        cout << max(num1,rev-num2) << endl;\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":985,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cstdio>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    char w[110],x[110];  \r\n    while(scanf(\"%s%s\",w,x)!=EOF)  \r\n    {  \r\n        int i,j;  \r\n        long long ans=0,p;  \r\n        for(i=0;i<strlen(w);i++)  \r\n        {  \r\n            if(w[i]=='?'){  \r\n                p='9'-x[i];  \r\n                for(j=i+1;j<strlen(w);j++)if(w[j]=='?')p*=10;  \r\n                ans+=p;  \r\n            }  \r\n            else if(w[i]>x[i])  \r\n            {  \r\n                p=1;  \r\n                for(j=i+1;j<strlen(w);j++)if(w[j]=='?')p*=10;  \r\n                ans+=p;  \r\n                break;  \r\n            }  \r\n            else if(w[i]<x[i])break;  \r\n\r\n        }  \r\n        printf(\"%lld\\n\",ans);  \r\n    }  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":990,
"code":"\n#include <cstdio>  \r\n#include <algorithm>  \r\n\r\nusing namespace std;  \r\nstruct Node  \r\n{  \r\n    int x;  \r\n    int dis;  \r\n    int num;  \r\n};  \r\nNode a[100];  \r\nint comp(Node a1,Node a2)  \r\n{  \r\n    if(a1.x!=a2.x)  \r\n        return a1.x<a2.x;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,x;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&x);  \r\n            a[i].dis=x<0?-1:1;  \r\n            a[i].x=abs(x);  \r\n            a[i].num=i+1;  \r\n        }  \r\n        sort(a,a+n,comp); \r\n        int tmp=0,left=0,right=0,ans=0;  \r\n        for(int i=0;i<n;i++)   \r\n        {  \r\n            if(a[i].num==1)  \r\n            {  \r\n                tmp=i;break;  \r\n            }  \r\n            if(a[i].dis==1)  \r\n                left++;  \r\n        }  \r\n        for(int i=tmp+1;i<n;i++) \r\n        {  \r\n            if(a[i].dis==-1)  \r\n                right++;  \r\n        }  \r\n        if(a[tmp].dis==1 && right==0 || a[tmp].dis==-1 && left==0)  \r\n            ans=1;  \r\n        else  \r\n            ans=left+right+1;  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":991,
"code":"\n#include<iostream>  \r\n#include<map>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int n;  \r\n    string str;  \r\n    map<string,int>mymap;  \r\n    cin>>n;  \r\n    while(n--)  \r\n    {  \r\n        cin>>str;  \r\n        if(mymap[str])  \r\n        cout<<str<<mymap[str]<<endl;  \r\n        else  \r\n        cout<<\"OK\"<<endl;  \r\n\r\n        mymap[str]++;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":993,
"code":"\n#include <stdio.h>  \r\n\r\nint gcd(int a, int b){  \r\n    return !b ? a : gcd(b, a % b);  \r\n}  \r\n\r\nint main(){  \r\n    int n, a, b, sum;  \r\n    while(scanf(\"%d%d%d\", &n, &a, &b) == 3){  \r\n        --n;  \r\n        sum = n \/ a + n \/ b - n \/ (a * b \/ gcd(a, b));  \r\n        printf(\"%d\\n\", sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":994,
"code":"\n#include <cstdio>  \r\nint fac[15]= {2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768};  \r\nint main()  \r\n{  \r\n    int T;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        int n,m,k,ans=-1;  \r\n        scanf(\"%d%d%d\",&n,&m,&k);  \r\n        if(2*m+1>=n)  \r\n        {  \r\n            if(n==k)  \r\n            {  \r\n                ans=m-((n-1)\/2);  \r\n            }  \r\n            else if(n%2==k%2)  \r\n                ans=1;  \r\n            else  \r\n                ans=0;  \r\n        }  \r\n        else  \r\n        {  \r\n            n-=2*m;  \r\n            int ok=0;  \r\n            for(int i=0; i<14; i++)  \r\n                if(n==fac[i])  \r\n                {  \r\n                    ans=0;  \r\n                    ok=1;  \r\n                    break;  \r\n                }  \r\n            if(ok==0)  \r\n            {  \r\n                for(int i=1; i<14; i++)  \r\n                {  \r\n                    if(n<fac[i])  \r\n                    {  \r\n                        if(k>2*m+fac[i-1] && k<2*m+fac[i])  \r\n                            ans=-1;  \r\n                        else  \r\n                            ans=0;  \r\n                        break;  \r\n                    }  \r\n                }  \r\n            }  \r\n        }  \r\n        if(ans==-1)  \r\n            printf(\"Thrown\\n\");  \r\n        else  \r\n            printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":995,
"code":"\n#include <cstdio>  \r\n#include <iostream>  \r\n#include <algorithm>  \r\n#include <cstring>  \r\nusing namespace std ;  \r\n\r\nint dp[100010] ;  \r\nint t,n ,a ;  \r\n\r\nint main()  \r\n{  \r\n    while(scanf(\"%d%d\",&n,&t)!=EOF &&(n || t))  \r\n    {  \r\n        for(int j = 1 ;j<=t ;j++)  \r\n            dp[j] = 1e9;  \r\n        for(int i = 1 ;i<=n ;i++)  \r\n        {  \r\n            scanf(\"%d\",&a) ;  \r\n            for(int j = a ;j<=t ;j++)  \r\n                dp[j] = min(dp[j],dp[j-a]+1) ;  \r\n        }  \r\n       int i;  \r\n        for(i = t; dp[i] >=1e9; i--);  \r\n        cout << dp[i] << endl;  \r\n    }  \r\n    return 0 ;  \r\n}"
},
{
"pid":997,
"code":"\n#include <cstdio>\r\n#include <cmath>\r\n\r\nconst int maxp = 10000;\r\nint f[maxp + 10];\r\n\r\nint main()\r\n{\r\n    for(int i = 2; i <= maxp; i++) if(!f[i])\r\n    {\r\n        int t = i;\r\n        while(t <= maxp)\r\n        {\r\n            for(int j = t; j <= maxp; j += t) f[j]++;\r\n            t *= i;\r\n        }\r\n    }\r\n\r\n    int T;\r\n    scanf(\"%d\", &T);\r\n    for(int kase = 1; kase <= T; ++kase)\r\n    {\r\n        int n, m;\r\n        scanf(\"%d%d\", &n, &m);\r\n        int xorsum = 0;\r\n        for(int i = 0; i < n; i++)\r\n        {\r\n            int cnt = 0;\r\n            for(int j = 0; j < m; j++)\r\n            {\r\n                int x;\r\n                scanf(\"%d\", &x);\r\n                cnt += f[x];\r\n            }\r\n            xorsum ^= cnt;\r\n        }\r\n        printf(\"Case #%d: %s\\n\", kase, xorsum ? \"YES\" : \"NO\");\r\n    }\r\n\r\n    return 0;\r\n}"
},
{
"pid":998,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <cmath>  \r\nusing namespace std;  \r\n#define LL long long  \r\nconst LL mod=1e9+7;  \r\n\r\nLL Euler(LL n){  \r\n    LL ans=n;  \r\n    for(LL i=2;i<=sqrt(n);i++){  \r\n        if(n%i==0){  \r\n            while(n%i==0) n=n\/i;  \r\n            ans=ans\/i*(i-1);  \r\n        }  \r\n    }  \r\n    if(n>1) ans=ans\/n*(n-1);  \r\n    return ans;  \r\n}  \r\n\r\nint main(){  \r\n    LL n,m;  \r\n    while(~scanf(\"%lld%lld\",&n,&m)){  \r\n        LL ans=0;  \r\n        for(int i=1;i*i<=n;i++){  \r\n            if(n%i==0){  \r\n                int d;  \r\n                if(i>=m){  \r\n                    d=i;  \r\n                    ans=ans+d*Euler(n\/d);  \r\n                }  \r\n                if(i*i!=n&&n\/i>=m){  \r\n                    d=n\/i;  \r\n                    ans=ans+d*Euler(n\/d);  \r\n                }  \r\n            }  \r\n        }  \r\n        printf(\"%lld\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":999,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\n#include<queue>  \r\n#include<cmath>  \r\nusing namespace std;  \r\nconst int dx[] = {1,-1,0,0};  \r\nconst int dy[] = {0,0,1,-1};  \r\nbool vis[105][105][5];  \r\nchar map[105][105];  \r\nint n,m,t;  \r\nstruct node{  \r\n    int x,y;  \r\n    int step,st;  \r\n};  \r\nbool ok(int x,int y){\r\n    if(map[x][y] == 'E'|| map[x][y] == 'D' || map[x][y] == 'X')  \r\n        return false;  \r\n    return true;  \r\n}  \r\nchar graph(char c,int Bool){\r\n\r\n    if((Bool && c == 'e') || (!Bool && c == 'd'))  \r\n        return 'x';\r\n    return Bool?'d':'e';  \r\n}  \r\nvoid solve(int x,int y,int Bool)\r\n{  \r\n    for(int i = x + 1;i < n && ok(i,y);i++)  \r\n        map[i][y] = graph(map[i][y],Bool);  \r\n    for(int i = x - 1;i >= 0 && ok(i,y);i--)  \r\n        map[i][y] = graph(map[i][y],Bool);  \r\n    for(int i = y + 1;i < m && ok(x,i);i++)  \r\n        map[x][i] = graph(map[x][i],Bool);  \r\n    for(int i = y - 1;i >= 0 && ok(x,i);i--)  \r\n        map[x][i] = graph(map[x][i],Bool);  \r\n}  \r\nint getST(char c,int st){\r\n    if(c == 'd') st |= 1;  \r\n    else if(c == 'e') st |= 2;  \r\n    else if(c == 'x') st |= 3;  \r\n    return st;  \r\n}  \r\nbool find(int x,int y,int st){  \r\n    if(!ok(x,y)) return false;  \r\n    if(vis[x][y][st]) return false;  \r\n    if(x < 0 || x > n || y < 0 || y > m) return false;  \r\n    return true;  \r\n}  \r\nint bfs(int sta,int end){  \r\n    memset(vis,false,sizeof(vis));  \r\n    node p,q;  \r\n    queue<node> Q;  \r\n    p.x = sta,p.y = end,p.step = 0;  \r\n    p.st = getST(map[sta][end],0);  \r\n    vis[p.x][p.y][p.st] = true;  \r\n    Q.push(p);  \r\n\r\n    while(!Q.empty()){  \r\n\r\n        q = Q.front();Q.pop();  \r\n        if(q.st == 3) return q.step;\r\n        for(int i = 0;i < 4;i++){  \r\n            p.x = dx[i] + q.x;  \r\n            p.y = dy[i] + q.y;  \r\n            p.st = q.st;  \r\n            if(find(p.x,p.y,p.st))  \r\n            {  \r\n                p.st = getST(map[p.x][p.y],p.st);  \r\n                p.step = q.step + 1;  \r\n                vis[p.x][p.y][p.st] = true;  \r\n                Q.push(p);  \r\n            }  \r\n        }  \r\n    }  \r\n    return 900;  \r\n}  \r\nint main(){  \r\n    int sx,sy,ca = 1;  \r\n    while(~scanf(\"%d%d%d\",&n,&m,&t)){  \r\n        getchar();  \r\n        for(int i = 0;i < n;i++){  \r\n            cin >> map[i];  \r\n            for(int j = 0;j < m;j++)  \r\n                if(map[i][j] == 'S')  \r\n                    sx = i,sy = j;  \r\n        }  \r\n        for(int i = 0;i < n;i++){  \r\n            for(int j = 0;j < m;j++)  \r\n            {  \r\n                if(map[i][j] == 'D')  \r\n                    solve(i,j,1);  \r\n                else if(map[i][j] == 'E')  \r\n                    solve(i,j,0);  \r\n            }  \r\n        }  \r\n        printf(\"Case %d:\\n\",ca++);  \r\n        int ans = bfs(sx,sy);  \r\n        if(ans <= t)  \r\n           printf(\"%d\\n\",ans);  \r\n        else puts(\"-1\");  \r\n    }  \r\n}"
},
{
"pid":1000,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\n#define INF 0x3f3f3f3f  \r\n#define ll long long  \r\n#define N 2  \r\n#define M 1000000007  \r\nusing namespace std;  \r\nll a,b,n;  \r\nstruct mat   \r\n{  \r\n    ll m[N][N];  \r\n};  \r\nmat A=  \r\n{  \r\n    1,1,  \r\n    1,0  \r\n};  \r\nmat I=  \r\n{  \r\n    1,0,  \r\n    0,1  \r\n};  \r\nmat multi(mat a,mat b) \r\n{  \r\n    int i,j,k;  \r\n    mat c;  \r\n    for(i=0;i<N;i++)  \r\n    {  \r\n        for(j=0;j<N;j++)  \r\n        {  \r\n            c.m[i][j]=0;  \r\n            for(k=0;k<N;k++)  \r\n            {  \r\n                c.m[i][j]=(c.m[i][j]+a.m[i][k]*b.m[k][j]%(M-1))%(M-1);  \r\n            }  \r\n        }  \r\n    }  \r\n    return c;  \r\n}  \r\nmat power(mat A,int k)\r\n{  \r\n    mat ans=I,p=A;  \r\n    while(k)  \r\n    {  \r\n        if(k&1)  \r\n            ans=multi(ans,p);     \r\n        p=multi(p,p);  \r\n        k>>=1;  \r\n    }  \r\n    return ans;  \r\n}  \r\nll ppower(ll k,ll m) \r\n{  \r\n    ll ans=1;  \r\n    while(m)  \r\n    {  \r\n        if(m&1)  \r\n            ans=(ans*k%M);  \r\n        k=(k*k%M);  \r\n        m>>=1;  \r\n    }  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    while(scanf(\"%d%d%d\",&a,&b,&n)!=EOF)  \r\n    {  \r\n        if(n==0)  \r\n        {  \r\n            printf(\"%lld\\n\",a);  \r\n            continue;  \r\n        }  \r\n        mat ans=power(A,n-1);  \r\n        ll ansa=ppower(a,ans.m[0][1]);  \r\n        ll ansb=ppower(b,ans.m[0][0]);  \r\n        ll s=(ansa*ansb)%M;  \r\n        printf(\"%lld\\n\",s);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1001,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include <string>\r\n#include <iostream>\r\nusing namespace std;\r\n\r\nconst int N = 10008;\r\nint s[108],t;\r\nint sg[N];\r\nbool hash[N];\r\nvoid sg_solve(int *s,int t,int N) \r\n{\r\n\tint i,j;\r\n\tmemset(sg,0,sizeof(sg));\r\n\tfor(i=1;i<=N;i++)\r\n\t{\r\n\t\tmemset(hash,0,sizeof(hash));\r\n\t\tfor(j=0;j<t;j++)\r\n\t\t\tif(i - s[j] >= 0)\r\n\t\t\t\thash[sg[i-s[j]]] = 1;\r\n\t\tfor(j=0;j<=N;j++)\r\n\t\t\tif(!hash[j])\r\n\t\t\t\tbreak;\r\n\t\tsg[i] = j;\r\n\t}\r\n}\r\n\r\nint main()\r\n{\r\n\tint x,y;\r\n\twhile(~scanf(\"%d%d\",&x,&y))\r\n\t{\r\n\t\tint n;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&s[i]);\r\n\t\tsg_solve(s,n,N);\r\n\t\tif((sg[x]^sg[y]^sg[x*y])==0)\r\n\t\t\tprintf(\"Yougth is best\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"No\\n\");\r\n\t}\t\r\n\treturn 0;\r\n}"
},
{
"pid":1002,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <ctime>  \r\n#include <queue>  \r\nusing namespace std;  \r\n#define inf 0x3fffffff  \r\n#define M 1005  \r\n\r\nstruct edge  \r\n{  \r\n    int v, w, h, next;  \r\n} e[2000005];  \r\n\r\nint pre[M], cnt, dist[M], n;  \r\nbool inq[M];  \r\n\r\nvoid init ()  \r\n{  \r\n    cnt = 0;  \r\n    memset (pre, -1, sizeof(pre));  \r\n}  \r\n\r\nvoid addedge (int u, int v, int w, int h)    \r\n{  \r\n    e[cnt].v = v;  \r\n    e[cnt].w = w;  \r\n    e[cnt].h = h;  \r\n    e[cnt].next = pre[u];   \r\n    pre[u] = cnt++;          \r\n}  \r\n\r\nvoid spfa (int u, int lim)  \r\n{  \r\n    int v, w, i;  \r\n    for (i = 1; i <= n; i++)  \r\n        dist[i] = inf, inq[i] = false;  \r\n    dist[u] = 0;  \r\n    queue<int> q;  \r\n    q.push (u);  \r\n    inq[u] = true;  \r\n    while (!q.empty())  \r\n    {  \r\n        u = q.front();  \r\n        q.pop();  \r\n        inq[u] = false;  \r\n        for (i = pre[u]; i != -1; i = e[i].next)  \r\n        {  \r\n            if (e[i].h < lim) continue;  \r\n            w = e[i].w;  \r\n            v = e[i].v;  \r\n            if (dist[u] + w < dist[v])  \r\n            {  \r\n                dist[v] = dist[u] + w;  \r\n                if (!inq[v])  \r\n                {  \r\n                    q.push (v);  \r\n                    inq[v] = true;  \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int m, u, v, w, h, l, r, mid, cc = 1, res;  \r\n    while (scanf (\"%d%d\", &n, &m), (n||m))  \r\n    {  \r\n        if (cc > 1) printf (\"\\n\");  \r\n        init();  \r\n        while (m--)  \r\n        {  \r\n            scanf (\"%d%d%d%d\", &u, &v, &h, &w);  \r\n            if (h == -1) h = inf;  \r\n            addedge (u, v, w, h);  \r\n            addedge (v, u, w, h);   \r\n        }  \r\n        scanf (\"%d%d%d\", &u, &v, &h);  \r\n        l = 0, r = h, res = inf;  \r\n        while (l < r)  \r\n        {  \r\n            mid = (l+r+1) >> 1;  \r\n            spfa (u, mid);  \r\n            if (dist[v] != inf)  \r\n                l = mid, res = dist[v];  \r\n            else r = mid - 1;  \r\n        }  \r\n        printf (\"Case %d:\\n\", cc++);  \r\n        if (res != inf)  \r\n            printf (\"maximum height = %d\\nlength of shortest route = %d\\n\", l, res);  \r\n        else puts (\"cannot reach destination\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1003,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint n;\r\n\twhile(scanf(\"%d\",&n)!=EOF)\r\n\t{\r\n\t\tif(n==0) printf(\"1\\n\");\r\n\t\telse printf(\"%d\\n\",4*n*n-4*n+2);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1004,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#define mid ((left+right)>>1)\r\n#define lson rt<<1,left,mid\r\n#define rson rt<<1|1,mid+1,right\r\nusing namespace std;\r\n\r\nconst int MAXN = 32005;\r\n\r\nint sum[MAXN<<2],level[MAXN<<2];\r\n\r\nvoid update(int rt,int left,int right,int data){\r\n    ++sum[rt];\r\n    if(left==right) return;\r\n    if(data <= mid) update(lson,data);\r\n    else update(rson,data);\r\n}\r\nint query(int rt,int left,int right,int l,int r){\r\n    if(left==l && right==r) {\r\n        return sum[rt];\r\n    }\r\n    int m = mid;\r\n    if(r <= m) return query(lson,l,r);\r\n    else if(l > m) return query(rson,l,r);\r\n    else return query(lson,l,m)+query(rson,m+1,r);\r\n}\r\n\r\nint main(){\r\n    int n,x,y;\r\n    while(~scanf(\"%d\",&n)){\r\n        memset(sum, 0, sizeof(sum));\r\n        memset(level, 0, sizeof(level));\r\n        for(int i=0; i<n; ++i){\r\n            scanf(\"%d%d\",&x,&y);\r\n            ++x;\r\n            ++level[query(1,1,MAXN,1,x)];\r\n            update(1,1,MAXN,x);\r\n        }\r\n        for(int i=0; i<n; ++i)\r\n            printf(\"%d\\n\",level[i]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1005,
"code":"\n#include<stdio.h>  \r\n#include<iostream>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n#define llong long long  \r\nllong cow[11000],sum[11000];  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        sum[0]=0;  \r\n        llong ans=0;  \r\n        for(int i=0;i<n;i++)  \r\n            scanf(\"%lld\",&cow[i]);  \r\n        sort(cow,cow+n);  \r\n        for(int i=1;i<n;i++)  \r\n        {  \r\n            sum[i]=sum[i-1]+(cow[i]-cow[i-1])*i;       \r\n            ans+=sum[i];                              \r\n        }  \r\n        printf(\"%lld\\n\",ans*2);                        \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1006,
"code":"\n#include <cstdio>  \r\n#include <vector>  \r\n#include <iostream>  \r\n#include <stack>  \r\n#include <cstdio>  \r\n#include <string>  \r\n#include <cstring>  \r\n#include <cmath>  \r\n#include <algorithm>  \r\n#include <queue>  \r\nusing namespace std;  \r\nconst int inf = 0x3f3f3f3f;  \r\nconst int N = 300;  \r\nstruct Point  \r\n{  \r\n    int x,y;  \r\n    int r;  \r\n    int num;  \r\n};  \r\nPoint a[N];  \r\nstruct Node  \r\n{  \r\n    int v,len;  \r\n};  \r\nvector<Node> map[N];  \r\nint n,m;  \r\nvoid spfa(int s,int dis[])  \r\n{  \r\n    int i,pre[N];  \r\n    bool used[N];  \r\n    queue<int> q;  \r\n    memset(used,0,sizeof(used));  \r\n    memset(pre,-1,sizeof(pre));  \r\n    for(i=0; i<N; i++)  \r\n        dis[i]=inf;  \r\n    dis[s]=0;  \r\n    used[s]=true;  \r\n    q.push(s);  \r\n    while(!q.empty())  \r\n    {  \r\n        int u=q.front();  \r\n        q.pop();  \r\n        used[u]=false;  \r\n        for(i=0; i<map[u].size(); i++)  \r\n        {  \r\n            Node p=map[u][i];  \r\n            if(dis[p.v]>dis[u]+p.len)  \r\n            {  \r\n                dis[p.v]=dis[u]+p.len;  \r\n                pre[p.v]=u;  \r\n                if(!used[p.v])  \r\n                {  \r\n                    used[p.v]=true;  \r\n                    q.push(p.v);  \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n    for(int i=n;pre[i]!=-1;i=pre[i])  \r\n    {   \r\n        for(int j=0;j<map[i].size();j++)  \r\n        {  \r\n            if(map[i][j].v==pre[i])  \r\n                map[i].erase(map[i].begin()+j);  \r\n        }  \r\n        for(int j=0;j<map[pre[i]].size();j++)  \r\n        {  \r\n            if(map[pre[i]][j].v==i)  \r\n                map[pre[i]].erase(map[pre[i]].begin()+j);  \r\n        }  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int dis1[N];  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        for(int i=0;i<=n;i++)  \r\n            map[i].clear();  \r\n        for(int i=0;i<m;i++)  \r\n        {  \r\n            int x,y,z;  \r\n            scanf(\"%d%d%d\",&x,&y,&z);  \r\n            Node tmp;  \r\n            tmp.v=y,tmp.len=z;  \r\n            map[x].push_back(tmp);  \r\n            tmp.v=x;  \r\n            map[y].push_back(tmp);  \r\n        }  \r\n        int ans=0;  \r\n        spfa(1,dis1);  \r\n        ans+=dis1[n];  \r\n        spfa(1,dis1);  \r\n        ans+=dis1[n];  \r\n        if(ans>=inf)  \r\n            printf(\"eating\\n\");  \r\n        else  \r\n            printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1007,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\n#include<math.h>  \r\n#include<iostream>  \r\nusing namespace std;  \r\ntypedef long long LL;  \r\nconst LL mod = 1000000007;  \r\nLL euler(LL x)  \r\n{  \r\n    LL res = x;  \r\n    for(LL i = 2;i <= sqrt(x);i++)  \r\n    {  \r\n        if(x%i==0)  \r\n        {  \r\n            while(x%i==0) x\/=i;  \r\n            res = res\/i*(i-1);  \r\n        }  \r\n    }  \r\n    if(x > 1) res = res \/ x * ( x - 1);  \r\n    return res;  \r\n}  \r\nvoid solve(LL m,LL r)  \r\n{  \r\n    LL res = 0;  \r\n    for(LL i = 1;i <= sqrt(m);i++)  \r\n    {  \r\n        if(m%i==0)  \r\n        {  \r\n            if(m\/i!=i&&m\/i>=r)  \r\n            {  \r\n                if(i == 1|| i== 2)  \r\n                    res = (res + m\/i) % mod;  \r\n                else  \r\n                    res = (res + euler(i) \/ 2 * i * (m\/i))%mod;  \r\n            }  \r\n            if(i >= r)  \r\n            {  \r\n                if(m\/i == 1|| m\/i == 2)  \r\n                    res = (res + i)%mod;  \r\n                else  \r\n                    res = (res + euler(m\/i) \/ 2 * (m\/i) * i)%mod;  \r\n            }  \r\n        }  \r\n    }  \r\n    printf(\"%lld\\n\",res);  \r\n}  \r\nint main()  \r\n{  \r\n    LL n,k;  \r\n    int t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%lld%lld\",&n,&k);  \r\n        solve(n,k);  \r\n    }  \r\n}"
},
{
"pid":1009,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<math.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\ndouble a,b,c,p,s,si;  \r\nint main()  \r\n{  \r\n    while(scanf(\"%lf%lf%lf\",&a,&b,&c)!=EOF)  \r\n    {  \r\n        p=(a+b+c)\/2;  \r\n        s=sqrt(p*(p-a)*(p-b)*(p-c));\r\n        si=2*s\/(a*b);  \r\n        double d=c\/si;\r\n        printf(\"%.2f\\n\",d\/2);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1011,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<math.h>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\n#define fab(a) (a)>0?(a):(-a)  \r\n#define LL long long  \r\n#define MAXN 55000  \r\n#define mem(x) memset(x,0,sizeof(x))  \r\n#define INF 0xfffffff   \r\n#define PI acos(-1.0)  \r\nusing namespace std;  \r\nstruct s  \r\n{  \r\n    double x,y;  \r\n}list[MAXN];  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        for(i=0;i<n;i++)  \r\n        scanf(\"%lf%lf\",&list[i].x,&list[i].y);  \r\n        double ans=0;  \r\n        for(i=0;i<n-1;i++)  \r\n        ans+=(list[i].x*list[i+1].y-list[i+1].x*list[i].y);  \r\n        ans+=(list[n-1].x*list[0].y-list[0].x*list[n-1].y);  \r\n        ans\/=2;  \r\n        printf(\"%.2lf\\n\",fab(ans));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1012,
"code":"\n#include <algorithm>\r\n#include <bitset>\r\n#include <cctype>\r\n#include <cmath>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <iostream>\r\n#include <map>\r\n#include <queue>\r\n#include <set>\r\n#include <stack>\r\n#include <string>\r\n#include <vector>\r\nusing namespace std;\r\n#define FOR(i, a, b) for (int i = a; i <= b; i++)\r\n#define REP(i, n) for (int i = 0; i < n; i++)\r\n#define fill(ar, val) memset(ar, val, sizeof(ar))\r\n#define PI 3.1415926535897932385\r\n#define uint64 unsigned long long\r\n#define int64 long long\r\n#define all(ar) ar.begin(), ar.end()\r\n#define pb push_back\r\n#define ff first\r\n#define ss second\r\n#define bit(n) (1<<(n))\r\n#define Last(i) ( i & -i )\r\n#define INF 500000000\r\n#define maxN 100010\r\ntypedef pair<int, int> ii;\r\ntypedef vector<ii> vii;\r\ntypedef vector<int> vi;\r\n\r\nint n, a[maxN], tree[maxN * 6], result;\r\n\r\nint ar[50], m;\r\nchar buff[maxN];\r\nbool readArray() {\r\n    gets(buff);\r\n    int len = strlen(buff), i = 5;\r\n    m = 0;\r\n    while (i < len && buff[i] != ')') {\r\n        i++;\r\n        ar[m] = 0;\r\n        while (isdigit(buff[i]))\r\n            ar[m] = ar[m] * 10 + buff[i++] - 48;\r\n        m++;\r\n    }\r\n    return (buff[0] == 'q');\r\n}\r\n\r\nvoid get(int p, int L, int R, int U, int V) {\r\n    if (R < U || V < L) return;\r\n    if (U <= L && R <= V) {\r\n        result = min(result, tree[p]);\r\n        return;\r\n    }\r\n    if (L == R) return;\r\n    int c = p << 1, mid = (L + R) >> 1;\r\n    get(c, L, mid, U, V);\r\n    get(c + 1, mid + 1, R, U, V);\r\n}\r\n\r\nvoid update(int p, int L, int R, int U, int value) {\r\n    if (U < L || R < U) return;\r\n    if (L == R) {\r\n        tree[p] = value;\r\n        a[L] = value;\r\n        return;\r\n    }\r\n    int c = p << 1, mid = (L + R) >> 1;\r\n    update(c, L, mid, U, value);\r\n    update(c + 1, mid + 1, R, U, value);\r\n    tree[p] = min(tree[c], tree[c + 1]);\r\n}\r\n\r\nint main() {\r\n    int q, tmp = maxN * 6;\r\n    REP(i, tmp) tree[i] = INF;\r\n    scanf(\"%d %d\", &n, &q);\r\n    FOR (i, 1, n) {\r\n        scanf(\"%d \", &a[i]);\r\n        update(1, 1, n, i, a[i]);\r\n    }\r\n    while (q--) {\r\n        if (readArray()) { \r\n            result = INF;\r\n            get(1, 1, n, ar[0], ar[1]);\r\n            printf(\"%d\\n\", result);\r\n        }\r\n        else {  \r\n            if (m <= 1) continue;\r\n            int tmp = a[ar[0]];\r\n            for (int i = 0; i < m - 1; i++) {\r\n                update(1, 1, n, ar[i], a[ar[i + 1]]);\r\n            }\r\n            update(1, 1, n, ar[m - 1], tmp);\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1013,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<vector>  \r\n#include<algorithm>  \r\n\r\nint gcd(int a, int b) {  \r\n\treturn b ? gcd(b, a % b) : a;  \r\n}  \r\n\r\nusing namespace std;  \r\n\r\nint main() {  \r\n\tint nCase, n, x2;  \r\n\tchar c;  \r\n\tbool is_integer;  \r\n\tvector<int> myVector;  \r\n\tcin >> nCase;     \r\n\twhile (nCase--) {  \r\n\t\tmyVector.clear();    \r\n\t\twhile (1) {  \r\n\t\t\tscanf(\"%d%c\",&n,&c);  \r\n\t\t\tmyVector.push_back(n);  \r\n\t\t\tif (c == '\\n') {  \r\n\t\t\t\tbreak;  \r\n\t\t\t}  \r\n\t\t}     \r\n\t\tif (myVector.size() == 1) {  \r\n\t\t\tis_integer = true;  \r\n\t\t} else {  \r\n\t\t\tx2 = myVector[1];    \r\n\t\t\tfor (vector<int>::size_type i = 0; x2 != 1 && i < myVector.size(); i++) {  \r\n\t\t\t\tif (i == 1) {  \r\n\t\t\t\t\tcontinue;  \r\n\t\t\t\t}    \r\n\t\t\t\tx2 \/= gcd(x2, myVector[i]);  \r\n\t\t\t}    \r\n\t\t\tx2 == 1 ? is_integer = true : is_integer = false;  \r\n\t\t}     \r\n\t\tis_integer ? cout << \"YES\" << endl : cout << \"NO\" << endl;  \r\n\t}     \r\n\treturn 0;  \r\n}"
},
{
"pid":1014,
"code":"\n#include <iostream>\r\n#include <stdio.h>\r\nusing namespace std;\r\n\r\nint dp[200005];\r\nchar b[200005];\r\nint p[200005];\r\nint n;\r\n\r\nint find()\r\n{\r\n    int ans=1;\r\n    int i,j;\r\n    dp[0]=1;\r\n    j=-1;\r\n    p[0]=-1;\r\n    for(i=1;i<n;i++)\r\n    {\r\n        while(j>=0 && b[j+1]!=b[i]) j=p[j];\r\n        if(b[j+1]==b[i]) j++;\r\n        if(j>=0) dp[i]=(dp[j]+1)%10007;        \r\n        else  dp[i]=1;                           \r\n        p[i]=j;\r\n        ans=(ans+dp[i])%10007;\r\n    }\r\n    return ans;\r\n}\r\n\r\nint main()\r\n{\r\n    int i,j,t;\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        scanf(\"%s\",b);\r\n        printf(\"%d\\n\",find());\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1015,
"code":"\n#include <cstdio>  \r\n#include <iostream>  \r\n#include <queue>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\n#include <stack>  \r\n#include <vector>  \r\n#include <utility>  \r\n#include <cmath>  \r\nusing namespace std;\r\n#define N 205\r\nvector<int> V[N];\r\nchar color[N];\r\nint set[N];\r\n\r\nbool bfs(){\r\n    memset(color, 'w', sizeof(color));\r\n    memset(set, 0, sizeof(set));\r\n    queue<int> Q;\r\n    int now = 0;\r\n    Q.push(now);\r\n    color[now] = 'g';\r\n    while(!Q.empty()){\r\n        now = Q.front();\r\n        Q.pop();\r\n        color[now] = 'b';\r\n        for(int i = 0; i < V[now].size(); i++){\r\n            int adj = V[now][i];\r\n            if(color[adj] == 'w'){\r\n                color[adj] = 'g';\r\n                set[adj] = set[now] ^ 1;\r\n                Q.push(adj);\r\n            }\r\n            else{\r\n                if(set[adj] == set[now])\r\n                    return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\nint main(){\r\n    int n, m;\r\n    while(scanf(\"%d%d\", &n, &m) != EOF){\r\n        memset(V, 0, sizeof(V));\r\n        for(int mm = 0; mm < m; mm++){\r\n            int a, b;\r\n            scanf(\"%d %d\", &a, &b);\r\n            V[a].push_back(b);\r\n            V[b].push_back(a);\r\n        }\r\n        if(bfs()){printf(\"BICOLORABLE.\\n\");}\r\n        else{printf(\"NOT BICOLORABLE.\\n\");}\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1016,
"code":"\n#include<cstdio>  \r\n#include<cstdlib>  \r\n#include<cstring>  \r\n#define eps 1e-10  \r\nusing namespace std;  \r\nstruct point{  \r\n    double x,y;  \r\n};  \r\nstruct Node{  \r\n    point a,b;  \r\n}A[2];  \r\ndouble MIN(double a,double b){  \r\n    return a<b?a:b;  \r\n}  \r\ndouble MAX(double a,double b){  \r\n    return a>b?a:b;  \r\n}  \r\nbool judge(int a,int b){  \r\n    if(MIN(A[a].a.x,A[a].b.x)>MAX(A[b].a.x,A[b].b.x)||MIN(A[a].a.y,A[a].b.y)>MAX(A[b].a.y,A[b].b.y)||MIN(A[b].a.x,A[b].b.x)>MAX(A[a].a.x,A[a].b.x)||MIN(A[b].a.y,A[b].b.y)>MAX(A[a].a.y,A[a].b.y))  \r\n    return false;  \r\n    double h,i,j,k;  \r\n    h=(A[a].b.x-A[a].a.x)*(A[b].a.y-A[a].a.y)-(A[a].b.y-A[a].a.y)*(A[b].a.x-A[a].a.x);  \r\n    i=(A[a].b.x-A[a].a.x)*(A[b].b.y-A[a].a.y)-(A[a].b.y-A[a].a.y)*(A[b].b.x-A[a].a.x);  \r\n    j=(A[b].b.x-A[b].a.x)*(A[a].a.y-A[b].a.y)-(A[b].b.y-A[b].a.y)*(A[a].a.x-A[b].a.x);  \r\n    k=(A[b].b.x-A[b].a.x)*(A[a].b.y-A[b].a.y)-(A[b].b.y-A[b].a.y)*(A[a].b.x-A[b].a.x);  \r\n    return h*i<=eps&&j*k<=eps;  \r\n}  \r\nint main()  \r\n{  \r\n    int t,i,j;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--){  \r\n        scanf(\"%lf%lf%lf%lf\",&A[0].a.x,&A[0].a.y,&A[0].b.x,&A[0].b.y);  \r\n        scanf(\"%lf%lf%lf%lf\",&A[1].a.x,&A[1].a.y,&A[1].b.x,&A[1].b.y);  \r\n        if(judge(0,1))  \r\n            printf(\"Interseetion\\n\");  \r\n        else{  \r\n            printf(\"Not Interseetion\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1017,
"code":"\n#include<stdio.h>  \r\nint a[1001][2];  \r\nint main()  \r\n{  \r\n    int s,n,i;  \r\n    a[1][0]=1;a[1][1]=8;  \r\n    a[2][0]=17;a[2][1]=73;  \r\n    a[3][0]=226;a[3][1]=674;  \r\n    for(i=4;i<1001;i++)  \r\n    {  \r\n        a[i][0]=(a[i-1][0]*9+a[i-1][1])%12345;  \r\n        a[i][1]=(a[i-1][0]+a[i-1][1]*9)%12345;  \r\n    }  \r\n    scanf(\"%d\",&s);  \r\n    while(s--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        printf(\"%d\\n\",a[n][1]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1018,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cstdlib>  \r\n#include<cstdio>  \r\n#include<cmath>  \r\nusing namespace std;  \r\nstruct game  \r\n{  \r\n    char rank[52+2],suit[52+2];  \r\n    int n;  \r\n} ga[52+2];  \r\nvoid move_ga(int j)      \r\n{  \r\n    for(int i=j; i<52; i++)  \r\n    {  \r\n        if(ga[i+1].n==0)  \r\n            break;  \r\n        for(int k=0; k<ga[i+1].n; k++)  \r\n        {  \r\n            ga[i].rank[k]=ga[i+1].rank[k];  \r\n            ga[i].suit[k]=ga[i+1].suit[k];  \r\n        }  \r\n        ga[i].n=ga[i+1].n;  \r\n    }  \r\n}  \r\nvoid cover_s (int X,int j,char s,char r,int nn)  \r\n{  \r\n    ga[j-X].suit[nn]=s;  \r\n    ga[j-X].rank[nn]=r;  \r\n    ga[j].n--;  \r\n    ga[j-X].n++;  \r\n}  \r\nint pile()  \r\n{  \r\n    int count=52,j,flag;  \r\n    char s,r;  \r\n    while(1)          \r\n    {  \r\n        flag=0;  \r\n        for(j=1; j<count; j++)  \r\n        {  \r\n            int n,nn,wct=0;  \r\n            n=ga[j].n;  \r\n            s=ga[j].suit[n-1];  \r\n            r=ga[j].rank[n-1];  \r\n            if(j-3>=0)  \r\n            {  \r\n                nn=ga[j-3].n;  \r\n                if(s==ga[j-3].suit[nn-1]||r==ga[j-3].rank[nn-1])  \r\n                {  \r\n                    cover_s(3,j,s,r,nn);  \r\n                    wct=flag=1;  \r\n                }  \r\n            }  \r\n            if(wct==0&&j-1>=0)  \r\n            {  \r\n                nn=ga[j-1].n;  \r\n                if(s==ga[j-1].suit[nn-1]||r==ga[j-1].rank[nn-1])  \r\n                {  \r\n                    cover_s(1,j,s,r,nn);  \r\n                    flag=1;  \r\n                }  \r\n            }  \r\n            if(flag==1&&ga[j].n==0)  \r\n            {  \r\n                move_ga(j);  \r\n                --count;  \r\n                ga[count].n=0;  \r\n            }  \r\n            if(flag==1)  \r\n                break;  \r\n        }  \r\n        if(flag==0)               \r\n            break;  \r\n    }  \r\n    return count;  \r\n}  \r\nint main()  \r\n{  \r\n    while(1)  \r\n    {  \r\n        int count=0;  \r\n        scanf(\"%c\",&ga[0].rank[0]);  \r\n        if(ga[0].rank[0]=='#')  \r\n            break;  \r\n        scanf(\"%c\",&ga[0].suit[0]);  \r\n        ga[0].n=1;  \r\n        ga[52].n=0;  \r\n        for(int i=1; i<=51; i++)  \r\n        {  \r\n            getchar();  \r\n            scanf(\"%c%c\",&ga[i].rank[0],&ga[i].suit[0]);  \r\n            ga[i].n=1;  \r\n        }  \r\n        count=pile();  \r\n        if(count>1)  \r\n            printf(\"%d piles remaining:\",count);  \r\n        else  \r\n            printf(\"%d pile remaining:\",count);  \r\n        for(int i=0; i<count; i++)  \r\n            printf(\" %d\",ga[i].n);  \r\n        puts(\"\");  \r\n        getchar();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1019,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\n\r\nusing namespace std;  \r\nconst int N = 120;  \r\nconst int inf = 0x3f3f3f3f;  \r\nint map[N][N];  \r\nint n,m;  \r\nint dij(int s,int t)  \r\n{  \r\n    int vis[N],dis[N];  \r\n    memset(vis,0,sizeof(vis));  \r\n    memset(dis,-1,sizeof(dis));  \r\n    dis[s]=inf;  \r\n    int tmp=s;  \r\n    while(1)  \r\n    {  \r\n        vis[tmp]=1;  \r\n        for(int i=1;i<=n;i++)  \r\n        {  \r\n            if(map[tmp][i]>0)  \r\n            {  \r\n                if(map[tmp][i]>dis[i])  \r\n                {  \r\n                    dis[i]=min(dis[tmp],map[tmp][i]);  \r\n                }  \r\n            }  \r\n        }  \r\n        int max=-1;  \r\n        for(int i=1;i<=n;i++)  \r\n        {  \r\n            if(vis[i]==0 && dis[i]>max)  \r\n            {  \r\n                max=dis[i];  \r\n                tmp=i;  \r\n            }  \r\n        }  \r\n        if(max==-1)  \r\n            return dis[t];  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        memset(map,0,sizeof(map));  \r\n        for(int i=0;i<m;i++){  \r\n            int x,y,z;  \r\n            scanf(\"%d%d%d\",&x,&y,&z);  \r\n            map[x][y]=max(map[x][y],z);  \r\n            map[y][x]=map[x][y];  \r\n        }  \r\n        int x,y,z;  \r\n        scanf(\"%d%d%d\",&x,&y,&z);  \r\n        int flow=dij(x,y);  \r\n        if(x==y)  \r\n        {  \r\n            printf(\"0\\n\");continue;  \r\n        }  \r\n        if(flow==-1)  \r\n        {  \r\n            printf(\"-1\\n\");continue;  \r\n        }  \r\n        int ans=(z-2)\/(flow-1)+1;   \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1022,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nint box[1000050];  \r\nint food[1000050];  \r\nbool mark[1000050];  \r\nint find(int x)  \r\n{  \r\n    int f=x;  \r\n    while(box[f]!=f)  \r\n        f=box[f];  \r\n    int i=x;  \r\n    while(i!=f)  \r\n    {\r\n        int j=box[i];  \r\n        box[i]=f;  \r\n        i=j;  \r\n    }  \r\n    return f;  \r\n}  \r\nvoid Merge(int xx,int yy)  \r\n{  \r\n    int fx,fy;  \r\n    fx=find(xx);  \r\n    fy=find(yy);  \r\n    if(fx!=fy)  \r\n        box[fx]=fy;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,m;  \r\n    char ch;  \r\n    int x,y;  \r\n    int ans;  \r\n    int count=1;  \r\n    int t;  \r\n    int i;  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        t=n;  \r\n        for(i=0;i<n;i++)  \r\n            {food[i]=i;box[i]=i;}  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n            getchar();  \r\n            scanf(\"%c\",&ch);  \r\n            if(ch=='U')  \r\n            {  \r\n                scanf(\"%d%d\",&x,&y);  \r\n                Merge(food[x],food[y]); \r\n            }  \r\n            else   \r\n            {  \r\n                scanf(\"%d\",&x);  \r\n                food[x]=t;\r\n                box[t]=t;\r\n                t++;  \r\n            }  \r\n        }  \r\n        ans=0;  \r\n        memset(mark,0,sizeof(mark));  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            if(mark[find(food[i])]==0)  \r\n            {mark[find(food[i])]=1;ans++;}                \r\n        }  \r\n        printf(\"Case #%d: %d\\n\",count++,ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1023,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nchar s[10010];  \r\nint add[100];  \r\nint del[100];  \r\nint d[2010][2010];  \r\nchar c[10];  \r\nint main()  \r\n{  \r\n    int i,j,p,k,n,m;  \r\n    while(scanf(\"%d%d\",&n,&m)!=EOF)  \r\n    {  \r\n        scanf(\"%s\",s);  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%s\",c);  \r\n            scanf(\"%d\",&add[c[0]-'a']);  \r\n            scanf(\"%d\",&del[c[0]-'a']);  \r\n        }  \r\n        for(i=0;i<m;i++){  \r\n            d[i][i]=0;d[i+1][i]=0;    \r\n        }  \r\n        for(p=1;p<m;p++)  \r\n        {  \r\n            for(i=0;i+p<m;i++)  \r\n            {  \r\n                j=i+p;  \r\n                d[i][j]=min(d[i+1][j]+min(del[s[i]-'a'],add[s[i]-'a']),d[i][j-1]+min(del[s[j]-'a'],add[s[j]-'a']));       \r\n                if(s[i]==s[j])  \r\n                {  \r\n                    d[i][j]=min(d[i][j],d[i+1][j-1]);\r\n                }  \r\n\r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",d[0][m-1]);  \r\n    }  \r\n}"
},
{
"pid":1025,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <algorithm>\r\nusing namespace std;\r\n#define N 10000\r\nint dp[N];\r\nint n,L;\r\n\r\nint t[32],v[32];\r\n\r\nint judge(int tim)\r\n{\r\n \tint i,j;\r\n \tmemset(dp,0,sizeof(dp));\r\n \tfor(i=1;i<=n;i++)\r\n \t{\r\n \t\tfor(j=t[i];j<=tim;j++)\r\n \t\t{\r\n \t\t\tdp[j]=max(dp[j],dp[j-t[i]]+(tim-j)*v[i]);\r\n \t\t}\r\n \t}\r\n \tfor(i=1;i<=tim;i++)\r\n \t{\r\n \t\tif(dp[i]>=L)\r\n \t\t{\r\n \t\t\treturn 1;\r\n \t\t}\r\n \t}\r\n \treturn 0;\r\n}\r\nint main()\r\n{\r\n \twhile(scanf(\"%d%d\",&n,&L)!=EOF)\r\n \t{\r\n \t\tfor(int i=1; i<=n; i++)\r\n \t\t{\r\n \t\t\tscanf(\"%d%d\",&t[i],&v[i]);\r\n \t\t}\r\n \t\tint left=1;\r\n \t\tint right=9999;\r\n \t\twhile(left<right)\r\n \t\t{\r\n \t\t\tint mid=left+right>>1;\r\n \t\t\tif(judge(mid))\r\n \t\t\t{\r\n \t\t\t\tright=mid;\r\n \t\t\t}\r\n \t\t\telse\r\n \t\t\t{\r\n \t\t\t\tleft=mid+1;\r\n \t\t\t}\r\n \t\t}\r\n \t\tprintf(\"%d\\n\",left);\r\n \t}\r\n \treturn 0;\r\n}"
},
{
"pid":1026,
"code":"\n#include <string.h>  \r\n#include <stdio.h>  \r\n#define MAXN 10000  \r\nint a[MAXN];  \r\nchar str[MAXN];  \r\nconst int mod[20]={1,1,2,6,4,2,2,4,2,8,4,  \r\n                    4,8,4,6,8,8,6,8,2};  \r\nint lastdigit(char* buf){  \r\n    int len=strlen(buf),i,c,ret=1;  \r\n    if (len==1) return mod[buf[0]-'0'];  \r\n    for (i=0;i<len;i++) a[i]=buf[len-1-i]-'0';  \r\n    for (;len;len-=!a[len-1]){  \r\n        ret=ret*mod[a[1]%2*10+a[0]]%5;  \r\n        for (c=0,i=len-1;i>=0;i--)  \r\n            c=c*10+a[i],a[i]=c\/5,c%=5;  \r\n    }  \r\n    return ret+ret%2*5;  \r\n}  \r\n\r\nint main(){  \r\n    while(scanf(\"%s\", str) == 1){  \r\n        printf(\"%d\\n\", lastdigit(str));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1027,
"code":"\n#include<stdio.h>\r\nint a[1000010],b[1000010];\r\nint main()\r\n{\r\n    int n,m,t,i,max,sum;\r\n    while(scanf(\"%d%d\",&n,&m)!=EOF)\r\n    {\r\n        a[0]=b[0]=0;\r\n        for(i=1;i<=n;i++)\r\n           {\r\n               scanf(\"%d\",&t);\r\n               a[i]=a[i-1]+t;\r\n               b[i]=b[i-1]+a[i];\r\n           }\r\n           for(max=0,i=m;i<=n;i++)\r\n           {\r\n               sum=m*a[i]-(b[i-1]-b[i-1-m]);\r\n               if(max<sum)\r\n                max=sum;\r\n           }\r\n        printf(\"%d\\n\",max);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1029,
"code":"\n#include\"stdio.h\"\r\n#include\"string.h\"\r\n#include\"stdlib.h\"\r\n#include\"math.h\"\r\n#define e 1e-9\r\nint n;\r\nint a[10011],b[10011],c[10011];\r\ndouble MAX(double q,double p)\r\n{\r\n\treturn q>p?q:p;\r\n}\r\ndouble cal(double x)\r\n{\r\n\tint i;\r\n\tdouble max=-111111111;\r\n\tfor(i=0;i<n;i++)\tmax=MAX(max,a[i]*x*x+b[i]*x+c[i]);\r\n\treturn max;\r\n}\r\ndouble solve()\r\n{\r\n\tdouble left,right,mid,midmid;\r\n\tdouble mid_cal,midmid_cal;\r\n\tleft=0;\r\n\tright=1000;\r\n\twhile(right-left>e)\r\n\t{\r\n\t\tmid=(left+right)\/2;\r\n\t\tmidmid=(mid+right)\/2;\r\n\t\tmid_cal=cal(mid);\r\n\t\tmidmid_cal=cal(midmid);\r\n\t\tif(mid_cal>midmid_cal)\tleft=mid;\r\n\t\telse\t\t\t\t\tright=midmid;\r\n\t}\r\n\treturn cal(right);\r\n}\r\nint main()\r\n{\r\n\tint T;\r\n\tint i;\r\n\tdouble ans;\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--)\r\n\t{\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++)\tscanf(\"%d%d%d\",&a[i],&b[i],&c[i]);\r\n\t\tans=solve();\r\n\t\tprintf(\"%.3lf\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1030,
"code":"\n#include <iostream>  \r\n#include <functional>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\ntypedef long long ll;  \r\nusing namespace std;  \r\n\r\n#define INF 0x3f3f3f3f  \r\nconst int maxn = 1005;  \r\n\r\nint dp[maxn][maxn];  \r\nint n,a[maxn],sum[maxn];  \r\n\r\nint dfs(int s,int t)  \r\n{  \r\n    if (dp[s][t]!=-1) return dp[s][t];  \r\n    if (s>t) return 0;  \r\n    if (s==t) return dp[s][t]=a[s];  \r\n    int x=min(dfs(s+1,t),dfs(s,t-1));  \r\n    dp[s][t]=sum[t]-sum[s-1]-x;  \r\n    return dp[s][t];  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int i,j;  \r\n    while (~scanf(\"%d\",&n))  \r\n    {  \r\n        memset(sum,0,sizeof(sum));  \r\n        for (i=1;i<=n;i++) scanf(\"%d\",&a[i]),sum[i]=sum[i-1]+a[i];  \r\n        memset(dp,-1,sizeof(dp));  \r\n        printf(\"%d\\n\",dfs(1,n)*2-sum[n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1032,
"code":"\n#include<iostream>  \r\n#include<set>  \r\nusing namespace std;  \r\n#define MAX 5010  \r\n\r\nint main()  \r\n{  \r\n    set<long long>a;  \r\n    a.insert(1);  \r\n    long long num[MAX];  \r\n    int index=0,data[]= {2,3,5};  \r\n\r\n    while(index<MAX)     \r\n    {  \r\n        num[index]=*a.begin();  \r\n        a.erase(num[index]);  \r\n        for(int i=0; i<3; ++i)  \r\n            a.insert(num[index]*data[i]);  \r\n        ++index;  \r\n    }  \r\n    a.clear();  \r\n    int k;  \r\n    cin>>k;  \r\n    while(k>0)  \r\n    {  \r\n        cout<<num[k-1]<<endl;  \r\n        cin>>k;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1034,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n\r\nint chess[11][10];\r\nbool soldier(int x,int y)  \r\n{\r\n  if(chess[x][y]==1) \r\n  {\r\n    if(x+1<=10 && chess[x+1][y]>=28 && chess[x+1][y]<=32)\r\n        return true;\r\n    if(y-1>=1 && chess[x][y-1]>=28 && chess[x][y-1]<=32)\r\n        return true;\r\n    if(y+1<=9 && chess[x][y+1]>=28 && chess[x][y+1]<=32)\r\n        return true;\r\n  }\r\n  else if(chess[x][y]==17)\r\n  {\r\n    if(x-1>=1 && chess[x-1][y]>=12 && chess[x-1][y]<=16)\r\n      return true;\r\n    if(y-1>=1 && chess[x][y-1]>=12 && chess[x][y-1]<=16)\r\n      return true;\r\n    if(y+1<=9 && chess[x][y+1]>=12 && chess[x][y+1]<=16)\r\n      return true;\r\n  }\r\n  return false;\r\n}\r\n\r\nbool  cannon(int x,int y,int cx,int cy)\r\n{\r\n  int other=0;\r\n  if(cx==x)\r\n  {\r\n    if(cy>y) \r\n    {\r\n      for(int i=y+1;i<cy;i++)\r\n        if(chess[x][i])\r\n          other++;\r\n    } \r\n    else if(cy<y)\r\n    {\r\n      for(int i=cy+1;i<y;i++)\r\n        if(chess[x][i])\r\n          other++;\r\n    }\r\n    if(other==1)\r\n       return true;\r\n    else\r\n       return false;\r\n  } \r\n  else if(cy==y)\r\n  {\r\n    if(cx>x)\r\n    {\r\n      for(int i=x+1;i<cx;i++)\r\n        if(chess[i][y])\r\n          other++;\r\n    } \r\n    else if(cx<x)\r\n    {\r\n      for(int i=cx+1;i<x;i++)\r\n        if(chess[i][y])\r\n        other++;\r\n    }\r\n    if(other==1)\r\n      return true;\r\n    else\r\n      return false;\r\n  }\r\n  return false;\r\n}\r\n\r\nbool car(int x,int y,int cx,int cy)\r\n{\r\n  int other=0;\r\n  if(cx==x)\r\n  {\r\n    if(cy>y) \r\n    {\r\n      for(int i=y+1;i<cy;i++)\r\n        if(chess[x][i])\r\n          other++;\r\n    } \r\n    else if(cy<y) \r\n    {\r\n      for(int i=cy+1;i<y;i++)\r\n        if(chess[x][i])\r\n          other++;\r\n    }\r\n    if(other==0)\r\n      return true;\r\n    else\r\n      return false;\r\n  } \r\n  else if(cy==y)\r\n  {\r\n    if(cx>x)\r\n    {\r\n      for(int i=x+1;i<cx;i++)\r\n        if(chess[i][y])\r\n          other++;\r\n    } \r\n    else if(cx<x)\r\n    {\r\n      for(int i=cx+1;i<x;i++)\r\n        if(chess[i][y])\r\n          other++;\r\n    }\r\n    if(other==0)\r\n      return true;\r\n    else\r\n      return false;\r\n  } \r\n  return false;\r\n}\r\n\r\nbool meet(int x1,int y1,int x2,int y2)\r\n{\r\n  int other=0;\r\n  if(y1==y2)\r\n  {\r\n    for(int i=x1+1;i<x2;i++)\r\n      if(chess[i][y1]!=0)\r\n        return false;\r\n    return true;\r\n  } \r\n  return false;\r\n}\r\n\r\nbool horse(const int x,const int y,int hx,int hy)\r\n{\r\n  if(hx==x-2 && hy==y+1 && chess[x-1][y+1]==0)\r\n  \treturn true;   \r\n  else if(hx==x-1 && hy==y+2 && chess[x-1][y+1]==0)\r\n    return true; \r\n  else if(hx==x+1 && hy==y+2 && chess[x+1][y+1]==0)\r\n    return true;\r\n  else if(hx==x+2 && hy==y+1 && chess[x+1][y+1]==0)\r\n    return true;\r\n  else if(hx==x+2 && hy==y-1 && chess[x+1][y-1]==0)\r\n    return true;\r\n  else if(hx==x+1 && hy==y-2 && chess[x+1][y-1]==0)\r\n    return true;\r\n  else if(hx==x-1 && hy==y-2 && chess[x-1][y-1]==0)\r\n  \treturn true;  \r\n  else if(hx==x-2 && hy==y-1 && chess[x-1][y-1]==0)\r\n    return true;\r\n  else\r\n    return false;\r\n}\r\n\r\nint main()\r\n{\r\n  int n,i,j;\r\n  int red_bossx=0,red_bossy=0,black_bossx=0,black_bossy=0;\r\n  scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n    \tred_bossx=0;\r\n    \tred_bossy=0;\r\n    \tblack_bossx=0;\r\n    \tblack_bossy=0;\r\n      for(i=1;i<=10;i++)\r\n        for(j=1;j<=9;j++)\r\n        {\r\n          scanf(\"%d\",&chess[i][j]);\r\n          if(chess[i][j]==1)\r\n          {\r\n            black_bossx=i;\r\n            black_bossy=j;\r\n          }\r\n          else if(chess[i][j]==17)\r\n          {\r\n            red_bossx=i;\r\n            red_bossy=j;\r\n          }\r\n        }\r\n      bool p;\r\n      for(i=1;i<=10;i++)\r\n      {\r\n\t    p=false;\r\n        for(j=1;j<=9;j++)\r\n        {\r\n          if(chess[i][j]==6 || chess[i][j]==7) \r\n          {\r\n            p=horse(red_bossx,red_bossy,i,j);\r\n            if(p==true)\r\n              break;                 \r\n          }\r\n          else if(chess[i][j]==8 || chess[i][j]==9)\r\n          {\r\n            p=car(red_bossx,red_bossy,i,j);\r\n            if(p==true)\r\n              break;\r\n          }\r\n          else if(chess[i][j]==10 || chess[i][j]==11)\r\n          {\r\n            p=cannon(red_bossx,red_bossy,i,j);\r\n            if(p==true)\r\n              break;\r\n          }\r\n          else if(chess[i][j]==22 || chess[i][j]==23)\r\n          {\r\n            p=horse(black_bossx,black_bossy,i,j);\r\n            if(p==true)\r\n              break;\r\n          }\r\n          else if(chess[i][j]==24 || chess[i][j]==25)\r\n          {\r\n            p=car(black_bossx,black_bossy,i,j);\r\n            if(p==true)\r\n              break;\r\n          }\r\n          else if(chess[i][j]==26 || chess[i][j]==27)\r\n          {\r\n            p=cannon(black_bossx,black_bossy,i,j);\r\n            if(p==true)\r\n              break;\r\n          }\r\n        }\r\n        if(p)\r\n          break;\r\n      }\r\n      if(p==true)\t\r\n      \tprintf(\"yes\\n\"); \r\n      else\r\n      {\r\n        bool q=(meet(black_bossx,black_bossy,red_bossx,red_bossy) || soldier(black_bossx,black_bossy) || soldier(red_bossx,red_bossy));\r\n        if(q)\r\n          printf(\"yes\\n\");\r\n        else\r\n       \t  printf(\"no\\n\");       \r\n      }\r\n  }\r\n  return 0;\r\n}"
},
{
"pid":1036,
"code":"\n#include<stdio.h>  \r\n#include<stdlib.h>  \r\nstruct node{ \r\n    int left;  \r\n    int right;  \r\n}a[110];  \r\nint cmp(const void *a,const void *b)\r\n{  \r\n    return (((struct node *)a)->right>((struct node *)b)->right?1:-1);  \r\n}  \r\nint main()  \r\n{  \r\n    int h1,m1,h2,m2,n,s1,s2;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        int i,t,j,count=1;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d:%d-%d:%d\",&h1,&m1,&h2,&m2);  \r\n            s1=h1*60+m1;  \r\n            s2=h2*60+m2;  \r\n            if(s1>s2)  \r\n            {t=s1;s1=s2;s2=t;}  \r\n            a[i].left=s1;  \r\n            a[i].right=s2;  \r\n        }  \r\n        qsort(a,n,sizeof(a[0]),cmp);\r\n        i=0;  \r\n        for(j=1;j<n;j++)  \r\n            if(a[j].left>a[i].right)  \r\n            {count++;i=j;}  \r\n            printf(\"%d\\n\",count);  \r\n    }  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":1037,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar card[30][5];  \r\nchar s[5];  \r\nint map[30][30];  \r\nint vis[30];  \r\nint link[30];  \r\nint k;  \r\nint find(int a)  \r\n{  \r\n    for(int i=1; i<=k; i++)  \r\n    {  \r\n        if(!vis[i]&&map[a][i])  \r\n        {  \r\n            vis[i]=1;  \r\n            if(link[i]==-1||find(link[i]))  \r\n            {  \r\n                link[i]=a;  \r\n                return 1;  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}  \r\nint sum()  \r\n{  \r\n    int res=0;  \r\n    memset(link,-1,sizeof(link));  \r\n    for(int i=1; i<=k; i++)  \r\n    {  \r\n        memset(vis,0,sizeof(vis));  \r\n        if(find(i))  \r\n            res++;  \r\n    }  \r\n    return res;  \r\n}  \r\nvoid change(char a[])  \r\n{  \r\n    if(a[0]=='A')  \r\n        a[0]='0'+14;  \r\n    else if(a[0]=='T')  \r\n        a[0]='0'+10;  \r\n    else if(a[0]=='J')  \r\n        a[0]='0'+11;  \r\n    else if(a[0]=='Q')  \r\n        a[0]='0'+12;  \r\n    else if(a[0]=='K')  \r\n        a[0]='0'+13;  \r\n    if(a[1]=='H')  \r\n    a[1]='4';  \r\n    else if(a[1]=='S')  \r\n    a[1]='3';  \r\n    else if(a[1]=='D')  \r\n    a[1]='2';  \r\n    else if(a[1]=='C')  \r\n    a[1]='1';  \r\n}  \r\nint main()  \r\n{ \r\n    int t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        memset(map,0,sizeof(map));  \r\n        memset(card,'\\0',sizeof(card));  \r\n        scanf(\"%d\",&k);  \r\n        for(int i=1; i<=k; i++)  \r\n            scanf(\"%*c%s\",card[i]);   \r\n        for(int i=1; i<=k; i++)  \r\n        {  \r\n            scanf(\"%*c%s\",s);  \r\n            for(int j=1; j<=k; j++)  \r\n            {  \r\n                change(card[j]);  \r\n                change(s);  \r\n                if(s[0]>card[j][0])  \r\n                map[i][j]=1;  \r\n                else if(s[0]==card[j][0]&&s[1]>card[j][1])  \r\n                map[i][j]=1;  \r\n            }  \r\n        }  \r\n        int res=sum();  \r\n        printf(\"%d\\n\",res);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1038,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nstruct node  \r\n{  \r\n    char c[5];  \r\n    int rk;  \r\n    char da[5];  \r\n    int num;  \r\n}s[4][15];  \r\n\r\nbool cmp(node a,node b)  \r\n{  \r\n    if(a.rk==b.rk) return a.num<b.num;  \r\n    return a.rk>b.rk;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    char s1[150],s2[60],s3[2];  \r\n    while(~scanf(\"%s\",s3))  \r\n    {  \r\n        scanf(\"%s%s\",s1,s2);  \r\n        strcat(s1,s2);  \r\n\r\n        for(int i=0,j=0,cnt1=0;i<104;i+=2)  \r\n        {  \r\n            s[j][cnt1].c[0]=s1[i+1];  \r\n            if(s1[i+1]=='C')      s[j][cnt1].rk=4;  \r\n            else if(s1[i+1]=='D') s[j][cnt1].rk=3;  \r\n            else if(s1[i+1]=='S') s[j][cnt1].rk=2;  \r\n            else if(s1[i+1]=='H') s[j][cnt1].rk=1;  \r\n\r\n            s[j][cnt1].da[0]=s1[i];  \r\n            if(s1[i]>='2'&&s1[i]<='9') s[j][cnt1].num=s1[i]-'0';  \r\n            else if(s1[i]=='A') s[j][cnt1].num=14;  \r\n            else if(s1[i]=='T') s[j][cnt1].num=10;  \r\n            else if(s1[i]=='J') s[j][cnt1].num=11;  \r\n            else if(s1[i]=='Q') s[j][cnt1].num=12;  \r\n            else if(s1[i]=='K') s[j][cnt1].num=13;  \r\n            j++;  \r\n            if(j%4==0)  \r\n                cnt1++;  \r\n            j%=4;  \r\n        }  \r\n\r\n        for(int i=0;i<4;i++)  \r\n        sort(s[i],s[i]+13,cmp);  \r\n\r\n        int mark,i,sum;  \r\n        if(s3[0]=='S') mark=3;  \r\n        else if(s3[0]=='W') mark=2;  \r\n        else if(s3[0]=='N') mark=1;  \r\n        else  mark=0;  \r\n\r\n        for(sum=1;sum<5;sum++)  \r\n        {  \r\n            if(sum==1) printf(\"East player:\\n\");  \r\n            else if(sum==2) printf(\"South player:\\n\");  \r\n            else if(sum==3) printf(\"West player:\\n\");  \r\n            else  printf(\"North player:\\n\");  \r\n\r\n            printf(\"+---++---++---++---++---++---++---++---++---++---++---++---++---+\\n\");  \r\n            for(int k=0;k<13;k++)  \r\n                printf(\"|%s %s|\",s[mark][k].da,s[mark][k].da);printf(\"\\n\");  \r\n            for(int k=0;k<13;k++)  \r\n                printf(\"| %s |\",s[mark][k].c);printf(\"\\n\");  \r\n            for(int k=0;k<13;k++)  \r\n                printf(\"|%s %s|\",s[mark][k].da,s[mark][k].da);printf(\"\\n\");  \r\n            printf(\"+---++---++---++---++---++---++---++---++---++---++---++---++---+\\n\");  \r\n\r\n            mark++;  \r\n            mark%=4;  \r\n         }  \r\n         printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1040,
"code":"\n#include<stdio.h>\r\nint main(){\r\n\tint i,j,cnt,k,N,K,a[5001];\r\n\tscanf(\"%d%d\",&N,&K);\r\n\tint ans=0;\r\n\tfor(i=1;i<=N;i++)\r\n\t\tscanf(\"%d\",&a[i]);\r\n\tfor( i=1;i<=N;i++){\r\n\t\tcnt=0;\r\n\t\tfor(j=i+1;j<=N;j++){\r\n\t\t\tif(cnt==0){\r\n\t\t\t\tfor(k=i;k<=j;k++)\r\n\t\t\t\t\tcnt+=a[k];\r\n\t\t\t}\r\n\t\t\telse{\r\n\t\t\t\tcnt+=a[j];\r\n\t\t\t}\r\n\t\t\tif(cnt%K==0)\r\n\t\t\t\tans++;\r\n\t\t}\r\n\t}\r\n\tprintf(\"%d\\n\",ans);\r\n}"
},
{
"pid":1042,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint t,n,a[1234],i,b[1234],max;\r\n\tscanf(\"%d\",&t);\r\n\twhile(t--)\r\n\t{\r\n\t\tint l=0;\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t\tscanf(\"%d\",&a[i]);\r\n\t\tb[0]=1;\r\n\t\tfor(i=0;i<n;i++)\r\n\t\t{\r\n\t\t\tmax=0;\r\n\t\t\tfor(int j=0;j<i;j++)\r\n\t\t\t\tif(a[i]>a[j])\r\n\t\t\t\t\tif(b[j]>max)\r\n\t\t\t\t\t\tmax=b[j];\r\n\t\t\tb[i]=max+1;\r\n\t\t\tif(b[i]>l)\r\n\t\t\t\tl=b[i];\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",n-l);\r\n\t}\r\n}"
},
{
"pid":1043,
"code":"\n#include <stdio.h>   \r\n#include<math.h>  \r\ndouble f(double n){  \r\n    double t1,t2,t3;  \r\n    if(-1e-7<=n&&n<=2+1e-7)return t1= 4.0\/3*pow(n,1.5)-0.4*pow(n,2.5);  \r\n    if(-1e-7+2<n&&n<=5+1e-7)return t2= f(2)+0.25*pow(n,4)-2.0\/3*pow(n,3)-0.5*pow(n,2)+2*n-6+16.0\/3;  \r\n    return t3=f(5)+72*n-8.0\/15*pow(n-5,15.0\/8)-72*5;  \r\n}  \r\nint main()  \r\n{  \r\n    int T;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--){  \r\n        double a,b;  \r\n        scanf(\"%lf%lf\",&a,&b);  \r\n        printf(\"%d\\n\",(int)(f(b)-f(a)+0.5));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1045,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int T,n,i,a[100005],b[100005];  \r\n    int m_ax,sum;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        memset(b,0,sizeof(b));  \r\n        scanf(\"%d\",&n);  \r\n        for(i=1; i<=n; i++)  \r\n            scanf(\"%d\",&a[i]);  \r\n        m_ax=a[1];  \r\n        sum=0;  \r\n        for(i=1; i<=n; i++)  \r\n        {  \r\n            if(a[i]>=m_ax)  \r\n            {  \r\n                m_ax=a[i];  \r\n                sum++;  \r\n                b[i]=1;\r\n            }  \r\n        }  \r\n        m_ax=a[n];  \r\n        for(i=n; i>0; i--)  \r\n        {  \r\n            if(a[i]>=m_ax)  \r\n            {  \r\n                m_ax=a[i];  \r\n                if(b[i]==0)  \r\n                    sum++;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1047,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nchar arr[1002];  \r\n\r\nint main()  \r\n{  \r\n    int t, len, jie;  \r\n    scanf(\"%d\", &t);  \r\n    while(t--){  \r\n        scanf(\"%s\", arr);  \r\n        len = strlen(arr);  \r\n\r\n        if(len == 1 && arr[0] == '1'){  \r\n            puts(\"1\"); continue;  \r\n        }  \r\n\r\n        jie = 1;  \r\n        do{  \r\n            arr[len-1] -= 1;  \r\n            jie = 0;  \r\n            if(arr[len-1] < '0'){  \r\n                arr[len-1] += 10;  \r\n                jie = 1;  \r\n            }  \r\n            --len;  \r\n        }while(jie);  \r\n\r\n        for(int i = 0; ; ++i)  \r\n            if(arr[i] != '0'){  \r\n                puts(arr + i);  \r\n                break;  \r\n            }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1048,
"code":"\n#include <iostream>\r\nusing namespace std;\r\n\r\nint same(int a, int b, int n)\r\n{\r\n\tint t,c1,c2;\r\n\tif (a > b)\r\n\t{\r\n\t\tt = a;\r\n\t\ta = b;\r\n\t\tb = t;\r\n\t}\r\n\tc1 = b - a;\r\n\tc2 = (n + a) - b;\r\n\tif (c1 > 5)c1 = 5;\r\n\tif (c2 > 5)c2 = 5;\r\n\treturn 10 - c1 - c2;\r\n}\r\n\r\nint main()\r\n{\r\n\tint t,n,a[3],b[3],c[3];\r\n\tcin >> t;\r\n\twhile (t--)\r\n\t{\r\n\t\tcin >> n;\r\n\t\tcin >> a[0] >> a[1] >> a[2] >> b[0] >> b[1] >> b[2];\r\n\t\tfor (int i = 0; i < 3; ++i)c[i] = same(a[i], b[i], n);\r\n\t\tif (n <= 5)cout << n*n*n << endl;\r\n\t\telse cout << 250 - c[0] * c[1] * c[2] << endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1049,
"code":"\n#include<stdio.h>\r\nint main()  \r\n{  \r\n    int T,n;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        int x=0;  \r\n        char s[10];  \r\n        while(n--)  \r\n        {  \r\n            scanf(\"%s\",s);  \r\n            x+= (s[1]=='+'?1:-1);  \r\n        }  \r\n        printf(\"%d\\n\",x);  \r\n    }  \r\n}"
},
{
"pid":1050,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n\tint n;\r\n\tfloat A1,B1,A2,B2;\r\n\tscanf(\"%d\",&n);\r\n\twhile(n--)\r\n\t{\r\n\t\tscanf(\"%f%f%f%f\",&A1,&B1,&A2,&B2);\r\n\t\tif((A1\/B1)>=(A2\/B2))\r\n\t\tprintf(\"iphone 5S\\n\");\r\n\t\telse printf(\"iphone 5C\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1051,
"code":"\n#include <iostream>  \r\n#include <string>  \r\nusing namespace std;  \r\n\r\nint fun(string s,string k)  \r\n{  \r\n    int _result = 0;  \r\n    for(int i=0;i<s.length();i++)  \r\n    {  \r\n        if(s[i] == k[0])  \r\n        {  \r\n            _result++;  \r\n            for(int j=1;j<k.length();j++)  \r\n            {  \r\n                if(s[i+j]!=k[j])  \r\n                {  \r\n                    _result--;  \r\n                    break;        \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n    return _result;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int t;  \r\n    string s,k;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        cin>>s;  \r\n        cin>>k;  \r\n        cout<<fun(s,k)<<endl;  \r\n    }  \r\n}"
},
{
"pid":1052,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\n#include<algorithm>\r\nusing namespace std;\r\nint num_fir[100100];\r\nint num_sec[100100];\r\nint num_thi[100100];\r\nint cmp(int a,int b){\r\n\treturn a<b;\r\n}\r\nint main(){\r\n\tint T;\r\n\tint i,j,k,t,n,m;\r\n\tscanf(\"%d\",&T);\r\n\twhile(T--){\r\n\t\tmemset(num_fir,0,sizeof(num_fir));\r\n\t\tmemset(num_sec,0,sizeof(num_sec));\r\n\t\tscanf(\"%d\",&n);\r\n\t\tfor(i=0;i<n;i++)\r\n  \t\t\tscanf(\"%d\",&num_fir[i]);\r\n\t\tsort(num_fir,num_fir+n,cmp);\r\n\t\tt=0;\r\n\t\tj=0;\r\n\t\tfor(i=1;i<n;i++){\r\n\t\t\tif(num_fir[i]==num_fir[i-1])\r\n\t\t\t\tnum_sec[j++]=num_fir[i];\r\n\t\t}\r\n\t\tint ans=1;\r\n\t\tfor(i=1;i<n;i++)\r\n  \t\t\tif(num_fir[i]>num_fir[i-1])\r\n      \t\t\tans++;\r\n\t\tif(num_sec[0]!=0)\r\n  \t\t\tans++;\r\n  \t\tfor(i=1;i<j;i++)\r\n      \t\tif(num_sec[i]>num_sec[i-1])\r\n         \t\tans++;\r\n   \t\tprintf(\"%d\\n\",ans);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1053,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int T,a,b;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d\",&a,&b);  \r\n        if(a==b)  \r\n        {  \r\n            printf(\"Bob\\n\");  \r\n        }  \r\n        else  \r\n        {  \r\n            printf(\"Alice\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1055,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar a[1000005];  \r\nint b[1000005];  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    while(scanf(\"%s\",a)!=EOF)  \r\n    {  \r\n        n=strlen(a);  \r\n        for(i=0;i<n;i++)  \r\n            b[i]=a[i]-'0';  \r\n        if(b[n-1]>=1) b[n-1]-=1;  \r\n        else   \r\n        {  \r\n            b[n-1]=b[n-1]+9;  \r\n            for(i=n-2;i>=0;i--)  \r\n            {  \r\n                if(b[i]>=1)   \r\n                {  \r\n                    b[i]-=1;  \r\n                    break;  \r\n                }  \r\n                else   \r\n                {  \r\n                    b[i]=b[i]+9;  \r\n                    b[i-1]-=1;  \r\n                 }  \r\n            }  \r\n        }  \r\n        i=0;  \r\n        while(b[i]==0) i++;  \r\n        for(;i<n;i++)  \r\n        printf(\"%d\",b[i]);  \r\n        printf(\"\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1056,
"code":"\n#include<stdio.h>\r\n#define m 1000000007\r\nint main(){\r\n\tunsigned long long n,s,t,tn,k,ans,t1,t2;\r\n\twhile (~scanf(\"%llu\",&n)){\r\n\t\ts=2;\r\n\t\tans=0;\r\n\t\ttn=n;\r\n\t\twhile ((n\/s)>(n\/(s+1)+1)){\r\n\t\t\tt=(n\/(s-1))-n\/s;\r\n\t\t\tans=ans+((n%tn%m)*(t%m))%m;\r\n\t\t\tt1=t;\r\n\t\t\tt2=t-1;\r\n\t\t\tif (t1%2==0) {\r\n\t\t\t\tans=ans+(((((t1\/2)%m)*(t2%m))% m)*((s-1)%m))%m;\r\n\t\t\t}else{\r\n\t\t\t\tans=ans+(((((t2\/2)%m)*(t1%m))% m)*((s-1)%m))%m;\r\n\t\t    }\r\n\t\t\tans%=m;\r\n\t\t\ttn-=t;\r\n\t\t\ts++;\r\n\t\t}\r\n\t\tfor(;tn>0;tn--){\r\n\t\t\tans+=n%tn;\r\n\t\t\tans%=m;\r\n\t\t}\r\n\t\tprintf(\"%llu\\n\",ans%m);\r\n    }\r\n}"
},
{
"pid":1057,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nint main(){  \r\n    char temp,str[20];  \r\n    int k,len,mark,flag,j;  \r\n    while(scanf(\"%s %d\",str,&k)!=EOF){  \r\n        len=strlen(str);  \r\n        if(k==0)  \r\n        {  \r\n            puts(str);  \r\n            continue;  \r\n        }  \r\n        for(int i=0;i<len;i++){  \r\n            temp=str[i],flag=1;  \r\n            for(j=i+1;j<=i+k&&j<len;j++){\r\n                if(str[j]>temp)  \r\n                temp=str[j],mark=j,flag=0;  \r\n            }  \r\n            if(!flag){  \r\n                for(int q=mark;q>i;q--)\r\n                temp=str[q],str[q]=str[q-1],str[q-1]=temp;  \r\n                k=k-mark+i;  \r\n            }     \r\n            if(k==0)  \r\n            break;  \r\n        }  \r\n        puts(str);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1058,
"code":"\n#include <cmath>  \r\n#include <queue>  \r\n#include <stack>  \r\n#include <vector>  \r\n#include <cstdio>  \r\n#include <string>  \r\n#include <cctype>  \r\n#include <climits>  \r\n#include <cstring>  \r\n#include <cstdlib>  \r\n#include <iostream>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nint n,k,A[20];  \r\nstack<int>v;  \r\nint dfs(int i=0,int sum=0)  \r\n{  \r\n    if (i==n)                \r\n        return sum==k?1:0;  \r\n    if (dfs(i+1,sum))        \r\n        return 1;  \r\n    if (dfs(i+1,A[i]+sum))  \r\n    {  \r\n        v.push(A[i]);\r\n        return 1;     \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    while (~scanf(\"%d%d\",&n,&k))  \r\n    {  \r\n        for (int i=0;i<n;i++)  \r\n            scanf(\"%d\",&A[i]);  \r\n        if (dfs())  \r\n        {  \r\n            printf(\"YES\\n\");  \r\n            while (!v.empty())  \r\n            {  \r\n                int x=v.top();  \r\n                printf(\"%d \",x);  \r\n                v.pop();  \r\n            }  \r\n            printf(\"\\n\");  \r\n        }  \r\n        else  \r\n            printf(\"NO\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1061,
"code":"\n#include <iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    long long int a,b,n,ans,tmp;  \r\n    cin>>n;  \r\n    for(int i=1;i<=n;i++)  \r\n    {  \r\n    cout<<\"Case #\"<<i<<\": \";  \r\n      ans=0;  \r\n      cin>>a>>b;      \r\n      if(a==0&&b==0)  \r\n         {  \r\n             cout<<\"1\\n\";  \r\n             continue;  \r\n         }  \r\n       if(a==0||b==0)  \r\n          {  \r\n              cout<<\"2\\n\";  \r\n              continue;  \r\n          }  \r\n      while(b)  \r\n      {  \r\n          ans+=a\/b;  \r\n          tmp=b;  \r\n          b=a%b;  \r\n          a=tmp;  \r\n      }  \r\n      cout<<ans+1<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1063,
"code":"\n#include<iostream>  \r\n#include<string.h>  \r\n#include<queue>  \r\n#include<stack>  \r\nusing namespace std;  \r\nconst int max=100000;  \r\ntypedef struct BiNode{  \r\n    string data;  \r\n    struct BiNode *lchild,*rchild;  \r\n}BiTNode,*BiTree;  \r\nstring temp;  \r\nint flag=0;  \r\nint createBiTree(BiTree &M){  \r\n    flag=0;  \r\n    cin>>temp;  \r\n    if(temp.length()==1 && temp[0]=='#'){  \r\n       M=NULL;  \r\n    }  \r\n    else  \r\n      flag=1;  \r\n    if(flag){  \r\n        M=new BiTNode;  \r\n        M->data=temp;  \r\n        createBiTree(M->lchild);  \r\n        createBiTree(M->rchild);  \r\n        flag=0;  \r\n    }  \r\n    return 1;  \r\n}  \r\nqueue<string>cas;  \r\nvoid preOrder(BiTree &M,int leval,int leval_goal){  \r\n    if(M==NULL)  \r\n       return ;  \r\n    if(leval==leval_goal){  \r\n        cas.push(M->data);  \r\n        return ;  \r\n    }  \r\n    preOrder(M->lchild,leval+1,leval_goal);  \r\n    preOrder(M->rchild,leval+1,leval_goal);  \r\n}  \r\nint main(){  \r\n    int N;  \r\n    string str;  \r\n    int n,i,j,k,t;  \r\n    cin>>N;  \r\n    while(N--){  \r\n        BiTree L;  \r\n        createBiTree(L);  \r\n        cin>>str;  \r\n        cin>>n;  \r\n        preOrder(L,1,n);\r\n        int number=cas.size();\r\n        if(number>1){  \r\n            for(i=0;i<number-1;i++){  \r\n              cout<<cas.front()<<\"~\";  \r\n              cas.pop();  \r\n        }  \r\n           cout<<cas.front()<<endl;  \r\n           cas.pop();  \r\n        }  \r\n        else{  \r\n            cout<<cas.front()<<endl;  \r\n            cas.pop();  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1066,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n\r\nconst int MAXN = 1e5 + 10;  \r\ntypedef long long LL;  \r\nint cnt[MAXN], pri[MAXN], num[MAXN], pri_num, mu[MAXN], vis[MAXN], a[MAXN];  \r\n\r\nvoid mobius(int n)  \r\n{  \r\n    pri_num = 0;  \r\n    memset(vis, 0, sizeof(vis));  \r\n    vis[1] = mu[1] = 1;  \r\n    for(int i = 2; i <= n; i++) {  \r\n        if(!vis[i]) {  \r\n            pri[pri_num++] = i;  \r\n            mu[i] = -1;  \r\n        }  \r\n        for(int j = 0; j < pri_num; j++) {  \r\n            if(i * pri[j] > n) break;  \r\n            vis[i*pri[j]] = 1;  \r\n            if(i % pri[j] == 0) {  \r\n                mu[i*pri[j]] = 0;  \r\n                break;  \r\n            }  \r\n            mu[i*pri[j]] = -mu[i];  \r\n        }  \r\n    }  \r\n}  \r\n\r\nLL get(int x)  \r\n{  \r\n    return (LL)x * (x-1) \/ 2;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    mobius(100005);  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n)) {  \r\n        int mmax = 0;  \r\n        for(int i = 1; i <= n; i++) {  \r\n            scanf(\"%d\",&a[i]);  \r\n            mmax = max(mmax, a[i]);  \r\n        }  \r\n        memset(cnt, 0, sizeof(cnt));  \r\n        memset(num, 0, sizeof(num));  \r\n        for(int i = 1; i <= n; i++) num[a[i]]++;  \r\n        for(int i = 1; i <= mmax; i++)  \r\n            for(int j = i; j <= mmax; j += i)  \r\n                cnt[i] += num[j];  \r\n        LL ans = 0;  \r\n        for(int i = 1; i <= mmax; i++)  \r\n            ans += get(cnt[i]) * mu[i];  \r\n        printf(\"%lld\\n\", ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1067,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int N = 210;  \r\n#define INF 0x3fffffff  \r\nchar str[N];  \r\nint n, dp[N][N];  \r\n\r\nint digit_cnt(int x)  \r\n{  \r\n    int a = 0;  \r\n    while(x) {  \r\n        a++;  \r\n        x \/= 10;  \r\n    }  \r\n    return a;  \r\n}  \r\n\r\nbool check(int l, int r, int len)  \r\n{  \r\n    if((r - l + 1) % len) return false;  \r\n    for(int i = l; i < l + len; i++) {  \r\n        for(int j = i + len; j <= r; j += len)  \r\n            if(str[i] != str[j]) return false;  \r\n    }  \r\n    return true;  \r\n}  \r\n\r\nint get_ans()  \r\n{  \r\n    int i, j, k;  \r\n    n = strlen(str+1);  \r\n    for(i = 1; i <= n; i++) dp[i][i] = 1;  \r\n    for(i = n - 1; i >= 1; i--) {  \r\n        for(j = i + 1; j <= n; j++) {  \r\n            dp[i][j] = INF;  \r\n            for(k = i; k < j; k++)  \r\n                dp[i][j] = min(dp[i][j], dp[i][k] + dp[k+1][j]);  \r\n            for(int len = 1; len <= j-i+1; len++) {  \r\n                if(check(i, j, len)) {  \r\n                    dp[i][j] = min(dp[i][j], dp[i][i+len-1] + 2 + digit_cnt((j - i + 1) \/ len));  \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n    return dp[1][n];  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    while(~scanf(\"%s\", str+1)) {  \r\n        printf(\"%d\\n\", get_ans());  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1068,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\ntypedef long long LL;  \r\nconst int N = 10010;  \r\n#define lson l, mid, root<<1  \r\n#define rson mid+1, r, root<<1|1  \r\nstruct node  \r\n{  \r\n    int l, r;  \r\n    LL sum, odd, add;  \r\n}a[N<<2];  \r\nvoid PushUp(int root)  \r\n{  \r\n    a[root].sum = a[root<<1].sum + a[root<<1|1].sum;  \r\n    a[root].odd = a[root<<1].odd + a[root<<1|1].odd;  \r\n}  \r\nvoid PushDown(int len, int root)  \r\n{  \r\n    if(a[root].add)  \r\n    {  \r\n        a[root<<1].add += a[root].add;  \r\n        a[root<<1|1].add += a[root].add;  \r\n        a[root<<1].sum += LL(len - (len>>1)) * a[root].add;  \r\n        a[root<<1|1].sum += LL(len>>1) * a[root].add;  \r\n        if(a[root].add % 2 == 1)  \r\n        {  \r\n            a[root<<1].odd = len - (len>>1) - a[root<<1].odd;    \r\n            a[root<<1|1].odd = (len>>1) - a[root<<1|1].odd;   \r\n        }  \r\n        a[root].add = 0;  \r\n    }  \r\n}  \r\nvoid build_tree(int l, int r, int root)  \r\n{  \r\n    a[root].l = l;  \r\n    a[root].r = r;  \r\n    a[root].add = 0;  \r\n    a[root].odd = 0;  \r\n    if(l == r)  \r\n    {  \r\n        scanf(\"%lld\",&a[root].sum);  \r\n        if(a[root].sum % 2 == 1)  \r\n            a[root].odd = 1;  \r\n        return;  \r\n    }  \r\n    int mid = (l + r) >> 1;  \r\n    build_tree(lson);  \r\n    build_tree(rson);  \r\n    PushUp(root);  \r\n}  \r\nvoid update(int l, int r, int root, LL k)  \r\n{  \r\n    if(l <= a[root].l && r >= a[root].r)  \r\n    {  \r\n        a[root].add += k;  \r\n        a[root].sum += LL(a[root].r - a[root].l + 1) * k;  \r\n        if(k % 2 == 1)  \r\n            a[root].odd = (a[root].r - a[root].l + 1) - a[root].odd;  \r\n        return;  \r\n    }  \r\n    PushDown(a[root].r - a[root].l + 1, root);  \r\n    int mid = (a[root].l + a[root].r) >> 1;  \r\n    if(l <= mid) update(l, r, root<<1, k);  \r\n    if(r > mid) update(l, r, root<<1|1, k);  \r\n    PushUp(root);  \r\n}  \r\nLL Query(int l, int r, int root, char ch)  \r\n{  \r\n    if(l <= a[root].l && r >= a[root].r)  \r\n    {  \r\n        if(ch == 'Q') return a[root].odd;  \r\n        else if(ch == 'S') return a[root].sum;  \r\n    }  \r\n    PushDown(a[root].r - a[root].l + 1, root);  \r\n    LL ans = 0;  \r\n    int mid = (a[root].l + a[root].r) >> 1;  \r\n    if(l <= mid) ans += Query(l, r, root<<1, ch);  \r\n    if(r > mid) ans += Query(l, r, root<<1|1, ch);  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    int n, m, i, x, y;  \r\n    LL z;  \r\n    char ch[5];  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        build_tree(1, n, 1);  \r\n        while(m--)  \r\n        {  \r\n            scanf(\"%s\",ch);  \r\n            if(ch[0] == 'A')  \r\n            {  \r\n                scanf(\"%d%d%lld\",&x,&y,&z);  \r\n                update(x, y, 1, z);  \r\n            }  \r\n            else  \r\n            {  \r\n                scanf(\"%d%d\",&x,&y);  \r\n                printf(\"%lld\\n\", Query(x, y, 1, ch[0]));  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1069,
"code":"\n#include<stdio.h>  \r\nlong long num[1005];  \r\nint main()  \r\n{  \r\n    long long T,n,a,b,i,k;  \r\n    scanf(\"%lld\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%lld\",&n);  \r\n        a=0;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%lld\",&num[i]);  \r\n            a=a^num[i];  \r\n        }  \r\n        b=a;  \r\n        k=0;  \r\n        while(!(b&1))  \r\n        {  \r\n            b=b>>1;  \r\n            k++;  \r\n        }  \r\n        b=a;  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            if((num[i]>>k)&1)  \r\n            {  \r\n                b=b^num[i];  \r\n            }  \r\n        }  \r\n        printf(\"%lld\\n\",b*(a^b));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1070,
"code":"\n#include<iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include<cstdlib>  \r\n#include <map>  \r\n#include <cmath>  \r\n#include <vector>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\nconst int N = 100005;  \r\nint a[N],dp[N];  \r\nint main()  \r\n{  \r\n    int T;  \r\n    scanf(\"%d\",&T);  \r\n    for(int cas=1; cas<=T; cas++)  \r\n    {  \r\n        memset(a,0,sizeof(a));  \r\n        int num,floor,up,down,x;  \r\n        scanf(\"%d%d%d%d\",&floor,&num,&up,&down); \r\n        for(int i=1; i<=num; i++)  \r\n        {  \r\n            scanf(\"%d\",&x);  \r\n            a[x]++;  \r\n        }  \r\n        memset(dp,0x3f3f3f3f,sizeof(dp));  \r\n        dp[0]=dp[1]=dp[2]=0;  \r\n        int tmp;  \r\n        int mi=min(up,down);  \r\n        for(int i=3; i<=floor; i++)  \r\n        {  \r\n            dp[i]=min(dp[i],dp[i-2]+a[i-1]*mi);  \r\n            if((i-3)>=1)  \r\n            {  \r\n                tmp=min(a[i-1]*up+a[i-2]*up*2,a[i-1]*2*down+a[i-2]*down);  \r\n                tmp=min(tmp,a[i-1]*up+a[i-2]*down);  \r\n                tmp=min(tmp,a[i-1]*2*down+up*2*a[i-2]);  \r\n                dp[i]=min(dp[i],dp[i-3]+tmp);  \r\n            }  \r\n        }  \r\n        printf(\"Case %d: %d\\n\",cas,dp[floor]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1071,
"code":"\n#include<cstdio>  \r\n#include<cstring>  \r\nint main(){  \r\n    int a,b;  \r\n    while(scanf(\"%d%d\",&a,&b)!=EOF){  \r\n        if(!(a*b)){  \r\n            puts(\"Signs can't be sure\");  \r\n            continue;  \r\n        }  \r\n        if((a>>31)^(b>>31))  \r\n        puts(\"Signs are opposite\");  \r\n        else  \r\n        puts(\"Signs are not opposot\");  \r\n    }  \r\n\treturn 0;  \r\n}"
},
{
"pid":1072,
"code":"\n#include <iostream>  \r\n#include<stdio.h>  \r\n#include<vector>  \r\n#include<queue>  \r\n#include<stack>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\n#include<math.h>  \r\nusing namespace std;  \r\n#define eps 1e-9  \r\n#define zero(x) (fabs(x)<eps?0:x)  \r\n#define maxn 110  \r\ndouble mp[maxn][maxn];  \r\ndouble divs[maxn];  \r\nint vis[maxn];  \r\nstruct node  \r\n{  \r\n    int x,y,r;  \r\n} p[maxn];  \r\n\r\ndouble con(node a,node b)  \r\n{  \r\n    double len;  \r\n    len=sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));  \r\n    return len;  \r\n}  \r\n\r\nint n;  \r\ndouble dij()  \r\n{  \r\n    for(int i=0; i<=n; i++)  \r\n        divs[i]=mp[0][i];  \r\n    divs[0]=0.0;  \r\n    vis[0]=1;  \r\n    for(int i=1; i<n; i++)  \r\n    {  \r\n        double min=100000000.0;  \r\n        int t=-1;  \r\n        for(int j=0; j<n; j++)  \r\n            if(!vis[j]&&divs[j]<min)  \r\n                min=divs[j],t=j;  \r\n        if(t==-1)  \r\n            return min;  \r\n        vis[t]=1;  \r\n        for(int j=0; j<n; j++)  \r\n            if(!vis[j]&&divs[j]>mp[t][j]+divs[t])  \r\n                divs[j]=mp[t][j]+divs[t];  \r\n    }  \r\n    return divs[n-1];  \r\n}  \r\nvoid  init()  \r\n{  \r\n    memset(vis,0,sizeof(vis));  \r\n    for(int i=0; i<n; i++)  \r\n    {  \r\n        for(int j=0; j<n; j++)  \r\n            mp[i][j]=100000000.0;  \r\n        mp[i][i]=0.0;  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        init();  \r\n        for(int i=0; i<n; i++)  \r\n            scanf(\"%d%d%d\",&p[i].x,&p[i].y,&p[i].r);  \r\n        int a,b;  \r\n        double l;  \r\n        scanf(\"%d%d%lf\",&a,&b,&l);  \r\n        for(int i=0; i<n; i++)  \r\n        {  \r\n            for(int j=0; j<n; j++)  \r\n            {  \r\n                double len=con(p[i],p[j]);  \r\n                if((double)l-len>=0&&(double)(p[i].r+p[j].r)-len>=0)  \r\n                {  \r\n                    mp[i][j]=mp[j][i]=len;  \r\n                }  \r\n            }  \r\n        }  \r\n        double res=dij();  \r\n        if(res>=100000000.0)  \r\n            printf(\"GAME OVER.\\n\");  \r\n        else  \r\n            printf(\"%.6lf\\n\",res);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1073,
"code":"\n#include<stdio.h>\r\n#include<stdlib.h>\r\n#define N 30000\r\nlong long s[N],a[N];\r\nint cmp(const void *a,const void *b)\r\n{return *(long long *)a-*(long long *)b;}\r\nint main()\r\n{\r\n\tint t;\r\n \tscanf(\"%d\",&t);\r\n \twhile(t--)\r\n \t{\r\n  \t\tint n,m;\r\n  \t\tscanf(\"%d %d\",&n,&m);\r\n  \t\tfor(int i=0;i<n;i++)\r\n    \t\tscanf(\"%lld\",&s[i]);\r\n  \t\tfor(int i=0;i<m;i++)\r\n    \t\tscanf(\"%lld\",&a[i]);\r\n  \t\tfor(int i=0;i<m;i++)\r\n  \t\t{\r\n   \t\t\tqsort(s,a[i],sizeof(s[0]),cmp);\r\n   \t\t\tprintf(\"%lld\\n\",s[i]);\r\n  \t\t}\r\n \t}\r\n \treturn 0;\r\n}"
},
{
"pid":1076,
"code":"\n#include <cstdio>  \r\n\r\nlong long get_ans(long long a, long long x) {  \r\n    long long ans = 1;  \r\n    for(long long i = 1; i <= a; i++)  \r\n        ans = ans * (x - i + 1) \/ i;  \r\n    return ans;  \r\n}  \r\n\r\nint main() {  \r\n    long long n, m;  \r\n    while(~scanf(\"%lld%lld\", &n, &m) && (n + m)) {  \r\n        printf(\"%lld\\n\", get_ans(n, n + m));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1077,
"code":"\n#include<iostream>\r\n#include<string>\r\n#include<cstring>\r\nusing namespace std;\r\n\r\nint MOD(string a,int mod)\r\n{\r\n int len=a.length(),i;\r\n int t=0;\r\n for(i=0;i<len;i++)\r\n {\r\n    t*=10;\r\n    t+=a[i]-'0';\r\n    if(t>=mod)\r\n        t=t%mod;\r\n }\r\n  return t;\r\n}\r\nint main()\r\n{\r\n    string n;\r\n    int mod,a,b;\r\n  while(cin>>n>>a>>b)\r\n  {\r\n      if(a<b)\r\n        swap(a,b);\r\n      mod=MOD(n,a+b);\r\n      if(mod<1||mod>b)\r\n        cout<<\"Yougth\"<<endl;\r\n      else\r\n        cout<<\"Hrdv\"<<endl;\r\n  }\r\n return 0;\r\n}"
},
{
"pid":1078,
"code":"\n#include <cstdio>  \r\nint ans[55];  \r\nvoid isit()  \r\n{  \r\n    ans[1]=1,ans[2]=3;  \r\n    for(int i=3;i<51;i++)  \r\n        ans[i]=ans[i-1]+(i+1)\/2 * 2;  \r\n}  \r\nint main()  \r\n{  \r\n    int T,n;isit();  \r\n    scanf(\"%d\",&T);  \r\n    for(;T--&&scanf(\"%d\",&n);\r\n\tprintf(\"%d\\n\",ans[n]));  \r\n}"
},
{
"pid":1079,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\n#define pi 3.14159265  \r\nint main()  \r\n{  \r\n    double x0,y0,x1,y1,t;  \r\n    double cosa,sina;  \r\n    while(scanf(\"%lf%lf%lf%lf%lf\",&x0,&y0,&x1,&y1,&t)!=EOF)  \r\n    {  \r\n        double x,y;  \r\n        cosa=cos(t\/180.0*pi);  \r\n        sina=sin(t\/180.0*pi);  \r\n        x=x1*cosa-y1*sina-x0*cosa+y0*sina+x0;\r\n        y=x1*sina+y1*cosa-x0*sina-y0*cosa+y0;  \r\n        printf(\"%.1lf %.1lf\\n\",x,y);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1080,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint a[150];  \r\nint main()  \r\n{  \r\n    memset(a,0,sizeof(a));  \r\n    int n;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        int i;  \r\n        scanf(\"%d\",&i);  \r\n        a[i]++;  \r\n    }  \r\n    for(int i=0;i<=150;i++)  \r\n    {  \r\n        for(int j=0;j<a[i];j++)  \r\n        printf(\"%d \",i);  \r\n    }  \r\n    printf(\"\\n\");  \r\n    return 0;  \r\n}"
},
{
"pid":1082,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int T,N,K;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        scanf(\"%d%d\",&N,&K);  \r\n        if(N%K==0)  \r\n            printf(\"%d\\n\",N\/K);  \r\n        else  \r\n            printf(\"%d\\n\",N\/K+1);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1085,
"code":"\n#include <cstring>  \r\n#include <cstdio>  \r\n#include <algorithm>  \r\n#include <map>  \r\n#include <string>  \r\n#include <queue>  \r\nusing namespace std;  \r\n\r\n#define SIGMA_SIZE 26 \r\n#define MAXNODE 20000 \r\n#define TEXT_SIZE 1000005 \r\n#define P_SIZE 100  \r\n#define P_NUM 200 \r\n\r\nmap <string, int> mp;  \r\n\r\nstruct AhoCorasickAutomata  \r\n{  \r\n    int cnt[P_NUM];  \r\n    int sz;  \r\n    int ch[MAXNODE][SIGMA_SIZE];  \r\n    int f[MAXNODE];  \r\n    int val[MAXNODE];  \r\n    int last[MAXNODE];  \r\n\r\n    void Init() {  \r\n        sz = 1;  \r\n        memset(ch[0],0,sizeof(ch[0]));  \r\n        memset(cnt,0,sizeof(cnt));  \r\n        mp.clear();  \r\n    }  \r\n\r\n    int idx(char c) {  \r\n        return c - 'a';  \r\n    }  \r\n\r\n    void Insert(char *s,int v) {  \r\n        int u = 0, n = strlen(s);  \r\n        for(int i = 0; i < n; i++) {  \r\n            int c = idx(s[i]);  \r\n            if(!ch[u][c]) {  \r\n                memset(ch[sz], 0, sizeof(ch[sz]));  \r\n                val[sz] = 0;  \r\n                ch[u][c] = sz++;  \r\n            }  \r\n            u = ch[u][c];  \r\n        }  \r\n        val[u] = v;  \r\n        mp[string(s)] = v;  \r\n    }  \r\n\r\n    void print(int j) {  \r\n        if(j) {  \r\n            cnt[val[j]]++;  \r\n            print(last[j]);  \r\n        }  \r\n    }  \r\n\r\n    void Find(char *T) {  \r\n        int n = strlen(T);  \r\n        int j = 0;  \r\n        for(int i = 0; i < n; i++) {  \r\n            int c = idx(T[i]);  \r\n            while(j && !ch[j][c]) j = f[j];  \r\n            j = ch[j][c];  \r\n            if(val[j]) print(j);  \r\n            else if(last[j]) print(last[j]);  \r\n        }  \r\n    }  \r\n\r\n    void Get_Fail() {  \r\n        queue<int> q;  \r\n        f[0] = 0;  \r\n        for(int c = 0; c<SIGMA_SIZE; c++) {  \r\n            int u = ch[0][c];  \r\n            if(u) {  \r\n                f[u] = 0;  \r\n                q.push(u);  \r\n                last[u] = 0;  \r\n            }  \r\n        }  \r\n        while(!q.empty()) {  \r\n            int r = q.front();  \r\n            q.pop();  \r\n            for(int c = 0; c<SIGMA_SIZE; c++) {  \r\n                int u = ch[r][c];  \r\n                if(!u) continue;  \r\n                q.push(u);  \r\n                int v = f[r];  \r\n                while(v && !ch[v][c]) v = f[v];  \r\n                f[u] = ch[v][c];  \r\n                last[u] = val[f[u]] ? f[u] : last[f[u]];  \r\n            }  \r\n        }  \r\n    }  \r\n};  \r\n\r\nchar text[TEXT_SIZE];  \r\nchar P[P_NUM][P_SIZE];  \r\nAhoCorasickAutomata ac;  \r\nint n, T;  \r\n\r\nint main() {  \r\n    scanf(\"%d\", &T);  \r\n    int cas = 0;  \r\n    while(T--) {  \r\n        scanf(\"%d\", &n);  \r\n        ac.Init();  \r\n        for(int i = 1; i <= n; i++) {  \r\n            scanf(\"%s\", P[i]);  \r\n            ac.Insert(P[i], i);  \r\n        }  \r\n        ac.Get_Fail();  \r\n        scanf(\"%s\", text);  \r\n        ac.Find(text);  \r\n        int Max_cnt = -1;  \r\n        for(int i = 1; i <= n; i++)  \r\n            if(ac.cnt[i] > Max_cnt)  \r\n                Max_cnt = ac.cnt[i];  \r\n        printf(\"%d\\n\", Max_cnt);  \r\n        for(int i = 1; i <= n; i++)  \r\n            if(ac.cnt[mp[string(P[i])]] == Max_cnt)  \r\n                printf(\"%s\\n\", P[i]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1087,
"code":"\n#include<iostream>  \r\nusing namespace std;  \r\n\r\nint main()  \r\n{  \r\n    long long n,m;  \r\n    while(cin>>n)  \r\n    {  \r\n        long long k=n-1,M=n*n;  \r\n        cout<<k*M-k*(k-1)+n*n\/2-n+2<<endl;  \r\n    }  \r\n}"
},
{
"pid":1088,
"code":"\n#include<iostream>  \r\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nstruct node  \r\n{  \r\n    int x,y;  \r\n}p[210];  \r\nint cmp(node a,node b)  \r\n{  \r\n    if(a.x==b.x)  \r\n    return a.y<b.y;  \r\n    return a.x<b.x;  \r\n}  \r\ndouble kk(node a,node b)  \r\n{  \r\n    return (a.y*1.0-b.y)\/(a.x*1.0-b.x);  \r\n}  \r\nint main()  \r\n{  \r\n    int t;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        int n;  \r\n       scanf(\"%d\",&n);  \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&p[i].x,&p[i].y);  \r\n        }  \r\n        sort(p,p+n,cmp);  \r\n        if(p[0].x==p[1].x)  \r\n        {  \r\n            if(p[0].y<p[1].y)  \r\n            printf(\"%d %d\\n%d %d\\n\",p[0].x,p[0].y,p[1].x,p[1].y);  \r\n            else  \r\n            printf(\"%d %d\\n%d %d\\n\",p[1].x,p[1].y,p[0].x,p[0].y);  \r\n            puts(\"\");  \r\n            continue;  \r\n        }  \r\n        double max=kk(p[0],p[1]);  \r\n        double max1;  \r\n        int flag =0,flag1=0;  \r\n\r\n        for(int i=1;i<n-1;i++)  \r\n        {  \r\n            if(p[i].x==p[i+1].x)  \r\n            {  \r\n                if(p[i].y<p[i+1].y)  \r\n                {  \r\n                    printf(\"%d %d\\n%d %d\\n\",p[i].x,p[i].y,p[i+1].x,p[i+1].y);  \r\n                }  \r\n                else  \r\n                {  \r\n                     printf(\"%d %d\\n%d %d\\n\",p[i+1].x,p[i+1].y,p[i].x,p[i].y);  \r\n                }  \r\n                puts(\"\");  \r\n                flag1=1;  \r\n                break;  \r\n            }  \r\n            max1=kk(p[i],p[i+1]);  \r\n            if(max1>max)  \r\n            {  \r\n                max=max1;  \r\n                flag=i;  \r\n            }  \r\n        }  \r\n        if(flag1==0)  \r\n        {  \r\n            printf(\"%d %d\\n%d %d\\n\",p[flag].x,p[flag].y,p[flag+1].x,p[flag+1].y);  \r\n            puts(\"\");  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":1089,
"code":"\n#include <stdio.h>\r\n#include <string.h>\r\n#define xlson kx<<1, xl, mid\r\n#define xrson kx<<1|1, mid+1, xr\r\n#define ylson ky<<1, yl, mid\r\n#define yrson ky<<1|1, mid+1, yr\r\n#define MAXN 1005\r\n#define mem(a) memset(a, 0, sizeof(a))\r\n\r\nbool tree[MAXN<<2][MAXN<<2];\r\nint  X, N, T;\r\nint num, X1, X2, Y1, Y2;\r\nchar ch;\r\n\r\nvoid editY(int kx,int ky,int yl,int yr)\r\n{\r\n    if(Y1<=yl && yr<=Y2)\r\n    {\r\n        tree[kx][ky] = !tree[kx][ky];\r\n        return ;\r\n    }\r\n    int mid = (yl+yr)>>1;\r\n    if(Y1 <= mid) editY(kx,ylson);\r\n    if(Y2 >  mid) editY(kx,yrson);\r\n}\r\n\r\nvoid editX(int kx,int xl,int xr)\r\n{\r\n    if(X1<=xl && xr<=X2)\r\n    {\r\n        editY(kx,1,1,N);\r\n        return ;\r\n    }\r\n    int mid = (xl+xr)>>1;\r\n    if(X1 <= mid) editX(xlson);\r\n    if(X2 >  mid) editX(xrson);\r\n}\r\n\r\nvoid queryY(int kx,int ky,int yl,int yr)\r\n{\r\n    if(tree[kx][ky]) num ++;\r\n    if(yl==yr) return ;\r\n    int mid = (yl+yr)>>1;\r\n    if(Y1 <= mid) queryY(kx,ylson);\r\n    else queryY(kx,yrson);\r\n}\r\n\r\nvoid queryX(int kx,int xl,int xr)\r\n{\r\n    queryY(kx,1,1,N);\r\n    if(xl==xr) return ;\r\n    int mid = (xl+xr)>>1;\r\n    if(X1 <= mid)queryX(xlson);\r\n    else  queryX(xrson);\r\n}\r\n\r\nint main()\r\n{\r\n    while(~scanf(\"%d\", &X))while(X--)\r\n    {\r\n        mem(tree);\r\n        scanf(\"%d %d%*c\", &N,&T);\r\n        for(int i=0;i<T;i++)\r\n        {\r\n            scanf(\"%c %d %d%*c\",&ch,&X1,&Y1);\r\n            if(ch == 'C')\r\n            {\r\n                scanf(\"%d %d%*c\", &X2, &Y2);\r\n                editX(1,1,N);\r\n            }\r\n            else\r\n            {\r\n                num = 0;\r\n                queryX(1,1,N);\r\n                if(num & 1)printf(\"1\\n\");\r\n                else printf(\"0\\n\");\r\n            }\r\n        }\r\n        if(X) printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1091,
"code":"\n#include <stdio.h>\r\n#include <string.h>\r\n#define Max(a, b) a > b ? a : b\r\nconst int MAX = 45;\r\nlong long weight[MAX], value[MAX], sw[MAX], sv[MAX];\r\nlong long W, n, ans;\r\nvoid dfs(int i, long long cnt, long long w)\r\n{\r\n    if (i == 0)\r\n    {\r\n        ans = Max(ans, cnt);\r\n        return;\r\n    }\r\n    if (w == 0 || cnt + sv[i] < ans)\r\n        return ;\r\n    if (w >= sw[i])\r\n    {\r\n        cnt += sv[i];\r\n        ans = Max(ans, cnt);\r\n        w = 0;\r\n        return ; \r\n    }\r\n    if (w > weight[i])\r\n        dfs(i - 1, cnt + value[i], w - weight[i]);\r\n    dfs(i - 1, cnt, w);\r\n} \r\nint main()\r\n{\r\n    while (~scanf(\"%d %lld\", &n, &W))\r\n    {\r\n        memset(sw, 0, sizeof(weight));\r\n        memset(sv, 0, sizeof(value));\r\n        ans = 0;\r\n        for (int i = 1; i <= n; i++)\r\n        {\r\n            scanf(\"%lld %lld\", &weight[i], &value[i]);\r\n            sw[i] = sw[i - 1] + weight[i];\r\n            sv[i] = sv[i - 1] + value[i];\r\n        }\r\n        dfs(n, 0, W);\r\n        printf(\"%lld\\n\", ans);\r\n    }\r\n\r\n    return 0;\r\n}"
},
{
"pid":1092,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n\r\n#define maxn 110  \r\n\r\nchar buf[maxn];  \r\n\r\nint main() {  \r\n    int sign, left, dot, i, len;  \r\n    char *ch;  \r\n    while(scanf(\"%s\", buf + 1) != EOF) {  \r\n        sign = 0;  \r\n        buf[0] = '0';  \r\n        if(buf[1] == '-') {  \r\n            sign = 1;  \r\n            buf[1] = '0';  \r\n        }  \r\n        len = strlen(buf);  \r\n        if(ch = strchr(buf, '.')) {  \r\n            dot = ch - buf;  \r\n        } else dot = len;  \r\n        if(len - dot > 3) {  \r\n            if(buf[dot+3] > '4') {  \r\n                if(++buf[dot+2] > '9') {  \r\n                    buf[dot+2] = '0';  \r\n                    if(++buf[dot+1] > '9') {  \r\n                        buf[dot+1] = '0';  \r\n                        ++buf[dot-1];  \r\n                    }  \r\n                }  \r\n                i = dot - 1;  \r\n                while(buf[i] > '9') {  \r\n                    buf[i--] = '0';  \r\n                    ++buf[i];  \r\n                }  \r\n            }  \r\n            buf[dot+3] = '\\0';  \r\n        } else if(len - dot == 2) {  \r\n            buf[len++] = '0';  \r\n            buf[len] = '\\0';  \r\n        } else if(len - dot == 1) {  \r\n            buf[len++] = '0';  \r\n            buf[len++] = '0';  \r\n            buf[len] = '\\0';  \r\n        } else if(len - dot == 0) {  \r\n            buf[len++] = '.';  \r\n            buf[len++] = '0';  \r\n            buf[len++] = '0';  \r\n            buf[len] = '\\0';  \r\n        }  \r\n        for(left = 0; buf[left] == '0'; ++left)  \r\n            ;  \r\n        if(buf[left] == '.') --left;  \r\n        if(sign) putchar('(');  \r\n        while(left < dot) {  \r\n            putchar(buf[left++]);  \r\n            if(left != dot && (dot - left) % 3 == 0)  \r\n                putchar(',');  \r\n        }  \r\n        printf(\"%s\", buf + dot);  \r\n        if(sign) putchar(')');  \r\n        putchar('\\n');  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1099,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\n#define inf 500000005  \r\nint main()  \r\n{  \r\n    double a[4],b[4],x1,x2,x3,x4,y1,y2,y3,y4;  \r\n    double sum1,sum2,l1,l2,l3,l4,l;  \r\n    int i,t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        sum1=sum2=0,x1=x2=x3=x4=y1=y2=y3=y4=inf;\r\n        for(i=0;i<4;i++)  \r\n            scanf(\"%lf %lf\",&a[i],&b[i]),sum1+=a[i],sum2+=b[i];  \r\n        sum1=sum1\/4,sum2=sum2\/4;  \r\n        for(i=0;i<4;i++)\r\n        {  \r\n            if(a[i]<sum1&&b[i]>=sum2)  \r\n                x1=a[i],y1=b[i];  \r\n            if(a[i]<=sum1&&b[i]<sum2)  \r\n                x2=a[i],y2=b[i];  \r\n            if(a[i]>=sum1&&b[i]>sum2)  \r\n                x3=a[i],y3=b[i];  \r\n            if(a[i]>sum1&&b[i]<=sum2)  \r\n                x4=a[i],y4=b[i];  \r\n        }  \r\n        if(x1==inf||x2==inf||x3==inf||x4==inf||y1==inf||y2==inf||y3==inf||y4==inf)\r\n        {  \r\n            printf(\"No\\n\");  \r\n            continue;  \r\n        }  \r\n        l1=pow(y1-y2,2)+pow(x1-x2,2);\r\n        l2=sqrt(pow(y2-y4,2)+pow(x2-x4,2));  \r\n        l3=sqrt(pow(y3-y4,2)+pow(x3-x4,2));  \r\n        l4=pow(y1-y3,2)+pow(x1-x3,2);\r\n        l=pow(y3-y2,2)+pow(x3-x2,2);\r\n        if(sqrt(l1)==l2&&sqrt(l1)==l3&&sqrt(l1)==sqrt(l4)&&l1+l4==l)  \r\n            printf(\"Yes\\n\");  \r\n        else   \r\n            printf(\"No\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1100,
"code":"\n#include<stdio.h>  \r\n#include<iostream>  \r\n#include<string.h>  \r\n#include<queue>  \r\nusing namespace std;  \r\nstruct Info  \r\n{  \r\n    char c;  \r\n    int x,x1,y1;  \r\n    bool operator<(const Info &a)const  \r\n    {  \r\n        return a.x<x;       \r\n    }  \r\n}s[105][105];  \r\nint vis[105][105],n,m;  \r\nint dir[4][2]={{0,-1},{-1,0},{0,1},{1,0}};  \r\npriority_queue<Info>  pq;  \r\nvoid bfs()  \r\n{  \r\n    int i,a,b,xx,yy;  \r\n    while(pq.empty()!=true)  \r\n    {  \r\n        Info tt;  \r\n        tt=pq.top();  \r\n        xx=tt.x1;  \r\n        yy=tt.y1;  \r\n        pq.pop();  \r\n        if(tt.c=='l')  \r\n        {  \r\n            printf(\"%d\\n\",tt.x);  \r\n            return;  \r\n        }  \r\n        for(i=0;i<4;i++)          \r\n        {  \r\n            a=xx+dir[i][0];  \r\n            b=yy+dir[i][1];  \r\n            if(a<n&&a>=0&&b>=0&&b<m&&s[a][b].c>='A'&&s[a][b].c<='z'&&!vis[a][b])  \r\n            {  \r\n                vis[a][b]=1;  \r\n                s[a][b].x=s[a][b].x+s[xx][yy].x;  \r\n                pq.push(s[a][b]);  \r\n            }  \r\n        }  \r\n    }  \r\n    if(pq.empty()==true)  \r\n    {  \r\n        printf(\"-1\\n\");  \r\n        return;  \r\n    }  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int T,i,j,i1,j1;  \r\n    scanf(\"%d\",&T);  \r\n    while(T--)  \r\n    {  \r\n        while(!pq.empty())    \r\n            pq.pop();  \r\n        memset(vis,0,sizeof(vis));      \r\n        scanf(\"%d%d\",&n,&m);  \r\n        for(i=0; i<n; i++)  \r\n        {  \r\n            getchar();  \r\n            for(j=0; j<m; j++)  \r\n            {  \r\n                scanf(\"%c\",&s[i][j].c);  \r\n                s[i][j].x=0;  \r\n                s[i][j].x1=i;  \r\n                s[i][j].y1=j;  \r\n                if(s[i][j].c>='A'&&s[i][j].c<='Z')  \r\n                    s[i][j].x=s[i][j].c-64;  \r\n                if(s[i][j].c=='s')  \r\n                {  \r\n                    i1=i;  \r\n                    j1=j;  \r\n                }  \r\n            }  \r\n        }  \r\n        pq.push(s[i1][j1]);  \r\n        vis[i1][j1]=1;  \r\n        bfs();  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1101,
"code":"\n#include<stdio.h>  \r\nlong long x[30],y[30];\r\nvoid db()  \r\n{  \r\n    x[0]=x[1]=y[2]=1;x[2]=2;y[1]=0;  \r\n    for(int i=3;i<20;++i)  \r\n    {  \r\n        x[i]=x[i-1]*i;  \r\n        y[i]=(i-1)*(y[i-1]+y[i-2]);  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    db();int n,t=0;  \r\n    while(scanf(\"%d\",&n),n)  \r\n    {  \r\n        double p=y[n]*1.0\/x[n]*100.0;  \r\n        if(n==1)\r\n        {  \r\n            p=100;  \r\n        }  \r\n        printf(\"Case [%d]: %.2lf%%.\\n\",++t,p);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1102,
"code":"\n#include<stdio.h>\r\nint main() {\r\n\tint n;\r\n\twhile(scanf(\"%d\", &n) != EOF) {\r\n\t\tif((n - 2) % 4 == 0)\r\n\t\t\tprintf(\"Yes\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"No\\n\");\r\n\t}\r\n}"
},
{
"pid":1103,
"code":"\n#include<stdio.h>\r\nint main()\r\n{\r\n    int n,i,j,m,h[20],b,t=1;\r\n    scanf(\"%d\",&n);\r\n    while(n--)\r\n    {\r\n        scanf(\"%d\",&m);\r\n        h[2]=1;h[3]=1;\r\n        for(i=3;i<=m;i++)\r\n        {\r\n            b=i-1;\r\n            h[i]=0;\r\n            for(j=2;j<i;j++)\r\n            {\r\n                h[i]+=h[j]*h[b];\r\n                b--;\r\n            }\r\n            if(i==m)\r\n            {\r\n                printf(\"Case #%d : %d\\n\",t++,h[i]);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1105,
"code":"\n#include<cstdio>  \r\n#include<cmath>  \r\n#include<ctime>  \r\n#include<queue>  \r\n#include<stack>  \r\n#include<cstring>  \r\n#include<cstdlib>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n#define Max(a,b) a>b?a:b  \r\n#define min(a,b) a>b?b:a  \r\n#define mem(a,b) memset(a,b,sizeof(a))  \r\nint divs[4][2]= {{1,0},{-1,0},{0,1},{0,-1}};  \r\nint main()  \r\n{  \r\n    int n,m,i,j,a[105];  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        int s=0,s1=0,ff=0;  \r\n        for(i=0; i<n; i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n            s+=a[i];  \r\n        }  \r\n        if(s%n)  \r\n        ff=-1;   \r\n        int ave=s\/n;  \r\n        for(i=0; i<n; i++)  \r\n        {  \r\n            if(a[i]>ave)  \r\n            {  \r\n                if((a[i]-ave)%2!=0)  \r\n                {  \r\n                    ff=-1;  \r\n                    break;  \r\n                }  \r\n                else s1+=(a[i]-ave)\/2;  \r\n            }  \r\n            else if(a[i]<ave)  \r\n            {  \r\n                if((ave-a[i])%2)  \r\n                {  \r\n                    ff=-1;  \r\n                    break;  \r\n                }  \r\n            }  \r\n\r\n        }  \r\n        if(ff)  \r\n            printf(\"-1\\n\");  \r\n        else  \r\n            printf(\"%d\\n\",s1);  \r\n    }  \r\n}"
},
{
"pid":1107,
"code":"\n#include <stdio.h>\r\n#include <string.h>\r\n#include <iostream>\r\n#include <queue>\r\n#include <algorithm>\r\n\r\nusing namespace std;\r\nconst int N = 50005;\r\nbool vis[N];\r\nstruct Node{\r\n    int day, value;\r\n    friend bool operator < (const Node a, const Node b)\r\n    {\r\n        return a.value > b.value;\r\n    }\r\n};\r\n\r\nbool cmp(const Node a, const Node b)\r\n{\r\n    if (a.day != b.day)\r\n        return a.day < b.day;\r\n    return a.value > b.value;\r\n}\r\nint n;\r\nNode node[N];\r\nint main()\r\n{\r\n    while (~scanf(\"%d\", &n) && n)\r\n    {\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            scanf(\"%d %d\", &node[i].day, &node[i].value);\r\n\r\n        }\r\n        sort(node, node + n, cmp);\r\n        priority_queue<Node> Q;\r\n        memset(vis, false, sizeof(vis));\r\n        for (int i = 0; i < n; i++)\r\n        {\r\n            if (!vis[node[i].day])\r\n            {\r\n                vis[node[i].day] = true;\r\n                Q.push(node[i]);\r\n            }\r\n            else\r\n            {\r\n                if (Q.size() < node[i].day)\r\n                    Q.push(node[i]);\r\n                else\r\n                {\r\n                    Node tmp = Q.top();\r\n                    if (tmp.value < node[i].value)\r\n                    {\r\n                        Q.push(node[i]);\r\n                        Q.pop();\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        long long ans = 0;\r\n        while (!Q.empty())\r\n        {\r\n            Node tmp = Q.top();\r\n            Q.pop();\r\n            ans += tmp.value;\r\n        }\r\n        cout << ans << endl;\r\n    }\r\n\r\n    return 0;\r\n}"
},
{
"pid":1108,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <cstring>\r\n#include <cmath>\r\n#include <algorithm>\r\n#include <climits>\r\n#include <vector>\r\n#include <queue>\r\n#include <cstdlib>\r\n#include <string>\r\n#include <set>\r\n#include <stack>\r\n#define LL long long\r\n#define pii pair<int,int>\r\n#define INF 0x3f3f3f3f\r\nusing namespace std;\r\nconst int maxn = 16;\r\nint n,dp[1<<maxn],cnt[1<<maxn],td[maxn],tm[maxn];\r\nint main() {\r\n    int T;\r\n    scanf(\"%d\",&T);\r\n    while(T--){\r\n        scanf(\"%d\",&n);\r\n        int u = 1<<n;\r\n        for(int i = 0; i < n; ++i)\r\n            scanf(\"%d %d\",td+i,tm+i);\r\n        memset(dp,0x3f,sizeof(dp));\r\n        for(int i = 0; i < n; ++i)\r\n            dp[1<<i] = tm[i] > td[i]?tm[i] - td[i]:0;\r\n        for(int i = 1; i < u; ++i){\r\n            cnt[i] = 0;\r\n            for(int k = 0; k < n; ++k)\r\n                if(i&(1<<k)) cnt[i] += tm[k];\r\n        }\r\n        for(int i = 1; i < u; ++i){\r\n            for(int k = 0; k < n; ++k){\r\n                if(i&(1<<k)) continue;\r\n                int tmp = cnt[i] + tm[k] - td[k];\r\n                if(tmp > 0) dp[i^(1<<k)] = min(dp[i^(1<<k)],dp[i] + tmp);\r\n                else dp[i^(1<<k)] = min(dp[i^(1<<k)],dp[i]);\r\n            }\r\n        }\r\n        printf(\"%d\\n\",dp[u-1]);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1109,
"code":"\n#include<iostream>\r\nusing namespace std;\r\nint main() {\r\n\tint n, m;\r\n\twhile (cin >> n >> m) {\r\n\t\tif (n == 1 && m == 1)\r\n\t\t\tcout << \"Give a wish to her\" << endl;\r\n\t\telse\r\n\t\t\tcout << \"I will get a wish\" << endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1110,
"code":"\n#include<iostream>  \r\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nlong long n,b,p;  \r\nlong long pow_mod(int num)  \r\n{  \r\n    long long res =1;  \r\n    while(num)  \r\n    {  \r\n        if(num&1) res=res*b%p;  \r\n        b=b*b%p;  \r\n        num>>=1;  \r\n    }  \r\n    return res;  \r\n}  \r\nint main()  \r\n{  \r\n    int t;  \r\n    cin>>t;  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%lld%lld%lld\",&n,&b,&p);  \r\n        long long res=pow_mod(p-2);  \r\n        printf(\"%lld\\n\",(res*n)%p);  \r\n    }  \r\n}"
},
{
"pid":1111,
"code":"\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <algorithm>  \r\nusing namespace std;  \r\n#define N 350  \r\nint dp[N][N];  \r\nint b[N],a[N];  \r\nint main()  \r\n{  \r\n    int n,T;  \r\n    scanf(\"%d\",&T);  \r\n    for(int cas = 1;cas<=T;cas++)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        for(int i=1;i<=n;i++){  \r\n            scanf(\"%d\",&a[i]);  \r\n        }  \r\n        for(int i=1; i<=n; i++)  \r\n            scanf(\"%d\",&b[i]);  \r\n        b[0]=b[n+1]=0;  \r\n        memset(dp,0,sizeof(dp));  \r\n        int i,j,l,k;  \r\n        for(l = 1; l <= n; ++l)  \r\n        {  \r\n            for(i = 1; i <= n - l + 1; ++i)  \r\n            {  \r\n                j = i + l - 1;  \r\n                dp[i][j] = 2100000000;  \r\n                for(int k=i; k<=j; k++)  \r\n                {  \r\n                    dp[i][j]=min(dp[i][j],dp[i][k-1]+a[k]+dp[k+1][j]);  \r\n                }  \r\n                dp[i][j]+=b[i-1]+b[j+1];  \r\n            }  \r\n        }  \r\n        printf(\"Case #%d: %d\\n\",cas, dp[1][n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1112,
"code":"\n#include <iostream>  \r\n#include<cstdio>  \r\n#include<cstring>  \r\n#include <set>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int T;  \r\n    scanf(\"%d\", &T);  \r\n    while(T--)  \r\n    {  \r\n        int n,i, ans = 0;  \r\n        scanf(\"%d\", &n);  \r\n        set<string> s;  \r\n        string s1, s2;  \r\n        cin >> s1;  \r\n        int len = s1.length();  \r\n        int lens=s.size();  \r\n        for(i=0; i<len-n+1; i++)  \r\n        {  \r\n            s2=s1.substr(i,n);  \r\n            s.insert(s2);  \r\n            if(s.size()==lens)  \r\n            {  \r\n                ans++;  \r\n\r\n            }  \r\n            else {lens=s.size();}  \r\n        }  \r\n\r\n        printf(\"%d\\n\", ans);  \r\n\r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1113,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\nint main()  \r\n{  \r\n    double h,m,sum;  \r\n    while(scanf(\"%lf:%lf\",&h,&m),h||m)  \r\n    {  \r\n         h=(h*30+m\/2.0);m=m*6.0;\r\n         sum=fabs(h-m);  \r\n         if(sum>180)  \r\n         {  \r\n            sum=360.0-sum;\r\n         }  \r\n         printf(\"%.3lf\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1115,
"code":"\n#include<iostream>  \r\n#include<cstring>  \r\n#include<cstdlib>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nstruct in  \r\n{  \r\n    int x;  \r\n    int y;  \r\n}a[1005];  \r\nint b[1005];  \r\nint cmp(const void*a,const void *b)  \r\n{  \r\n    struct in *c=(struct in *)a;  \r\n    struct in *d=(struct in *)b;  \r\n    if(c->x!=d->x) return c->x-d->x;  \r\n    else return c->y-d->y;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    while(cin>>n)  \r\n    {  \r\n        int maxy=0,miny=0,m=0;  \r\n        int d=1,t=0,k=0;  \r\n        for(i=0;i<n;i++)  \r\n            cin>>a[i].x>>a[i].y;  \r\n        qsort(a,n,sizeof(a[0]),cmp);  \r\n        for(i=0;i<n;)  \r\n        {  \r\n            if(d%2!=0)  \r\n            {  \r\n                maxy=a[i].y;  \r\n                for(t=1;t<3;t++)  \r\n                {  \r\n                    maxy=max(maxy,a[i+t].y);  \r\n                }  \r\n                i+=3;  \r\n                m=max(m,maxy);  \r\n            }  \r\n            else  \r\n            {   \r\n                miny=a[i].y;  \r\n                for(t=1;t<3;t++)  \r\n                {  \r\n                    miny=min(miny,a[i+t].y);  \r\n                }  \r\n                i+=3;  \r\n                m=max(m,miny);  \r\n            }  \r\n            d++;  \r\n        }  \r\n        cout<<m<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1117,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <queue>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    deque<int>s;  \r\n    char str[5];  \r\n    int t,n;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        for(int i=0;i<n;i++)  \r\n        {  \r\n            memset(str,0,sizeof(str));  \r\n            scanf(\"%s\",str);  \r\n            if(strcmp(str,\"push\")==0)  \r\n            {  \r\n                int x;  \r\n                scanf(\"%d\",&x);  \r\n                s.push_back(x);  \r\n            }  \r\n            else  \r\n            s.pop_front();  \r\n        }  \r\n        if(!s.empty())  \r\n        {  \r\n            printf(\"%d\",s.front());  \r\n            s.pop_front();  \r\n            while(!s.empty())  \r\n            printf(\" %d\",s.front()),s.pop_front();  \r\n            printf(\"\\n\");  \r\n        }  \r\n        else  \r\n        printf(\"no eggs!\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1118,
"code":"\n#include<cstdio>  \r\n#include<iostream>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nint num[1000005];  \r\nint vis[1000005];  \r\nint wa[1000005];  \r\nbool cmp(int a,int b)  \r\n{  \r\n    return a>b;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,m,i,j,sum;  \r\n    while(scanf(\"%d%d\",&n,&m)!=EOF)  \r\n    {  \r\n        sum=0;  \r\n        memset(vis,0,sizeof(vis));  \r\n        memset(wa,0,sizeof(wa));  \r\n        for(i=0; i<n; i++)  \r\n        {  \r\n            scanf(\"%d\",&num[i]);  \r\n            sum+=num[i];  \r\n        }  \r\n        sort(num,num+n,cmp); \r\n        if(sum%m!=0)       \r\n            sum=sum\/m+1;  \r\n        else sum=sum\/m;  \r\n\r\n        if(sum<num[0])   \r\n        {  \r\n            printf(\"%d\\n\",num[0]);  \r\n            continue;  \r\n        }  \r\n\r\n        for(j=0; j<m; j++)       \r\n        {  \r\n            for(i=0; i<n; i++)  \r\n            {  \r\n                if(num[i]<=sum-wa[j]&&vis[i]==0)  \r\n                {  \r\n                    vis[i]=1;  \r\n                    wa[j]+=num[i];  \r\n                }  \r\n            }  \r\n        }  \r\n\r\n        sort(wa,wa+m);    \r\n\r\n        for(i=0; i<n; i++)  \r\n        {  \r\n            if(vis[i]==0)\r\n            {  \r\n                wa[0]+=num[i];  \r\n                sort(wa,wa+m);  \r\n                vis[i]=1;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",wa[m-1]);\r\n\r\n    }  \r\n\r\n    return 0;  \r\n}"
},
{
"pid":1121,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar a[205],b[205];  \r\nint main()  \r\n{  \r\n    int i,j,k,lea,leb;  \r\n    while(scanf(\"%s\",a)!=EOF)  \r\n    {  \r\n        lea=strlen(a);  \r\n        leb=0;  \r\n        for(i=0;i<lea;i++)  \r\n        {  \r\n            b[leb++]=a[i];  \r\n            if(lea%leb==0)  \r\n            {  \r\n                for(j=leb,k=0;j<lea;j++,k++)  \r\n                {  \r\n                    if(k==leb) k=0;  \r\n                    if(a[j]!=b[k]) break;  \r\n                }  \r\n                if(j==lea)  \r\n                {  \r\n                    printf(\"%d\\n\",leb);  \r\n                    break;  \r\n                }  \r\n            }  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1124,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint a[1000005];  \r\nint b[1000005];  \r\nint main()  \r\n{  \r\n    int n,m,t,k,i;  \r\n    while(scanf(\"%d%d\",&n,&m)!=EOF)  \r\n    {  \r\n        memset(a,0,sizeof(a));  \r\n        memset(b,0,sizeof(b));  \r\n        for(i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%d\",&t);  \r\n            if(t>0)  \r\n            {  \r\n                a[i]=a[i-1]+1;  \r\n                b[i]=b[i-1];  \r\n            }  \r\n             else if(t==0)  \r\n             {  \r\n                b[i]=b[i-1];  \r\n                a[i]=a[i-1];  \r\n             }  \r\n             else if(t<0)  \r\n             {  \r\n                  b[i]=b[i-1]+1;  \r\n                 a[i]=a[i-1];  \r\n             }  \r\n\r\n        }  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n            scanf(\"%d%d\",&t,&k);  \r\n            printf(\"%d %d\\n\",a[k]-a[t-1],b[k]-b[t-1]);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1125,
"code":"\n#include <stdio.h>\r\nvoid toRoman(int num)\r\n{\r\n\tstatic char *roman[][10]={\"\",\"I\",\"II\",\"III\",\"IV\",\"V\",\"VI\",\"VII\",\"VIII\",\"IX\",\r\n\t\"\",\"X\",\"XX\",\"XXX\",\"XL\",\"L\",\"LX\",\"LXX\",\"LXXX\",\"XC\",\r\n\t\"\",\"C\",\"CC\",\"CCC\",\"CD\",\"D\",\"DC\",\"DCC\",\"DCCC\",\"CM\",\r\n\t\"\",\"M\",\"MM\",\"MMM\"};\r\n\tint i, j, n;\r\n\tfor(j = 0, i = 10000; j < 4; ++j, i\/=10)\r\n\t{\r\n\t\tn = (num%i) \/ (i\/10);\r\n\t\tprintf(\"%s\",roman[3-j][n]);\r\n\t}\r\n\tprintf(\"\\n\");\r\n}\r\n\r\nint main()\r\n{\r\n\tint n;\r\n\tchar* roman;\r\n\twhile(~scanf(\"%d\", &n))\r\n\t{\r\n\t\ttoRoman(n);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1128,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cmath>\r\n#include<cstdlib>\r\n#include<algorithm>\r\n#include<string>\r\n#include<cstring>\r\n#include<queue>\r\nusing namespace std;\r\nint main() {\r\n\tint t;\r\n\tcin >> t;\r\n\twhile (t--) {\r\n\t\tint n, m, x;\r\n\t\tbool flag = true; \r\n\t\tcin >> n;\r\n\t\tdeque<int> d;\r\n\t\twhile (n--) {\r\n\t\t\tcin >> m;\r\n\t\t\tif (m == 4)\r\n\t\t\t\tflag = !flag;\r\n\t\t\tif (d.empty() && (m == 2 || m == 3))\r\n\t\t\t\tcontinue;\r\n\t\t\tif (flag) { \r\n\t\t\t\tif (m == 0) {\r\n\t\t\t\t\tcin >> x;\r\n\t\t\t\t\td.push_front(x);\r\n\t\t\t\t}\r\n\t\t\t\tif (m == 1) {\r\n\t\t\t\t\tcin >> x;\r\n\t\t\t\t\td.push_back(x);\r\n\t\t\t\t}\r\n\t\t\t\tif (m == 2)\r\n\t\t\t\t\td.pop_front();\r\n\t\t\t\tif (m == 3)\r\n\t\t\t\t\td.pop_back();\r\n\t\t\t} else { \r\n\t\t\t\tif (m == 1) {\r\n\t\t\t\t\tcin >> x;\r\n\t\t\t\t\td.push_front(x);\r\n\t\t\t\t}\r\n\t\t\t\tif (m == 0) {\r\n\t\t\t\t\tcin >> x;\r\n\t\t\t\t\td.push_back(x);\t\r\n\t\t\t\t}\r\n\t\t\t\tif (m == 3)\r\n\t\t\t\t\td.pop_front();\r\n\t\t\t\tif (m == 2)\r\n\t\t\t\t\td.pop_back();\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (d.empty())\r\n\t\t\tcout << \"-1\" << endl;\r\n\t\telse {\r\n\t\t\twhile (!d.empty()) {\r\n\t\t\t\tcout << d.front() << \" \";\r\n\t\t\t\td.pop_front();\r\n\t\t\t}\r\n\t\t\tcout << endl;\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1129,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint Dx,Dy,m,n;  \r\nchar a[101][101];  \r\nint dx[]={-1,0,1,0};  \r\nint dy[]={0,-1,0,1};  \r\nint key;  \r\nint vis[101][101];  \r\n\r\nbool judge(int x,int y)  \r\n{  \r\n     if(x<0||x>=n||y<0||y>=m||a[x][y]=='#')  \r\n        return false;  \r\n     return true;  \r\n}  \r\nvoid dfs(int DS,int x,int y)  \r\n{  \r\n    if(key) return ;  \r\n    for(int i=1;i>-3;i--)  \r\n    {  \r\n        int ds=(DS+i+8)%4;  \r\n        int xx=x+dx[ds];  \r\n        int yy=y+dy[ds];  \r\n        if(judge(xx,yy))  \r\n        {  \r\n\r\n            if(xx==Dx&&yy==Dy)  \r\n            {  \r\n                key=1;  \r\n                return ;  \r\n            }  \r\n            if(vis[xx][yy]==4) return ;  \r\n            vis[xx][yy]++;  \r\n            dfs(ds,xx,yy);  \r\n            return ;  \r\n        }  \r\n    }  \r\n    return ;  \r\n}  \r\nint main()  \r\n{  \r\n    int sx,sy;  \r\n    while(scanf(\"%d %d\",&n,&m)!=EOF)  \r\n    {  \r\n        for(int i=0; i<n; i++)  \r\n        {  \r\n            scanf(\"%s\",a[i]);  \r\n            for(int j=0; j<m; j++)  \r\n            {  \r\n                if(a[i][j]=='T')  \r\n                    sx=i,sy=j;  \r\n                else if(a[i][j]=='X')  \r\n                    Dx=i,Dy=j;  \r\n            }  \r\n        }  \r\n        char sd[10];  \r\n        scanf(\"%s\",sd);int DS;  \r\n        if(sd[0]=='N') DS=0;  \r\n        else if(sd[0]=='W') DS=1;  \r\n        else if(sd[0]=='S') DS=2;  \r\n        else DS=3;key=0;  \r\n        memset(vis,0,sizeof(vis));  \r\n        vis[sx][sy]=1;  \r\n        dfs(DS,sx,sy);  \r\n        if(key) puts(\"YES\");  \r\n        else puts(\"NO\");  \r\n    }  \r\n}"
},
{
"pid":1131,
"code":"\n#include <iostream>  \r\nusing namespace std;  \r\nint main(){  \r\n    int t;  \r\n    long long re;  \r\n    int i,b,n,m;  \r\n    cin>>t;  \r\n    while(t--){  \r\n        cin>>n>>m;  \r\n        re=1;  \r\n        if(m>n-m)  \r\n        m=n-m;  \r\n        b=m;  \r\n        for(i=n;i>=n-m+1;i--){  \r\n            re*=i;  \r\n            while(re%b==0&&b>1){  \r\n                re\/=b;  \r\n                b--;  \r\n            }  \r\n        }  \r\n         cout<<re<<endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1132,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\n#define MAXN 201000  \r\n#define MAX(a,b) a>b?a:b  \r\n#define fab(a) ((a)>0?(a):-(a))  \r\nusing namespace std;  \r\nstruct s  \r\n{  \r\n    double x;  \r\n    double y;  \r\n}fb,fe,sb,se,r;  \r\ndouble a,b,c,a1,b1,c1,a2,b2,c2;  \r\nvoid fun(s p,s q)  \r\n{  \r\n    a=q.y-p.y;  \r\n    b=p.x-q.x;  \r\n    c=q.x*p.y-p.x*q.y;  \r\n}  \r\nint find(s p1,s p2,s q1,s q2)  \r\n{  \r\n    double m,n;  \r\n    fun(p2,q2);  \r\n    a2=a,b2=b,c2=-c;  \r\n    m=a*p1.x+b*p1.y+c;  \r\n    n=a*q1.x+b*q1.y+c;  \r\n    if(m*n>0)  \r\n    return 0;  \r\n    if(fab(m)<1e-8&&fab(n)<1e-8)  \r\n    {  \r\n        if(fab(b)<1e-8)  \r\n        {  \r\n            if(((p1.y<min(p2.y,q2.y)&&q1.y<min(p2.y,q2.y))||(p1.y>max(p2.y,q2.y)&&q1.y>max(p2.y,q2.y))))  \r\n            return 0;  \r\n            else  \r\n            {  \r\n                if(p1.y==p2.y||p1.y==q2.y)  \r\n                r.x=p1.x,r.y=p1.y;  \r\n                else  \r\n                r.x=q1.x,r.y=q1.y;  \r\n                return 1;  \r\n            }  \r\n        }  \r\n        if(((p1.x<min(p2.x,q2.x)&&q1.x<min(p2.x,q2.x))||(p1.x>max(p2.x,q2.x)&&q1.x>max(p2.x,q2.x))))  \r\n        return 0;  \r\n        else  \r\n        {  \r\n            if(p1.x==p2.x||p1.x==q2.x)  \r\n            r.x=p1.x,r.y=p1.y;  \r\n            else  \r\n            r.x=q1.x,r.y=q1.y;  \r\n            return 1;  \r\n        }  \r\n    }  \r\n    fun(p1,q1);  \r\n    a1=a,b1=b,c1=-c;  \r\n    m=a*p2.x+b*p2.y+c;  \r\n    n=a*q2.x+b*q2.y+c;  \r\n    if(m*n>0)  \r\n    return 0;  \r\n    r.x=(c1*b2-c2*b1)\/(a1*b2-a2*b1);  \r\n    r.y=(a1*c2-a2*c1)\/(a1*b2-a2*b1);  \r\n    return 1;  \r\n}  \r\nint main()  \r\n{  \r\n    int t;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%lf%lf%lf%lf%lf%lf%lf%lf\",&fb.x,&fb.y,&fe.x,&fe.y,&sb.x,&sb.y,&se.x,&se.y);  \r\n        if(find(fb,sb,fe,se))  \r\n        printf(\"yes %.1lf %.1lf\\n\",r.x,r.y);  \r\n        else  \r\n        printf(\"no\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1135,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cmath>\r\n#include<algorithm>\r\n#include<string>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\nint change(int n,int b)\r\n{\r\n\tint ans=0,temp=n,a[10]={0},i=0,bb=1;\r\n\twhile(temp){\r\n\t\ta[i++]=temp%10;\r\n\t\ttemp\/=10;\r\n\t}\r\n\tfor(int j=0;j<i;j++){\r\n\t\tans+=a[j]*bb;\r\n\t\tbb*=b;\r\n\t}\r\n\treturn ans;\r\n}\r\nint maxn(int n)\r\n{\r\n\tint max=0;\r\n\twhile(n){\r\n\t\tif(n%10>max)\r\n\t\t\tmax=n%10;\r\n\t\tn\/=10;\r\n\t}\r\n\treturn max+1; \r\n}\r\nint main()\r\n{\r\n\tint p,q,r;\r\n\twhile(cin>>p>>q>>r){\r\n\t\tint start=max(max(maxn(p),maxn(q)),maxn(r));\r\n\t\tbool flag=false;\r\n\t\tfor(int i=start;i<=16;i++){\r\n\t\t\tif(change(p,i)*change(q,i)==change(r,i)){\r\n\t\t\t\tflag=true;\r\n\t\t\t\tcout<<i<<endl;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(!flag)cout<<\"0\"<<endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1138,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n;  \r\n    int a[100];  \r\n    a[1]=1;a[2]=2;a[3]=2;  \r\n    for(int i=4;i<77;i++)  \r\n        a[i]=a[i-3]+a[i-2];  \r\n    while(scanf(\"%d\",&n)!=EOF) \r\n\t\tprintf(\"%d\\n\",a[n]);  \r\n}"
},
{
"pid":1140,
"code":"\n#include<iostream>  \r\n#include<stdio.h>  \r\n#include<algorithm>  \r\n#include<string.h>  \r\n#include<cmath>  \r\nusing namespace std;  \r\n\r\nchar s[20001][50];  \r\nchar bb[50],cc[20001];  \r\nint k,t,n;  \r\nint main()  \r\n{  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        int k=0;  \r\n        while(n--)  \r\n        {  \r\n            scanf(\"%s\",bb);  \r\n            if(strcmp(bb,\"push\")==0)  \r\n            {  \r\n                scanf(\"%s\",cc);  \r\n                 strcpy(s[k++],cc);  \r\n            }  \r\n\r\n            else if(strcmp(bb,\"pop\")==0&&k!=0)  \r\n                k--;  \r\n        }  \r\n        if(k==0)  \r\n            printf(\"no eggs!\\n\");  \r\n        else  \r\n        {  \r\n            for(int i=k-1; i>=0; i--)  \r\n                printf(\"%s \",s[i]);  \r\n            printf(\"\\n\");  \r\n        }  \r\n    }  \r\n}"
},
{
"pid":1143,
"code":"\n#include<stdio.h>\r\nint r[31][31],N,num=1;\r\nint insertCol(int row,int col)\r\n{\r\n\tint i;\r\n\tfor(i=col-1;i<N;i++)\r\n\t{\r\n\t\tr[row-1][i]=num++;\r\n\t}\r\n}\r\nint insertRow(int row,int col)\r\n{\r\n\tint i;\r\n\tfor(i=row-1;i<N;i++)\r\n\t{\r\n\t\tr[i][col-1]=num++;\r\n\t}\r\n}\r\nint main()\r\n{\r\n\tint Max,row,col,i,j,b=1;\r\n\twhile(scanf(\"%d\",&N)==1)\r\n\t{\r\n\t\tb=1;\r\n\t\trow=1;\r\n\t\tcol=1;\r\n\t\tnum=1;\r\n\t\tMax=N*N;\r\n\t\twhile(Max>=num)\r\n\t\t{\r\n\t\t\tif(b==1)\r\n\t\t\t{\r\n\t\t\t\tinsertCol(row,col);\r\n\t\t\t\trow++;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tinsertRow(row,col);\r\n\t\t\t\tcol++;\r\n\t\t\t}\r\n\t\t\tb=1-b;\r\n\t\t}\r\n\t\tfor(i=0;i<N;i++)\r\n\t\t{\r\n\t\t\tfor(j=0;j<N;j++)\r\n\t\t\t{\r\n\t\t\t\tprintf(\"%d\",r[i][j]);\r\n\t\t\t\tif(j<N-1)\r\n\t\t\t\t{\r\n\t\t\t\t\tprintf(\" \");\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprintf(\"\\n\");\r\n\t\t}\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1145,
"code":"\n#include<stdio.h>\r\n#include<string.h>\r\nint main()\r\n{\r\n\tint n,m;\r\n\twhile(scanf(\"%d%d\",&n,&m)!=EOF)\r\n\t{\r\n\t\tif(n%2==1&&m%2==1)\r\n\t\t\tprintf(\"girl will treasure these gifts\\n\");\r\n\t\telse\r\n\t\t\tprintf(\"goshawk will treasure these gifts\\n\");\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1146,
"code":"\n#include<iostream>\r\n#include<cstdio>\r\n#include<cmath>\r\n#include<cstdlib>\r\n#include<algorithm>\r\n#include<string>\r\n#include<cstring>\r\nusing namespace std;\r\n\tstring jt[] = { \"._\", \"_...\", \"_._.\", \"_..\", \".\", \".._.\", \"__.\", \"....\", \"..\",\r\n\t\".___\", \"_._\", \"._..\", \"__\", \"_.\", \"___\", \".__.\", \"__._\", \"._.\", \"...\",\r\n\t\"_\", \".._\", \"..._\", \".__\", \"_.._\", \"_.__\", \"__..\" };\r\n\tstring tt = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\r\nint main() {\r\n\tstring s;\r\n\twhile (cin >> s) {\r\n\t\tfor (unsigned int i = 0; i < s.length();) {\r\n\t\t\tint k = 0; \r\n\t\t\tstring b;\r\n\t\t\tfor (unsigned int j = i; j < s.length(); j++) {\r\n\t\t\t\tif (s[j] == '\/') {\r\n\t\t\t\t\tk = j - i;\r\n\t\t\t\t\tb = s.substr(i, k);\r\n\t\t\t\t\ti = j + 1;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (unsigned int l = 0; l < 26; l++) {\r\n\t\t\t\tif (b == jt[l])\r\n\t\t\t\t\tcout << tt[l];\r\n\t\t\t}\r\n\t\t}\r\n\t\tcout << endl;\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1148,
"code":"\n#include <cstdio>  \r\n#include <cmath>  \r\nint n,i,a[4][2],b[2],c[2],d[2],e,f,g;  \r\ndouble h1,h2,xe,ye;  \r\nint main(){  \r\n    scanf(\"%d\",&n);  \r\n    while(n--){  \r\n        for(i=0;i<4;i++)    scanf(\"%d%d\",a[i],a[i]+1);  \r\n        b[0]=a[1][0]-a[0][0];b[1]=a[1][1]-a[0][1];  \r\n        c[0]=a[2][0]-a[0][0];c[1]=a[2][1]-a[0][1];  \r\n        d[0]=a[3][0]-a[0][0];d[1]=a[3][1]-a[0][1];  \r\n        e=b[0]*c[1]-b[1]*c[0];f=c[0]*d[1]-c[1]*d[0];  \r\n        if(e<0) e=-e;if(f<0)    f=-f;  \r\n        g=e+f;h1=double(e)\/g;h2=1-h1;  \r\n        xe=b[0]*h2+d[0]*h1;ye=b[1]*h2+d[1]*h1;  \r\n        xe+=a[0][0];ye+=a[0][1];  \r\n        printf(\"%.2f %.2f\\n\",xe,ye);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1151,
"code":"\n#include<cstdio>  \r\n#include<cmath>  \r\n#include<iostream>  \r\nusing namespace std;  \r\nint main()  \r\n{  \r\n    int T,d,t,a,b;  \r\n    double sum1,sum2;  \r\n    while(cin >> T)  \r\n    {  \r\n        while(T--)  \r\n        {  \r\n            cin >> d >> t;  \r\n            sum1=11;  \r\n            sum2=11;  \r\n            if(d>3&&d<=10)  \r\n            {  \r\n                sum1+=(d-3)*2;  \r\n                sum2+=(d-3)*2.5;  \r\n            }  \r\n            else if(d>10)  \r\n            {  \r\n                sum1+=7*2+(d-10)*3;  \r\n                sum2+=7*2.5+(d-10)*3.75;  \r\n            }  \r\n            sum1+=(t\/5.0)*2;  \r\n            sum2+=(t\/4.0)*2.5;  \r\n            a=(int)(sum1+0.5);  \r\n            b=(int)(sum2+0.5);  \r\n            if(a>b)  \r\n                cout << a - b << endl;  \r\n            else  \r\n                cout << b - a << endl;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1153,
"code":"\n#include<iostream>\r\n#include<cstdio>  \r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nint cmp(const void* a,const void* b)\r\n{\r\n\treturn *(int*)a-*(int*)b;\r\n}\r\n\r\nint main(void)\r\n{\r\n\tint n;\r\n\twhile(cin>>n)\r\n\t{\r\n\t\tlong long * w=new long long[n+1];  \r\n\r\n\t\tfor(int p=1;p<=n;p++)\r\n\t\t\tscanf(\"%lld\",&w[p]);\r\n\r\n\t\tqsort(w,n+1,sizeof(long long),cmp);\r\n\r\n\t\tlong long mincost=0;\r\n\t\tfor(int i=1;i<=n-1;i++) \r\n\t\t{\r\n\t\t\tlong long sum=w[i]+w[i+1];   \r\n\t\t\tmincost+=sum;\r\n\r\n\t\t\tfor(int j=i+2;j<=n;j++)  \r\n\t\t\t{\r\n\t\t\t\tif(sum>w[j])   \r\n\t\t\t\t{\r\n\t\t\t\t\tw[j-1]=w[j];  \r\n\t\t\t\t\tif(j==n)  \r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tw[j]=sum;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tw[j-1]=sum;  \r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tprintf(\"%lld\\n\",mincost);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1155,
"code":"\n#include <iostream>\r\n#include <cstdio>\r\n#include <algorithm>\r\nusing namespace std;\r\nint a[1000010];\r\nint main()\r\n{\r\n    int t,ii,n,i,Min,ans;\r\n    scanf(\"%d\",&t);\r\n    for (ii=1;ii<=t;ii++)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for (i=1;i<=n;i++)\r\n            scanf(\"%d\",&a[i]);\r\n        Min=a[n];\r\n        ans=0;\r\n        for (i=n-1;i>=1;i--)\r\n        {\r\n            if (a[i]>Min) ans++;\r\n                else Min=a[i];\r\n        }\r\n        printf(\"Case #%d: %d\\n\",ii,ans);\r\n    }\r\n}"
},
{
"pid":1156,
"code":"\n#include<stdio.h>   \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(~scanf(\"%d\",&n))  \r\n    {  \r\n        if(n>=7)  \r\n            printf(\"3 5 7\\n\");  \r\n        else  \r\n            printf(\"No triple\\n\");  \r\n    }   \r\n    return 0;  \r\n}"
},
{
"pid":1159,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nchar a[85];  \r\nint main()  \r\n{  \r\n    int s,i,t,sum;  \r\n    scanf(\"%d\",&s);  \r\n    while(s--)  \r\n    {  \r\n        memset(a,0,sizeof(a));  \r\n        scanf(\"%s\",a);  \r\n        sum=t=0;  \r\n        if(a[0]=='O') t++;  \r\n        printf(\"%d\",t);  \r\n        sum+=t;  \r\n        for(i=1;a[i]!='\\0';i++)  \r\n        {  \r\n            if(a[i]=='O')  \r\n            {  \r\n                t++;  \r\n                sum+=t;  \r\n            }  \r\n            else if(a[i]=='X')  \r\n                t=0;  \r\n            printf(\"+%d\",t);  \r\n        }  \r\n        printf(\"=%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1160,
"code":"\n#include <iostream>  \r\nusing namespace std;  \r\nint main(){  \r\n    int gcd(int a,int b);  \r\n    int n,a,c,b;  \r\n    int gab,gac,gbc,sum,tmp;  \r\n    while(cin>>n){  \r\n        if(n==0)  \r\n        break;  \r\n        cin>>a>>b>>c;  \r\n        gab=a*b\/gcd(a,b);gac=a*c\/gcd(a,c);gbc=b*c\/gcd(b,c);  \r\n        int fuck=a*b\/gcd(a,b);  \r\n        tmp=gcd(fuck,c);  \r\n            sum=fuck*c\/tmp;  \r\n        cout<<n-n\/sum-(n\/a+n\/b+n\/c-n\/gab-n\/gac-n\/gbc)<<endl;  \r\n    }  \r\n    return 0;  \r\n}  \r\nint gcd(int a,int b){  \r\n    int r;  \r\n    if(a<b)  \r\n     {  \r\n        r=a;  \r\n        a=b;  \r\n        b=r;  \r\n     }  \r\n     while(b!=0){  \r\n        r=a%b;  \r\n        a=b;  \r\n        b=r;  \r\n     }  \r\n     return a;  \r\n}"
},
{
"pid":1161,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,t;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        t=0;  \r\n        while(n!=1)  \r\n        {  \r\n            if(t>=3) t%=3;  \r\n            if(n&1)  \r\n            {  \r\n                n=3*n+1;  \r\n                n>>=1;  \r\n                t+=2;  \r\n            }  \r\n            else  \r\n            {  \r\n                n>>=1;  \r\n                t++;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",t%3);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1162,
"code":"\n#include<stdio.h>  \r\n#include<stdlib.h>  \r\n#include<string.h>  \r\nchar a[11000];  \r\nint b[110];  \r\nint cmp(const void *a,const void *b)  \r\n{  \r\n    return *(int *)a-*(int *)b;  \r\n}  \r\nint main()  \r\n{  \r\n    int i,k,s;  \r\n    scanf(\"%d\",&s);  \r\n    while(s--)  \r\n    {  \r\n        bool flag=false;  \r\n        scanf(\"%s\",a);  \r\n        k=0;  \r\n        memset(b,0,sizeof(b));  \r\n        for(i=0;a[i]!='\\0';)  \r\n        {  \r\n            if(a[i]=='0')  \r\n                i++;  \r\n            else  \r\n            {  \r\n                while(a[i]!='0'&&a[i]!='\\0')  \r\n                {  \r\n                    b[k]=b[k]*10+a[i]-'0';  \r\n                    i++;  \r\n                    flag=true;  \r\n                }  \r\n                k++;  \r\n            }  \r\n        }  \r\n        if(!flag) printf(\"0\\n\");  \r\n        else  \r\n        {  \r\n            qsort(b,k,sizeof(b[0]),cmp);  \r\n            for(i=0;i<k;i++)  \r\n                printf(\"%d \",b[i]);  \r\n            printf(\"\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1163,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nstruct zz  \r\n{  \r\n    int x;  \r\n    int y;  \r\n}q[1010];  \r\nint cmp(zz a,zz b)  \r\n{  \r\n    if(a.x==b.x)  \r\n        return a.y<b.y;  \r\n    return a.x<b.x;  \r\n}  \r\nint main()  \r\n{  \r\n    int n,i;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        for(i=0;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&q[i].x);  \r\n            q[i].y=i;  \r\n        }  \r\n        sort(q,q+n,cmp);  \r\n        for(i=0;i<n-1;i++)  \r\n            printf(\"%d \",q[i].y);  \r\n            printf(\"%d\\n\",q[n-1].y);   \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1164,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int s,n,t,k,d,sum,i;  \r\n    scanf(\"%d\",&s);  \r\n    while(s--)  \r\n    {  \r\n        scanf(\"%d%d\",&n,&d);  \r\n        sum=1;  \r\n        scanf(\"%d\",&t);  \r\n        k=t;  \r\n        for(i=1;i<n;i++)  \r\n        {  \r\n            scanf(\"%d\",&t);  \r\n            if(t-k>=d)  \r\n            {  \r\n                sum++;  \r\n                k=t;  \r\n            }  \r\n        }  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1165,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\n\r\nstruct point  \r\n{  \r\n    double x;  \r\n    double y;  \r\n}circle,a,b,c,d,temp;  \r\n\r\ndouble r;  \r\n\r\ndouble dis(point &a,point &b)  \r\n{  \r\n    return sqrt((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y));  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    int s,t;  \r\n    scanf(\"%d\",&s);  \r\n    while(s--)  \r\n    {  \r\n        scanf(\"%lf%lf%lf\",&circle.x,&circle.y,&r);  \r\n        scanf(\"%lf%lf%lf%lf%lf%lf%lf%lf\",&a.x,&a.y,&b.x,&b.y,&c.x,&c.y,&d.x,&d.y);  \r\n        if(a.x > c.x)  \r\n        {  \r\n            temp=a;  \r\n            a=c;  \r\n            c=temp;  \r\n        }  \r\n        if(dis(a,circle)<r && dis(b,circle)<r && dis(c,circle)<r && dis(d,circle)<r)  \r\n        {  \r\n            printf(\"No!\\n\");  \r\n            continue;  \r\n        }  \r\n        if(circle.x >= a.x && circle.x <= c.x)  \r\n        {  \r\n            if(fabs(circle.y - a.y) <= r || fabs(circle.y - c.y) <= r)  \r\n            {  \r\n                printf(\"Yes!\\n\");  \r\n                continue;  \r\n            }  \r\n        }  \r\n        if((circle.y >= a.y && circle.y <= b.y) || (circle.y >= b.y && circle.y <= a.y))  \r\n        {  \r\n            if(fabs(circle.x - a.x) <= r || fabs(circle.x - c.x) <= r)  \r\n            {  \r\n                printf(\"Yes!\\n\");  \r\n                continue;  \r\n            }  \r\n        }  \r\n        if(dis(a,circle)<=r || dis(b,circle)<=r || dis(c,circle)<=r || dis(d,circle)<=r)  \r\n        {  \r\n            printf(\"Yes!\\n\");  \r\n            continue;  \r\n        }  \r\n        printf(\"No!\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1167,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\n#define num 100005  \r\nint main()  \r\n{  \r\n    int flag[num],rec[num],sum=0,cnt=0,m,n;  \r\n    flag[0]=1;  \r\n    for(int i=2;i<=num\/2;i++)  \r\n    if(!flag[i]&&i<=sqrt(num))  \r\n    for(int j=i*i;j<=num;j+=i)  \r\n    flag[j]=1;  \r\n    for(int i=0;i<=num-5;i++){  \r\n        if(!flag[i])  \r\n        sum++;  \r\n        rec[i]=sum;  \r\n    }  \r\n    while(scanf(\"%d %d\",&m,&n)!=EOF)  \r\n    printf(\"Case %%%d:%d\\n\", ++cnt,rec[n]-rec[m-1]);  \r\n}"
},
{
"pid":1168,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int test;  \r\n    scanf(\"%d\",&test);  \r\n    while(test--)  \r\n    {  \r\n        long long a,b,sum;  \r\n        scanf(\"%lld%lld\",&a,&b);  \r\n        if(a>b)  \r\n        {  \r\n            int temp= a;  \r\n            a=b;  \r\n            b=temp;  \r\n        }  \r\n        printf(\"%lld\\n\",b*(b+1)*(2*b+1)\/6-a*(a+1)*(2*a+1)\/6+a*a);  \r\n    }  \r\n}"
},
{
"pid":1169,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\nint main()  \r\n{  \r\n    int n,sum=0;  \r\n    char a;  \r\n    while(scanf(\"%d%c\",&n,&a)!=EOF)  \r\n    {  \r\n        if(a!='\\n')  \r\n            sum+=n;  \r\n        else  \r\n        {  \r\n            sum+=n;  \r\n            printf(\"%d\\n\",sum);  \r\n            sum=0;  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1170,
"code":"\n#include<iostream>  \r\n#include<algorithm>  \r\n#include<string.h>  \r\n#include<stdio.h>  \r\nusing namespace std;  \r\nint a[10005];  \r\nvoid add(int l,int r)  \r\n{  \r\n    if(a[l]==2)  \r\n    {  \r\n        a[l]++;  \r\n        return ;  \r\n    }  \r\n    if(a[l]==0)  \r\n        l--;  \r\n    a[l]<=a[r]?a[l]++:a[r]++;  \r\n}  \r\nint main()  \r\n{  \r\n    int n;  \r\n    while(cin>>n)  \r\n    {  \r\n        int i,j;  \r\n        for(i=0; i<n; i++)  \r\n            cin>>a[i];  \r\n        if(a[0]==1)  \r\n        {  \r\n            a[1]++;  \r\n            a[0]=0;  \r\n        }  \r\n        for(i=1; i<n-1; i++)  \r\n            if(a[i]==1)  \r\n            {  \r\n                a[i]=0;  \r\n                add(i-1,i+1);\r\n            }  \r\n        if(a[n-1]==1&&n>1)  \r\n        {  \r\n            for(i=n-2; !a[i]; i--);\r\n            a[i]++;  \r\n            a[n-1]=0;  \r\n        }  \r\n        int sum;  \r\n        for(i=0,sum=1; i<n; i++)  \r\n            if(a[i])  \r\n                sum=(sum*a[i])%10086;  \r\n        cout<<sum<<endl;  \r\n    }  \r\n}"
},
{
"pid":1172,
"code":"\n#include<iostream>  \r\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nlong long a[1000000];  \r\nint c;  \r\nvoid init()  \r\n{  \r\n    c=0;  \r\n    a[c++]=1;  \r\n    a[c++]=7;  \r\n    int k=0;  \r\n    while(a[c-1]<1e18)  \r\n    {  \r\n        a[c++]=a[k]*10+1;  \r\n        a[c++]=a[k]*10+7;  \r\n        k++;  \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    init();  \r\n    long long l,r;  \r\n    while(cin>>l>>r)  \r\n    {  \r\n        int L=0,R=0;  \r\n        for(int i=0; i<c; i++)  \r\n        {  \r\n            if(a[i]<=l) L=i;  \r\n            if(a[i]>r)  \r\n            {  \r\n                R=i;  \r\n                break;  \r\n            }  \r\n        }  \r\n        if(a[L]==l||l==0) L--;  \r\n        printf(\"%d\\n\",R-L-1);  \r\n    }  \r\n}"
},
{
"pid":1173,
"code":"\n#include <iostream>  \r\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <string>  \r\n#include <algorithm>  \r\ntypedef long long ll;  \r\nconst int N=25;  \r\nusing namespace std;  \r\n\r\nstruct node  \r\n{  \r\n char s[N];  \r\n}str[30];  \r\n\r\nbool cmp(node a,node b)  \r\n{  \r\n return strcmp(a.s,b.s)<0;  \r\n}  \r\n\r\nll pow(int a,int b)  \r\n{  \r\n ll ans=1;  \r\n for(int i=1;i<=b;i++)  \r\n    ans=ans*a;  \r\n return ans;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    ll n,k,a[30],cnt;  \r\n    while(scanf(\"%lld%lld\",&n,&k)!=EOF)  \r\n    {  \r\n      if(n==0&&k==0)break;  \r\n        cnt = 0 ;  \r\n       a[cnt ++] = k ;  \r\n\r\n       ll kk=k,numberk=0;  \r\n       while(kk)  \r\n       {  \r\n         kk=kk\/10;  \r\n         numberk++;  \r\n       }  \r\n       for(int i=numberk;i<=18;i++)  \r\n       {  \r\n         ll temp=pow(10,i);  \r\n         if(temp>n)break;  \r\n         if(temp%k==0)  \r\n         {  \r\n           a[cnt++]=temp;  \r\n           continue;    \r\n         }  \r\n         ll tmp=(temp\/k+1)*k;  \r\n         if(tmp>n)break;   \r\n         a[cnt++]=tmp;  \r\n       }  \r\n     for(int i=0;i<cnt;i++)  \r\n     {  \r\n      sprintf(str[i].s,\"%lld\",a[i]);  \r\n     }  \r\n     sort(str,str+cnt,cmp);  \r\n     printf(\"%s\\n\",str[0].s);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1174,
"code":"\n#include<stdio.h>  \r\nint main()  \r\n{  \r\n    int n,k,ans,m;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        ans=1;  \r\n        k=1;  \r\n        while(k)  \r\n        {  \r\n            k=10*k+1;  \r\n            k=k%n;  \r\n            ans++;  \r\n        }  \r\n        printf(\"%d\\n\",ans);  \r\n    }  \r\n }"
},
{
"pid":1178,
"code":"\n#include <stdio.h>  \r\n#include <math.h>  \r\nint main()  \r\n{  \r\n    int n;  \r\n    float v0,v1,a0,a1,x,t,a,b,dert,x1,x0;  \r\n    scanf(\"%d\",&n);  \r\n    while(n--)  \r\n    {  \r\n        scanf(\"%f %f %f %f %f\",&v0,&a0,&v1,&a1,&x);  \r\n        if(x==0)  \r\n        {  \r\n            printf(\"0.00\\n\");  \r\n            continue;  \r\n        }  \r\n        if(v0<=v1&&a0<=a1)  \r\n        {  \r\n            printf(\"Drong is strong.\\n\");  \r\n            continue;  \r\n        }  \r\n        if(v0<v1&&a0>a1||v0>v1&&a0>=a1||v0==v1&&a0>a1)  \r\n        {  \r\n            a=0.5*a0-0.5*a1,b=v0-v1;  \r\n            dert=sqrt(b*b+4*a*x);  \r\n            t=(-b+dert)\/(2*a);  \r\n            printf(\"%.2f\\n\",t);  \r\n            continue;  \r\n        }  \r\n        if(v0>v1&&a0<a1)  \r\n        {  \r\n            t=(v0-v1)\/(a1-a0);  \r\n            x0=v0*t+0.5*a0*t*t;  \r\n            x1=v1*t+0.5*a1*t*t;  \r\n            if(x0==x1+x)  \r\n                printf(\"%.2f\\n\",t);  \r\n            else if(x0>x1+x)  \r\n            {  \r\n                a=0.5*a0-0.5*a1,b=v0-v1;  \r\n                dert=sqrt(b*b+4*a*x);  \r\n                t=(-b+dert)\/(2*a);  \r\n                printf(\"%.2f\\n\",t);  \r\n            }  \r\n            else  \r\n                printf(\"Drong is strong.\\n\");  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1182,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\n#include <stdlib.h>  \r\n#define Max_V 12  \r\n#define INF 0x3f3f3f3f  \r\nint n,m;  \r\nint g[Max_V][Max_V];  \r\nint ter[60000][Max_V];\r\nint bit[]={1,3,9,27,81,243,729,2187,6561,19683,59049};  \r\nint dp[60000][Max_V];  \r\nint findMin(int x,int y)  \r\n{  \r\n    return x>y?y:x;  \r\n}  \r\nvoid ternary_init()  \r\n{\r\n\tint i, j, b;   \r\n    for(i=0;i<bit[10];i++)   \r\n    {   \r\n        b=i;   \r\n        for(j=0;j<10;j++)   \r\n        {   \r\n            ter[i][j] =b % 3;   \r\n            b\/=3;   \r\n        }   \r\n    }   \r\n}  \r\nvoid init()  \r\n{ \r\n    memset(g,-1,sizeof(g));  \r\n    memset(dp,INF,sizeof(dp));  \r\n    for(int i=0;i<n;i++)  \r\n        dp[bit[i]][i]=0;  \r\n}  \r\nint main()  \r\n{  \r\n    int i;  \r\n    int u,v,w;  \r\n    ternary_init();  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        init();  \r\n        for(i=0;i<m;i++)  \r\n        {  \r\n            scanf(\"%d%d%d\",&u,&v,&w);  \r\n            if(g[u-1][v-1]>w||g[u-1][v-1]==-1)  \r\n                g[u-1][v-1]=g[v-1][u-1]=w;  \r\n        }  \r\n        int ans=INF;  \r\n        for(int S=0;S<bit[n];S++)  \r\n        { \r\n            int flag=true;  \r\n            for(u=0;u<n;u++)  \r\n            {  \r\n                if(ter[S][u]==0)  \r\n                    flag=false;  \r\n                if(dp[S][u]==INF)  \r\n                    continue;  \r\n                for(v=0;v<n;v++)  \r\n                {  \r\n                    if(u==v||g[u][v]==-1||ter[S][v]>=2)  \r\n                        continue;  \r\n                    dp[S+bit[v]][v]=findMin(dp[S+bit[v]][v],dp[S][u]+g[u][v]);\r\n                }  \r\n            }  \r\n            if(flag)  \r\n            {\r\n                for(u=0;u<n;u++)  \r\n                    ans=findMin(ans,dp[S][u]);  \r\n            }  \r\n        }  \r\n        if(ans==INF)  \r\n            printf(\"-1\\n\");  \r\n        else printf(\"%d\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1184,
"code":"\n#include<cstdio>  \r\n#include<cstdlib>  \r\n#include<cstring>  \r\n#include<algorithm>  \r\n#include<cmath>  \r\nusing namespace std;  \r\nconst int maxn=5010;  \r\nlong long num[maxn];  \r\nlong long dp[maxn][maxn];\r\nlong long MAX(long long a,long long b){  \r\n    return a>b?a:b;  \r\n}   \r\nint main()  \r\n{  \r\n    int n,m,i,j,k,t;  \r\n    while(scanf(\"%d%d%d\",&n,&m,&k)!=EOF){  \r\n        for(i=1;i<=n;++i){  \r\n            scanf(\"%lld\",&num[i]);  \r\n            num[i]=num[i]+num[i-1];  \r\n        }  \r\n        memset(dp,0,sizeof(dp));  \r\n        for(i=1;i<=k;++i){  \r\n            for(j=m;j<=n;++j){  \r\n                dp[i][j]=MAX(dp[i][j-1],dp[i-1][j-m]+num[j]-num[j-m]);  \r\n            }  \r\n        }  \r\n        printf(\"%lld\\n\",dp[k][n]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1185,
"code":"\n#include <stdio.h>  \r\n#include <algorithm>  \r\n#define N 10005  \r\nusing namespace std;  \r\nstruct node   \r\n{  \r\n    int left,right,min,max;  \r\n}c[N*4];  \r\nint a[N];  \r\nvoid buildtree(int l,int r,int root)  \r\n{  \r\n    c[root].left=l;  \r\n    c[root].right=r;  \r\n    if(l==r)  \r\n    {  \r\n        c[root].min=c[root].max=a[l];  \r\n        return ;  \r\n    }  \r\n    int mid=(l+r)\/2;  \r\n    buildtree(l,mid,root*2);  \r\n    buildtree(mid+1,r,root*2+1);  \r\n    c[root].min=min(c[root*2].min,c[root*2+1].min);  \r\n    c[root].max=max(c[root*2].max,c[root*2+1].max);  \r\n}  \r\nvoid findtree(int l,int r,int root,int &min1,int &max1)  \r\n{  \r\n    if(c[root].left==l&&c[root].right==r)  \r\n    {  \r\n        min1=c[root].min;  \r\n        max1=c[root].max;  \r\n        return ;  \r\n    }  \r\n    int mid=(c[root].left+c[root].right)\/2;  \r\n    if(mid<l)  \r\n    findtree(l,r,root*2+1,min1,max1);  \r\n    else if(mid>=r)  \r\n    findtree(l,r,root*2,min1,max1);  \r\n    else  \r\n    {  \r\n        int min2,max2;  \r\n        findtree(l,mid,root*2,min1,max1);  \r\n        findtree(mid+1,r,root*2+1,min2,max2);  \r\n        min1=min(min1,min2);  \r\n        max1=max(max1,max2);      \r\n    }  \r\n}  \r\nint main()  \r\n{  \r\n    int t,n,x,l,r,sum,m,min1,max1;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d\",&n);  \r\n        for(int i=1;i<=n;i++)  \r\n        scanf(\"%d\",&a[i]);  \r\n        buildtree(1,n,1);  \r\n        scanf(\"%d\",&m);  \r\n        while(m--)  \r\n        {  \r\n            scanf(\"%d %d %d\",&x,&l,&r);  \r\n            findtree(l,r,1,min1,max1);  \r\n            if(x==1)  \r\n            printf(\"%d\\n\",min1);  \r\n            if(x==2)  \r\n            printf(\"%d\\n\",max1);  \r\n            if(x==3)  \r\n            printf(\"%d\\n\",min1+max1);  \r\n        }  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1186,
"code":"\n#include <cstdio>  \r\n#include <cmath>  \r\nusing namespace std;  \r\n\r\n#define PI acos(-1.0) \r\n\r\nstruct Circle { \r\n    double x, y;  \r\n    double r;  \r\n};  \r\n\r\nstruct Ring {\r\n    double x, y;  \r\n    double R, r;  \r\n};  \r\n\r\nstruct Get_Intersection_RingAndRing {  \r\n    double get_dis(double x1, double y1, double x2, double y2) {  \r\n        return sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));  \r\n    }   \r\n    double get_CircleIntersectionArea(Circle c1, Circle c2) {  \r\n        double dis = get_dis(c1.x, c1.y, c2.x, c2.y);  \r\n        if(dis >= c1.r + c2.r) return 0;  \r\n\r\n        double min_r = c1.r < c2.r ? c1.r : c2.r;  \r\n        double max_r = c1.r > c2.r ? c1.r : c2.r;  \r\n        if(min_r + dis <= max_r)  \r\n            return PI * min_r * min_r;  \r\n\r\n        double a = acos((c1.r * c1.r + dis * dis - c2.r * c2.r) \/ 2 \/ c1.r \/ dis);  \r\n        double b = acos((c2.r * c2.r + dis * dis - c1.r * c1.r) \/ 2 \/ c2.r \/ dis);  \r\n        double area1 = a * c1.r * c1.r; \r\n        double area2 = b * c2.r * c2.r; \r\n        double ans = area1 + area2;  \r\n        double area_qua = sin(a) * c1.r * dis; \r\n        ans -= area_qua;  \r\n        return ans;  \r\n    }  \r\n    double Get_IntersectionArea(Ring r1, Ring r2) {  \r\n        Circle a1, a2, b1, b2;  \r\n        a1.x = r1.x, a1.y = r1.y, a1.r = r1.r;  \r\n        a2.x = r1.x, a2.y = r1.y, a2.r = r1.R;  \r\n        b1.x = r2.x, b1.y = r2.y, b1.r = r2.r;  \r\n        b2.x = r2.x, b2.y = r2.y, b2.r = r2.R;  \r\n        return get_CircleIntersectionArea(a2, b2) - get_CircleIntersectionArea(a1, b2) - get_CircleIntersectionArea(a2, b1) + get_CircleIntersectionArea(a1, b1);  \r\n    }  \r\n};  \r\n\r\nint main()  \r\n{  \r\n    int T;  \r\n    Ring r1, r2;  \r\n    Get_Intersection_RingAndRing x;  \r\n    scanf(\"%d\", &T);  \r\n    for(int cas = 1; cas <= T; cas++) {  \r\n        scanf(\"%lf%lf\", &r1.r, &r1.R);  \r\n        r2.r = r1.r, r2.R = r1.R;  \r\n        scanf(\"%lf%lf%lf%lf\", &r1.x, &r1.y, &r2.x, &r2.y);  \r\n        printf(\"Case #%d: %.5lf\\n\", cas, x.Get_IntersectionArea(r1, r2));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1189,
"code":"\n#include <cstring>  \r\n#include <stdio.h>  \r\n#include <stdlib.h>  \r\n#include <time.h>  \r\n#include <queue>  \r\n#include <vector>  \r\n#include <map>  \r\nusing namespace std;  \r\ntypedef long long LL;  \r\nconst int N = 1100100;  \r\nLL dp[3][N];  \r\nint a[50];  \r\nint main()  \r\n{  \r\n    int n,m;  \r\n    while(~scanf(\"%d%d\",&n,&m))  \r\n    {  \r\n        memset(dp,0,sizeof(dp));  \r\n        int ma = 0;  \r\n        for(int i=1;i<=n;i++)  \r\n        {  \r\n            scanf(\"%d\",&a[i]);  \r\n            if(a[i]>ma)  \r\n                ma = a[i];  \r\n        }  \r\n        dp[0][0] = 1;  \r\n        for(int i=1;i<=n;i++)  \r\n        {  \r\n            memset(dp[i%2],0,sizeof(dp[i%2]));  \r\n            for(int j=0;j<=ma;j++)  \r\n            {  \r\n                dp[i%2][j^a[i]] += dp[(i+1)%2][j];  \r\n                dp[i%2][j] += dp[(i+1)%2][j];  \r\n                if((j^a[i])>ma)  \r\n                    ma = (j^a[i]);  \r\n            }  \r\n        }  \r\n        LL  ans = 0;  \r\n        for(int i=m;i<=ma;i++)  \r\n            ans+=dp[n%2][i];  \r\n        printf(\"%lld\\n\",ans);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1190,
"code":"\n#include <iostream>\r\n#include <algorithm>\r\n#include <stdio.h>\r\n#include <stdlib.h>\r\nusing namespace std;\r\nlong long a[3000000];\r\nint k=0;\r\nvoid work (int n,long long m,int len) {\r\n\tint i;\r\n\tif (len>15) return; \r\n\ta[k]=m;\r\n\tk++;\r\n\tfor (i=2;i<=9;i++) {\r\n\t\tif (n%i==0) {\r\n\t\t\twork(n+i,m*10+i,len+1);\r\n\t\t}\r\n\t}\r\n}\r\nint main() {\r\n\tint i;\r\n\twork(2,2,1);\r\n\tsort(a,a+k);\r\n\tk--;\r\n\tint T,l,r,t;\r\n\tlong long n;\r\n\tscanf(\"%d\",&T);\r\n\twhile (T--){\r\n\t\tscanf(\"%lld\",&n);\r\n\t\tif (n<2) {\r\n\t\t\tprintf(\"0\\n\");\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tif (a[k]<n) n=a[k];\r\n\t\tl=0;r=k;\r\n\t\twhile (r-l>1){\r\n\t\t\tif (a[r]==n) l=r;\r\n\t\t\tif (a[l]==n) r=l;\r\n\t\t\tt=(l+r)\/2;\r\n\t\t\tif (a[t]>n) r=t;\r\n\t\t\telse l=t; \r\n\t\t}\r\n\t\tif (a[r]==n) l=r;\r\n\t\tif (a[l]==n) r=l;\r\n\t\tprintf(\"%d\\n\",l+1);\t\r\n\t}\r\n}"
},
{
"pid":1193,
"code":"\n#include<stdio.h>  \r\n#include<math.h>  \r\n#define pi acos(-1)\r\ndouble x[10005],max;  \r\nint n,f;  \r\nint sum(double mid) \r\n{  \r\n    int s=0;  \r\n    for(int i=0;i<n;++i)  \r\n    {  \r\n        s+=(int)(x[i]\/mid);  \r\n    }  \r\n    return s>=f;  \r\n}  \r\nint main()  \r\n{  \r\n    int t,i;  \r\n    scanf(\"%d\",&t);  \r\n    while(t--)  \r\n    {  \r\n        scanf(\"%d%d\",&n,&f);  \r\n        ++f;max=0;  \r\n        for(i=0;i<n;++i)  \r\n        {  \r\n            scanf(\"%lf\",&x[i]);  \r\n            x[i]=x[i]*x[i]*pi;  \r\n            if(x[i]>max)\r\n            {  \r\n                max=x[i];  \r\n            }  \r\n        }  \r\n        double l=0,r=max,mid;\r\n        while(fabs(r-l)>1e-7)\r\n        {  \r\n            mid=(l+r)\/2.0;  \r\n            if(sum(mid))\r\n            {  \r\n                l=mid;  \r\n            }  \r\n            else  \r\n            {  \r\n                r=mid;  \r\n            }  \r\n        }  \r\n        printf(\"%.4lf\\n\",l);\r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1197,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\n#define LL long long  \r\nconst LL mod = 666666;  \r\nLL pow_mod(LL a, LL n)\r\n{  \r\n    LL ans = 1, temp = a;  \r\n    while(n > 0)  \r\n    {  \r\n        if(n&1)  \r\n            ans = (ans * temp) % mod;  \r\n        temp = (temp * temp) % mod;  \r\n        n \/= 2;  \r\n    }  \r\n    return ans;  \r\n}  \r\nLL sum(LL a, LL k)\r\n{  \r\n    if(k == 0)  \r\n        return 1;  \r\n    if(k == 1)  \r\n        return a;  \r\n    LL ans =  1;  \r\n    LL as = sum(a, k\/2);  \r\n    if(k & 1)  \r\n    {  \r\n        LL t = pow_mod(a, k\/2+1);  \r\n        ans = (as + t + (t*as)%mod) % mod;  \r\n    }  \r\n    else  \r\n    {  \r\n        LL t = pow_mod(a, k\/2);  \r\n        ans = (as + ((t*as)%mod)) % mod;  \r\n    }  \r\n    return ans;  \r\n}  \r\nint main()  \r\n{  \r\n    LL a, n;  \r\n    while(~scanf(\"%lld%lld\", &a, &n))  \r\n    {  \r\n        printf(\"%lld\\n\", sum(a%mod, n));\r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1199,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <cmath>  \r\n#include <string>  \r\nusing namespace std;  \r\ntypedef long long INT;  \r\nconst INT _10[] = {1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000};  \r\nconst INT _9[] = {1, 9, 99, 999, 9999, 99999, 999999, 9999999, 99999999, 999999999};  \r\n\r\nINT gcd(INT a, INT b)  \r\n{  \r\n    if(b == 0) return a;  \r\n    return gcd(b, a % b);  \r\n}  \r\nint main()  \r\n{  \r\n    INT T;  \r\n    cin >> T;  \r\n    while(T --){  \r\n        INT n, m, x, y;  \r\n        cin >> n >> m >> x >> y;  \r\n        INT fenz = x * _10[m] + y - x;  \r\n        INT fenm = _9[m] * _10[n];  \r\n        INT fen = gcd(fenz, fenm);  \r\n        printf(\"%lld \/ %lld\\n\", fenz \/ fen, fenm \/ fen);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1204,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <cmath>  \r\n#include <string>  \r\n#include <algorithm> \r\nusing namespace std;  \r\nconst int maxn =  10005;  \r\nint dp[maxn][2];  \r\nint a[maxn];  \r\nint main()  \r\n{  \r\n    int n ;  \r\n    while(scanf(\"%d\",&n)!=EOF)  \r\n    {  \r\n        memset(dp,0,sizeof(dp));  \r\n        for( int i = 1; i <= n; i++)  \r\n        {  \r\n            scanf(\"%d\", &a[i]);  \r\n        }  \r\n        dp[1][0]=0;  \r\n        dp[2][0]=0;  \r\n        dp[2][1]=a[2];  \r\n        dp[1][1]=a[1];  \r\n\r\n        for(int i = 3; i <= n; i++)  \r\n        {  \r\n            dp[i][0] = min(dp[i-2][1],dp[i-1][1]);  \r\n            dp[i][1] = min(dp[i-2][0]+a[i-1]+a[i],min(dp[i-1][0]+a[i],min(dp[i-2][1]+a[i],dp[i-1][1]+a[i])));  \r\n        }  \r\n        printf(\"%d\\n\",min(dp[n][0],dp[n][1]));  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1205,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <cmath>  \r\n#include <string>  \r\n#include <algorithm> \r\nusing namespace std;\r\nint a[2000][2000];\r\nint main(){\r\n    int n,m,q,aim,x,y;\r\n    while(scanf(\"%d%d\",&n,&m)!=EOF){\r\n        for(int i=0;i<n;i++){\r\n            for(int j=0;j<m;j++)\r\n                scanf(\"%d\",&a[i][j]);\r\n        }\r\n        scanf(\"%d\",&q);\r\n        for(int j=0;j<q;j++){\r\n            scanf(\"%d\",&aim);\r\n            int y=m-1,x=0;\r\n            bool flag=0;\r\n            while(true){\r\n                if(a[x][y]>aim){\r\n                    y--;\r\n                    if(y<0){\r\n                        flag=1;\r\n                        break;\r\n                    }\r\n                }else if(a[x][y]<aim){\r\n                    x++;\r\n                    if(x>=n){\r\n                        flag=1;\r\n                        break;\r\n                    }\r\n                }else{ break;}\r\n            }\r\n            if(flag){\r\n                printf(\"NO\\n\");\r\n            }else{\r\n                printf(\"%d %d\\n\",x+1,y+1);\r\n            }\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1208,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <cmath>  \r\n#include <string>  \r\n#include <algorithm> \r\nusing namespace std;\r\nconst int maxe=1e5+10;\r\nstruct edge{\r\n    int st,en;\r\n    int val;\r\n}E[maxe];\r\nint dp[maxe],g[maxe];\r\nint INF=1e9;\r\nbool cmp(edge a,edge b){\r\n    return a.val<b.val;\r\n}\r\nvoid solve(int n,int m){\r\n    memset(dp,0,sizeof(dp));\r\n    memset(g,0,sizeof(g));\r\n    for(int i=0;i<m;i++){\r\n        if(E[i].val<E[i+1].val){\r\n            dp[i]=g[E[i].st]+1;\r\n            g[E[i].en]=max(g[E[i].en],dp[i]);\r\n        }else{\r\n            int j,t=i;\r\n            for( j=i;j<m;j++){\r\n                if(E[j].val!=E[j+1].val)\r\n                    break;\r\n            }\r\n            i=j;\r\n            for(int k=t;k<=j;k++){\r\n                dp[k]=g[E[k].st]+1;\r\n            }\r\n            for(int k=t;k<=j;k++){\r\n                g[E[k].en]=max(g[E[k].en],dp[k]);\r\n            }\r\n        }\r\n    }\r\n    int max_e=0;\r\n        for(int i=0;i<m;i++){\r\n            if(max_e<dp[i]){\r\n                max_e=dp[i];\r\n            }\r\n        }\r\n    printf(\"%d\\n\",max_e);\r\n}\r\nint main(){\r\n    int n,m;\r\n    while(scanf(\"%d%d\",&n,&m)!=EOF){\r\n        for(int i=0;i<m;i++){\r\n            scanf(\"%d%d%d\",&E[i].st,&E[i].en,&E[i].val);\r\n        }\r\n        sort(E,E+m,cmp);\r\n        E[m].val=INF;\r\n        solve(n,m);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1216,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <memory.h>\r\nusing namespace std;  \r\nconst int MAXN = 1010;  \r\nint dp[MAXN] = {0}, maxh[MAXN] = {0}, book[MAXN] = {0};  \r\n\r\nint main()  \r\n{  \r\n    int N, tempi, cnt = 0;  \r\n    while (~scanf(\"%d\", &N) && ++cnt) {  \r\n        for (int i = 1; i <= N; ++i) {  \r\n            scanf(\"%d\", &tempi);  \r\n            book[i] = book[i-1] + tempi;  \r\n        }  \r\n\r\n        for (int i = 1; i <= N; ++i) {  \r\n            for (int k = i-1; k >= 0; --k) {  \r\n                if (book[i] - book[k] < maxh[k])  \r\n                    continue;  \r\n                dp[i] = dp[k] + i-k-1;  \r\n                maxh[i] = book[i] - book[k];  \r\n                break;  \r\n            }  \r\n        }  \r\n\r\n        printf(\"Case %d: %d\\n\", cnt, dp[N]);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1218,
"code":"\n#include<stdio.h>  \r\n#include<string.h>  \r\n#include<iostream>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst int maxn = 1010;  \r\nstruct Info  \r\n{  \r\n    int l, r;  \r\n}a[maxn];  \r\nint f[maxn], fs[maxn];  \r\nint cmp(const Info& a, const Info& b)  \r\n{  \r\n    return a.l*a.r < b.l*b.r;  \r\n}  \r\nint main()  \r\n{  \r\n    int n, m;  \r\n    while(~scanf(\"%d\", &n))  \r\n    {  \r\n        memset(f, 0, sizeof(f));  \r\n        memset(fs, 0, sizeof(fs));  \r\n        for(int i = 0; i <= n; i++)  \r\n            scanf(\"%d%d\", &a[i].l, &a[i].r);  \r\n        sort(a+1, a+n+1, cmp);  \r\n        f[0] = a[0].l;  \r\n        long double t = a[0].l, s = 0;  \r\n        int si = 0;  \r\n        for(int i = 1; i <= n; i++)  \r\n        {  \r\n            if(t\/a[i].r > s)  \r\n            {  \r\n                s = t\/a[i].r;  \r\n                m = 0;  \r\n                for(int j = 999; j >= 0; j--)  \r\n                {  \r\n                    m = m*10000 + f[j];  \r\n                    fs[j] = m \/ a[i].r;  \r\n                    m = m % a[i].r;  \r\n                }  \r\n                si = i;  \r\n            }  \r\n            t = t * a[i].l;  \r\n            m = 0;  \r\n            for(int j = 0; j <= 999; j++)  \r\n            {  \r\n                m = m + f[j]*a[i].l;  \r\n                f[j] = m % 10000;  \r\n                m = m \/ 10000;  \r\n            }  \r\n        }  \r\n        m = 0;  \r\n        for(int j = 999; j >= 0; j--)  \r\n        {  \r\n            if(m == 1)  \r\n            {  \r\n                if(fs[j] < 10)  \r\n                    cout<<\"000\";  \r\n                else if(fs[j] < 100)  \r\n                    cout<<\"00\";  \r\n                else if(fs[j] < 1000)  \r\n                    cout<<\"0\";  \r\n                cout<<fs[j];  \r\n            }  \r\n            else if(fs[j] > 0)  \r\n            {  \r\n                m = 1;  \r\n                cout<<fs[j];  \r\n            }  \r\n        }  \r\n        puts(\"\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1230,
"code":"\n#include <iostream>  \r\n#include <algorithm>  \r\n#include <cstdio>  \r\nusing namespace std;  \r\n#define INT long long  \r\n\r\nbool ToA(INT a, INT b, INT c)  \r\n{  \r\n    if(b == c || a == b || a == c) return true; \r\n    INT s = max(b, c) - min(b, c);  \r\n    a = a + 2 * min(b, c);  \r\n    if(s % 3 == 0){  \r\n        if(a) return true;  \r\n        else return false;  \r\n    }  \r\n    else return false;  \r\n}  \r\nbool solve(INT a, INT b, INT c)  \r\n{  \r\n    if(ToA(a, b, c)) return true;  \r\n    if(ToA(b, a, c)) return true;  \r\n    if(ToA(c, a, b)) return true;  \r\n    return false;  \r\n}  \r\n\r\nint main()  \r\n{  \r\n    INT a, b, c;  \r\n    while(cin >> a >> b >> c){  \r\n        if(a == 0 && b == 0 && c == 0){  \r\n            cout << \"NO\" << endl;  \r\n            continue;  \r\n        }  \r\n        if(solve(a, b, c)) cout << \"YES\" << endl;  \r\n        else cout << \"NO\" << endl;  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1233,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nstruct str\r\n{\r\n    char s[20];\r\n}sub[1005];\r\n\r\nbool cmp(str a,str b)\r\n{\r\n    int i;\r\n    int len1=strlen(a.s);\r\n    int len2=strlen(b.s);\r\n    int x=max(len1,len2);\r\n    for(i=0;i<x;i++)\r\n    {\r\n        if(a.s[i%len1]<b.s[i%len2])\r\n            return 1;\r\n        else if(a.s[i%len1]>b.s[i%len2])\r\n            return 0;\r\n    }\r\n    return 1;\r\n}\r\n\r\nint main()\r\n{\r\n    int t,len,i,j,n;\r\n    char s[20050];\r\n    int a1[20050],a2[20050];\r\n    scanf(\"%d\",&t);\r\n    while(t--)\r\n    {\r\n        scanf(\"%d\",&n);\r\n        for(i=0;i<n;i++)\r\n            scanf(\"%s\",sub[i].s);\r\n        sort(sub,sub+n,cmp);\r\n        \/*for(i=0;i<n;i++)\r\n            printf(\"%s \",sub[i].s);\r\n        printf(\"\\n\");*\/\r\n        memset(s,0,sizeof(s));\r\n        for(i=0;i<n;i++)\r\n            strcat(s,sub[i].s);\r\n        len=strlen(s);\r\n        for(j=0,i=0;i<len;i++)\r\n            a1[j++]=s[i]-'0';\r\n        memset(s,0,sizeof(s));\r\n        for(i=n-1;i>=0;i--)\r\n            strcat(s,sub[i].s);\r\n        for(j=0,i=0;i<len;i++)\r\n            a2[j++]=s[i]-'0';\r\n        for(i=len-1;i>=0;i--)\r\n        {\r\n            a2[i]=a2[i]-a1[i];\r\n            if(a2[i]<0)\r\n            {\r\n                a2[i]+=10;\r\n                a2[i-1]-=1;\r\n            }\r\n        }\r\n        for(i=0;i<len;i++)\r\n            if(a2[i])break;\r\n            if(i==len)\r\n                printf(\"0\");\r\n        for(;i<len;i++)\r\n            printf(\"%d\",a2[i]);\r\n        printf(\"\\n\");\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1234,
"code":"\n#include <iostream>  \r\n#include <complex>  \r\n#include<stdio.h>  \r\n#include<math.h>  \r\n#include<algorithm>  \r\nusing namespace std;  \r\nconst double pi = 3.1415927;  \r\nint main()  \r\n{  \r\n    float d;  \r\n    double n,R,r;  \r\n    while(scanf(\"%lf%lf%lf\",&n,&R,&r)!=EOF)  \r\n    {  \r\n        if(n==1)  \r\n        {  \r\n            if(R+R>=r+r)  \r\n                printf(\"YES\\n\");  \r\n            else  \r\n                printf(\"NO\\n\");  \r\n            continue;  \r\n        }  \r\n        if(n==2)  \r\n        {  \r\n            if((r+r)*2<=R+R)  \r\n                printf(\"YES\\n\");  \r\n            else  \r\n                printf(\"NO\\n\");  \r\n            continue;  \r\n        }  \r\n        double a=180*1.0\/n;  \r\n        double rr=R*1.0*sin(a\/180*pi)\/(1+sin(a\/180*pi));  \r\n        if(rr>=r)  \r\n            printf(\"YES\\n\");  \r\n        else  \r\n            printf(\"NO\\n\");  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1236,
"code":"\n#include <stdio.h>  \r\n#include <string.h>  \r\nchar che[10][3]={\"N\",\"C\",\"O\",\"Cl\",\"S\",\"H\",\"Al\",\"Ca\",\"Zn\",\"Na\"};  \r\nint val[10]={14,12,16,35,32,2,27,40,65,23};  \r\nint tonum(char str[])  \r\n{  \r\n    for(int i=0;i<10;i++)  \r\n        if(strcmp(str,che[i])==0)  \r\n            return val[i];   \r\n}  \r\nint main()  \r\n{  \r\n    int ncase;  \r\n    char str[500];  \r\n    scanf(\"%d\",&ncase);  \r\n    while(ncase--)  \r\n    {  \r\n        memset(str,0,sizeof(str));  \r\n        scanf(\"%s\",str);  \r\n        bool flag=false;  \r\n        int k=0;  \r\n        char word[55];  \r\n        memset(word,0,sizeof(word));  \r\n        for(int i=0;i<strlen(str);i++)  \r\n        {  \r\n            if(flag&&str[i]=='+')  \r\n            break;  \r\n            if(str[i]=='=')  \r\n            {  \r\n                flag=true;  \r\n                continue;  \r\n            }  \r\n            if(flag)  \r\n            {  \r\n                word[k++]=str[i];  \r\n            }  \r\n        }  \r\n        char ch[3];  \r\n        int sum=0,head=1,star=0,n;  \r\n        if(word[0]>='0'&&word[0]<='9')  \r\n        head=word[0]-'0',star=1;  \r\n        for(int i=star;i<k;i++)  \r\n        {  \r\n            memset(ch,0,sizeof(ch));  \r\n            n=1;  \r\n            if(word[i]=='(')  \r\n            {  \r\n                i++;  \r\n                int temp=0;  \r\n                while(word[i]!=')'&&i<k)  \r\n                {  \r\n                    memset(ch,0,sizeof(ch));  \r\n                    if((word[i]>='A'&&word[i]<='Z')&&(word[i+1]>='a'&&word[i+1]<='z'))  \r\n                    {  \r\n                        if(word[i+2]>='0'&&word[i+2]<='9')  \r\n                        n=word[i+2]-'0';  \r\n                        ch[0]=word[i];ch[1]=word[i+1];ch[2]='\\0';  \r\n                        i++;  \r\n                        temp+=n*tonum(ch);  \r\n                    }  \r\n                    else if((word[i]>='A'&&word[i]<='Z')&&!(word[i+1]>='a'&&word[i+1]<='z'))  \r\n                    {  \r\n                        if(word[i+1]>='0'&&word[i+1]<='9')  \r\n                        n=word[i+1]-'0';  \r\n                        ch[0]=word[i];ch[1]='\\0';  \r\n                        temp+=n*tonum(ch);  \r\n                    }  \r\n                    i++;  \r\n                }  \r\n                if(word[i+1]>='0'&&word[i+1]<='9')  \r\n                n=word[i+1]-'0';  \r\n                sum+=n*temp;  \r\n            }  \r\n            else if((word[i]>='A'&&word[i]<='Z')&&(word[i+1]>='a'&&word[i+1]<='z'))  \r\n            {  \r\n                if(word[i+2]>='0'&&word[i+2]<='9')  \r\n                n=word[i+2]-'0';  \r\n                ch[0]=word[i];ch[1]=word[i+1];ch[2]='\\0';  \r\n                i++;  \r\n                sum+=n*tonum(ch);  \r\n            }  \r\n            else if((word[i]>='A'&&word[i]<='Z')&&!(word[i+1]>='a'&&word[i+1]<='z'))  \r\n            {  \r\n                if(word[i+1]>='0'&&word[i+1]<='9')  \r\n                n=word[i+1]-'0';  \r\n                ch[0]=word[i];ch[1]='\\0';  \r\n                sum+=n*tonum(ch);  \r\n            }  \r\n        }  \r\n        sum=sum*head;  \r\n        if(sum<10)  \r\n        printf(\"000%d\\n\",sum);  \r\n        else if(sum<100)  \r\n        printf(\"00%d\\n\",sum);  \r\n        else if(sum<1000)  \r\n        printf(\"0%d\\n\",sum);  \r\n        else  \r\n        printf(\"%d\\n\",sum);  \r\n    }  \r\n    return 0;  \r\n}"
},
{
"pid":1237,
"code":"\n#include <stdio.h>\r\n#include <string.h>\r\nchar map[505][505];\r\nbool vis[505][505];\r\nint max=0;\r\nvoid dfs(int x,int y)\r\n{\r\n\tif(map[x][y]=='0'||vis[x][y]==true)\r\n\treturn ;\r\n\tmax++;\r\n\tvis[x][y]=true;\r\n\tdfs(x,y+1);\r\n\tdfs(x,y-1);\r\n\tdfs(x-1,y);\r\n\tdfs(x+1,y);\r\n\tdfs(x+1,y+1);\r\n\tdfs(x+1,y-1);\r\n\tdfs(x-1,y+1);\r\n\tdfs(x-1,y-1);\r\n}\r\nint main()\r\n{\r\n\tint m,n,x;\r\n\twhile(~scanf(\"%d %d %d\",&m,&n,&x))\r\n\t{\r\n\t\tmemset(vis,false,sizeof(vis));\r\n\t\tmemset(map,0,sizeof(map));\r\n\t\tfor(int i=0;i<m;i++)\r\n\t\t{\r\n\t\t\tgetchar();\r\n\t\t\tfor(int j=0;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tchar ch=getchar();\r\n\t\t\t\tif(ch==' ')\r\n\t\t\t\tj--;\r\n\t\t\t\telse\r\n\t\t\t\tmap[i][j]=ch;\r\n\t\t\t}\r\n\t\t}\r\n\t\tint Max=0,count=0;\r\n\t\tfor(int i=0;i<m;i++)\r\n\t\tfor(int j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tif(map[i][j]=='1'&&!vis[i][j])\r\n\t\t\t{\r\n\t\t\t\tmax=0;\r\n\t\t\t\tdfs(i,j);\r\n\t\t\t\tif(max>Max)\r\n\t\t\t\tMax=max;\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\t\t}\r\n\t\tprintf(\"%d %d\\n\",count,Max*x);\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1238,
"code":"\n#pragma comment(linker, \"\/STACK:1024000000,1024000000\")\r\n#include<iostream>\r\n#include<cstdio>\r\n#include<cstring>\r\n#include<cmath>\r\n#include<math.h>\r\n#include<algorithm>\r\n#include<queue>\r\n#include<set>\r\n#include<bitset>\r\n#include<map>\r\n#include<vector>\r\n#include<stdlib.h>\r\nusing namespace std;\r\n#define ll long long\r\n#define eps 1e-10\r\n#define MOD 1000000007\r\n#define N 10000\r\n#define NN 506\r\n#define inf 1<<26\r\nint m,n;\r\nchar s[N];\r\nint mp[NN][NN];\r\nint a[N];\r\nvoid init(){\r\n    for(int i=1;i<NN;i++){\r\n        for(int j=1;j<NN;j++){\r\n            if(i==j) mp[i][j]=0;\r\n            else mp[i][j]=inf;\r\n        }\r\n    }\r\n}\r\nint dijkstra(int beg,int ent)\r\n{\r\n    int vis[NN];\r\n    int dis[NN];\r\n    for(int i=0;i<NN;i++)\r\n    {\r\n        dis[i]=inf;\r\n        vis[i]=0;\r\n    }\r\n    vis[beg]=1;\r\n    dis[beg]=0;\r\n    int x=n-1;\r\n    while(x--)\r\n    {\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            if(mp[beg][i])\r\n            {\r\n\r\n                if(dis[i]>mp[beg][i]+dis[beg])\r\n                  dis[i]=mp[beg][i]+dis[beg];\r\n            }\r\n        }\r\n        int minn=inf;\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            if(!vis[i] && minn>dis[i])\r\n            {\r\n                minn=dis[i];\r\n                beg=i;\r\n            }\r\n        }\r\n        vis[beg]=1;\r\n    }\r\n    return dis[ent]==inf?-1:dis[ent];\r\n}\r\nint main()\r\n{\r\n    int t;\r\n    scanf(\"%d\",&t);\r\n    while(t--){\r\n        init();\r\n        cin>>m>>n;\r\n        getchar();\r\n        for(int i=0;i<m;i++){\r\n            gets(s);\r\n            int num=0;\r\n            int len=strlen(s);\r\n            for(int j=0;j<len;j++){\r\n                if(s[j]!=' '){\r\n                    int sum=0;\r\n                    while(s[j]!=' ' && j<len){\r\n                        sum=sum*10+(s[j]-'0');\r\n                        j++;\r\n                    }\r\n                    a[num++]=sum;\r\n                }\r\n            }\r\n            for(int j=0;j<num;j++){\r\n                for(int k=j+1;k<num;k++){\r\n                    mp[a[j]][a[k]]=1;\r\n                }\r\n            }\r\n        }\r\n\r\n        int ans=dijkstra(1,n);\r\n        if(ans==-1){\r\n            printf(\"NO\\n\");\r\n        }else{\r\n            printf(\"%d\\n\",ans-1);\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1239,
"code":"\n#include <stdio.h>\r\n#include <algorithm>\r\n#include <vector>\r\n#include <string.h>\r\nusing namespace std;\r\nint cost[300+5],map[300+5][300+5],n;\r\nbool vis[300+5];\r\nint prim(int pos,int sum)\r\n{\r\n\tint stamp[300+5],t=0;\r\n\tstamp[t++]=pos;\r\n\tvis[pos]=true;\r\n\twhile(t<n)\r\n\t{\r\n\t\tint min=0x3fffffff,min1=0x3fffffff,mark;\r\n\t\tfor(int i=0;i<t;i++)\r\n\t\t{\r\n\t\t\tint x=stamp[i];\r\n\t\t\tfor(int j=0;j<n;j++)\r\n\t\t\t{\r\n\t\t\t\tif(!vis[j]&&x!=j)\r\n\t\t\t\t{\r\n\t\t\t\t\tif(map[x][j]<min)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmin=map[x][j];\r\n\t\t\t\t\t\tmin1=cost[j];\r\n\t\t\t\t\t\tmark=j;\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(map[x][j]==min&&cost[j]<min1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmin1=cost[j];\r\n\t\t\t\t\t\tmark=j;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tstamp[t++]=mark;\r\n\t\tvis[mark]=true;\r\n\t\tsum+=min<min1?min:min1;\r\n\t}\r\n\treturn sum;\r\n}\r\nint main()\r\n{\r\n\tint ncase,t;\r\n\tscanf(\"%d\",&ncase);\r\n\twhile(ncase--)\r\n\t{\r\n\t\tmemset(cost,0,sizeof(cost));\r\n\t\tmemset(vis,false,sizeof(vis));\r\n\t\tmemset(map,0,sizeof(map));\r\n\t\tscanf(\"%d\",&n);\r\n\t\tint min=0x3fffffff,k;\r\n\t\tfor(int i=0;i<n;i++,t++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&cost[i]);\r\n\t\t\tif(cost[i]<min)\r\n\t\t\tmin=cost[i],k=i;\r\n\t\t}\r\n\t\tfor(int i=0;i<n;i++)\r\n\t\tfor(int j=0;j<n;j++)\r\n\t\t{\r\n\t\t\tscanf(\"%d\",&map[i][j]);\r\n\t\t}\r\n\t\tprintf(\"%d\\n\",prim(k,min));\r\n\t}\r\n\treturn 0;\r\n}"
},
{
"pid":1241,
"code":"\n#include<cstdio>\r\nusing namespace std;\r\n\r\nstruct point\r\n{\r\n    int x,y;\r\n}p[105];\r\n\r\nint main()\r\n{\r\n    int n,m;\r\n    while(scanf(\"%d%d\",&n,&m)!=EOF)\r\n    {\r\n        for(int i=0;i<n;i++)\r\n            scanf(\"%d%d\",&p[i].x,&p[i].y);\r\n        while(m--)\r\n        {\r\n            int xx,yy;\r\n            scanf(\"%d%d\",&xx,&yy);\r\n            int cnt1=0,cnt2=0;\r\n            for(int j=0;j<n;j++)\r\n            {\r\n                if(p[j].x-xx>0&&p[j].y-yy>0||(p[j].x-xx<0&&p[j].y-yy<0))\r\n                    cnt1++;\r\n                else\r\n                    cnt2++;\r\n            }\r\n            printf(\"%d\\n\",cnt1-cnt2);\r\n        }\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1242,
"code":"\n#include<cstdio>\r\n#include<cstring>\r\n#include<algorithm>\r\nusing namespace std;\r\n\r\nint a[2005];\r\n\r\nint main()\r\n{\r\n    int k,n,m;\r\n    scanf(\"%d\",&k);\r\n    while(k--)\r\n    {\r\n        scanf(\"%d%d\",&n,&m);\r\n        double aver=0.0;\r\n        memset(a,0,sizeof(a));\r\n        for(int i=1;i<=n;i++)\r\n        {\r\n            scanf(\"%d\",&a[i]);\r\n            a[i]+=a[i-1];\r\n        }\r\n        for(int i=1;i<=n;i++)\r\n            for(int j=i+m-1;j<=n;j++)\r\n            {\r\n                double tmp=(a[j]-a[i-1])*1.0\/(j-i+1);\r\n                aver=max(aver,tmp);\r\n            }\r\n        int ans=(int)(aver*1000);\r\n        printf(\"%d\\n\",ans);\r\n    }\r\n    return 0;\r\n}"
},
{
"pid":1243,
"code":"\n#include <iostream>  \r\n#include <cstdio>  \r\n#include <cstring>  \r\n#include <cmath>  \r\n#include <cstdlib>  \r\n#include <algorithm>  \r\n#include <queue>  \r\n#include <stack>  \r\n#include <map>  \r\n#include <set>  \r\n#include <vector>  \r\n#include <string>  \r\n#define INF 0x3f3f3f3f  \r\n#define eps 1e-8  \r\n#define MAXN (100+10)  \r\n#define MAXM (500000)  \r\n#define Ri(a) scanf(\"%d\", &a)  \r\n#define Rl(a) scanf(\"%lld\", &a)  \r\n#define Rf(a) scanf(\"%lf\", &a)  \r\n#define Rs(a) scanf(\"%s\", a)  \r\n#define Pi(a) printf(\"%d\\n\", (a))  \r\n#define Pf(a) printf(\"%.2lf\\n\", (a))  \r\n#define Pl(a) printf(\"%lld\\n\", (a))  \r\n#define Ps(a) printf(\"%s\\n\", (a))  \r\n#define W(a) while(a--)  \r\n#define CLR(a, b) memset(a, (b), sizeof(a))  \r\n#define MOD 1000000007  \r\n#define LL long long  \r\n#define lson o<<1, l, mid  \r\n#define rson o<<1|1, mid+1, r  \r\n#define ll o<<1  \r\n#define rr o<<1|1  \r\n#define PI acos(-1.0)  \r\nusing namespace std;  \r\nstruct Point{  \r\n    int x, y;  \r\n    Point(){};  \r\n    Point(int X, int Y){  \r\n        x = X; y = Y;  \r\n    }  \r\n};  \r\nPoint operator - (Point A, Point B){  \r\n    return Point(A.x-B.x, A.y-B.y);  \r\n}  \r\nbool operator == (Point A, Point B){  \r\n    return A.x == B.x && A.y == B.y;  \r\n}  \r\nint Cross(Point A, Point B){  \r\n    return A.x*B.y - A.y*B.x;  \r\n}  \r\nint Dot(Point A, Point B){  \r\n    return A.x*A.y - B.x*B.y;  \r\n}  \r\nstruct Line{  \r\n    Point s, e;  \r\n    int cost;  \r\n    Line(){};  \r\n    Line(Point A, Point B){  \r\n        s = A; e = B;  \r\n    }  \r\n};  \r\nLine L[MAXN];  \r\nint Map[MAXN][MAXN], dist[MAXN];  \r\nbool vis[MAXN];  \r\nint dijkstra(int s, int e, int n)  \r\n{  \r\n    for(int i = 0; i < n; i++)  \r\n    {  \r\n        dist[i] = Map[s][i];  \r\n        vis[i] = false;  \r\n    }  \r\n    \/\/vis[s] = true;  \r\n    for(int i = 1; i < n; i++)  \r\n    {  \r\n        int Min = INF, next = i;  \r\n        for(int j = 0; j < n; j++)  \r\n        {  \r\n            if(!vis[j] && Min > dist[j])  \r\n            {  \r\n                Min = dist[j];  \r\n                next = j;  \r\n            }  \r\n        }  \r\n        vis[next] = true;  \r\n        for(int j = 0; j < n; j++)  \r\n            if(!vis[j])  \r\n                dist[j] = min(dist[j], Map[next][j] + dist[next]);  \r\n    }  \r\n    return dist[e];  \r\n}  \r\nbool judge(Line A, Line B, Point P)  \r\n{  \r\n    if(Cross(A.e-A.s, B.s-A.s) == 0 && Cross(A.e-A.s, B.e-A.s) == 0) \r\n    {  \r\n        if(min(A.s.x, A.e.x) >= min(B.s.x, B.e.x) && max(A.s.x, A.e.x) <= max(B.s.x, B.e.x)  \r\n        || min(B.s.x, B.e.x) >= min(A.s.x, A.e.x) && max(B.s.x, B.e.x) <= max(A.s.x, A.e.x))  \r\n            return false;  \r\n    }  \r\n    if(A.s == B.s)  \r\n    {  \r\n        if(Cross(A.s-A.e, B.e-B.s) >= 0 && Cross(B.e-B.s, P-B.e) > 0)  \r\n            return true;  \r\n    }  \r\n    if(A.s == B.e)  \r\n    {  \r\n        if(Cross(A.s-A.e, B.s-B.e) >= 0 && Cross(B.s-B.e, P-B.s) > 0)  \r\n            return true;  \r\n    }  \r\n    if(A.e == B.s)  \r\n    {  \r\n        if(Cross(A.e-A.s, B.e-B.s) >= 0 && Cross(B.e-B.s, P-B.e) > 0)  \r\n            return true;  \r\n    }  \r\n    if(A.e == B.e)  \r\n    {  \r\n        if(Cross(A.e-A.s, B.s-B.e) >= 0 && Cross(B.s-B.e, P-B.s) > 0)  \r\n            return true;  \r\n    }  \r\n    return false;  \r\n}  \r\nbool OnSegment(Point P, Line A){  \r\n    return Cross(A.s-P, A.e-P) == 0 && Dot(A.s-P, A.e-P) <= 0;  \r\n}  \r\nint main()  \r\n{  \r\n    int t; Ri(t);  \r\n    W(t)  \r\n    {  \r\n        int n, x0, y0; Ri(n); Ri(x0); Ri(y0);  \r\n        Point P = Point(x0, y0);  \r\n        for(int i = 0; i < n; i++)  \r\n        {  \r\n            Ri(L[i].s.x); Ri(L[i].s.y);  \r\n            Ri(L[i].e.x); Ri(L[i].e.y);  \r\n            Ri(L[i].cost);  \r\n        }  \r\n        CLR(Map, INF);  \r\n        for(int i = 0; i < n; i++)  \r\n        {  \r\n            for(int j = 0; j < n; j++)  \r\n            {  \r\n                if((L[i].s == L[j].s && L[i].e == L[j].e) || (L[i].s == L[j].e && L[i].e == L[j].s)) continue;  \r\n                if(judge(L[i], L[j], P))  \r\n                    Map[i][j] = min(Map[i][j], L[j].cost);  \r\n            }  \r\n        }  \r\n        int ans = INF;  \r\n        for(int i = 0; i < n; i++)  \r\n            ans = min(ans, dijkstra(i, i, n));  \r\n        if(ans == INF)  \r\n            Pi(-1);  \r\n        else  \r\n            Pi(ans);  \r\n    }  \r\n    return 0;  \r\n}"
}
]
}