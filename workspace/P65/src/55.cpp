/**
 * Project Name: P65 
 * File Name: 55.cpp
 * Created on: 2015年4月6日 下午3:19:38
 * Author: jtahstu
 * Copyright (c) 2015, jtahstu , All Rights Reserved.
 */
//55卡布列克常数
//验证卡布列克运算。任意一个四位数，只要它们各个位上的数字是不全相同的，就有这样的规律：
//1)将组成该四位数的四个数字由大到小排列，形成由这四个数字构成的最大的四位数；
//2)将组成该四位数的四个数字由小到大排列，形成由这四个数字构成的最小的四位数(如果四个数中含有0，则得到的数不足四位)；
//3)求两个数的差，得到一个新的四位数(高位零保留)。
//重复以上过程，最后得到的结果是6174，这个数被称为卡布列克数。
//
//*运行结果
//1) Enter a number:4312
//[1]:4321-1234=3078
//[2]:8730-378=8352
//[3]:8532-2358=6174
//2) Enter a number:8720
//[1]:8720-278=8442
//[2]:8442-2448=5994
//[3]:9954-4599=5355
//[4]:5553-3555=1998
//[5]:9981-1899=8082
//[6]:8820-288=8523
//[7]:8532-2358=6174
//3)Enter a number:9643
//[1]:9643-3469=6174
#include<iostream>
#include<cstdio>
#include<cmath>
#include<algorithm>
#include<string>
using namespace std;
int jt55(int n) {
	int a[5], b, c;
	a[0] = n % 10;
	a[1] = n / 10 % 10;
	a[2] = n / 100 % 10;
	a[3] = n / 1000;
	sort(a, a + 4);//排序，求出最大和最小值
	b = a[0] + a[1] * 10 + a[2] * 100 + a[3] * 1000;
	c = a[3] + a[2] * 10 + a[1] * 100 + a[0] * 1000;
	cout << b << "-" << c << "=" << b - c << endl;
	return b - c;
}
int main55() {
	int n;
	while (cin >> n) {
		int count = 1;
		while (jt55(n) != 6174) {//判断的时候也会出现一次输出，但不怎么影响，次数是正确的，而且题目给的数据是错的
			count++;
			n = jt55(n);

		}
		cout << "经" << count << "次变,换转换成6174" << endl;
	}
	return 0;
}

